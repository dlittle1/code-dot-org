{"modules":{"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/MusicController.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/MusicController.js","source":"/** @file The maestro! Helper that knows which music tracks can be played, and\n *        which one is playing now, and selects and plays them appropriately. */\n/* jshint\n funcscope: true,\n newcap: true,\n nonew: true,\n shadow: false,\n unused: true,\n eqeqeq: true,\n\n maxlen: 90,\n maxstatements: 200\n */\n'use strict';\n\nvar utils = require('./utils');\nvar _ = utils.getLodash();\n\nvar debugLogging = false;\nfunction debug(msg) {\n  if (debugLogging && console && console.info) {\n    console.info('MusicController: ' + msg);\n  }\n}\n\n/**\n * @typedef {Object} MusicTrackDefinition\n * External track representation, used to define track info in skins.js.\n *\n * @property {string} name - corresponds to music filenames\n * @property {number} volume - on a 0..1 scale\n */\n\n/**\n * @typedef {Object} MusicTrack\n * Internal track representation, includes track metadata and references to\n * loaded sound object.\n *\n * @property {string} name\n * @property {string[]} assetUrls\n * @property {number} volume\n * @property {Sound} sound\n * @property {boolean} isLoaded\n */\n\n/**\n * A helper class that handles loading, choosing, playing and stopping\n * background music for certain studio apps (e.g. playlab, craft).\n *\n * @param {AudioPlayer} audioPlayer - Reference to the Sounds object.\n * @param {function} assetUrl - Function for generating paths to static assets\n *        for the current skin.\n * @param {MusicTrackDefinition[]} [trackDefinitions] - List of music assets and\n *        general info about how they should be played. Can be omitted or empty\n *        if no music should be played.\n * @param {Number} [loopWithDelay] - if specified, after a song is\n *        completed, will play a random track after given duration (in ms).\n * @constructor\n */\nvar MusicController = function MusicController(audioPlayer, assetUrl, trackDefinitions, loopRandomWithDelay) {\n  /** @private {AudioPlayer} */\n  this.audioPlayer_ = audioPlayer;\n\n  /** @private {function} */\n  this.assetUrl_ = assetUrl;\n\n  /** @private {MusicTrack[]} */\n  this.trackList_ = buildTrackData(trackDefinitions, assetUrl);\n\n  /** @private {string} */\n  this.nowPlaying_ = null;\n\n  /** @private {string} Name of track to play on load */\n  this.playOnLoad_ = null;\n\n  this.loopRandomWithDelay_ = loopRandomWithDelay;\n\n  // If the video player gets pulled up, make sure we stop the music.\n  document.addEventListener('videoShown', (function () {\n    this.fadeOut();\n  }).bind(this));\n\n  debug('constructed');\n};\nmodule.exports = MusicController;\n\n/**\n * Build up initial internal track metadata.\n * @param {MusicTrackDefinition[]} trackDefinitions\n * @param {function} assetUrl\n * @return {MusicTrack[]}\n */\nfunction buildTrackData(trackDefinitions, assetUrl) {\n  trackDefinitions = utils.valueOr(trackDefinitions, []);\n  return trackDefinitions.map(function (trackDef) {\n\n    var assetUrls = [];\n    assetUrls.push(assetUrl(trackDef.name + '.mp3'));\n    if (trackDef.hasOgg) {\n      assetUrls.push(assetUrl(trackDef.name + '.ogg'));\n    }\n\n    return {\n      name: trackDef.name,\n      assetUrls: assetUrls,\n      volume: utils.valueOr(trackDef.volume, 1),\n      sound: null,\n      isLoaded: false\n    };\n  });\n}\n\n/**\n * Preload all music assets,\n */\nMusicController.prototype.preload = function () {\n  if (!this.audioPlayer_) {\n    return;\n  }\n\n  this.trackList_.forEach(function (track) {\n    track.sound = this.audioPlayer_.registerByFilenamesAndID(track.assetUrls, track.name);\n    track.sound.onLoad = (function () {\n      debug('done loading ' + track.name);\n      track.isLoaded = true;\n      if (this.playOnLoad_ === track.name) {\n        this.play(track.name);\n      }\n    }).bind(this);\n  }, this);\n};\n\n/**\n * Begins playing a particular piece of music immediately.\n * @param {string} trackName\n */\nMusicController.prototype.play = function (trackName) {\n  debug('play ' + trackName);\n  if (!this.audioPlayer_) {\n    return;\n  }\n\n  var track;\n  if (trackName) {\n    track = this.getTrackByName_(trackName);\n  } else {\n    track = this.getRandomTrack_();\n  }\n\n  if (!track) {\n    // No track to play - throw an exception?\n    return;\n  }\n\n  if (track.sound && track.isLoaded) {\n    debug('playing now');\n    var callback = this.whenMusicStopped_.bind(this, track.name);\n    track.sound.play({ volume: track.volume, onEnded: callback });\n    this.nowPlaying_ = track.name;\n  } else {\n    debug('not done loading, playing after load');\n    this.playOnLoad_ = track.name;\n  }\n};\n\n/**\n * Stops playing whatever music is currently playing, immediately.\n */\nMusicController.prototype.stop = function () {\n  if (!this.nowPlaying_) {\n    return;\n  }\n\n  var sound = this.audioPlayer_.get(this.nowPlaying_);\n  if (sound) {\n    sound.stop();\n  }\n};\n\n/**\n * Fades music to nothing, then stops it.\n * @param {number} [durationSeconds] in seconds.  Default 3.\n */\nMusicController.prototype.fadeOut = function (durationSeconds) {\n  if (!this.nowPlaying_) {\n    return;\n  }\n\n  durationSeconds = utils.valueOr(durationSeconds, 3);\n\n  // Trigger a fade\n  var sound = this.audioPlayer_.get(this.nowPlaying_);\n  if (sound) {\n    sound.fadeToGain(0, durationSeconds);\n  }\n\n  // Stop the audio after the fade.\n  // Add a small margin due to poor fade granularity on fallback player.\n  setTimeout((function () {\n    this.stop();\n  }).bind(this), 1000 * durationSeconds + 100);\n};\n\n/**\n * Callback for when music stops, to update internal state.\n * @param {string} musicName that was playing.  Should be bound when music\n *        is started.\n * @private\n */\nMusicController.prototype.whenMusicStopped_ = function (musicName) {\n  if (this.nowPlaying_ === musicName) {\n    this.nowPlaying_ = null;\n  }\n  if (this.loopRandomWithDelay_) {\n    setTimeout((function () {\n      this.play();\n    }).bind(this), this.loopRandomWithDelay_);\n  }\n};\n\n/**\n * @param {string} name\n * @returns {MusicTrack|undefined}\n * @private\n */\nMusicController.prototype.getTrackByName_ = function (name) {\n  return _.find(this.trackList_, function (track) {\n    return track.name === name;\n  });\n};\n\n/**\n * @returns {MusicTrack|undefined}\n * @private\n */\nMusicController.prototype.getRandomTrack_ = function () {\n  return this.trackList_[Math.floor(Math.random(this.trackList_.length))];\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/MusicController.js","sourceRoot":"file://localhost","sourceFile":"build/js/MusicController.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/ResizeSensor.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/ResizeSensor.js","source":"/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n\n/**\n * Class for dimension change detection.\n *\n * @param {Element|Element[]|Elements|jQuery} element\n * @param {Function} callback\n *\n * @constructor\n */\n'use strict';\n\nmodule.exports = function (element, callback) {\n    /**\n     *\n     * @constructor\n     */\n    function EventQueue() {\n        this.q = [];\n        this.add = function (ev) {\n            this.q.push(ev);\n        };\n\n        var i, j;\n        this.call = function () {\n            for (i = 0, j = this.q.length; i < j; i++) {\n                this.q[i].call();\n            }\n        };\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @param {String}      prop\n     * @returns {String|Number}\n     */\n    function getComputedStyle(element, prop) {\n        if (element.currentStyle) {\n            return element.currentStyle[prop];\n        } else if (window.getComputedStyle) {\n            return window.getComputedStyle(element, null).getPropertyValue(prop);\n        } else {\n            return element.style[prop];\n        }\n    }\n\n    /**\n     *\n     * @param {HTMLElement} element\n     * @param {Function}    resized\n     */\n    function attachResizeEvent(element, resized) {\n        if (!element.resizedAttached) {\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n        } else if (element.resizedAttached) {\n            element.resizedAttached.add(resized);\n            return;\n        }\n\n        element.resizeSensor = document.createElement('div');\n        element.resizeSensor.className = 'resize-sensor';\n        var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;';\n        var styleChild = 'position: absolute; left: 0; top: 0;';\n\n        element.resizeSensor.style.cssText = style;\n        element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + '</div>' + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + '</div>';\n        element.appendChild(element.resizeSensor);\n\n        if ('absolute' !== getComputedStyle(element, 'position')) {\n            element.style.position = 'relative';\n        }\n\n        var expand = element.resizeSensor.childNodes[0];\n        var expandChild = expand.childNodes[0];\n        var shrink = element.resizeSensor.childNodes[1];\n        var shrinkChild = shrink.childNodes[0];\n\n        var lastWidth, lastHeight;\n\n        var reset = function reset() {\n            expandChild.style.width = expand.offsetWidth + 10 + 'px';\n            expandChild.style.height = expand.offsetHeight + 10 + 'px';\n            expand.scrollLeft = expand.scrollWidth;\n            expand.scrollTop = expand.scrollHeight;\n            shrink.scrollLeft = shrink.scrollWidth;\n            shrink.scrollTop = shrink.scrollHeight;\n            lastWidth = element.offsetWidth;\n            lastHeight = element.offsetHeight;\n        };\n\n        reset();\n\n        var changed = function changed() {\n            element.resizedAttached.call();\n        };\n\n        var addEvent = function addEvent(el, name, cb) {\n            if (el.attachEvent) {\n                el.attachEvent('on' + name, cb);\n            } else {\n                el.addEventListener(name, cb);\n            }\n        };\n\n        addEvent(expand, 'scroll', function () {\n            if (element.offsetWidth > lastWidth || element.offsetHeight > lastHeight) {\n                changed();\n            }\n            reset();\n        });\n\n        addEvent(shrink, 'scroll', function () {\n            if (element.offsetWidth < lastWidth || element.offsetHeight < lastHeight) {\n                changed();\n            }\n            reset();\n        });\n    }\n\n    if (element && element.constructor === Array || 'undefined' !== typeof jQuery && element instanceof jQuery || //jquery\n    'undefined' !== typeof Elements && element instanceof Elements //mootools\n    ) {\n            var i = 0,\n                j = element.length;\n            for (; i < j; i++) {\n                attachResizeEvent(element[i], callback);\n            }\n        } else {\n        attachResizeEvent(element, callback);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/ResizeSensor.js","sourceRoot":"file://localhost","sourceFile":"build/js/ResizeSensor.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js","source":"/* global Blockly, ace:true, droplet, marked, digestManifest, dashboard */\n\n/**\n * For the most part, we depend on dashboard providing us with React as a global.\n * However, there is at least one context in which this won't be true - when we\n * show feedback blocks in their own iframe. In that case, load React from\n * our module.\n * This approach has a couple of drawbacks\n * (1) ability for dashboard React and apps React versions to get out of sync\n * (2) if we end up in other cases where React isn't provided to us as a global\n *     we probably won't notice, which may not be intended behavior\n */\n'use strict';\n\nif (!window.React) {\n  window.React = require('react');\n}\n\nvar aceMode = require('./acemode/mode-javascript_codeorg');\nvar parseXmlElement = require('./xml').parseElement;\nvar utils = require('./utils');\nvar dropletUtils = require('./dropletUtils');\nvar _ = utils.getLodash();\nvar dom = require('./dom');\nvar constants = require('./constants.js');\nvar msg = require('./locale');\nvar blockUtils = require('./block_utils');\nvar DropletTooltipManager = require('./blockTooltips/DropletTooltipManager');\nvar url = require('url');\nvar FeedbackUtils = require('./feedback');\nvar VersionHistory = require('./templates/VersionHistory.jsx');\nvar Alert = require('./templates/alert.jsx');\nvar codegen = require('./codegen');\n\n/**\n* The minimum width of a playable whole blockly game.\n*/\nvar MIN_WIDTH = 900;\nvar MOBILE_SHARE_WIDTH_PADDING = 50;\nvar DEFAULT_MOBILE_NO_PADDING_SHARE_WIDTH = 400;\nvar MAX_VISUALIZATION_WIDTH = 400;\nvar MIN_VISUALIZATION_WIDTH = 200;\n\nvar ENGLISH_LOCALE = 'en_us';\n\n/**\n * Treat mobile devices with screen.width less than the value below as phones.\n */\nvar MAX_PHONE_WIDTH = 500;\n\nvar StudioApp = function StudioApp() {\n  this.feedback_ = new FeedbackUtils(this);\n\n  /**\n  * The parent directory of the apps. Contains common.js.\n  */\n  this.BASE_URL = undefined;\n\n  /**\n  * If truthy, a version number to be appended to asset urls.\n  */\n  this.CACHE_BUST = undefined;\n\n  /**\n  * The current locale code.\n  */\n  this.LOCALE = ENGLISH_LOCALE;\n\n  this.enableShowCode = true;\n  this.editCode = false;\n  this.usingBlockly_ = true;\n\n  /**\n   * @type {AudioPlayer}\n   */\n  this.cdoSounds = null;\n  this.Dialog = null;\n  /**\n   * @type {?Droplet.Editor}\n   */\n  this.editor = null;\n  /**\n   * @type {?DropletTooltipManager}\n   */\n  this.dropletTooltipManager = null;\n\n  // @type {string} for all of these\n  this.icon = undefined;\n  this.smallIcon = undefined;\n  this.winIcon = undefined;\n  this.failureIcon = undefined;\n\n  // The following properties get their non-default values set by the application.\n\n  /**\n   * Whether to alert user to empty blocks, short-circuiting all other tests.\n   * @member {boolean}\n   */\n  this.checkForEmptyBlocks_ = false;\n\n  /**\n  * The ideal number of blocks to solve this level.  Users only get 2\n  * stars if they use more than this number.\n  * @type {number}\n  */\n  this.IDEAL_BLOCK_NUM = undefined;\n\n  /**\n   * @typedef {Object} TestableBlock\n   * @property {string|function} test - A test whether the block is\n   *           present, either:\n   *           - A string, in which case the string is searched for in\n   *             the generated code.\n   *           - A single-argument function is called on each user-added\n   *             block individually.  If any call returns true, the block\n   *             is deemed present.  \"User-added\" blocks are ones that are\n   *             neither disabled or undeletable.\n   * @property {string} type - The type of block to be produced for\n   *           display to the user if the test failed.\n   * @property {Object} [titles] - A dictionary, where, for each\n   *           KEY-VALUE pair, this is added to the block definition:\n   *           <title name=\"KEY\">VALUE</title>.\n   * @property {Object} [value] - A dictionary, where, for each\n   *           KEY-VALUE pair, this is added to the block definition:\n   *           <value name=\"KEY\">VALUE</value>\n   * @property {string} [extra] - A string that should be blacked\n   *           between the \"block\" start and end tags.\n   */\n\n  /**\n  * @type {!TestableBlock[]}\n  */\n  this.requiredBlocks_ = [];\n\n  /**\n  * The number of required blocks to give hints about at any one time.\n  * Set this to Infinity to show all.\n  * @type {number}\n  */\n  this.maxRequiredBlocksToFlag_ = 1;\n\n  /**\n  * @type {!TestableBlock[]}\n  */\n  this.recommendedBlocks_ = [];\n\n  /**\n  * The number of recommended blocks to give hints about at any one time.\n  * Set this to Infinity to show all.\n  * @type {number}\n  */\n  this.maxRecommendedBlocksToFlag_ = 1;\n\n  /**\n  * The number of attempts (how many times the run button has been pressed)\n  * @type {?number}\n  */\n  this.attempts = 0;\n\n  /**\n  * Stores the time at init. The delta to current time is used for logging\n  * and reporting to capture how long it took to arrive at an attempt.\n  * @type {?number}\n  */\n  this.initTime = undefined;\n\n  /**\n  * Enumeration of user program execution outcomes.\n  */\n  this.ResultType = constants.ResultType;\n\n  /**\n  * Enumeration of test results.\n  */\n  this.TestResults = constants.TestResults;\n\n  /**\n   * If true, we don't show blockspace. Used when viewing shared levels\n   */\n  this.hideSource = false;\n\n  /**\n   * If true, we're viewing a shared level.\n   */\n  this.share = false;\n\n  this.onAttempt = undefined;\n  this.onContinue = undefined;\n  this.onResetPressed = undefined;\n  this.backToPreviousLevel = undefined;\n  this.sendToPhone = undefined;\n  this.enableShowBlockCount = true;\n\n  this.disableSocialShare = false;\n  this.noPadding = false;\n\n  this.MIN_WORKSPACE_HEIGHT = undefined;\n};\nmodule.exports = StudioApp;\nStudioApp.singleton = new StudioApp();\n\n/**\n * Configure StudioApp options\n */\nStudioApp.prototype.configure = function (options) {\n  this.BASE_URL = options.baseUrl;\n  this.CACHE_BUST = options.cacheBust;\n  this.LOCALE = options.locale || this.LOCALE;\n  // NOTE: editCode (which currently implies droplet) and usingBlockly_ are\n  // currently mutually exclusive.\n  this.editCode = options.level && options.level.editCode;\n  this.usingBlockly_ = !this.editCode;\n\n  // TODO (bbuchanan) : Replace this editorless-hack with setting an editor enum\n  // or (even better) inject an appropriate editor-adaptor.\n  if (options.isEditorless) {\n    this.editCode = false;\n    this.usingBlockly_ = false;\n  }\n\n  this.cdoSounds = options.cdoSounds;\n  this.Dialog = options.Dialog;\n\n  // Bind assetUrl to the instance so that we don't need to depend on callers\n  // binding correctly as they pass this function around.\n  this.assetUrl = _.bind(this.assetUrl_, this);\n\n  this.maxVisualizationWidth = options.maxVisualizationWidth || MAX_VISUALIZATION_WIDTH;\n  this.minVisualizationWidth = options.minVisualizationWidth || MIN_VISUALIZATION_WIDTH;\n};\n\nStudioApp.prototype.hasInstructionsToShow = function (config) {\n  return !!(config.level.instructions || config.level.aniGifURL);\n};\n\n/**\n * Common startup tasks for all apps. Happens after configure.\n */\nStudioApp.prototype.init = function (config) {\n  if (!config) {\n    config = {};\n  }\n\n  this.setConfigValues_(config);\n\n  this.configureDom(config);\n\n  if (config.hideSource) {\n    this.handleHideSource_({\n      containerId: config.containerId,\n      embed: config.embed,\n      level: config.level,\n      level_source_id: config.level_source_id,\n      phone_share_url: config.send_to_phone_url,\n      sendToPhone: config.sendToPhone,\n      twitter: config.twitter,\n      app: config.app\n    });\n  }\n\n  if (config.share) {\n    this.handleSharing_({\n      noButtonsBelowOnMobileShare: config.noButtonsBelowOnMobileShare,\n      makeUrl: config.makeUrl,\n      makeString: config.makeString,\n      makeImage: config.makeImage,\n      makeYourOwn: config.makeYourOwn\n    });\n  }\n\n  // Record time at initialization.\n  this.initTime = new Date().getTime();\n\n  // Fixes viewport for small screens.\n  var viewport = document.querySelector('meta[name=\"viewport\"]');\n  if (viewport) {\n    this.fixViewportForSmallScreens_(viewport, config);\n  }\n\n  var showCode = document.getElementById('show-code-header');\n  if (showCode && this.enableShowCode) {\n    dom.addClickTouchEvent(showCode, _.bind(function () {\n      if (this.editCode) {\n        var result;\n        try {\n          result = this.editor.toggleBlocks();\n        } catch (err) {\n          result = { error: err };\n        }\n        if (result && result.error) {\n          // TODO (cpirich) We could extract error.loc to determine where the\n          // error occurred and highlight that error\n          this.feedback_.showToggleBlocksError(this.Dialog);\n        }\n        this.onDropletToggle_();\n      } else {\n        this.feedback_.showGeneratedCode(this.Dialog);\n      }\n    }, this));\n  }\n\n  var blockCount = document.getElementById('blockCounter');\n  if (blockCount && !this.enableShowBlockCount) {\n    blockCount.style.display = 'none';\n  }\n\n  this.setIconsFromSkin(config.skin);\n\n  if (config.level.instructionsIcon) {\n    this.icon = config.skin[config.level.instructionsIcon];\n    this.winIcon = config.skin[config.level.instructionsIcon];\n  }\n\n  if (config.showInstructionsWrapper) {\n    config.showInstructionsWrapper(_.bind(function () {\n      var shouldAutoClose = !!config.level.aniGifURL;\n      this.showInstructions_(config.level, shouldAutoClose);\n    }, this));\n  }\n\n  // The share and embed pages do not show the rotateContainer.\n  if (this.share || config.embed) {\n    var rotateContainer = document.getElementById('rotateContainer');\n    if (rotateContainer) {\n      rotateContainer.style.display = 'none';\n    }\n  }\n\n  // In embed mode, the display scales down when the width of the visualizationColumn goes below the min width\n  if (config.embed) {\n    var resized = false;\n    var resize = function resize() {\n      var vizCol = document.getElementById('visualizationColumn');\n      var width = vizCol.offsetWidth;\n      var height = vizCol.offsetHeight;\n      var displayWidth = DEFAULT_MOBILE_NO_PADDING_SHARE_WIDTH;\n      var scale = Math.min(width / displayWidth, height / displayWidth);\n      var viz = document.getElementById('visualization');\n      viz.style['transform-origin'] = 'left top';\n      viz.style['-webkit-transform'] = 'scale(' + scale + ')';\n      viz.style['max-height'] = displayWidth * scale + 'px';\n      viz.style.display = 'block';\n      vizCol.style.width = '';\n      vizCol.style.maxWidth = displayWidth + 'px';\n      // Needs to run twice on initialization\n      if (!resized) {\n        resized = true;\n        resize();\n      }\n    };\n    // Depends on ResizeSensor.js\n    var ResizeSensor = require('./ResizeSensor');\n    new ResizeSensor(document.getElementById('visualizationColumn'), resize);\n  }\n\n  var orientationHandler = function orientationHandler() {\n    window.scrollTo(0, 0); // Browsers like to mess with scroll on rotate.\n  };\n  window.addEventListener('orientationchange', orientationHandler);\n  orientationHandler();\n\n  if (config.loadAudio) {\n    config.loadAudio();\n  }\n\n  var promptDiv = document.getElementById('prompt');\n  var prompt2Div = document.getElementById('prompt2');\n  if (config.level.instructions) {\n    $(promptDiv).text(config.level.instructions);\n  }\n  if (config.level.instructions2) {\n    $(prompt2Div).text(config.level.instructions2);\n    $(prompt2Div).show();\n  }\n\n  if (this.hasInstructionsToShow(config)) {\n    var promptIcon = document.getElementById('prompt-icon');\n    if (this.smallIcon) {\n      promptIcon.src = this.smallIcon;\n      $('#prompt-icon-cell').show();\n    }\n    var bubble = document.getElementById('bubble');\n    dom.addClickTouchEvent(bubble, _.bind(function () {\n      this.showInstructions_(config.level, false);\n    }, this));\n  }\n\n  var aniGifPreview = document.getElementById('ani-gif-preview');\n  if (config.level.aniGifURL) {\n    aniGifPreview.style.backgroundImage = \"url('\" + config.level.aniGifURL + \"')\";\n    var promptTable = document.getElementById('prompt-table');\n    promptTable.className += \" with-ani-gif\";\n  } else {\n    var wrapper = document.getElementById('ani-gif-preview-wrapper');\n    wrapper.style.display = 'none';\n  }\n\n  if (this.editCode) {\n    this.handleEditCode_(config);\n  }\n\n  if (this.isUsingBlockly()) {\n    this.handleUsingBlockly_(config);\n  } else {\n    // handleUsingBlockly_ already does an onResize. We still want that goodness\n    // if we're not blockly\n    this.onResize();\n  }\n\n  var vizResizeBar = document.getElementById('visualizationResizeBar');\n  if (vizResizeBar) {\n    dom.addMouseDownTouchEvent(vizResizeBar, _.bind(this.onMouseDownVizResizeBar, this));\n\n    // Can't use dom.addMouseUpTouchEvent() because it will preventDefault on\n    // all touchend events on the page, breaking click events...\n    document.body.addEventListener('mouseup', _.bind(this.onMouseUpVizResizeBar, this));\n    var mouseUpTouchEventName = dom.getTouchEventName('mouseup');\n    if (mouseUpTouchEventName) {\n      document.body.addEventListener(mouseUpTouchEventName, _.bind(this.onMouseUpVizResizeBar, this));\n    }\n  }\n\n  window.addEventListener('resize', _.bind(this.onResize, this));\n\n  this.reset(true);\n\n  // Add display of blocks used.\n  this.setIdealBlockNumber_();\n\n  // TODO (cpirich): implement block count for droplet (for now, blockly only)\n  if (this.isUsingBlockly()) {\n    Blockly.mainBlockSpaceEditor.addChangeListener(_.bind(function () {\n      this.updateBlockCount();\n    }, this));\n\n    if (config.level.openFunctionDefinition) {\n      this.openFunctionDefinition_(config);\n    }\n  }\n\n  // Bind listener to 'Clear Puzzle' button\n  var hideIcon = utils.valueOr(config.skin.hideIconInClearPuzzle, false);\n  var clearPuzzleHeader = document.getElementById('clear-puzzle-header');\n  if (clearPuzzleHeader) {\n    dom.addClickTouchEvent(clearPuzzleHeader, (function () {\n      this.feedback_.showClearPuzzleConfirmation(this.Dialog, hideIcon, (function () {\n        this.handleClearPuzzle(config);\n      }).bind(this));\n    }).bind(this));\n  }\n\n  // Bind listener to 'Version History' button\n  var versionsHeader = document.getElementById('versions-header');\n  if (versionsHeader) {\n    dom.addClickTouchEvent(versionsHeader, (function () {\n      var codeDiv = document.createElement('div');\n      var dialog = this.createModalDialog({\n        Dialog: this.Dialog,\n        contentDiv: codeDiv,\n        defaultBtnSelector: 'again-button',\n        id: 'showVersionsModal'\n      });\n      React.render(React.createElement(VersionHistory, {\n        handleClearPuzzle: this.handleClearPuzzle.bind(this, config)\n      }), codeDiv);\n\n      dialog.show();\n    }).bind(this));\n  }\n\n  if (this.isUsingBlockly() && Blockly.contractEditor) {\n    Blockly.contractEditor.registerTestsFailedOnCloseHandler((function () {\n      this.feedback_.showSimpleDialog(this.Dialog, {\n        headerText: undefined,\n        bodyText: msg.examplesFailedOnClose(),\n        cancelText: msg.ignore(),\n        confirmText: msg.tryAgain(),\n        onConfirm: null,\n        onCancel: function onCancel() {\n          Blockly.contractEditor.hideIfOpen();\n        }\n      });\n\n      // return true to indicate to blockly-core that we'll own closing the\n      // contract editor\n      return true;\n    }).bind(this));\n  }\n};\n\nStudioApp.prototype.getCode = function () {\n  if (!this.editCode) {\n    throw \"getCode() requires editCode\";\n  }\n  if (this.hideSource) {\n    return this.startBlocks_;\n  } else {\n    return this.editor.getValue();\n  }\n};\n\nStudioApp.prototype.setIconsFromSkin = function (skin) {\n  this.icon = skin.staticAvatar;\n  this.smallIcon = skin.smallStaticAvatar;\n  this.winIcon = skin.winAvatar;\n  this.failureIcon = skin.failureAvatar;\n};\n\n/**\n * Reset the puzzle back to its initial state.\n * Search aliases: \"Start Over\", startOver\n * @param {Object} config - same config object passed to studioApp.init().\n */\nStudioApp.prototype.handleClearPuzzle = function (config) {\n  if (this.isUsingBlockly()) {\n    if (Blockly.functionEditor) {\n      Blockly.functionEditor.hideIfOpen();\n    }\n    Blockly.mainBlockSpace.clear();\n    this.setStartBlocks_(config, false);\n    if (config.level.openFunctionDefinition) {\n      this.openFunctionDefinition_(config);\n    }\n  } else {\n    var resetValue = '';\n    if (config.level.startBlocks) {\n      // Don't pass CRLF pairs to droplet until they fix CR handling:\n      resetValue = config.level.startBlocks.replace(/\\r\\n/g, '\\n');\n    }\n    // TODO (bbuchanan): This getValue() call is a workaround for a Droplet bug,\n    // See https://github.com/droplet-editor/droplet/issues/137\n    // Calling getValue() updates the cached ace editor value, which can be\n    // out-of-date in droplet and cause an incorrect early-out.\n    // Remove this line once that bug is fixed and our Droplet lib is updated.\n    this.editor.getValue();\n    this.editor.setValue(resetValue);\n  }\n  if (config.afterClearPuzzle) {\n    config.afterClearPuzzle();\n  }\n};\n\n/**\n * TRUE if the current app uses blockly (as opposed to editCode or another\n * editor)\n * @return {boolean}\n */\nStudioApp.prototype.isUsingBlockly = function () {\n  return this.usingBlockly_;\n};\n\n/**\n *\n */\nStudioApp.prototype.handleSharing_ = function (options) {\n  // 1. Move the buttons, 2. Hide the slider in the share page for mobile.\n  var belowVisualization = document.getElementById('belowVisualization');\n  if (dom.isMobile()) {\n    var sliderCell = document.getElementById('slider-cell');\n    if (sliderCell) {\n      sliderCell.style.display = 'none';\n    }\n    if (belowVisualization) {\n      if (options.noButtonsBelowOnMobileShare) {\n        var visualization = document.getElementById('visualization');\n        belowVisualization.style.display = 'none';\n        visualization.style.marginBottom = '0px';\n      } else {\n        belowVisualization.style.display = 'block';\n        belowVisualization.style.marginLeft = '0px';\n        if (this.noPadding) {\n          var shareCell = document.getElementById('share-cell') || document.getElementById('right-button-cell');\n          if (shareCell) {\n            shareCell.style.marginLeft = '10px';\n            shareCell.style.marginRight = '10px';\n          }\n          var softButtons = document.getElementById('soft-buttons');\n          if (softButtons) {\n            softButtons.style.marginLeft = '10px';\n            softButtons.style.marginRight = '10px';\n          }\n        }\n      }\n    }\n  }\n\n  // Show flappy upsale on desktop and mobile.  Show learn upsale only on desktop\n  var upSale = document.createElement('div');\n  if (options.makeYourOwn) {\n    upSale.innerHTML = require('./templates/makeYourOwn.html.ejs')({\n      data: {\n        makeUrl: options.makeUrl,\n        makeString: options.makeString,\n        makeImage: options.makeImage\n      }\n    });\n    if (this.noPadding) {\n      upSale.style.marginLeft = '10px';\n    }\n    belowVisualization.appendChild(upSale);\n  } else if (typeof options.makeYourOwn === 'undefined') {\n    upSale.innerHTML = require('./templates/learn.html.ejs')({\n      assetUrl: this.assetUrl\n    });\n    belowVisualization.appendChild(upSale);\n  }\n};\n\n/**\n * Get the url of path appended to BASE_URL\n */\nStudioApp.prototype.assetUrl_ = function (path) {\n  if (this.BASE_URL === undefined) {\n    throw new Error('StudioApp BASE_URL has not been set. ' + 'Call configure() first');\n  }\n  return this.BASE_URL + ((window.digestManifest || {})[path] || path);\n};\n\n/**\n * Reset the playing field to the start position and kill any pending\n * animation tasks.  This will typically be replaced by an application.\n * @param {boolean} shouldPlayOpeningAnimation True if an opening animation is\n *   to be played.\n */\nStudioApp.prototype.reset = function (shouldPlayOpeningAnimation) {\n  // TODO (bbuchanan): Look for comon reset logic we can pull here\n  // Override in app subclass\n};\n\n/**\n * Override to change run behavior.\n */\nStudioApp.prototype.runButtonClick = function () {};\n\n/**\n * Toggle whether run button or reset button is shown\n * @param {string} button Button to show, either \"run\" or \"reset\"\n */\nStudioApp.prototype.toggleRunReset = function (button) {\n  var showRun = button === 'run';\n  if (button !== 'run' && button !== 'reset') {\n    throw \"Unexpected input\";\n  }\n\n  var run = document.getElementById('runButton');\n  var reset = document.getElementById('resetButton');\n  run.style.display = showRun ? 'inline-block' : 'none';\n  run.disabled = !showRun;\n  reset.style.display = !showRun ? 'inline-block' : 'none';\n  reset.disabled = showRun;\n\n  // Toggle soft-buttons (all have the 'arrow' class set):\n  $('.arrow').prop(\"disabled\", showRun);\n};\n\n/**\n * Attempts to associate a set of audio files to a given name\n * Handles the case where cdoSounds does not exist, e.g. in tests\n * and grunt dev preview mode\n * @param {Object} audioConfig sound configuration\n */\nStudioApp.prototype.registerAudio = function (audioConfig) {\n  if (!this.cdoSounds) {\n    return;\n  }\n\n  this.cdoSounds.register(audioConfig);\n};\n\n/**\n * Attempts to associate a set of audio files to a given name\n * Handles the case where cdoSounds does not exist, e.g. in tests\n * and grunt dev preview mode\n * @param {Array.<string>} filenames file paths for sounds\n * @param {string} name ID to associate sound effect with\n */\nStudioApp.prototype.loadAudio = function (filenames, name) {\n  if (!this.cdoSounds) {\n    return;\n  }\n\n  this.cdoSounds.registerByFilenamesAndID(filenames, name);\n};\n\n/**\n * Attempts to play a sound effect\n * @param {string} name sound ID\n * @param {Object} options for sound playback\n * @param {number} options.volume value between 0.0 and 1.0 specifying volume\n * @param {function} [options.onEnded]\n */\nStudioApp.prototype.playAudio = function (name, options) {\n  if (!this.cdoSounds) {\n    return;\n  }\n\n  options = options || {};\n  var defaultOptions = { volume: 0.5 };\n  var newOptions = utils.extend(defaultOptions, options);\n  this.cdoSounds.play(name, newOptions);\n};\n\n/**\n * Stops looping a given sound\n * @param {string} name ID of sound\n */\nStudioApp.prototype.stopLoopingAudio = function (name) {\n  if (!this.cdoSounds) {\n    return;\n  }\n\n  this.cdoSounds.stopLoopingAudio(name);\n};\n\n/**\n* @param {Object} options Configuration parameters for Blockly. Parameters are\n* optional and include:\n*  - {string} path The root path to the /apps directory, defaults to the\n*    the directory in which this script is located.\n*  - {boolean} rtl True if the current language right to left.\n*  - {DomElement} toolbox The element in which to insert the toolbox,\n*    defaults to the element with 'toolbox'.\n*  - {boolean} trashcan True if the trashcan should be displayed, defaults to\n*    true.\n* @param {Element} div The parent div in which to insert Blockly.\n*/\nStudioApp.prototype.inject = function (div, options) {\n  var defaults = {\n    assetUrl: this.assetUrl,\n    rtl: this.isRtl(),\n    toolbox: document.getElementById('toolbox'),\n    trashcan: true,\n    customSimpleDialog: this.feedback_.showSimpleDialog.bind(this.feedback_, this.Dialog)\n  };\n  Blockly.inject(div, utils.extend(defaults, options), this.cdoSounds);\n};\n\n/**\n * Returns true if the current HTML page is in right-to-left language mode.\n */\nStudioApp.prototype.isRtl = function () {\n  var head = document.getElementsByTagName('head')[0];\n  if (head && head.parentElement) {\n    var dir = head.parentElement.getAttribute('dir');\n    return dir && dir.toLowerCase() === 'rtl';\n  } else {\n    return false;\n  }\n};\n\n/**\n * @return {string} Locale direction string based on app direction.\n */\nStudioApp.prototype.localeDirection = function () {\n  return this.isRtl() ? 'rtl' : 'ltr';\n};\n\n/**\n* Initialize Blockly for a readonly iframe.  Called on page load. No sounds.\n* XML argument may be generated from the console with:\n* Blockly.Xml.domToText(Blockly.Xml.blockSpaceToDom(Blockly.mainBlockSpace)).slice(5, -6)\n*/\nStudioApp.prototype.initReadonly = function (options) {\n  Blockly.inject(document.getElementById('codeWorkspace'), {\n    assetUrl: this.assetUrl,\n    readOnly: true,\n    rtl: this.isRtl(),\n    scrollbars: false\n  });\n  this.loadBlocks(options.blocks);\n};\n\n/**\n* Load the editor with blocks.\n* @param {string} blocksXml Text representation of blocks.\n*/\nStudioApp.prototype.loadBlocks = function (blocksXml) {\n  var xml = parseXmlElement(blocksXml);\n  Blockly.Xml.domToBlockSpace(Blockly.mainBlockSpace, xml);\n};\n\n/**\n* Applies the specified arrangement to top startBlocks. If any\n* individual blocks have x or y properties set in the XML, those values\n* take priority. If no arrangement for a particular block type is\n* specified, blocks are automatically positioned by Blockly.\n*\n* Note that, currently, only bounce and flappy use arrangements.\n*\n* @param {string} startBlocks String representation of start blocks xml.\n* @param {Object.<Object>} arrangement A map from block type to position.\n* @return {string} String representation of start blocks xml, including\n*    block position.\n*/\nStudioApp.prototype.arrangeBlockPosition = function (startBlocks, arrangement) {\n\n  var type, xmlChild;\n\n  var xml = parseXmlElement(startBlocks);\n\n  var xmlChildNodes = xml.childNodes || [];\n  arrangement = arrangement || {};\n\n  for (var i = 0; i < xmlChildNodes.length; i++) {\n    xmlChild = xmlChildNodes[i];\n\n    // Only look at element nodes\n    if (xmlChild.nodeType === 1) {\n      // look to see if we have a predefined arrangement for this type\n      type = xmlChild.getAttribute('type');\n      if (arrangement[type]) {\n        if (arrangement[type].x && !xmlChild.hasAttribute('x')) {\n          xmlChild.setAttribute('x', arrangement[type].x);\n        }\n        if (arrangement[type].y && !xmlChild.hasAttribute('y')) {\n          xmlChild.setAttribute('y', arrangement[type].y);\n        }\n      }\n    }\n  }\n  return Blockly.Xml.domToText(xml);\n};\n\nStudioApp.prototype.createModalDialog = function (options) {\n  options.Dialog = utils.valueOr(options.Dialog, this.Dialog);\n  return this.feedback_.createModalDialog(options);\n};\n\nStudioApp.prototype.showInstructions_ = function (level, autoClose) {\n  var instructionsDiv = document.createElement('div');\n  var renderedMarkdown;\n  var scrollableSelector;\n  var headerElement;\n\n  var puzzleTitle = msg.puzzleTitle({\n    stage_total: level.stage_total,\n    puzzle_number: level.puzzle_number\n  });\n\n  if (window.marked && level.markdownInstructions && this.LOCALE === ENGLISH_LOCALE) {\n    renderedMarkdown = marked(level.markdownInstructions);\n    scrollableSelector = '.instructions-markdown';\n    instructionsDiv.className += ' markdown-instructions-container';\n    headerElement = document.createElement('h1');\n    headerElement.className = 'markdown-level-header-text dialog-title';\n    headerElement.innerHTML = puzzleTitle;\n    if (!this.icon) {\n      headerElement.className += ' no-modal-icon';\n    }\n  }\n\n  instructionsDiv.innerHTML = require('./templates/instructions.html.ejs')({\n    puzzleTitle: puzzleTitle,\n    instructions: level.instructions,\n    instructions2: level.instructions2,\n    renderedMarkdown: renderedMarkdown,\n    markdownClassicMargins: level.markdownInstructionsWithClassicMargins,\n    aniGifURL: level.aniGifURL\n  });\n\n  var buttons = document.createElement('div');\n  buttons.innerHTML = require('./templates/buttons.html.ejs')({\n    data: {\n      ok: true\n    }\n  });\n\n  instructionsDiv.appendChild(buttons);\n\n  // If there is an instructions block on the screen, we want the instructions dialog to\n  // shrink down to that instructions block when it's dismissed.\n  // We then want to flash the instructions block.\n  var hideOptions = null;\n  var endTargetSelector = \"#bubble\";\n\n  if ($(endTargetSelector).length) {\n    hideOptions = {};\n    hideOptions.endTarget = endTargetSelector;\n  }\n\n  var hideFn = _.bind(function () {\n    // Momentarily flash the instruction block white then back to regular.\n    if ($(endTargetSelector).length) {\n      $(endTargetSelector).css({ \"background-color\": \"rgba(255,255,255,1)\" }).delay(500).animate({ \"background-color\": \"rgba(0,0,0,0)\" }, 1000);\n    }\n    // Set focus to ace editor when instructions close:\n    if (this.editCode && this.editor && !this.editor.currentlyUsingBlocks) {\n      this.editor.aceEditor.focus();\n    }\n\n    // Fire a custom event on the document so that other code can respond\n    // to instructions being closed.\n    var event = document.createEvent('Event');\n    event.initEvent('instructionsHidden', true, true);\n    document.dispatchEvent(event);\n  }, this);\n\n  this.instructionsDialog = this.createModalDialog({\n    contentDiv: instructionsDiv,\n    icon: this.icon,\n    defaultBtnSelector: '#ok-button',\n    onHidden: hideFn,\n    scrollContent: !!renderedMarkdown,\n    scrollableSelector: scrollableSelector,\n    header: headerElement\n  });\n\n  if (autoClose) {\n    setTimeout(_.bind(function () {\n      this.instructionsDialog.hide();\n    }, this), 32000);\n  }\n\n  var okayButton = buttons.querySelector('#ok-button');\n  if (okayButton) {\n    dom.addClickTouchEvent(okayButton, _.bind(function () {\n      if (this.instructionsDialog) {\n        this.instructionsDialog.hide();\n      }\n    }, this));\n  }\n\n  this.instructionsDialog.show({ hideOptions: hideOptions });\n\n  if (renderedMarkdown) {\n    // process <details> tags with polyfill jQuery plugin\n    $('details').details();\n  }\n\n  // Fire a custom event on the document so that other code can respond\n  // to instructions being shown.\n  var event = document.createEvent('Event');\n  event.initEvent('instructionsShown', true, true);\n  document.dispatchEvent(event);\n};\n\n/**\n*  Resizes the blockly workspace.\n*/\nStudioApp.prototype.onResize = function () {\n  var workspaceWidth = document.getElementById('codeWorkspace').clientWidth;\n\n  // Keep blocks static relative to the right edge in RTL mode\n  if (this.isUsingBlockly() && Blockly.RTL) {\n    if (this.lastWorkspaceWidth && this.lastWorkspaceWidth !== workspaceWidth) {\n      var blockOffset = workspaceWidth - this.lastWorkspaceWidth;\n      Blockly.mainBlockSpace.getTopBlocks().forEach(function (topBlock) {\n        topBlock.moveBy(blockOffset, 0);\n      });\n    }\n  }\n  this.lastWorkspaceWidth = workspaceWidth;\n\n  // Droplet toolbox width varies as the window size changes, so refresh:\n  this.resizeToolboxHeader();\n\n  // Content below visualization is a resizing scroll area in pinned mode\n  onResizeSmallFooter();\n};\n\n/**\n * Resizes the content area below the visualization in pinned (viewport height)\n * view mode.\n */\nfunction resizePinnedBelowVisualizationArea() {\n  var pinnedBelowVisualization = document.querySelector('#visualizationColumn.pin_bottom #belowVisualization');\n  if (!pinnedBelowVisualization) {\n    return;\n  }\n\n  var designToggleRow = document.getElementById('designToggleRow');\n  var visualization = document.getElementById('visualization');\n  var gameButtons = document.getElementById('gameButtons');\n  var smallFooter = document.querySelector('#page-small-footer .small-footer-base');\n\n  var top = 0;\n  if (designToggleRow) {\n    top += $(designToggleRow).outerHeight(true);\n  }\n\n  if (visualization) {\n    top += $(visualization).outerHeight(true);\n  }\n\n  if (gameButtons) {\n    top += $(gameButtons).outerHeight(true);\n  }\n\n  var bottom = 0;\n  if (smallFooter) {\n    var codeApp = $('#codeApp');\n    bottom += $(smallFooter).outerHeight(true);\n    // Footer is relative to the document, not codeApp, so we need to\n    // remove the codeApp bottom offset to get the correct margin.\n    bottom -= parseInt(codeApp.css('bottom'), 10);\n  }\n\n  pinnedBelowVisualization.style.top = top + 'px';\n  pinnedBelowVisualization.style.bottom = bottom + 'px';\n}\n\n/**\n * Debounced onResize operations that update the layout to support sizing\n * to viewport height and using the small footer.\n * @type {Function}\n */\nvar onResizeSmallFooter = _.debounce(function () {\n  resizePinnedBelowVisualizationArea();\n}, 10);\n\nStudioApp.prototype.onMouseDownVizResizeBar = function (event) {\n  // When we see a mouse down in the resize bar, start tracking mouse moves:\n\n  if (!this.onMouseMoveBoundHandler) {\n    this.onMouseMoveBoundHandler = _.bind(this.onMouseMoveVizResizeBar, this);\n    document.body.addEventListener('mousemove', this.onMouseMoveBoundHandler);\n    this.mouseMoveTouchEventName = dom.getTouchEventName('mousemove');\n    if (this.mouseMoveTouchEventName) {\n      document.body.addEventListener(this.mouseMoveTouchEventName, this.onMouseMoveBoundHandler);\n    }\n\n    event.preventDefault();\n  }\n};\n\nfunction applyTransformScaleToChildren(element, scale) {\n  for (var i = 0; i < element.children.length; i++) {\n    element.children[i].style.transform = scale;\n    element.children[i].style.msTransform = scale;\n    element.children[i].style.webkitTransform = scale;\n  }\n}\n\n/**\n*  Handle mouse moves while dragging the visualization resize bar. We set\n*  styles on each of the elements directly, overriding the normal responsive\n*  classes that would typically adjust width and scale.\n*/\nStudioApp.prototype.onMouseMoveVizResizeBar = function (event) {\n  var visualizationResizeBar = document.getElementById('visualizationResizeBar');\n\n  var rect = visualizationResizeBar.getBoundingClientRect();\n  var offset;\n  var newVizWidth;\n  if (this.isRtl()) {\n    offset = window.innerWidth - (window.pageXOffset + rect.left + rect.width / 2) - parseInt(window.getComputedStyle(visualizationResizeBar).right, 10);\n    newVizWidth = window.innerWidth - event.pageX - offset;\n  } else {\n    offset = window.pageXOffset + rect.left + rect.width / 2 - parseInt(window.getComputedStyle(visualizationResizeBar).left, 10);\n    newVizWidth = event.pageX - offset;\n  }\n  this.resizeVisualization(newVizWidth);\n};\n\n/**\n * Resize the visualization to the given width\n */\nStudioApp.prototype.resizeVisualization = function (width) {\n  var codeWorkspace = document.getElementById('codeWorkspace');\n  var visualization = document.getElementById('visualization');\n  var visualizationResizeBar = document.getElementById('visualizationResizeBar');\n  var visualizationColumn = document.getElementById('visualizationColumn');\n  var visualizationEditor = document.getElementById('visualizationEditor');\n\n  var newVizWidth = Math.max(this.minVisualizationWidth, Math.min(this.maxVisualizationWidth, width));\n  var newVizWidthString = newVizWidth + 'px';\n  var newVizHeightString = newVizWidth / this.vizAspectRatio + 'px';\n  var vizSideBorderWidth = visualization.offsetWidth - visualization.clientWidth;\n\n  if (this.isRtl()) {\n    visualizationResizeBar.style.right = newVizWidthString;\n    codeWorkspace.style.right = newVizWidthString;\n  } else {\n    visualizationResizeBar.style.left = newVizWidthString;\n    codeWorkspace.style.left = newVizWidthString;\n  }\n  visualizationResizeBar.style.lineHeight = newVizHeightString;\n  // Add extra width to visualizationColumn if visualization has a border:\n  visualizationColumn.style.maxWidth = newVizWidth + vizSideBorderWidth + 'px';\n  visualization.style.maxWidth = newVizWidthString;\n  visualization.style.maxHeight = newVizHeightString;\n\n  // We don't get the benefits of our responsive styling, so set height\n  // explicitly\n  if (!utils.browserSupportsCssMedia()) {\n    visualization.style.height = newVizHeightString;\n    visualization.style.width = newVizWidthString;\n  }\n  var scale = newVizWidth / this.nativeVizWidth;\n\n  applyTransformScaleToChildren(visualization, 'scale(' + scale + ')');\n  if (visualizationEditor) {\n    visualizationEditor.style.marginLeft = newVizWidthString;\n  }\n\n  var smallFooter = document.querySelector('#page-small-footer .small-footer-base');\n  if (smallFooter) {\n    smallFooter.style.maxWidth = newVizWidthString;\n\n    // If the small print and language selector are on the same line,\n    // the small print should float right.  Otherwise, it should float left.\n    var languageSelector = smallFooter.querySelector('form');\n    var smallPrint = smallFooter.querySelector('small');\n    if (languageSelector && smallPrint.offsetTop === languageSelector.offsetTop) {\n      smallPrint.style.float = 'right';\n    } else {\n      smallPrint.style.float = 'left';\n    }\n  }\n\n  // Fire resize so blockly and droplet handle this type of resize properly:\n  utils.fireResizeEvent();\n};\n\nStudioApp.prototype.onMouseUpVizResizeBar = function (event) {\n  // If we have been tracking mouse moves, remove the handler now:\n  if (this.onMouseMoveBoundHandler) {\n    document.body.removeEventListener('mousemove', this.onMouseMoveBoundHandler);\n    if (this.mouseMoveTouchEventName) {\n      document.body.removeEventListener(this.mouseMoveTouchEventName, this.onMouseMoveBoundHandler);\n    }\n    this.onMouseMoveBoundHandler = null;\n  }\n};\n\n/**\n*  Updates the width of the toolbox-header to match the width of the toolbox\n*  or palette in the workspace below the header.\n*/\nStudioApp.prototype.resizeToolboxHeader = function () {\n  var toolboxWidth = 0;\n  if (this.editCode && this.editor && this.editor.paletteEnabled) {\n    // If in the droplet editor, set toolboxWidth based on the block palette width:\n    var categories = document.querySelector('.droplet-palette-wrapper');\n    toolboxWidth = categories.getBoundingClientRect().width;\n  } else if (this.isUsingBlockly()) {\n    toolboxWidth = Blockly.mainBlockSpaceEditor.getToolboxWidth();\n  }\n  document.getElementById('toolbox-header').style.width = toolboxWidth + 'px';\n};\n\n/**\n* Highlight the block (or clear highlighting).\n* @param {?string} id ID of block that triggered this action.\n* @param {boolean} spotlight Optional.  Highlight entire block if true\n*/\nStudioApp.prototype.highlight = function (id, spotlight) {\n  if (this.isUsingBlockly()) {\n    if (id) {\n      var m = id.match(/^block_id_(\\d+)$/);\n      if (m) {\n        id = m[1];\n      }\n    }\n\n    Blockly.mainBlockSpace.highlightBlock(id, spotlight);\n  }\n};\n\n/**\n* Remove highlighting from all blocks\n*/\nStudioApp.prototype.clearHighlighting = function () {\n  if (this.isUsingBlockly()) {\n    this.highlight(null);\n  } else if (this.editCode && this.editor) {\n    // Clear everything (step highlighting, errors, etc.)\n    codegen.clearDropletAceHighlighting(this.editor, true);\n  }\n};\n\n/**\n* Display feedback based on test results.  The test results must be\n* explicitly provided.\n* @param {{feedbackType: number}} Test results (a constant property of\n*     this.TestResults).\n*/\nStudioApp.prototype.displayFeedback = function (options) {\n  options.Dialog = this.Dialog;\n  options.onContinue = this.onContinue;\n  options.backToPreviousLevel = this.backToPreviousLevel;\n  options.sendToPhone = this.sendToPhone;\n\n  // Special test code for edit blocks.\n  if (options.level.edit_blocks) {\n    options.feedbackType = this.TestResults.EDIT_BLOCKS;\n  }\n\n  this.feedback_.displayFeedback(options, this.requiredBlocks_, this.maxRequiredBlocksToFlag_, this.recommendedBlocks_, this.maxRecommendedBlocksToFlag_);\n};\n\n/**\n * Runs the tests and returns results.\n * @param {boolean} levelComplete Was the level completed successfully?\n * @param {Object} options\n * @return {number} The appropriate property of TestResults.\n */\nStudioApp.prototype.getTestResults = function (levelComplete, options) {\n  return this.feedback_.getTestResults(levelComplete, this.requiredBlocks_, this.recommendedBlocks_, this.checkForEmptyBlocks_, options);\n};\n\n// Builds the dom to get more info from the user. After user enters info\n// and click \"create level\" onAttemptCallback is called to deliver the info\n// to the server.\nStudioApp.prototype.builderForm_ = function (onAttemptCallback) {\n  var builderDetails = document.createElement('div');\n  builderDetails.innerHTML = require('./templates/builder.html.ejs')();\n  var dialog = this.createModalDialog({\n    contentDiv: builderDetails,\n    icon: this.icon\n  });\n  var createLevelButton = document.getElementById('create-level-button');\n  dom.addClickTouchEvent(createLevelButton, function () {\n    var instructions = builderDetails.querySelector('[name=\"instructions\"]').value;\n    var name = builderDetails.querySelector('[name=\"level_name\"]').value;\n    var query = url.parse(window.location.href, true).query;\n    onAttemptCallback(utils.extend({\n      \"instructions\": instructions,\n      \"name\": name\n    }, query));\n  });\n\n  dialog.show({ backdrop: 'static' });\n};\n\n/**\n* Report back to the server, if available.\n* @param {object} options - parameter block which includes:\n* {string} app The name of the application.\n* {number} id A unique identifier generated when the page was loaded.\n* {string} level The ID of the current level.\n* {number} result An indicator of the success of the code.\n* {number} testResult More specific data on success or failure of code.\n* {string} program The user program, which will get URL-encoded.\n* {function} onComplete Function to be called upon completion.\n*/\nStudioApp.prototype.report = function (options) {\n  // copy from options: app, level, result, testResult, program, onComplete\n  var report = options;\n  report.pass = this.feedback_.canContinueToNextLevel(options.testResult);\n  report.time = new Date().getTime() - this.initTime;\n  report.attempt = this.attempts;\n  report.lines = this.feedback_.getNumBlocksUsed();\n\n  // If hideSource is enabled, the user is looking at a shared level that\n  // they cannot have modified. In that case, don't report it to the service\n  // or call the onComplete() callback expected. The app will just sit\n  // there with the Reset button as the only option.\n  var self = this;\n  if (!(this.hideSource && this.share)) {\n    var onAttemptCallback = (function () {\n      return function (builderDetails) {\n        for (var option in builderDetails) {\n          report[option] = builderDetails[option];\n        }\n        self.onAttempt(report);\n      };\n    })();\n\n    // If this is the level builder, go to builderForm to get more info from\n    // the level builder.\n    if (options.builder) {\n      this.builderForm_(onAttemptCallback);\n    } else {\n      onAttemptCallback();\n    }\n  }\n};\n\n/**\n* Click the reset button.  Reset the application.\n*/\nStudioApp.prototype.resetButtonClick = function () {\n  this.onResetPressed();\n  this.toggleRunReset('run');\n  this.clearHighlighting();\n  if (this.isUsingBlockly()) {\n    Blockly.mainBlockSpaceEditor.setEnableToolbox(true);\n    Blockly.mainBlockSpace.traceOn(false);\n  }\n  this.reset(false);\n};\n\n/**\n* Add count of blocks used.\n*/\nStudioApp.prototype.updateBlockCount = function () {\n  // If the number of block used is bigger than the ideal number of blocks,\n  // set it to be yellow, otherwise, keep it as black.\n  var element = document.getElementById('blockUsed');\n  if (this.IDEAL_BLOCK_NUM < this.feedback_.getNumCountableBlocks()) {\n    element.className = \"block-counter-overflow\";\n  } else {\n    element.className = \"block-counter-default\";\n  }\n\n  // Update number of blocks used.\n  if (element) {\n    element.innerHTML = ''; // Remove existing children or text.\n    element.appendChild(document.createTextNode(this.feedback_.getNumCountableBlocks()));\n  }\n};\n\n/**\n * Set the ideal Number of blocks.\n */\nStudioApp.prototype.setIdealBlockNumber_ = function () {\n  var element = document.getElementById('idealBlockNumber');\n  if (!element) {\n    return;\n  }\n\n  var idealBlockNumberMsg = this.IDEAL_BLOCK_NUM === Infinity ? msg.infinity() : this.IDEAL_BLOCK_NUM;\n  element.innerHTML = ''; // Remove existing children or text.\n  element.appendChild(document.createTextNode(idealBlockNumberMsg));\n};\n\n/**\n *\n */\nStudioApp.prototype.fixViewportForSmallScreens_ = function (viewport, config) {\n  var deviceWidth;\n  var desiredWidth;\n  var minWidth;\n  if (this.share && dom.isMobile()) {\n    var mobileNoPaddingShareWidth = config.mobileNoPaddingShareWidth || DEFAULT_MOBILE_NO_PADDING_SHARE_WIDTH;\n    // for mobile sharing, don't assume landscape mode, use screen.width\n    deviceWidth = desiredWidth = screen.width;\n    if (this.noPadding && screen.width < MAX_PHONE_WIDTH) {\n      desiredWidth = Math.min(desiredWidth, mobileNoPaddingShareWidth);\n    }\n    minWidth = mobileNoPaddingShareWidth + (this.noPadding ? 0 : MOBILE_SHARE_WIDTH_PADDING);\n  } else {\n    // assume we are in landscape mode, so width is the longer of the two\n    deviceWidth = desiredWidth = Math.max(screen.width, screen.height);\n    minWidth = MIN_WIDTH;\n  }\n  var width = Math.max(minWidth, desiredWidth);\n  var scale = deviceWidth / width;\n  var content = ['width=' + width, 'minimal-ui', 'initial-scale=' + scale, 'maximum-scale=' + scale, 'minimum-scale=' + scale, 'target-densityDpi=device-dpi', 'user-scalable=no'];\n  viewport.setAttribute('content', content.join(', '));\n};\n\n/**\n *\n */\nStudioApp.prototype.setConfigValues_ = function (config) {\n  this.share = config.share;\n\n  // if true, dont provide links to share on fb/twitter\n  this.disableSocialShare = config.disableSocialShare;\n  this.sendToPhone = config.sendToPhone;\n  this.noPadding = config.noPadding;\n\n  // contract editor requires more vertical space. set height to 1250 unless\n  // explicitly specified\n  if (config.level.useContractEditor) {\n    config.level.minWorkspaceHeight = config.level.minWorkspaceHeight || 1250;\n  }\n\n  this.appMsg = config.appMsg;\n  this.IDEAL_BLOCK_NUM = config.level.ideal || Infinity;\n  this.MIN_WORKSPACE_HEIGHT = config.level.minWorkspaceHeight || 800;\n  this.requiredBlocks_ = config.level.requiredBlocks || [];\n  this.recommendedBlocks_ = config.level.recommendedBlocks || [];\n  this.startBlocks_ = config.level.lastAttempt || config.level.startBlocks || '';\n  this.vizAspectRatio = config.vizAspectRatio || 1.0;\n  this.nativeVizWidth = config.nativeVizWidth || this.maxVisualizationWidth;\n\n  // enableShowCode defaults to true if not defined\n  this.enableShowCode = config.enableShowCode !== false;\n  this.enableShowLinesCount = config.enableShowLinesCount !== false;\n\n  // If the level has no ideal block count, don't show a block count. If it does\n  // have an ideal, show block count unless explicitly configured not to.\n  if (config.level && (config.level.ideal === undefined || config.level.ideal === Infinity)) {\n    this.enableShowBlockCount = false;\n  } else {\n    this.enableShowBlockCount = config.enableShowBlockCount !== false;\n  }\n\n  // Store configuration.\n  this.onAttempt = config.onAttempt || function () {};\n  this.onContinue = config.onContinue || function () {};\n  this.onInitialize = config.onInitialize ? config.onInitialize.bind(config) : function () {};\n  this.onResetPressed = config.onResetPressed || function () {};\n  this.backToPreviousLevel = config.backToPreviousLevel || function () {};\n  this.showInstructions = this.showInstructions_.bind(this, config.level);\n};\n\n// Overwritten by applab.\nStudioApp.prototype.runButtonClickWrapper = function (callback) {\n  if (window.$) {\n    $(window).trigger('run_button_pressed');\n    $(window).trigger('appModeChanged');\n  }\n  callback();\n};\n\n/**\n * Begin modifying the DOM based on config.\n * Note: Has side effects on config\n */\nStudioApp.prototype.configureDom = function (config) {\n  var container = document.getElementById(config.containerId);\n  container.innerHTML = config.html;\n  if (!this.enableShowCode) {\n    document.getElementById('show-code-header').style.display = 'none';\n  }\n  var codeWorkspace = container.querySelector('#codeWorkspace');\n\n  var runButton = container.querySelector('#runButton');\n  var resetButton = container.querySelector('#resetButton');\n  var runClick = this.runButtonClick.bind(this);\n  var throttledRunClick = _.debounce(this.runButtonClickWrapper.bind(this, runClick), 250, true);\n  dom.addClickTouchEvent(runButton, _.bind(throttledRunClick, this));\n  dom.addClickTouchEvent(resetButton, _.bind(this.resetButtonClick, this));\n\n  // TODO (cpirich): make conditional for applab\n  var belowViz = document.getElementById('belowVisualization');\n  var referenceArea = document.getElementById('reference_area');\n  if (referenceArea) {\n    belowViz.appendChild(referenceArea);\n  }\n\n  var visualizationColumn = document.getElementById('visualizationColumn');\n  var visualization = document.getElementById('visualization');\n\n  if (!config.hideSource || config.embed) {\n    var vizHeight = this.MIN_WORKSPACE_HEIGHT;\n    if (this.isUsingBlockly() && config.level.edit_blocks) {\n      // Set a class on the main blockly div so CSS can style blocks differently\n      $(codeWorkspace).addClass('edit');\n      // If in level builder editing blocks, make workspace extra tall\n      vizHeight = 3000;\n      // Modify the arrangement of toolbox blocks so categories align left\n      if (config.level.edit_blocks == \"toolbox_blocks\") {\n        this.blockYCoordinateInterval = 80;\n        config.blockArrangement = { category: { x: 20 } };\n      }\n      // Enable param & var editing in levelbuilder, regardless of level setting\n      config.level.disableParamEditing = false;\n      config.level.disableVariableEditing = false;\n    }\n\n    if (config.pinWorkspaceToBottom) {\n      var bodyElement = document.body;\n      bodyElement.style.overflow = \"hidden\";\n      bodyElement.className = bodyElement.className + \" pin_bottom\";\n      container.className = container.className + \" pin_bottom\";\n      visualizationColumn.className = visualizationColumn.className + \" pin_bottom\";\n      codeWorkspace.className = codeWorkspace.className + \" pin_bottom\";\n      if (this.editCode) {\n        var codeTextbox = document.getElementById('codeTextbox');\n        codeTextbox.className = codeTextbox.className + \" pin_bottom\";\n      }\n    } else {\n      visualizationColumn.style.minHeight = vizHeight + 'px';\n      container.style.minHeight = vizHeight + 'px';\n    }\n  }\n\n  if (config.readonlyWorkspace) {\n    $(codeWorkspace).addClass('readonly');\n  }\n\n  if (config.embed && config.hideSource) {\n    container.className = container.className + \" embed_hidesource\";\n    visualizationColumn.className = visualizationColumn.className + \" embed_hidesource\";\n  }\n\n  if (!config.embed && !config.hideSource) {\n    // Make the visualization responsive to screen size, except on share page.\n    visualization.className += \" responsive\";\n    visualizationColumn.className += \" responsive\";\n    var smallFooter = document.querySelector('#page-small-footer .small-footer-base');\n    if (smallFooter) {\n      smallFooter.className += \" responsive\";\n    }\n  }\n};\n\n/**\n *\n */\nStudioApp.prototype.handleHideSource_ = function (options) {\n  var container = document.getElementById(options.containerId);\n  this.hideSource = true;\n  var workspaceDiv = document.getElementById('codeWorkspace');\n  if (!options.embed || options.level.skipInstructionsPopup) {\n    container.className = 'hide-source';\n  }\n  workspaceDiv.style.display = 'none';\n  document.getElementById('visualizationResizeBar').style.display = 'none';\n\n  // Chrome-less share page.\n  if (this.share && options.app === 'applab') {\n    if (dom.isMobile()) {\n      document.getElementById('visualizationColumn').className = 'chromelessShare';\n    } else {\n      document.getElementsByClassName('header-wrapper')[0].style.display = 'none';\n      document.getElementById('visualizationColumn').className = 'wireframeShare';\n    }\n    document.body.style.backgroundColor = '#202B34';\n    // For share page on mobile, do not show this part.\n  } else if (!options.embed && !(this.share && dom.isMobile())) {\n      var runButton = document.getElementById('runButton');\n      var buttonRow = runButton.parentElement;\n      var openWorkspace = document.createElement('button');\n      openWorkspace.setAttribute('id', 'open-workspace');\n      openWorkspace.appendChild(document.createTextNode(msg.openWorkspace()));\n\n      var belowViz = document.getElementById('belowVisualization');\n      belowViz.appendChild(this.feedback_.createSharingDiv({\n        response: {\n          level_source: window.location,\n          level_source_id: options.level_source_id,\n          phone_share_url: options.phone_share_url\n        },\n        sendToPhone: options.sendToPhone,\n        level: options.level,\n        twitter: options.twitter,\n        onMainPage: true\n      }));\n\n      dom.addClickTouchEvent(openWorkspace, function () {\n        // TODO: don't make assumptions about hideSource during init so this works.\n        // workspaceDiv.style.display = '';\n\n        // /c/ URLs go to /edit when we click open workspace.\n        // /project/ URLs we want to go to /view (which doesnt require login)\n        if (/^\\/c\\//.test(location.pathname)) {\n          location.href += '/edit';\n        } else {\n          location.href += '/view';\n        }\n      });\n\n      buttonRow.appendChild(openWorkspace);\n    }\n};\n\nStudioApp.prototype.handleEditCode_ = function (config) {\n\n  if (this.hideSource) {\n    // In hide source mode, just call afterInject and exit immediately\n    if (config.afterInject) {\n      config.afterInject();\n    }\n    return;\n  }\n\n  var displayMessage, examplePrograms, messageElement, onChange, startingText;\n\n  // Ensure global ace variable is the same as window.ace\n  // (important because they can be different in our test environment)\n\n  /* jshint ignore:start */\n  ace = window.ace;\n  /* jshint ignore:end */\n\n  var fullDropletPalette = dropletUtils.generateDropletPalette(config.level.codeFunctions, config.dropletConfig);\n  this.editor = new droplet.Editor(document.getElementById('codeTextbox'), {\n    mode: 'javascript',\n    modeOptions: dropletUtils.generateDropletModeOptions(config),\n    palette: fullDropletPalette,\n    showPaletteInTextMode: true,\n    dropIntoAceAtLineStart: config.dropIntoAceAtLineStart,\n    enablePaletteAtStart: !config.readonlyWorkspace,\n    textModeAtStart: config.level.textModeAtStart\n  });\n\n  this.editor.aceEditor.setShowPrintMargin(false);\n\n  // Init and define our custom ace mode:\n  aceMode.defineForAce(config.dropletConfig, config.unusedConfig, this.editor);\n  // Now set the editor to that mode:\n  this.editor.aceEditor.session.setMode('ace/mode/javascript_codeorg');\n\n  // Add an ace completer for the API functions exposed for this level\n  if (config.dropletConfig) {\n    var functionsFilter = null;\n    if (config.level.autocompletePaletteApisOnly) {\n      functionsFilter = config.level.codeFunctions;\n    }\n    var langTools = window.ace.require(\"ace/ext/language_tools\");\n    langTools.addCompleter(dropletUtils.generateAceApiCompleter(functionsFilter, config.dropletConfig));\n  }\n\n  this.editor.aceEditor.setOptions({\n    enableBasicAutocompletion: true,\n    enableLiveAutocompletion: true\n  });\n\n  this.dropletTooltipManager = new DropletTooltipManager(this.appMsg, config.dropletConfig, config.level.codeFunctions, config.level.autocompletePaletteApisOnly);\n  if (config.level.dropletTooltipsDisabled) {\n    this.dropletTooltipManager.setTooltipsEnabled(false);\n  }\n  this.dropletTooltipManager.registerBlocks();\n\n  // Bind listener to palette/toolbox 'Hide' and 'Show' links\n  var hideToolboxHeader = document.getElementById('toolbox-header');\n  var hideToolboxIcon = document.getElementById('hide-toolbox-icon');\n  var showToolboxHeader = document.getElementById('show-toolbox-header');\n  if (hideToolboxHeader && hideToolboxIcon && showToolboxHeader) {\n    hideToolboxHeader.className += ' toggleable';\n    hideToolboxIcon.style.display = 'inline-block';\n    var handleTogglePalette = (function () {\n      if (this.editor) {\n        this.editor.enablePalette(!this.editor.paletteEnabled);\n        showToolboxHeader.style.display = this.editor.paletteEnabled ? 'none' : 'inline-block';\n        hideToolboxIcon.style.display = !this.editor.paletteEnabled ? 'none' : 'inline-block';\n        this.resizeToolboxHeader();\n      }\n    }).bind(this);\n    dom.addClickTouchEvent(hideToolboxHeader, handleTogglePalette);\n    dom.addClickTouchEvent(showToolboxHeader, handleTogglePalette);\n  }\n\n  this.resizeToolboxHeader();\n\n  var startBlocks = config.level.lastAttempt || config.level.startBlocks;\n  if (startBlocks) {\n\n    try {\n      // Don't pass CRLF pairs to droplet until they fix CR handling:\n      this.editor.setValue(startBlocks.replace(/\\r\\n/g, '\\n'));\n    } catch (err) {\n      // catch errors without blowing up entirely. we may still not be in a\n      // great state\n      console.error(err.message);\n    }\n    // Reset droplet Undo stack:\n    this.editor.clearUndoStack();\n    // Reset ace Undo stack:\n    var UndoManager = window.ace.require(\"ace/undomanager\").UndoManager;\n    this.editor.aceEditor.getSession().setUndoManager(new UndoManager());\n  }\n\n  if (config.readonlyWorkspace) {\n    // When in readOnly mode, show source, but do not allow editing,\n    // disable the palette, and hide the UI to show the palette:\n    this.editor.setReadOnly(true);\n    showToolboxHeader.style.display = 'none';\n  }\n\n  // droplet may now be in code mode if it couldn't parse the code into\n  // blocks, so update the UI based on the current state (don't autofocus\n  // if we have already created an instructionsDialog at this stage of init)\n  this.onDropletToggle_(!this.instructionsDialog);\n\n  this.dropletTooltipManager.registerDropletBlockModeHandlers(this.editor);\n\n  this.editor.on('palettetoggledone', function (e) {\n    // Reposition callouts after block/text toggle (in case they need to move)\n    $('.cdo-qtips').qtip('reposition', null, false);\n  });\n\n  if (this.instructionsDialog) {\n    // Initializing the droplet editor in text mode (ace) can steal the focus\n    // from our visible instructions dialog. Restore focus where it belongs:\n    this.instructionsDialog.focus();\n  }\n\n  if (config.afterEditorReady) {\n    config.afterEditorReady();\n  }\n\n  if (config.afterInject) {\n    config.afterInject();\n  }\n};\n\n/**\n * Set whether to alert user to empty blocks, short-circuiting all other tests.\n * @param {boolean} checkBlocks Whether to check for empty blocks.\n */\nStudioApp.prototype.setCheckForEmptyBlocks = function (checkBlocks) {\n  this.checkForEmptyBlocks_ = checkBlocks;\n};\n\n/**\n * Add the starting block(s).\n * @param loadLastAttempt If true, try to load config.lastAttempt.\n */\nStudioApp.prototype.setStartBlocks_ = function (config, loadLastAttempt) {\n  if (config.level.edit_blocks) {\n    loadLastAttempt = false;\n  }\n  var startBlocks = config.level.startBlocks || '';\n  if (loadLastAttempt) {\n    startBlocks = config.level.lastAttempt || startBlocks;\n  }\n  if (config.forceInsertTopBlock) {\n    startBlocks = blockUtils.forceInsertTopBlock(startBlocks, config.forceInsertTopBlock);\n  }\n  startBlocks = this.arrangeBlockPosition(startBlocks, config.blockArrangement);\n  try {\n    this.loadBlocks(startBlocks);\n  } catch (e) {\n    if (loadLastAttempt) {\n      Blockly.mainBlockSpace.clear();\n      // Try loading the default start blocks instead.\n      this.setStartBlocks_(config, false);\n    } else {\n      throw e;\n    }\n  }\n};\n\n/**\n * Show the configured starting function definition.\n */\nStudioApp.prototype.openFunctionDefinition_ = function (config) {\n  if (Blockly.contractEditor) {\n    Blockly.contractEditor.autoOpenWithLevelConfiguration({\n      autoOpenFunction: config.level.openFunctionDefinition,\n      contractCollapse: config.level.contractCollapse,\n      contractHighlight: config.level.contractHighlight,\n      examplesCollapse: config.level.examplesCollapse,\n      examplesHighlight: config.level.examplesHighlight,\n      definitionCollapse: config.level.definitionCollapse,\n      definitionHighlight: config.level.definitionHighlight\n    });\n  } else {\n    Blockly.functionEditor.autoOpenFunction(config.level.openFunctionDefinition);\n  }\n};\n\n/**\n *\n */\nStudioApp.prototype.handleUsingBlockly_ = function (config) {\n  // Allow empty blocks if editing blocks.\n  if (config.level.edit_blocks) {\n    this.checkForEmptyBlocks_ = false;\n    if (config.level.edit_blocks === 'required_blocks' || config.level.edit_blocks === 'toolbox_blocks' || config.level.edit_blocks === 'recommended_blocks') {\n      // Don't show when run block for toolbox/required/recommended block editing\n      config.forceInsertTopBlock = null;\n    }\n  }\n\n  // If levelbuilder provides an empty toolbox, some apps (like artist)\n  // replace it with a full toolbox. I think some levels may depend on this\n  // behavior. We want a way to specify no toolbox, which is <xml></xml>\n  if (config.level.toolbox) {\n    var toolboxWithoutWhitespace = config.level.toolbox.replace(/\\s/g, '');\n    if (toolboxWithoutWhitespace === '<xml></xml>' || toolboxWithoutWhitespace === '<xml/>') {\n      config.level.toolbox = undefined;\n    }\n  }\n\n  var div = document.getElementById('codeWorkspace');\n  var options = {\n    toolbox: config.level.toolbox,\n    disableParamEditing: utils.valueOr(config.level.disableParamEditing, true),\n    disableVariableEditing: utils.valueOr(config.level.disableVariableEditing, false),\n    useModalFunctionEditor: utils.valueOr(config.level.useModalFunctionEditor, false),\n    useContractEditor: utils.valueOr(config.level.useContractEditor, false),\n    disableExamples: utils.valueOr(config.level.disableExamples, false),\n    defaultNumExampleBlocks: utils.valueOr(config.level.defaultNumExampleBlocks, 2),\n    scrollbars: config.level.scrollbars,\n    hasVerticalScrollbars: config.hasVerticalScrollbars,\n    hasHorizontalScrollbars: config.hasHorizontalScrollbars,\n    editBlocks: utils.valueOr(config.level.edit_blocks, false),\n    readOnly: utils.valueOr(config.readonlyWorkspace, false),\n    showExampleTestButtons: utils.valueOr(config.showExampleTestButtons, false)\n  };\n  ['trashcan', 'varsInGlobals', 'grayOutUndeletableBlocks', 'disableParamEditing'].forEach(function (prop) {\n    if (config[prop] !== undefined) {\n      options[prop] = config[prop];\n    }\n  });\n  this.inject(div, options);\n  this.onResize();\n\n  if (config.afterInject) {\n    config.afterInject();\n  }\n  this.setStartBlocks_(config, true);\n};\n\n/**\n * Modify the workspace header after a droplet blocks/code or palette toggle\n */\nStudioApp.prototype.updateHeadersAfterDropletToggle_ = function (usingBlocks) {\n  // Update header titles:\n  var showCodeHeader = document.getElementById('show-code-header');\n  var contentSpan = showCodeHeader.firstChild;\n  var fontAwesomeGlyph = _.find(contentSpan.childNodes, function (node) {\n    return (/\\bfa\\b/.test(node.className)\n    );\n  });\n  var imgBlocksGlyph = _.find(contentSpan.childNodes, function (node) {\n    return (/\\bblocks-glyph\\b/.test(node.className)\n    );\n  });\n\n  // Change glyph\n  if (usingBlocks) {\n    if (fontAwesomeGlyph && imgBlocksGlyph) {\n      fontAwesomeGlyph.style.display = 'inline-block';\n      imgBlocksGlyph.style.display = 'none';\n    }\n    contentSpan.lastChild.textContent = msg.showTextHeader();\n  } else {\n    if (fontAwesomeGlyph && imgBlocksGlyph) {\n      fontAwesomeGlyph.style.display = 'none';\n      imgBlocksGlyph.style.display = 'inline-block';\n    }\n    contentSpan.lastChild.textContent = msg.showBlocksHeader();\n  }\n\n  var blockCount = document.getElementById('blockCounter');\n  if (blockCount) {\n    blockCount.style.display = usingBlocks && this.enableShowBlockCount ? 'inline-block' : 'none';\n  }\n};\n\n/**\n * Handle updates after a droplet toggle between blocks/code has taken place\n */\nStudioApp.prototype.onDropletToggle_ = function (autoFocus) {\n  autoFocus = utils.valueOr(autoFocus, true);\n  this.updateHeadersAfterDropletToggle_(this.editor.currentlyUsingBlocks);\n  if (!this.editor.currentlyUsingBlocks) {\n    if (autoFocus) {\n      this.editor.aceEditor.focus();\n    }\n    this.dropletTooltipManager.registerDropletTextModeHandlers(this.editor);\n  }\n};\n\n/**\n * Do we have any floating blocks not attached to an event block or function block?\n */\nStudioApp.prototype.hasExtraTopBlocks = function () {\n  return this.feedback_.hasExtraTopBlocks();\n};\n\n/**\n *\n */\nStudioApp.prototype.hasQuestionMarksInNumberField = function () {\n  return this.feedback_.hasQuestionMarksInNumberField();\n};\n\n/**\n * @returns true if any non-example block in the workspace has an unfilled input\n */\nStudioApp.prototype.hasUnfilledFunctionalBlock = function () {\n  return !!this.getUnfilledFunctionalBlock();\n};\n\n/**\n * @returns {Block} The first block that has an unfilled input, or undefined\n *   if there isn't one.\n */\nStudioApp.prototype.getUnfilledFunctionalBlock = function () {\n  return this.getFilteredUnfilledFunctionalBlock_(function (rootBlock) {\n    return rootBlock.type !== 'functional_example';\n  });\n};\n\n/**\n * @returns {Block} The first example block that has an unfilled input, or\n *   undefined if there isn't one. Ignores example blocks that don't have a\n *   call portion, as these are considered invalid.\n */\nStudioApp.prototype.getUnfilledFunctionalExample = function () {\n  return this.getFilteredUnfilledFunctionalBlock_(function (rootBlock) {\n    if (rootBlock.type !== 'functional_example') {\n      return false;\n    }\n    var actual = rootBlock.getInputTargetBlock('ACTUAL');\n    return actual && actual.getTitleValue('NAME');\n  });\n};\n\n/**\n * @param {function} filter Run against root block in chain. Returns true if\n *   this is a block we care about\n */\nStudioApp.prototype.getFilteredUnfilledFunctionalBlock_ = function (filter) {\n  var unfilledBlock;\n  Blockly.mainBlockSpace.getAllBlocks().some(function (block) {\n    // Get the root block in the chain\n    var rootBlock = block.getRootBlock();\n    if (!filter(rootBlock)) {\n      return false;\n    }\n\n    if (block.hasUnfilledFunctionalInput()) {\n      unfilledBlock = block;\n      return true;\n    }\n  });\n\n  return unfilledBlock;\n};\n\n/**\n * @returns {string} The name of a function that doesn't have any examples, or\n *   undefined if all have at least one.\n */\nStudioApp.prototype.getFunctionWithoutTwoExamples = function () {\n  var definitionNames = Blockly.mainBlockSpace.getTopBlocks().filter(function (block) {\n    return block.type === 'functional_definition' && !block.isVariable();\n  }).map(function (definitionBlock) {\n    return definitionBlock.getProcedureInfo().name;\n  });\n\n  var exampleNames = Blockly.mainBlockSpace.getTopBlocks().filter(function (block) {\n    if (block.type !== 'functional_example') {\n      return false;\n    }\n\n    // Only care about functional_examples that have an ACTUAL input (i.e. it's\n    // clear which function they're for\n    var actual = block.getInputTargetBlock('ACTUAL');\n    return actual && actual.getTitleValue('NAME');\n  }).map(function (exampleBlock) {\n    return exampleBlock.getInputTargetBlock('ACTUAL').getTitleValue('NAME');\n  });\n\n  var definitionWithLessThanTwoExamples;\n  definitionNames.forEach(function (def) {\n    var definitionExamples = exampleNames.filter(function (example) {\n      return def === example;\n    });\n\n    if (definitionExamples.length < 2) {\n      definitionWithLessThanTwoExamples = def;\n    }\n  });\n  return definitionWithLessThanTwoExamples;\n};\n\n/**\n * Get the error message when we have an unfilled block\n * @param {string} topLevelType The block.type For our expected top level block\n */\nStudioApp.prototype.getUnfilledFunctionalBlockError = function (topLevelType) {\n  var unfilled = this.getUnfilledFunctionalBlock();\n\n  if (!unfilled) {\n    return null;\n  }\n\n  var topParent = unfilled;\n  while (topParent.getParent()) {\n    topParent = topParent.getParent();\n  }\n\n  if (unfilled.type === topLevelType) {\n    return msg.emptyTopLevelBlock({ topLevelBlockName: unfilled.getTitleValue() });\n  }\n\n  if (topParent.type !== 'functional_definition') {\n    return msg.emptyFunctionalBlock();\n  }\n\n  var procedureInfo = topParent.getProcedureInfo();\n  if (topParent.isVariable()) {\n    return msg.emptyBlockInVariable({ name: procedureInfo.name });\n  } else {\n    return msg.emptyBlockInFunction({ name: procedureInfo.name });\n  }\n};\n\n/**\n * Looks for failing examples, and updates the result text for them if they're\n * open in the contract editor\n * @param {function} failureChecker Apps example tester that takes in an example\n *   block, and outputs a failure string (or null if success)\n * @returns {string} Name of block containing first failing example we found, or\n *   empty string if no failures.\n */\nStudioApp.prototype.checkForFailingExamples = function (failureChecker) {\n  var failingBlockName = '';\n  Blockly.mainBlockSpace.findFunctionExamples().forEach(function (exampleBlock) {\n    var failure = failureChecker(exampleBlock, false);\n\n    // Update the example result. No-op if we're not currently editing this\n    // function.\n    Blockly.contractEditor.updateExampleResult(exampleBlock, failure);\n\n    if (failure) {\n      failingBlockName = exampleBlock.getInputTargetBlock('ACTUAL').getTitleValue('NAME');\n    }\n  });\n  return failingBlockName;\n};\n\n/**\n * @returns {boolean} True if we have a function or variable named \"\" (empty string)\n */\nStudioApp.prototype.hasEmptyFunctionOrVariableName = function () {\n  return Blockly.mainBlockSpace.getTopBlocks().some(function (block) {\n    if (block.type !== 'functional_definition') {\n      return false;\n    }\n\n    return !block.getProcedureInfo().name;\n  });\n};\n\nStudioApp.prototype.createCoordinateGridBackground = function (options) {\n  var svgName = options.svg;\n  var origin = options.origin;\n  var firstLabel = options.firstLabel;\n  var lastLabel = options.lastLabel;\n  var increment = options.increment;\n\n  var CANVAS_HEIGHT = 400;\n  var CANVAS_WIDTH = 400;\n\n  var svg = document.getElementById(svgName);\n\n  var bbox, text, rect;\n  for (var label = firstLabel; label <= lastLabel; label += increment) {\n    // create x axis labels\n    text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    text.appendChild(document.createTextNode(label));\n    svg.appendChild(text);\n    bbox = text.getBBox();\n    text.setAttribute('x', label - origin - bbox.width / 2);\n    text.setAttribute('y', CANVAS_HEIGHT);\n    text.setAttribute('font-weight', 'bold');\n    rect = rectFromElementBoundingBox(text);\n    rect.setAttribute('fill', 'white');\n    svg.insertBefore(rect, text);\n\n    // create y axis labels\n    text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    text.appendChild(document.createTextNode(label));\n    svg.appendChild(text);\n    bbox = text.getBBox();\n    text.setAttribute('x', 0);\n    text.setAttribute('y', CANVAS_HEIGHT - (label - origin));\n    text.setAttribute('dominant-baseline', 'central');\n    text.setAttribute('font-weight', 'bold');\n    rect = rectFromElementBoundingBox(text);\n    rect.setAttribute('fill', 'white');\n    svg.insertBefore(rect, text);\n  }\n};\n\nfunction rectFromElementBoundingBox(element) {\n  var bbox = element.getBBox();\n  var rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  rect.setAttribute('x', bbox.x);\n  rect.setAttribute('y', bbox.y);\n  rect.setAttribute('width', bbox.width);\n  rect.setAttribute('height', bbox.height);\n  return rect;\n}\n\n/**\n * Displays a small alert box inside DOM element at parentSelector.\n * @param {string} parentSelector\n * @param {object} props A set of React properties passed to the AbuseError\n *   component\n */\nStudioApp.prototype.displayAlert = function (parentSelector, props) {\n  // Each parent is assumed to have at most a single alert. This assumption\n  // could be changed, but we would then want to clean up our DOM element on\n  // close\n  var parent = $(parentSelector);\n  var container = parent.children('.react-alert');\n  if (container.length === 0) {\n    container = $(\"<div class='react-alert'/>\");\n    parent.append(container);\n  }\n\n  var reactProps = $.extend({}, {\n    className: 'alert-error',\n    onClose: function onClose() {\n      React.unmountComponentAtNode(container[0]);\n    }\n  }, props);\n\n  var element = React.createElement(Alert, reactProps);\n  React.render(element, container[0]);\n};\n\n/**\n * If the current project is considered abusive, display a small alert box\n * @param {string} parentSelector The selector for the DOM element parent we\n *   should display the error in.\n */\nStudioApp.prototype.alertIfAbusiveProject = function (parentSelector) {\n  if (window.dashboard && dashboard.project.exceedsAbuseThreshold()) {\n    this.displayAlert(parentSelector, {\n      body: React.createElement(dashboard.AbuseError, {\n        i18n: {\n          tos: window.dashboard.i18n.t('project.abuse.tos'),\n          contact_us: window.dashboard.i18n.t('project.abuse.contact_us')\n        }\n      }),\n      style: {\n        top: 45,\n        left: 350,\n        right: 50\n      }\n    });\n  }\n};\n\n/**\n * Searches for cases where we have two (or more) nested for loops in which\n * both loops use the same variable. This can cause infinite loops.\n * @returns {boolean} True if we detect an instance of this.\n */\nStudioApp.prototype.hasDuplicateVariablesInForLoops = function () {\n  return Blockly.mainBlockSpace.getAllBlocks().some(this.forLoopHasDuplicatedNestedVariables_);\n};\n\n/**\n * Looks to see if a particular block is (a) a for loop and (b) has a descendant\n * for loop using the same variable.\n * @returns {boolean} True if that is true of this block\n */\nStudioApp.prototype.forLoopHasDuplicatedNestedVariables_ = function (block) {\n  if (!block || block.type !== 'controls_for' && block.type !== 'controls_for_counter') {\n    return;\n  }\n\n  var innerBlock = block.getInput('DO').connection.targetBlock();\n\n  // Not the most efficient of algo's, but we shouldn't have enough blocks for\n  // it to matter.\n  return block.getVars().some(function (varName) {\n    return innerBlock.getDescendants().some(function (descendant) {\n      if (descendant.type !== 'controls_for' && descendant.type !== 'controls_for_counter') {\n        return false;\n      }\n      return descendant.getVars().indexOf(varName) !== -1;\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./xml":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","./dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","./locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","./block_utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js","./codegen":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js","url":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/url/url.js","./constants.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js","./ResizeSensor":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/ResizeSensor.js","./dropletUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","./templates/alert.jsx":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/alert.jsx","./templates/VersionHistory.jsx":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionHistory.jsx","./templates/makeYourOwn.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/makeYourOwn.html.ejs","./templates/learn.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/learn.html.ejs","./templates/instructions.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/instructions.html.ejs","./templates/buttons.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs","./templates/builder.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/builder.html.ejs","./acemode/mode-javascript_codeorg":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/mode-javascript_codeorg.js","./feedback":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedback.js","./blockTooltips/DropletTooltipManager":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletTooltipManager.js","react":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/react.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js","sourceRoot":"file://localhost","sourceFile":"build/js/StudioApp.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/annotationList.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/annotationList.js","source":"'use strict';\n\nvar errorMapper = require('./errorMapper');\n\nvar lintAnnotations = [];\nvar runtimeAnnotations = [];\nvar aceSession;\nvar dropletEditor;\n\n/**\n * Update gutter with our annotation list\n * @private\n */\nfunction updateGutter() {\n  if (!aceSession) {\n    return;\n  }\n\n  if (dropletEditor) {\n    // Droplet will call aceSession.setAnnotations() under the hood\n    // for us\n    dropletEditor.setAnnotations(lintAnnotations.concat(runtimeAnnotations));\n  } else {\n    aceSession.setAnnotations(lintAnnotations.concat(runtimeAnnotations));\n  }\n}\n\n/**\n * Object for tracking annotations placed in gutter. General design is as\n * follows:\n * When jslint runs (i.e. code changes) display just jslint errors\n * When code runs, display jslint errors and runtime errors. Runtime errors will\n * go away the next time jstlint gets run (when code changes)\n */\nmodule.exports = {\n  detachFromSession: function detachFromSession() {\n    aceSession = null;\n    dropletEditor = null;\n  },\n\n  attachToSession: function attachToSession(session, editor) {\n    if (aceSession && session !== aceSession) {\n      throw new Error('Already attached to ace session');\n    }\n    aceSession = session;\n    dropletEditor = editor;\n  },\n\n  setJSLintAnnotations: function setJSLintAnnotations(jslintResults) {\n    errorMapper.processResults(jslintResults);\n    // clone annotations in case anyone else has a reference to data\n    lintAnnotations = jslintResults.data.slice();\n    updateGutter();\n  },\n\n  /**\n   * @param {string} level\n   * @param {number} lineNumber One index line number\n   * @param {string} text Error string\n   */\n  addRuntimeAnnotation: function addRuntimeAnnotation(level, lineNumber, text) {\n    var annotation = {\n      row: lineNumber - 1,\n      col: 0,\n      raw: text,\n      text: text,\n      type: level.toLowerCase()\n    };\n    runtimeAnnotations.push(annotation);\n    updateGutter();\n  },\n\n  clearRuntimeAnnotations: function clearRuntimeAnnotations() {\n    runtimeAnnotations = [];\n    updateGutter();\n  }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2FjZW1vZGUvYW5ub3RhdGlvbkxpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLFdBQVcsR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7O0FBRTNDLElBQUksZUFBZSxHQUFHLEVBQUUsQ0FBQztBQUN6QixJQUFJLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztBQUM1QixJQUFJLFVBQVUsQ0FBQztBQUNmLElBQUksYUFBYSxDQUFDOzs7Ozs7QUFNbEIsU0FBUyxZQUFZLEdBQUc7QUFDdEIsTUFBSSxDQUFDLFVBQVUsRUFBRTtBQUNmLFdBQU87R0FDUjs7QUFFRCxNQUFJLGFBQWEsRUFBRTs7O0FBR2pCLGlCQUFhLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0dBQzFFLE1BQ0k7QUFDSCxjQUFVLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0dBQ3ZFO0NBQ0Y7Ozs7Ozs7OztBQVNELE1BQU0sQ0FBQyxPQUFPLEdBQUc7QUFDZixtQkFBaUIsRUFBRSw2QkFBWTtBQUM3QixjQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ2xCLGlCQUFhLEdBQUcsSUFBSSxDQUFDO0dBQ3RCOztBQUVELGlCQUFlLEVBQUUseUJBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUMxQyxRQUFJLFVBQVUsSUFBSSxPQUFPLEtBQUssVUFBVSxFQUFFO0FBQ3hDLFlBQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztLQUNwRDtBQUNELGNBQVUsR0FBRyxPQUFPLENBQUM7QUFDckIsaUJBQWEsR0FBRyxNQUFNLENBQUM7R0FDeEI7O0FBRUQsc0JBQW9CLEVBQUUsOEJBQVUsYUFBYSxFQUFFO0FBQzdDLGVBQVcsQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7O0FBRTFDLG1CQUFlLEdBQUcsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUM3QyxnQkFBWSxFQUFFLENBQUM7R0FDaEI7Ozs7Ozs7QUFPRCxzQkFBb0IsRUFBRSw4QkFBVSxLQUFLLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRTtBQUN2RCxRQUFJLFVBQVUsR0FBRztBQUNmLFNBQUcsRUFBRSxVQUFVLEdBQUcsQ0FBQztBQUNuQixTQUFHLEVBQUUsQ0FBQztBQUNOLFNBQUcsRUFBRSxJQUFJO0FBQ1QsVUFBSSxFQUFFLElBQUk7QUFDVixVQUFJLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRTtLQUMxQixDQUFDO0FBQ0Ysc0JBQWtCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLGdCQUFZLEVBQUUsQ0FBQztHQUNoQjs7QUFFRCx5QkFBdUIsRUFBRSxtQ0FBWTtBQUNuQyxzQkFBa0IsR0FBRyxFQUFFLENBQUM7QUFDeEIsZ0JBQVksRUFBRSxDQUFDO0dBQ2hCO0NBQ0YsQ0FBQyIsImZpbGUiOiJidWlsZC9qcy9hY2Vtb2RlL2Fubm90YXRpb25MaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGVycm9yTWFwcGVyID0gcmVxdWlyZSgnLi9lcnJvck1hcHBlcicpO1xuXG52YXIgbGludEFubm90YXRpb25zID0gW107XG52YXIgcnVudGltZUFubm90YXRpb25zID0gW107XG52YXIgYWNlU2Vzc2lvbjtcbnZhciBkcm9wbGV0RWRpdG9yO1xuXG4vKipcbiAqIFVwZGF0ZSBndXR0ZXIgd2l0aCBvdXIgYW5ub3RhdGlvbiBsaXN0XG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiB1cGRhdGVHdXR0ZXIoKSB7XG4gIGlmICghYWNlU2Vzc2lvbikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChkcm9wbGV0RWRpdG9yKSB7XG4gICAgLy8gRHJvcGxldCB3aWxsIGNhbGwgYWNlU2Vzc2lvbi5zZXRBbm5vdGF0aW9ucygpIHVuZGVyIHRoZSBob29kXG4gICAgLy8gZm9yIHVzXG4gICAgZHJvcGxldEVkaXRvci5zZXRBbm5vdGF0aW9ucyhsaW50QW5ub3RhdGlvbnMuY29uY2F0KHJ1bnRpbWVBbm5vdGF0aW9ucykpO1xuICB9XG4gIGVsc2Uge1xuICAgIGFjZVNlc3Npb24uc2V0QW5ub3RhdGlvbnMobGludEFubm90YXRpb25zLmNvbmNhdChydW50aW1lQW5ub3RhdGlvbnMpKTtcbiAgfVxufVxuXG4vKipcbiAqIE9iamVjdCBmb3IgdHJhY2tpbmcgYW5ub3RhdGlvbnMgcGxhY2VkIGluIGd1dHRlci4gR2VuZXJhbCBkZXNpZ24gaXMgYXNcbiAqIGZvbGxvd3M6XG4gKiBXaGVuIGpzbGludCBydW5zIChpLmUuIGNvZGUgY2hhbmdlcykgZGlzcGxheSBqdXN0IGpzbGludCBlcnJvcnNcbiAqIFdoZW4gY29kZSBydW5zLCBkaXNwbGF5IGpzbGludCBlcnJvcnMgYW5kIHJ1bnRpbWUgZXJyb3JzLiBSdW50aW1lIGVycm9ycyB3aWxsXG4gKiBnbyBhd2F5IHRoZSBuZXh0IHRpbWUganN0bGludCBnZXRzIHJ1biAod2hlbiBjb2RlIGNoYW5nZXMpXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBkZXRhY2hGcm9tU2Vzc2lvbjogZnVuY3Rpb24gKCkge1xuICAgIGFjZVNlc3Npb24gPSBudWxsO1xuICAgIGRyb3BsZXRFZGl0b3IgPSBudWxsO1xuICB9LFxuXG4gIGF0dGFjaFRvU2Vzc2lvbjogZnVuY3Rpb24gKHNlc3Npb24sIGVkaXRvcikge1xuICAgIGlmIChhY2VTZXNzaW9uICYmIHNlc3Npb24gIT09IGFjZVNlc3Npb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWxyZWFkeSBhdHRhY2hlZCB0byBhY2Ugc2Vzc2lvbicpO1xuICAgIH1cbiAgICBhY2VTZXNzaW9uID0gc2Vzc2lvbjtcbiAgICBkcm9wbGV0RWRpdG9yID0gZWRpdG9yO1xuICB9LFxuXG4gIHNldEpTTGludEFubm90YXRpb25zOiBmdW5jdGlvbiAoanNsaW50UmVzdWx0cykge1xuICAgIGVycm9yTWFwcGVyLnByb2Nlc3NSZXN1bHRzKGpzbGludFJlc3VsdHMpO1xuICAgIC8vIGNsb25lIGFubm90YXRpb25zIGluIGNhc2UgYW55b25lIGVsc2UgaGFzIGEgcmVmZXJlbmNlIHRvIGRhdGFcbiAgICBsaW50QW5ub3RhdGlvbnMgPSBqc2xpbnRSZXN1bHRzLmRhdGEuc2xpY2UoKTtcbiAgICB1cGRhdGVHdXR0ZXIoKTtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBsaW5lTnVtYmVyIE9uZSBpbmRleCBsaW5lIG51bWJlclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBFcnJvciBzdHJpbmdcbiAgICovXG4gIGFkZFJ1bnRpbWVBbm5vdGF0aW9uOiBmdW5jdGlvbiAobGV2ZWwsIGxpbmVOdW1iZXIsIHRleHQpIHtcbiAgICB2YXIgYW5ub3RhdGlvbiA9IHtcbiAgICAgIHJvdzogbGluZU51bWJlciAtIDEsXG4gICAgICBjb2w6IDAsXG4gICAgICByYXc6IHRleHQsXG4gICAgICB0ZXh0OiB0ZXh0LFxuICAgICAgdHlwZTogbGV2ZWwudG9Mb3dlckNhc2UoKVxuICAgIH07XG4gICAgcnVudGltZUFubm90YXRpb25zLnB1c2goYW5ub3RhdGlvbik7XG4gICAgdXBkYXRlR3V0dGVyKCk7XG4gIH0sXG5cbiAgY2xlYXJSdW50aW1lQW5ub3RhdGlvbnM6IGZ1bmN0aW9uICgpIHtcbiAgICBydW50aW1lQW5ub3RhdGlvbnMgPSBbXTtcbiAgICB1cGRhdGVHdXR0ZXIoKTtcbiAgfSxcbn07XG4iXX0=","deps":{"./errorMapper":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/errorMapper.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/annotationList.js","sourceRoot":"file://localhost","sourceFile":"build/js/acemode/annotationList.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/errorMapper.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/errorMapper.js","source":"\"use strict\";\n\nvar errorMap = [{\n  original: /Assignment in conditional expression/,\n  replacement: \"For conditionals, use the comparison operator (===) to check if two things are equal.\"\n}, {\n  original: /(.*)\\sis defined but never used./,\n  replacement: \"$1 is defined, but it's not called in your program.\"\n}, {\n  original: /(.*)\\sis not defined./,\n  replacement: \"$1 hasn't been declared yet.\"\n}];\n\n/**\n * Takes the results of a JSLint pass, and modifies the error text according to\n * our mapping. Note this makes changes in place to the passed in results\n * object.\n */\nmodule.exports.processResults = function (results) {\n  results.data.forEach(function (item) {\n    if (item.type === 'info') {\n      item.type = 'warning';\n    }\n\n    errorMap.forEach(function (errorMapping) {\n      if (!errorMapping.original.test(item.text)) {\n        return;\n      }\n\n      item.text = item.text.replace(errorMapping.original, errorMapping.replacement);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2FjZW1vZGUvZXJyb3JNYXBwZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLFFBQVEsR0FBRyxDQUNiO0FBQ0UsVUFBUSxFQUFFLHNDQUFzQztBQUNoRCxhQUFXLEVBQUUsdUZBQXVGO0NBQ3JHLEVBQ0Q7QUFDRSxVQUFRLEVBQUUsa0NBQWtDO0FBQzVDLGFBQVcsRUFBRSxxREFBcUQ7Q0FDbkUsRUFDRDtBQUNFLFVBQVEsRUFBRSx1QkFBdUI7QUFDakMsYUFBVyxFQUFFLDhCQUE4QjtDQUM1QyxDQUNGLENBQUM7Ozs7Ozs7QUFPRixNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxVQUFVLE9BQU8sRUFBRTtBQUNqRCxTQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUksRUFBRTtBQUNuQyxRQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxFQUFFO0FBQ3hCLFVBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO0tBQ3ZCOztBQUVELFlBQVEsQ0FBQyxPQUFPLENBQUMsVUFBVSxZQUFZLEVBQUU7QUFDdkMsVUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUMxQyxlQUFPO09BQ1I7O0FBRUQsVUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUNoRixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6ImJ1aWxkL2pzL2FjZW1vZGUvZXJyb3JNYXBwZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXJyb3JNYXAgPSBbXG4gIHtcbiAgICBvcmlnaW5hbDogL0Fzc2lnbm1lbnQgaW4gY29uZGl0aW9uYWwgZXhwcmVzc2lvbi8sXG4gICAgcmVwbGFjZW1lbnQ6IFwiRm9yIGNvbmRpdGlvbmFscywgdXNlIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yICg9PT0pIHRvIGNoZWNrIGlmIHR3byB0aGluZ3MgYXJlIGVxdWFsLlwiXG4gIH0sXG4gIHtcbiAgICBvcmlnaW5hbDogLyguKilcXHNpcyBkZWZpbmVkIGJ1dCBuZXZlciB1c2VkLi8sXG4gICAgcmVwbGFjZW1lbnQ6IFwiJDEgaXMgZGVmaW5lZCwgYnV0IGl0J3Mgbm90IGNhbGxlZCBpbiB5b3VyIHByb2dyYW0uXCJcbiAgfSxcbiAge1xuICAgIG9yaWdpbmFsOiAvKC4qKVxcc2lzIG5vdCBkZWZpbmVkLi8sXG4gICAgcmVwbGFjZW1lbnQ6IFwiJDEgaGFzbid0IGJlZW4gZGVjbGFyZWQgeWV0LlwiXG4gIH1cbl07XG5cbi8qKlxuICogVGFrZXMgdGhlIHJlc3VsdHMgb2YgYSBKU0xpbnQgcGFzcywgYW5kIG1vZGlmaWVzIHRoZSBlcnJvciB0ZXh0IGFjY29yZGluZyB0b1xuICogb3VyIG1hcHBpbmcuIE5vdGUgdGhpcyBtYWtlcyBjaGFuZ2VzIGluIHBsYWNlIHRvIHRoZSBwYXNzZWQgaW4gcmVzdWx0c1xuICogb2JqZWN0LlxuICovXG5tb2R1bGUuZXhwb3J0cy5wcm9jZXNzUmVzdWx0cyA9IGZ1bmN0aW9uIChyZXN1bHRzKSB7XG4gIHJlc3VsdHMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgaWYgKGl0ZW0udHlwZSA9PT0gJ2luZm8nKSB7XG4gICAgICBpdGVtLnR5cGUgPSAnd2FybmluZyc7XG4gICAgfVxuXG4gICAgZXJyb3JNYXAuZm9yRWFjaChmdW5jdGlvbiAoZXJyb3JNYXBwaW5nKSB7XG4gICAgICBpZiAoIWVycm9yTWFwcGluZy5vcmlnaW5hbC50ZXN0KGl0ZW0udGV4dCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpdGVtLnRleHQgPSBpdGVtLnRleHQucmVwbGFjZShlcnJvck1hcHBpbmcub3JpZ2luYWwsIGVycm9yTWFwcGluZy5yZXBsYWNlbWVudCk7XG4gICAgfSk7XG4gIH0pO1xufTtcbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/errorMapper.js","sourceRoot":"file://localhost","sourceFile":"build/js/acemode/errorMapper.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/mode-javascript_codeorg.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/mode-javascript_codeorg.js","source":"/* global ace */\n'use strict';\n\nvar dropletUtils = require('../dropletUtils');\nvar annotationList = require('./annotationList');\n\nexports.defineForAce = function (dropletConfig, unusedConfig, dropletEditor) {\n  // define ourselves for ace, so that it knows where to get us\n  ace.define(\"ace/mode/javascript_codeorg\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/javascript\", \"ace/mode/javascript_highlight_rules\", \"ace/worker/worker_client\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\", \"ace/config\", \"ace/lib/net\", \"ace/ext/searchbox\"], function (acerequire, exports, module) {\n\n    var oop = acerequire(\"ace/lib/oop\");\n    var JavaScriptMode = acerequire(\"ace/mode/javascript\").Mode;\n    var JavaScriptHighlightRules = acerequire(\"ace/mode/javascript_highlight_rules\").JavaScriptHighlightRules;\n    var WorkerModule = acerequire(\"ace/worker/worker_client\");\n    var WorkerClient = WorkerModule.WorkerClient;\n    if (!window.Worker) {\n      // If we don't support web workers, do everything on the UI thread\n      WorkerClient = WorkerModule.UIWorkerClient;\n      window.Worker = WorkerClient;\n    }\n\n    var MatchingBraceOutdent = acerequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n    var CstyleBehaviour = acerequire(\"./behaviour/cstyle\").CstyleBehaviour;\n    var CStyleFoldMode = acerequire(\"./folding/cstyle\").FoldMode;\n\n    var Mode = function Mode() {\n      this.HighlightRules = JavaScriptHighlightRules;\n      this.$outdent = new MatchingBraceOutdent();\n      this.$behaviour = new CstyleBehaviour();\n      this.foldingRules = new CStyleFoldMode();\n    };\n    oop.inherits(Mode, JavaScriptMode);\n\n    (function () {\n\n      // A set of keywords we don't want to autocomplete\n      var excludedKeywords = ['arguments', 'ArrayBuffer', 'Collator', 'decodeURI', 'decodeURIComponent', 'document', 'encodeURI', 'encodeURIComponent', 'eval', 'EvalError', 'Float32Array', 'Float64Array', 'Intl', 'Int16Array', 'Int32Array', 'Int8Array', 'Iterator', 'isInfinite', 'isNaN', 'JSON', 'Math', 'NumberFormat', 'Object', 'parseFloat', 'parseInt', 'prototype', 'QName', 'RangeError', 'ReferenceError', 'StopIteration', 'SyntaxError', 'this', 'TypeError', 'Uint16Array', 'Uint32Array', 'Uint8Array', 'Uint8ClampedArra', 'URIError', 'window'];\n\n      // Manually create our highlight rules so that we can modify it\n      this.$highlightRules = new JavaScriptHighlightRules();\n\n      if (dropletConfig.dontHighlightKeywords) {\n        this.$highlightRules.$keywordList = [];\n      } else {\n        excludedKeywords.forEach(function (keywordToRemove) {\n          var keywordIndex = this.$highlightRules.$keywordList.indexOf(keywordToRemove);\n          if (keywordIndex >= 0) {\n            this.$highlightRules.$keywordList.splice(keywordIndex, 1);\n          }\n        }, this);\n      }\n\n      this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n        worker.attachToDocument(session.getDocument());\n        var newOptions = {\n          unused: true,\n          undef: true,\n          maxerr: 1000,\n          predef: {},\n          exported: {}\n        };\n        // Mark all of our blocks as predefined so that linter doesnt complain about\n        // using undefined variables\n        dropletUtils.getAllAvailableDropletBlocks(dropletConfig).forEach(function (block) {\n          newOptions.predef[block.func] = false;\n        });\n\n        // Do the same with unusedConfig if available\n        if (unusedConfig) {\n          unusedConfig.forEach(function (unusedVar) {\n            newOptions.exported[unusedVar] = false;\n          });\n        }\n\n        annotationList.attachToSession(session, dropletEditor);\n\n        worker.send(\"changeOptions\", [newOptions]);\n\n        worker.on(\"jslint\", annotationList.setJSLintAnnotations);\n\n        worker.on(\"terminate\", function () {\n          session.clearAnnotations();\n        });\n\n        return worker;\n      };\n\n      this.cleanup = function () {\n        annotationList.detachFromSession();\n      };\n    }).call(Mode.prototype);\n\n    exports.Mode = Mode;\n  });\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../dropletUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","./annotationList":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/annotationList.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/mode-javascript_codeorg.js","sourceRoot":"file://localhost","sourceFile":"build/js/acemode/mode-javascript_codeorg.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/appMain.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/appMain.js","source":"'use strict';\n\nvar utils = require('./utils');\nvar _ = utils.getLodash();\nvar requiredBlockUtils = require('./required_block_utils');\nvar studioApp = require('./StudioApp').singleton;\n\n// TODO (br-pair) : This is to expose methods we need in the global namespace\n// for testing purpose. Would be nice to eliminate this eventually.\nwindow.__TestInterface = {\n  loadBlocks: _.bind(studioApp.loadBlocks, studioApp),\n  arrangeBlockPosition: _.bind(studioApp.arrangeBlockPosition, studioApp),\n  getDropletContents: function getDropletContents() {\n    return _.bind(studioApp.editor.getValue, studioApp.editor)();\n  },\n  getDroplet: function getDroplet() {\n    return studioApp.editor;\n  },\n  // Set to true to ignore onBeforeUnload events\n  ignoreOnBeforeUnload: false\n};\n\nvar addReadyListener = require('./dom').addReadyListener;\nvar blocksCommon = require('./blocksCommon');\n\nmodule.exports = function (app, levels, options) {\n\n  // If a levelId is not provided, then options.level is specified in full.\n  // Otherwise, options.level overrides resolved level on a per-property basis.\n  if (options.levelId) {\n    var level = levels[options.levelId];\n    options.level = options.level || {};\n    options.level.id = options.levelId;\n    for (var prop in options.level) {\n      level[prop] = options.level[prop];\n    }\n\n    if (options.level.levelBuilderRequiredBlocks) {\n      level.requiredBlocks = requiredBlockUtils.makeTestsFromBuilderRequiredBlocks(options.level.levelBuilderRequiredBlocks);\n    }\n    if (options.level.levelBuilderRecommendedBlocks) {\n      level.recommendedBlocks = requiredBlockUtils.makeTestsFromBuilderRequiredBlocks(options.level.levelBuilderRecommendedBlocks);\n    }\n\n    options.level = level;\n  }\n\n  studioApp.configure(options);\n\n  options.skin = options.skinsModule.load(studioApp.assetUrl, options.skinId);\n\n  if (studioApp.isUsingBlockly()) {\n    var blockInstallOptions = {\n      skin: options.skin,\n      isK1: options.level && options.level.isK1,\n      level: options.level\n    };\n\n    if (options.level && options.level.edit_blocks) {\n      utils.wrapNumberValidatorsForLevelBuilder();\n    }\n\n    blocksCommon.install(Blockly, blockInstallOptions);\n    options.blocksModule.install(Blockly, blockInstallOptions);\n  }\n\n  addReadyListener(function () {\n    if (options.readonly) {\n      if (app.initReadonly) {\n        app.initReadonly(options);\n      } else {\n        studioApp.initReadonly(options);\n      }\n    } else {\n      app.init(options);\n      if (options.onInitialize) {\n        options.onInitialize();\n      }\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,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SSxPQUFPLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFO0FBQzlDLFdBQUssQ0FBQyxtQ0FBbUMsRUFBRSxDQUFDO0tBQzdDOztBQUVELGdCQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBQ25ELFdBQU8sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0dBQzVEOztBQUVELGtCQUFnQixDQUFDLFlBQVc7QUFDMUIsUUFBSSxPQUFPLENBQUMsUUFBUSxFQUFFO0FBQ3BCLFVBQUksR0FBRyxDQUFDLFlBQVksRUFBRTtBQUNwQixXQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO09BQzNCLE1BQU07QUFDTCxpQkFBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztPQUNqQztLQUNGLE1BQU07QUFDTCxTQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xCLFVBQUksT0FBTyxDQUFDLFlBQVksRUFBRTtBQUN4QixlQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7T0FDeEI7S0FDRjtHQUNGLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiYnVpbGQvanMvYXBwTWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBfID0gdXRpbHMuZ2V0TG9kYXNoKCk7XG52YXIgcmVxdWlyZWRCbG9ja1V0aWxzID0gcmVxdWlyZSgnLi9yZXF1aXJlZF9ibG9ja191dGlscycpO1xudmFyIHN0dWRpb0FwcCA9IHJlcXVpcmUoJy4vU3R1ZGlvQXBwJykuc2luZ2xldG9uO1xuXG4vLyBUT0RPIChici1wYWlyKSA6IFRoaXMgaXMgdG8gZXhwb3NlIG1ldGhvZHMgd2UgbmVlZCBpbiB0aGUgZ2xvYmFsIG5hbWVzcGFjZVxuLy8gZm9yIHRlc3RpbmcgcHVycG9zZS4gV291bGQgYmUgbmljZSB0byBlbGltaW5hdGUgdGhpcyBldmVudHVhbGx5Llxud2luZG93Ll9fVGVzdEludGVyZmFjZSA9IHtcbiAgbG9hZEJsb2NrczogXy5iaW5kKHN0dWRpb0FwcC5sb2FkQmxvY2tzLCBzdHVkaW9BcHApLFxuICBhcnJhbmdlQmxvY2tQb3NpdGlvbjogXy5iaW5kKHN0dWRpb0FwcC5hcnJhbmdlQmxvY2tQb3NpdGlvbiwgc3R1ZGlvQXBwKSxcbiAgZ2V0RHJvcGxldENvbnRlbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF8uYmluZChzdHVkaW9BcHAuZWRpdG9yLmdldFZhbHVlLCBzdHVkaW9BcHAuZWRpdG9yKSgpO1xuICB9LFxuICBnZXREcm9wbGV0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHN0dWRpb0FwcC5lZGl0b3I7XG4gIH0sXG4gIC8vIFNldCB0byB0cnVlIHRvIGlnbm9yZSBvbkJlZm9yZVVubG9hZCBldmVudHNcbiAgaWdub3JlT25CZWZvcmVVbmxvYWQ6IGZhbHNlXG59O1xuXG52YXIgYWRkUmVhZHlMaXN0ZW5lciA9IHJlcXVpcmUoJy4vZG9tJykuYWRkUmVhZHlMaXN0ZW5lcjtcbnZhciBibG9ja3NDb21tb24gPSByZXF1aXJlKCcuL2Jsb2Nrc0NvbW1vbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGFwcCwgbGV2ZWxzLCBvcHRpb25zKSB7XG5cbiAgLy8gSWYgYSBsZXZlbElkIGlzIG5vdCBwcm92aWRlZCwgdGhlbiBvcHRpb25zLmxldmVsIGlzIHNwZWNpZmllZCBpbiBmdWxsLlxuICAvLyBPdGhlcndpc2UsIG9wdGlvbnMubGV2ZWwgb3ZlcnJpZGVzIHJlc29sdmVkIGxldmVsIG9uIGEgcGVyLXByb3BlcnR5IGJhc2lzLlxuICBpZiAob3B0aW9ucy5sZXZlbElkKSB7XG4gICAgdmFyIGxldmVsID0gbGV2ZWxzW29wdGlvbnMubGV2ZWxJZF07XG4gICAgb3B0aW9ucy5sZXZlbCA9IG9wdGlvbnMubGV2ZWwgfHwge307XG4gICAgb3B0aW9ucy5sZXZlbC5pZCA9IG9wdGlvbnMubGV2ZWxJZDtcbiAgICBmb3IgKHZhciBwcm9wIGluIG9wdGlvbnMubGV2ZWwpIHtcbiAgICAgIGxldmVsW3Byb3BdID0gb3B0aW9ucy5sZXZlbFtwcm9wXTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5sZXZlbC5sZXZlbEJ1aWxkZXJSZXF1aXJlZEJsb2Nrcykge1xuICAgICAgbGV2ZWwucmVxdWlyZWRCbG9ja3MgPSByZXF1aXJlZEJsb2NrVXRpbHMubWFrZVRlc3RzRnJvbUJ1aWxkZXJSZXF1aXJlZEJsb2NrcyhcbiAgICAgICAgICBvcHRpb25zLmxldmVsLmxldmVsQnVpbGRlclJlcXVpcmVkQmxvY2tzKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMubGV2ZWwubGV2ZWxCdWlsZGVyUmVjb21tZW5kZWRCbG9ja3MpIHtcbiAgICAgIGxldmVsLnJlY29tbWVuZGVkQmxvY2tzID0gcmVxdWlyZWRCbG9ja1V0aWxzLm1ha2VUZXN0c0Zyb21CdWlsZGVyUmVxdWlyZWRCbG9ja3MoXG4gICAgICAgICAgb3B0aW9ucy5sZXZlbC5sZXZlbEJ1aWxkZXJSZWNvbW1lbmRlZEJsb2Nrcyk7XG4gICAgfVxuXG4gICAgb3B0aW9ucy5sZXZlbCA9IGxldmVsO1xuICB9XG5cbiAgc3R1ZGlvQXBwLmNvbmZpZ3VyZShvcHRpb25zKTtcblxuICBvcHRpb25zLnNraW4gPSBvcHRpb25zLnNraW5zTW9kdWxlLmxvYWQoc3R1ZGlvQXBwLmFzc2V0VXJsLCBvcHRpb25zLnNraW5JZCk7XG5cbiAgaWYgKHN0dWRpb0FwcC5pc1VzaW5nQmxvY2tseSgpKSB7XG4gICAgdmFyIGJsb2NrSW5zdGFsbE9wdGlvbnMgPSB7XG4gICAgICBza2luOiBvcHRpb25zLnNraW4sXG4gICAgICBpc0sxOiBvcHRpb25zLmxldmVsICYmIG9wdGlvbnMubGV2ZWwuaXNLMSxcbiAgICAgIGxldmVsOiBvcHRpb25zLmxldmVsXG4gICAgfTtcblxuICAgIGlmIChvcHRpb25zLmxldmVsICYmIG9wdGlvbnMubGV2ZWwuZWRpdF9ibG9ja3MpIHtcbiAgICAgIHV0aWxzLndyYXBOdW1iZXJWYWxpZGF0b3JzRm9yTGV2ZWxCdWlsZGVyKCk7XG4gICAgfVxuXG4gICAgYmxvY2tzQ29tbW9uLmluc3RhbGwoQmxvY2tseSwgYmxvY2tJbnN0YWxsT3B0aW9ucyk7XG4gICAgb3B0aW9ucy5ibG9ja3NNb2R1bGUuaW5zdGFsbChCbG9ja2x5LCBibG9ja0luc3RhbGxPcHRpb25zKTtcbiAgfVxuXG4gIGFkZFJlYWR5TGlzdGVuZXIoZnVuY3Rpb24oKSB7XG4gICAgaWYgKG9wdGlvbnMucmVhZG9ubHkpIHtcbiAgICAgIGlmIChhcHAuaW5pdFJlYWRvbmx5KSB7XG4gICAgICAgIGFwcC5pbml0UmVhZG9ubHkob3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdHVkaW9BcHAuaW5pdFJlYWRvbmx5KG9wdGlvbnMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhcHAuaW5pdChvcHRpb25zKTtcbiAgICAgIGlmIChvcHRpb25zLm9uSW5pdGlhbGl6ZSkge1xuICAgICAgICBvcHRpb25zLm9uSW5pdGlhbGl6ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuIl19","deps":{"./dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","./required_block_utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/required_block_utils.js","./blocksCommon":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blocksCommon.js","./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","./StudioApp":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/appMain.js","sourceRoot":"file://localhost","sourceFile":"build/js/appMain.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js","source":"'use strict';\n\nvar DropletFunctionTooltipMarkup = require('./DropletParameterTooltip.html.ejs');\nvar tooltipUtils = require('./tooltipUtils.js');\nvar dom = require('../dom');\nvar dropletUtils = require('../dropletUtils');\n\n/**\n * @fileoverview Displays tooltips for Droplet blocks\n */\n\n/**\n * Handles displaying tooltips on Droplet's ACE editor when filling in\n * an empty parameter.\n * Also will augment ACE editor's Live autocomplete by invoking scoped\n * autocomplete dropdowns for each parameter.\n * @param {DropletTooltipManager} dropletTooltipManager\n * @constructor\n */\nvar DropletAutocompleteParameterTooltipManager = function DropletAutocompleteParameterTooltipManager(dropletTooltipManager) {\n  this.dropletTooltipManager = dropletTooltipManager;\n  this.showExamplesLink = dropletTooltipManager.dropletConfig.showExamplesLink;\n  this.showParamDropdowns = dropletTooltipManager.dropletConfig.showParamDropdowns;\n  this.tooltipConfig = {\n    interactive: true,\n    autoClose: false,\n    trigger: 'custom',\n    speed: 100,\n    maxWidth: 450,\n    position: this.showParamDropdowns ? 'top' : 'bottom',\n    contentAsHTML: true,\n    theme: 'droplet-block-tooltipster',\n    offsetY: 2,\n    restoration: 'none',\n    updateAnimation: false,\n    positionTracker: true,\n    tooltipsEnabled: true\n  };\n};\n\n/**\n * @param {Editor} dropletEditor\n */\nDropletAutocompleteParameterTooltipManager.prototype.installTooltipsForEditor_ = function (dropletEditor) {\n  var aceEditor = dropletEditor.aceEditor;\n\n  var cursorMovementHandler = this.onCursorMovement_.bind(this, aceEditor);\n  aceEditor.commands.on('afterExec', cursorMovementHandler);\n  aceEditor.on('mousedown', (function (e) {\n    this.getCursorTooltip_().tooltipster('hide');\n  }).bind(this));\n};\n\n/**\n * @param editor - ace editor instance\n * @param changeEvent - event from aceEditor.session.selection.on('changeCursor')\n * @private\n */\nDropletAutocompleteParameterTooltipManager.prototype.onCursorMovement_ = function (editor, changeEvent) {\n  this.getCursorTooltip_().tooltipster('hide');\n\n  if (!editor.selection.isEmpty()) {\n    return;\n  }\n\n  var cursorPosition = editor.selection.getCursor();\n\n  var currentParameterInfo = tooltipUtils.findFunctionAndParamNumber(editor, cursorPosition);\n  if (!currentParameterInfo) {\n    return;\n  }\n\n  if (this.startingAutoComplete) {\n    // Guard against re-entrancy that occurs inside the showParamDropdownIfNeeded_() below\n    return;\n  }\n\n  if (editor.completer && this.showParamDropdowns) {\n    this.showParamDropdownIfNeeded_(editor, currentParameterInfo);\n  }\n\n  this.updateParameterTooltip_(editor, currentParameterInfo.funcName, currentParameterInfo.currentParameterIndex);\n};\n\n/**\n * @param editor - ace editor instance\n * @param paramInfo - parameter info already retrieved based on the cursor position\n * @private\n */\nDropletAutocompleteParameterTooltipManager.prototype.showParamDropdownIfNeeded_ = function (editor, paramInfo) {\n  // Check the dropletConfig to see if we can find dropdown info for this parameter\n  var dropdownList;\n  dropletUtils.getAllAvailableDropletBlocks(this.dropletTooltipManager.dropletConfig, this.dropletTooltipManager.codeFunctions, this.autocompletePaletteApisOnly).forEach(function (block) {\n    if (block.func !== paramInfo.funcName || !block.dropdown) {\n      // Not the right block or no dropdown specified\n      return;\n    }\n    if (block.noAutocomplete) {\n      // Block doesn't want autocomplete, so ignore\n      return;\n    }\n    if (this.dropletTooltipManager.autocompletePaletteApisOnly && this.dropletTooltipManager.codeFunctions && typeof this.dropletTooltipManager.codeFunctions[block.func] === 'undefined') {\n      // In autocompletePaletteApisOnly mode and block is not in the palette:\n      return;\n    }\n    if (typeof block.dropdown[paramInfo.currentParameterIndex] === 'function') {\n      dropdownList = block.dropdown[paramInfo.currentParameterIndex]();\n    } else {\n      dropdownList = block.dropdown[paramInfo.currentParameterIndex];\n    }\n  }, this);\n\n  if (dropdownList && !editor.completer.activated) {\n    // The cursor is positioned where a parameter with a dropdown should appear\n    // and autocomplete is not already active, so let's pop up a special dropdown\n    // autocomplete\n\n    // First, install our hooks to modify the normal ace AutoComplete (these are\n    // safe to leave in place, and we can call this multiple times):\n    DropletAutocompleteParameterTooltipManager.installAceCompleterHooks_(editor);\n\n    // Create a new ace completer based on the dropdown info and mark it as the\n    // \"overrideCompleter\" which will stay in place for the next popup from\n    // autocomplete only:\n    var dropdownCompletions = [];\n    dropdownList.forEach(function (listValue) {\n      var valString;\n      if (typeof listValue === 'string') {\n        valString = listValue;\n      } else {\n        // Support the { text: x, display: x } form, but ignore the display field\n        valString = listValue.text;\n      }\n      dropdownCompletions.push({\n        name: 'dropdown',\n        value: valString\n      });\n    });\n    editor.completer.overrideCompleter = {\n      getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n        callback(null, dropdownCompletions);\n      }\n    };\n    // Mark the we are starting auto-complete so that we can guard against\n    // re-entrancy when we see more cursor movement events:\n    this.startingAutoComplete = true;\n    editor.execCommand(\"startAutocomplete\");\n    this.startingAutoComplete = false;\n  }\n};\n\nDropletAutocompleteParameterTooltipManager.prototype.updateParameterTooltip_ = function (aceEditor, functionName, currentParameterIndex) {\n  if (!this.tooltipConfig.tooltipsEnabled || !this.dropletTooltipManager.hasDocFor(functionName)) {\n    return;\n  }\n  var tooltipInfo = this.dropletTooltipManager.getDropletTooltip(functionName);\n\n  if (currentParameterIndex >= tooltipInfo.parameterInfos.length) {\n    return;\n  }\n\n  var cursorTooltip = this.getCursorTooltip_();\n\n  cursorTooltip.tooltipster('content', this.getTooltipHTML(tooltipInfo, currentParameterIndex));\n  cursorTooltip.tooltipster('show');\n\n  if (this.showExamplesLink) {\n    var seeExamplesLink = $(cursorTooltip.tooltipster('elementTooltip')).find('.tooltip-example-link > a')[0];\n    dom.addClickTouchEvent(seeExamplesLink, (function (event) {\n      this.dropletTooltipManager.showDocFor(functionName);\n      event.stopPropagation();\n    }).bind(this));\n  }\n\n  var chooseAsset = tooltipInfo.parameterInfos[currentParameterIndex].assetTooltip;\n  if (chooseAsset) {\n    var chooseAssetLink = $(cursorTooltip.tooltipster('elementTooltip')).find('.tooltip-choose-link > a')[0];\n    dom.addClickTouchEvent(chooseAssetLink, (function (event) {\n      cursorTooltip.tooltipster('hide');\n      chooseAsset(function (filename) {\n        aceEditor.onTextInput('\"' + filename + '\"');\n      });\n      event.stopPropagation();\n    }).bind(this));\n  }\n};\n\nDropletAutocompleteParameterTooltipManager.prototype.getCursorTooltip_ = function () {\n  if (!this.cursorTooltip_) {\n    this.cursorTooltip_ = $('.droplet-ace .ace_cursor');\n    this.cursorTooltip_.tooltipster(this.tooltipConfig);\n  }\n  return this.cursorTooltip_;\n};\n\n/**\n * @returns {String} HTML for tooltip\n */\nDropletAutocompleteParameterTooltipManager.prototype.getTooltipHTML = function (tooltipInfo, currentParameterIndex) {\n  return DropletFunctionTooltipMarkup({\n    funcName: tooltipInfo.functionName,\n    functionName: tooltipInfo.functionName,\n    functionShortDescription: tooltipInfo.description,\n    parameters: tooltipInfo.parameterInfos,\n    signatureOverride: tooltipInfo.signatureOverride,\n    showExamplesLink: this.showExamplesLink,\n    currentParameterIndex: currentParameterIndex\n  });\n};\n\n/**\n * @param editor - ace editor instance\n * @private\n */\nDropletAutocompleteParameterTooltipManager.installAceCompleterHooks_ = function (editor) {\n  if (editor.completer.showPopup !== DropletAutocompleteParameterTooltipManager.showPopup) {\n    DropletAutocompleteParameterTooltipManager.originalShowPopup = editor.completer.showPopup;\n    editor.completer.showPopup = DropletAutocompleteParameterTooltipManager.showPopup;\n  }\n  if (editor.completer.gatherCompletions !== DropletAutocompleteParameterTooltipManager.gatherCompletions) {\n    DropletAutocompleteParameterTooltipManager.originalGatherCompletions = editor.completer.gatherCompletions;\n    editor.completer.gatherCompletions = DropletAutocompleteParameterTooltipManager.gatherCompletions;\n  }\n};\n\nDropletAutocompleteParameterTooltipManager.gatherCompletions = function (editor, callback) {\n  // Override normal ace AutoComplete behavior by using only overrideCompleter\n  // instead of the normal set of completers when overrideCompleter is set\n  if (this.overrideCompleter) {\n    var allCompleters = editor.completers;\n    editor.completers = [this.overrideCompleter];\n    DropletAutocompleteParameterTooltipManager.originalGatherCompletions.call(this, editor, callback);\n    editor.completers = allCompleters;\n  } else {\n    DropletAutocompleteParameterTooltipManager.originalGatherCompletions.call(this, editor, callback);\n  }\n};\n\nDropletAutocompleteParameterTooltipManager.showPopup = function (editor) {\n  // Override normal ace AutoComplete behavior by guaranteeing that overrideCompleter is reset\n  // after each call to showPopup()\n  DropletAutocompleteParameterTooltipManager.originalShowPopup.call(this, editor);\n  this.overrideCompleter = null;\n};\n\n/**\n * @param {boolean} enabled if tooltips should be enabled\n */\nDropletAutocompleteParameterTooltipManager.prototype.setTooltipsEnabled = function (enabled) {\n  this.tooltipConfig.tooltipsEnabled = !!enabled;\n};\n\nmodule.exports = DropletAutocompleteParameterTooltipManager;\n//# sourceMappingURL=data:application/json;base64,","deps":{"../dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","../dropletUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","./tooltipUtils.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/tooltipUtils.js","./DropletParameterTooltip.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletParameterTooltip.html.ejs"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js","source":"'use strict';\n\nvar DropletFunctionTooltipMarkup = require('./DropletFunctionTooltip.html.ejs');\nvar dom = require('../dom');\n\n/**\n * @fileoverview Displays tooltips for Droplet blocks\n */\n\n/**\n * Handles displaying tooltips on Droplet's ACE editor autocomplete dropdown\n * @param {DropletTooltipManager} dropletTooltipManager\n * @constructor\n */\nvar DropletAutocompletePopupTooltipManager = function DropletAutocompletePopupTooltipManager(dropletTooltipManager) {\n  this.dropletTooltipManager = dropletTooltipManager;\n  this.showExamplesLink = dropletTooltipManager.dropletConfig.showExamplesLink;\n  this.tooltipsEnabled = true;\n};\n\nvar DEFAULT_TOOLTIP_CONFIG = {\n  interactive: true,\n  autoClose: false,\n  trigger: 'custom',\n  speed: 100,\n  maxWidth: 450,\n  position: 'left',\n  contentAsHTML: true,\n  theme: 'droplet-block-tooltipster',\n  offsetY: 2,\n  restoration: 'none',\n  updateAnimation: false\n};\n\n/**\n * @param {Editor} dropletEditor\n */\nDropletAutocompletePopupTooltipManager.prototype.installTooltipsForEditor_ = function (dropletEditor) {\n  var aceEditor = dropletEditor.aceEditor;\n\n  this.editorChangedEventHandler_ = this.setupOnPopupShown_.bind(this, aceEditor);\n  aceEditor.commands.on(\"afterExec\", this.editorChangedEventHandler_);\n};\n\n/**\n * When an autocomplete popup has been shown the first time, register event\n * handlers to show and hide tooltips during autocomplete popup usage.\n * @param aceEditor - ace editor instance\n * @param changeEvent - event from aceEditor.commands.on(\"afterExec\")\n * @private\n */\nDropletAutocompletePopupTooltipManager.prototype.setupOnPopupShown_ = function (aceEditor, changeEvent) {\n  if (changeEvent.command.name !== 'insertstring') {\n    return;\n  }\n\n  var popupHasBeenShownOnce = aceEditor.completer && aceEditor.completer.popup;\n  if (!popupHasBeenShownOnce) {\n    return;\n  }\n\n  this.setupForEditorPopup_(aceEditor);\n\n  aceEditor.commands.removeListener(\"afterExec\", this.editorChangedEventHandler_);\n  this.editorChangedEventHandler_ = null;\n};\n\nDropletAutocompletePopupTooltipManager.prototype.setupForEditorPopup_ = function (aceEditor) {\n  aceEditor.completer.popup.setSelectOnHover(true);\n\n  aceEditor.completer.popup.renderer.on(\"afterRender\", (function () {\n    this.updateAutocompletePopupTooltip(aceEditor);\n  }).bind(this));\n\n  aceEditor.completer.popup.on(\"hide\", (function () {\n    this.destroyAutocompleteTooltips_();\n  }).bind(this));\n};\n\nDropletAutocompletePopupTooltipManager.prototype.updateAutocompletePopupTooltip = function (aceEditor) {\n  if (!this.tooltipsEnabled || !aceEditor.completer.completions) {\n    return;\n  }\n\n  var keyboardRow = aceEditor.completer.popup.getRow();\n\n  if (keyboardRow < 0) {\n    return;\n  }\n\n  var filteredCompletions = aceEditor.completer.completions.filtered;\n  var funcName = filteredCompletions[keyboardRow].value;\n\n  this.destroyAutocompleteTooltips_();\n\n  if (!this.dropletTooltipManager.hasDocFor(funcName)) {\n    return;\n  }\n\n  this.attachTooltipForFunction(funcName);\n};\n\nDropletAutocompletePopupTooltipManager.prototype.attachTooltipForFunction = function (funcName) {\n  var tooltipDOM = this.getTooltipHTML(funcName);\n  var configuration = $.extend({}, DEFAULT_TOOLTIP_CONFIG, {\n    content: tooltipDOM,\n    functionReady: (function (_, contents) {\n      if (!this.showExamplesLink) {\n        return;\n      }\n      var seeExamplesLink = contents.find('.tooltip-example-link > a')[0];\n      // Important this binds to mouseDown/touchDown rather than click, needs to\n      // happen before `blur` which triggers the ace editor completer popup\n      // hide which in turn would hide the link and not show the docs.\n      dom.addClickTouchEvent(seeExamplesLink, (function (event) {\n        this.dropletTooltipManager.showDocFor(funcName);\n        event.stopPropagation();\n      }).bind(this));\n    }).bind(this)\n  });\n\n  var rowOverlayDiv = $('.ace_selected');\n  rowOverlayDiv.tooltipster(configuration);\n  rowOverlayDiv.tooltipster('show');\n};\n\nDropletAutocompletePopupTooltipManager.prototype.destroyAutocompleteTooltips_ = function () {\n  $('.ace_autocomplete .tooltipstered').tooltipster('destroy');\n};\n\n/**\n * @returns {String} HTML for tooltip\n */\nDropletAutocompletePopupTooltipManager.prototype.getTooltipHTML = function (functionName) {\n  var tooltipInfo = this.dropletTooltipManager.getDropletTooltip(functionName);\n  var dropletFunctionTooltipMarkup = DropletFunctionTooltipMarkup({\n    functionName: tooltipInfo.functionName,\n    functionShortDescription: tooltipInfo.description,\n    parameters: tooltipInfo.parameterInfos,\n    signatureOverride: tooltipInfo.signatureOverride,\n    showExamplesLink: this.showExamplesLink\n  });\n  return dropletFunctionTooltipMarkup;\n};\n\n/**\n * @param {boolean} enabled if tooltips are enabled\n */\n\nDropletAutocompletePopupTooltipManager.prototype.setTooltipsEnabled = function (enabled) {\n  this.tooltipsEnabled = !!enabled;\n};\n\nmodule.exports = DropletAutocompletePopupTooltipManager;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./DropletFunctionTooltip.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs","../dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletBlockTooltipManager.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletBlockTooltipManager.js","source":"'use strict';\n\nvar DropletFunctionTooltip = require('./DropletFunctionTooltip');\nvar DropletFunctionTooltipMarkup = require('./DropletFunctionTooltip.html.ejs');\nvar dom = require('../dom');\n\n/**\n * @fileoverview Displays tooltips for Droplet blocks\n */\n\n/**\n * Handles displaying tooltips on Droplet blocks\n * @param {DropletTooltipManager} dropletTooltipManager\n * @constructor\n */\nvar DropletBlockTooltipManager = function DropletBlockTooltipManager(dropletTooltipManager) {\n  this.dropletTooltipManager = dropletTooltipManager;\n  this.showExamplesLink = dropletTooltipManager.dropletConfig.showExamplesLink;\n  this.tooltipsEnabled = true;\n};\n\nvar DEFAULT_TOOLTIP_CONFIG = {\n  interactive: true,\n  speed: 150,\n  maxWidth: 450,\n  position: 'right',\n  contentAsHTML: true,\n  theme: 'droplet-block-tooltipster',\n  offsetY: 2,\n  delay: 400\n};\n\n/**\n * @param {Editor} dropletEditor\n */\nDropletBlockTooltipManager.prototype.installTooltipsForEditor_ = function (dropletEditor) {\n  this.installTooltipsForCurrentCategoryBlocks(dropletEditor);\n  this.hideTooltipsOnBlockPick_(dropletEditor);\n\n  dropletEditor.on('changepalette', this.installTooltipsForCurrentCategoryBlocks.bind(this));\n  dropletEditor.on('toggledone', this.installTooltipsIfNotInstalled.bind(this));\n};\n\nDropletBlockTooltipManager.prototype.installTooltipsIfNotInstalled = function () {\n  if (!$('.droplet-hover-div').hasClass('tooltipstered')) {\n    this.installTooltipsForCurrentCategoryBlocks();\n  }\n};\n\nDropletBlockTooltipManager.prototype.installTooltipsForCurrentCategoryBlocks = function () {\n  if (!this.tooltipsEnabled) {\n    return;\n  }\n\n  $('.droplet-hover-div').each((function (_, blockHoverDiv) {\n    if ($(blockHoverDiv).hasClass('tooltipstered')) {\n      return;\n    }\n\n    var funcName = $(blockHoverDiv).attr('title');\n\n    var hoverDivWidth = $(blockHoverDiv).width();\n    var hoverDivLeftToToolboxRight = $('.droplet-palette-canvas').width() - parseInt(blockHoverDiv.style.left, 10);\n    var desiredXPosition = Math.min(hoverDivWidth, hoverDivLeftToToolboxRight);\n    var tooltipOffsetX = desiredXPosition - hoverDivWidth;\n\n    var configuration = $.extend({}, DEFAULT_TOOLTIP_CONFIG, {\n      content: this.getTooltipHTML(funcName),\n      offsetX: tooltipOffsetX,\n      functionReady: (function (_, contents) {\n        if (!this.showExamplesLink) {\n          return;\n        }\n        var seeExamplesLink = contents.find('.tooltip-example-link > a')[0];\n        // Important this binds to mouseDown/touchDown rather than click, needs to\n        // happen before `blur` which triggers the ace editor completer popup\n        // hide which in turn would hide the link and not show the docs.\n        dom.addClickTouchEvent(seeExamplesLink, (function (event) {\n          this.dropletTooltipManager.showDocFor(funcName);\n          event.stopPropagation();\n        }).bind(this));\n      }).bind(this)\n    });\n\n    // Store the title/funcName as a block id so we can attach callouts later:\n    $(blockHoverDiv).attr('id', 'droplet_palette_block_' + funcName);\n    $(blockHoverDiv).tooltipster(configuration);\n  }).bind(this));\n};\n\n/**\n * Tooltipster's hideOnClick setting does not work with the droplet hover\n * overlay as-is. Hide the tooltip on block picking explicitly.\n */\nDropletBlockTooltipManager.prototype.hideTooltipsOnBlockPick_ = function (dropletEditor) {\n  dropletEditor.on('pickblock', function () {\n    $('.tooltipstered').tooltipster('hide');\n  });\n};\n\n/**\n * @returns {String} HTML for tooltip\n */\nDropletBlockTooltipManager.prototype.getTooltipHTML = function (functionName) {\n  var tooltipInfo = this.dropletTooltipManager.getDropletTooltip(functionName);\n  return DropletFunctionTooltipMarkup({\n    functionName: tooltipInfo.functionName,\n    functionShortDescription: tooltipInfo.description,\n    parameters: tooltipInfo.parameterInfos,\n    signatureOverride: tooltipInfo.signatureOverride,\n    showExamplesLink: this.showExamplesLink\n  });\n};\n\n/**\n * @param {boolean} enabled if tooltips should be enabled\n */\n\nDropletBlockTooltipManager.prototype.setTooltipsEnabled = function (enabled) {\n  this.tooltipsEnabled = !!enabled;\n};\n\nmodule.exports = DropletBlockTooltipManager;\n//# sourceMappingURL=data:application/json;base64,","deps":{"./DropletFunctionTooltip":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js","../dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","./DropletFunctionTooltip.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletBlockTooltipManager.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletBlockTooltipManager.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div class=\"function-name\">\\n  ');2; if (signatureOverride) {; buf.push('    ', escape((2,  signatureOverride )), '\\n  ');3; } else {\n    /**\n     * TODO(bjordan): would be nice to split the following line up, can't figure\n     * out how to do so without inserting extraneous spaces between parameters.\n     */\n   ; buf.push('    ', escape((8,  functionName )), '(');8; for (var i = 0; i < parameters.length; i++) {; buf.push('', (8,  parameters[i].name), '');8; if (i < parameters.length - 1) {; buf.push(', ');8; }; buf.push('');8; }; buf.push(')  ');8; } ; buf.push('\\n</div>\\n');10; if (functionShortDescription) { ; buf.push('<div>', escape((10,  functionShortDescription )), '</div>');10; } ; buf.push('\\n');11; if (showExamplesLink) { ; buf.push('\\n  <div class=\"tooltip-example-link\">\\n    <a href=\"javascript:void(0);\">See examples</a>\\n  </div>\\n');15; } ; buf.push('\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletFunctionTooltip.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js","source":"'use strict';\n\nvar msg = require('../locale');\nvar utils = require('../utils');\n\n/**\n * @fileoverview Representation of a droplet function/block's tooltip\n */\n\nvar DROPLET_BLOCK_I18N_PREFIX = \"dropletBlock_\";\n\n/**\n * @typedef {Object} parameterInfo\n * @property {String} name\n * @property {?String} description\n */\n\n/**\n * Stores a block's tooltip information and helps render it\n * Grabs much of the tooltip's information from either app-specific locale\n * file (passed in as appMsg) or, if not present, the 'common' locale file,\n * (apps/i18n/common/en_us.json), keyed by the function name.\n *\n * e.g.,\n *\n * \"dropletBlock_readRecords_description\": \"Reads records [...].\",\n * \"dropletBlock_readRecords_param0\": \"table\",\n * \"dropletBlock_readRecords_param1\": \"searchParams\",\n * \"dropletBlock_readRecords_param2\": \"onSuccess\",\n *\n * Will result in a tooltip with the contents:\n *\n *    readRecords(table, searchParams, onSuccess)\n *    Reads records [...].\n *    [Read More] (links to `readRecords` doc file)\n *\n * Blocks which have functionNames that should not be user-visible can define\n * their own signature override.\n *\n * e.g.,\n *\n * \"dropletBlock_functionParams_n_description\": \"Define a function with a given parameter\",\n * \"dropletBlock_functionParams_n_signatureOverride\": \"Function with a Parameter\",\n *\n * Will result in a tooltip with the contents:\n *\n *    Function with a Parameter <-- note, no ()s\n *    Define a function with a given parameter.\n *    [Read More] (links to `functionParams_n` doc file)\n *\n * @constructor\n */\nvar DropletFunctionTooltip = function DropletFunctionTooltip(appMsg, definition) {\n  this.appMsg = appMsg;\n\n  /** @type {string} */\n  this.functionName = definition.func;\n\n  var description = this.getLocalization(this.descriptionKey());\n  if (description) {\n    this.description = description();\n  }\n\n  var signatureOverride = this.getLocalization(this.signatureOverrideKey());\n  if (signatureOverride) {\n    this.signatureOverride = signatureOverride();\n  }\n\n  /** @type {Array.<parameterInfo>} */\n  this.parameterInfos = [];\n\n  for (var paramId = 0;; paramId++) {\n    var paramName = this.getLocalization(this.parameterNameKey(paramId));\n    if (!paramName) {\n      break;\n    }\n\n    var paramInfo = {};\n    paramInfo.name = paramName();\n    var paramDesc = this.getLocalization(this.parameterDescriptionKey(paramId));\n    if (paramDesc) {\n      paramInfo.description = paramDesc();\n    }\n    if (definition.assetTooltip) {\n      paramInfo.assetTooltip = definition.assetTooltip[paramId];\n    }\n    this.parameterInfos.push(paramInfo);\n  }\n};\n\n/**\n * @param {string} key\n * @returns {Function}\n */\nDropletFunctionTooltip.prototype.getLocalization = function (key) {\n  return this.appMsg[key] || msg[key];\n};\n\n/**\n * @returns {string}\n */\nDropletFunctionTooltip.prototype.descriptionKey = function () {\n  return this.i18nPrefix() + \"_description\";\n};\n\n/**\n * @returns {string}\n */\nDropletFunctionTooltip.prototype.signatureOverrideKey = function () {\n  return this.i18nPrefix() + \"_signatureOverride\";\n};\n\n/**\n * @param {Number} paramIndex\n * @returns {string}\n */\nDropletFunctionTooltip.prototype.parameterNameKey = function (paramIndex) {\n  return this.i18nPrefix() + \"_param\" + paramIndex;\n};\n\n/**\n * @param {Number} paramIndex\n * @returns {string}\n */\nDropletFunctionTooltip.prototype.parameterDescriptionKey = function (paramIndex) {\n  return this.i18nPrefix() + \"_param\" + paramIndex + '_description';\n};\n\n/**\n * @returns {string} i18n file prefix for this function\n */\nDropletFunctionTooltip.prototype.i18nPrefix = function () {\n  return DROPLET_BLOCK_I18N_PREFIX + this.functionName;\n};\n\n/**\n * @returns {string} URL for full doc about this function\n */\nDropletFunctionTooltip.prototype.getFullDocumentationURL = function () {\n  return '//' + utils.getPegasusHost() + '/applab/docs/' + this.functionName + '?embedded';\n};\n\nmodule.exports = DropletFunctionTooltip;\n//# sourceMappingURL=data:application/json;base64,","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","../utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletFunctionTooltip.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletParameterTooltip.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletParameterTooltip.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div class=\"function-name\">\\n  ');2; if (signatureOverride) {; buf.push('    ', escape((2,  signatureOverride )), '\\n  ');3; } else {\n    /**\n     * TODO(bjordan): would be nice to split the following line up, can't figure\n     * out how to do so without inserting extraneous spaces between parameters.\n     */\n   ; buf.push('    ', escape((8,  functionName )), '(');8; for (var i = 0; i < parameters.length; i++) {; buf.push('<span class=\"tooltip-parameter-name ');8; if (i === currentParameterIndex) { ; buf.push(' current-tooltip-parameter-name');8; } ; buf.push('\">', (8,  parameters[i].name), '</span>');8; if (i < parameters.length - 1) {; buf.push(', ');8; }; buf.push('');8; }; buf.push(')  ');8; } ; buf.push('\\n</div>\\n');10; if (parameters[currentParameterIndex] && parameters[currentParameterIndex].description) { ; buf.push('<div>', escape((10,  parameters[currentParameterIndex].description )), '</div>');10; } ; buf.push('\\n');11; if (parameters[currentParameterIndex] && parameters[currentParameterIndex].assetTooltip) { ; buf.push('\\n  <div class=\"tooltip-choose-link\">\\n    <a href=\"javascript:void(0);\">Choose...</a>\\n  </div>\\n');15; } ; buf.push('\\n');16; if (showExamplesLink) { ; buf.push('\\n  <div class=\"tooltip-example-link\">\\n    <a href=\"javascript:void(0);\">See examples</a>\\n  </div>\\n');20; } ; buf.push('\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletParameterTooltip.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletParameterTooltip.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletTooltipManager.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletTooltipManager.js","source":"'use strict';\n\nvar DropletFunctionTooltip = require('./DropletFunctionTooltip');\nvar DropletBlockTooltipManager = require('./DropletBlockTooltipManager');\nvar DropletAutocompletePopupTooltipManager = require('./DropletAutocompletePopupTooltipManager');\nvar DropletAutocompleteParameterTooltipManager = require('./DropletAutocompleteParameterTooltipManager');\nvar dropletUtils = require('../dropletUtils');\n\n/**\n * @fileoverview Manages a store of known blocks and tooltips\n */\n\n/**\n * Store for finding tooltips for blocks\n * @constructor\n */\nfunction DropletTooltipManager(appMsg, dropletConfig, codeFunctions, autocompletePaletteApisOnly) {\n  /**\n   * App-specific strings (to override common msg)\n   * @type {Object.<String, Function>}\n   */\n  this.appMsg = appMsg || {};\n  this.tooltipsEnabled = true;\n\n  /**\n   * Droplet config for this app\n   */\n  this.dropletConfig = dropletConfig || {};\n\n  /**\n   * Code functions\n   * @type {Object.<String>} optional object with keys to modify the blocks\n   */\n  this.codeFunctions = codeFunctions;\n\n  /**\n   * Flag to limit the number of APIs that see autocomplete behavior\n   */\n  this.autocompletePaletteApisOnly = autocompletePaletteApisOnly;\n\n  /**\n   * Map of block types to tooltip objects\n   * @type {Object.<String, DropletFunctionTooltip>}\n   */\n  this.blockTypeToTooltip = {};\n\n  /**\n   * @type {DropletBlockTooltipManager}\n   * @private\n   */\n  this.dropletBlockTooltipManager_ = new DropletBlockTooltipManager(this);\n\n  /**\n   * @type {DropletAutocompletePopupTooltipManager}\n   * @private\n   */\n  this.dropletAutocompletePopupTooltipManager_ = new DropletAutocompletePopupTooltipManager(this);\n\n  /**\n   * @type {DropletAutocompletePopupTooltipManager}\n   * @private\n   */\n  this.dropletAutocompleteParameterTooltipManager_ = new DropletAutocompleteParameterTooltipManager(this);\n}\n\n/**\n * Registers handlers for droplet block tooltips.\n * @param dropletEditor\n */\nDropletTooltipManager.prototype.registerDropletBlockModeHandlers = function (dropletEditor) {\n  this.dropletBlockTooltipManager_.installTooltipsForEditor_(dropletEditor);\n};\n\n/**\n * Registers handlers for ACE mode tooltips\n * @param dropletEditor\n */\nDropletTooltipManager.prototype.registerDropletTextModeHandlers = function (dropletEditor) {\n  this.dropletAutocompletePopupTooltipManager_.installTooltipsForEditor_(dropletEditor);\n  this.dropletAutocompleteParameterTooltipManager_.installTooltipsForEditor_(dropletEditor);\n};\n\n/**\n * Registers blocks based on the dropletBlocks and codeFunctions passed to the constructor\n */\nDropletTooltipManager.prototype.registerBlocks = function () {\n  dropletUtils.getAllAvailableDropletBlocks(this.dropletConfig, this.codeFunctions, this.autocompletePaletteApisOnly).forEach(function (dropletBlockDefinition) {\n    if (dropletBlockDefinition.noAutocomplete) {\n      // Ignore blocks with noAutcomplete set:\n      return;\n    }\n    if (this.autocompletePaletteApisOnly && this.codeFunctions && typeof this.codeFunctions[dropletBlockDefinition.func] === 'undefined') {\n      // autocompletePaletteApisOnly mode enabled and block is not in palette:\n      return;\n    }\n    this.blockTypeToTooltip[dropletBlockDefinition.func] = new DropletFunctionTooltip(this.appMsg, dropletBlockDefinition);\n  }, this);\n};\n\nDropletTooltipManager.prototype.hasDocFor = function (functionName) {\n  return this.blockTypeToTooltip.hasOwnProperty(functionName);\n};\n\nDropletTooltipManager.prototype.showDocFor = function (functionName) {\n  if (!this.tooltipsEnabled) {\n    return;\n  }\n  $('.tooltipstered').tooltipster('hide');\n  var dialog = new window.Dialog({\n    body: $('<iframe>').addClass('markdown-instructions-container').width('100%').attr('src', this.getDropletTooltip(functionName).getFullDocumentationURL()),\n    autoResizeScrollableElement: '.markdown-instructions-container',\n    id: 'block-documentation-lightbox'\n  });\n  dialog.show();\n};\n\n/**\n * @param {String} functionName\n * @returns {DropletFunctionTooltip}\n */\nDropletTooltipManager.prototype.getDropletTooltip = function (functionName) {\n  if (!this.blockTypeToTooltip.hasOwnProperty(functionName)) {\n    throw \"Function name \" + functionName + \" not registered in documentation manager.\";\n  }\n\n  return this.blockTypeToTooltip[functionName];\n};\n\n/**\n * @param {boolean} enabled if tooltips should be enabled.\n */\nDropletTooltipManager.prototype.setTooltipsEnabled = function (enabled) {\n  this.tooltipsEnabled = !!enabled;\n  this.dropletAutocompletePopupTooltipManager_.setTooltipsEnabled(enabled);\n  this.dropletAutocompleteParameterTooltipManager_.setTooltipsEnabled(enabled);\n  this.dropletBlockTooltipManager_.setTooltipsEnabled(enabled);\n};\n\nmodule.exports = DropletTooltipManager;\n//# sourceMappingURL=data:application/json;base64,","deps":{"../dropletUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","./DropletFunctionTooltip":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js","./DropletAutocompletePopupTooltipManager":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js","./DropletBlockTooltipManager":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletBlockTooltipManager.js","./DropletAutocompleteParameterTooltipManager":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletTooltipManager.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/DropletTooltipManager.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/tooltipUtils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/tooltipUtils.js","source":"/* global ace */\n'use strict';\n\nvar utils = require('../utils');\nvar _ = utils.getLodash();\n\n/**\n * @typedef {Object} parameterSlotInfo\n * @property {string} funcName\n * @property {number} currentParameterIndex\n */\n\nvar ONLY_WHITESPACE_REGEXP = /^\\s*$/;\nvar ENDING_OF_BLOCK_COMMENT = /\\*\\/$/;\nvar START_OF_BLOCK_COMMENT = /^\\/\\*/;\n\n/**\n * Returns the number of instances of character within string\n * @param {string} string\n * @param {string} character\n * @returns {number}\n */\nfunction countNumberOfCharacter(string, character) {\n  return string.split(character).length - 1;\n}\n\nfunction openerMatchesCloser(opener, closer) {\n  var closersToOpeners = {\n    '}': '{',\n    ')': '(',\n    ']': '['\n  };\n  return closersToOpeners[closer] === opener;\n}\n\n/**\n * Given an ace editor and row/column position, returns the function\n * name and index of the currently edited parameter.\n * If a parameter is not currently being filled in, returns null.\n * TODO(bjordan): Unit test once ace.require available in utility tests\n * @param editor\n * @param position\n * @returns {parameterSlotInfo|null}\n */\nexports.findFunctionAndParamNumber = function (editor, position) {\n  var seenCloserStack = [];\n  var sameDepthPrecedingCommaCount = 0;\n\n  var TokenIterator = ace.require(\"./token_iterator\").TokenIterator;\n  var iterator = new TokenIterator(editor.session, position.row, position.column);\n\n  var token = iterator.getCurrentToken();\n\n  // Special cases for first token\n\n  if (position.column === 0) {\n    // At beginning of a line. Step back one for first token.\n    token = iterator.stepBackward();\n  } else if (token && token.type.match(/^comment/)) {\n    var isBlockComment = token.type === \"comment.doc\" || token.value.match(START_OF_BLOCK_COMMENT);\n    if (isBlockComment) {\n      var tokenIsEndOfDocComment = token.value.match(ENDING_OF_BLOCK_COMMENT);\n      var cursorIsEndOfToken = token.start + token.value.length === position.column;\n      var cursorIsEndOfBlockComment = tokenIsEndOfDocComment && cursorIsEndOfToken;\n      if (!cursorIsEndOfBlockComment) {\n        // Starting within a block comment\n        return null;\n      }\n    } else {\n      // Starting within a comment\n      return null;\n    }\n  }\n\n  while (token) {\n    switch (token.type) {\n      case \"paren.rparen\":\n        var closers = token.value.split();\n        for (var i = closers.length - 1; i >= 0; i--) {\n          var currentCloser = closers[i];\n          seenCloserStack.push(currentCloser);\n        }\n        break;\n      case \"paren.lparen\":\n        var openers = token.value.split();\n        for (var j = openers.length - 1; j >= 0; j--) {\n          var currentOpener = openers[j];\n\n          var isBeginningOfFunctionCall = seenCloserStack.length === 0 && currentOpener === '(';\n          if (isBeginningOfFunctionCall) {\n            return {\n              funcName: iterator.stepBackward().value,\n              currentParameterIndex: sameDepthPrecedingCommaCount\n            };\n          }\n\n          var lastCloser = seenCloserStack.pop();\n          if (!lastCloser || !openerMatchesCloser(currentOpener, lastCloser)) {\n            return null;\n          }\n        }\n        break;\n      case \"punctuation.operator\":\n        if (seenCloserStack.length === 0) {\n          if (_.contains(token.value, ';')) {\n            return null;\n          }\n          if (_.contains(token.value, ',')) {\n            sameDepthPrecedingCommaCount += countNumberOfCharacter(token.value, ',');\n          }\n        }\n        break;\n      case \"comment\":\n      case \"comment.doc\":\n        break;\n      case \"text\":\n        // Whitespace or random non-identifier characters\n        if (seenCloserStack.length !== 0 || token.value.match(ONLY_WHITESPACE_REGEXP)) {\n          break;\n        }\n        return null;\n      case \"string\":\n      case \"storage.type\":\n      case \"identifier\":\n      /* falls through */\n      default:\n        if (seenCloserStack.length === 0 && sameDepthPrecedingCommaCount === 0) {\n          // Something substantial between cursor and start of parameter slot\n          return null;\n        }\n        break;\n    }\n\n    token = iterator.stepBackward();\n  }\n\n  return null;\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/tooltipUtils.js","sourceRoot":"file://localhost","sourceFile":"build/js/blockTooltips/tooltipUtils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js","source":"'use strict';\n\nvar xml = require('./xml');\n\n/**\n * Create the xml for a level's toolbox\n * @param {string} blocks The xml of the blocks to go in the toolbox\n */\nexports.createToolbox = function (blocks) {\n  return '<xml id=\"toolbox\" style=\"display: none;\">' + blocks + '</xml>';\n};\n\n/**\n * Create the xml for a block of the given type\n * @param {string} type The type of the block\n * @param {Object.<string,string>} [titles] Dictionary of titles mapping name to value\n */\nexports.blockOfType = function (type, titles) {\n  var titleText = '';\n  if (titles) {\n    for (var key in titles) {\n      titleText += '<title name=\"' + key + '\">' + titles[key] + '</title>';\n    }\n  }\n  return '<block type=\"' + type + '\">' + titleText + '</block>';\n};\n\n/**\n * Create the xml for a block of the given type, with the provided child nested\n * in a next block\n * @param {string} type The type of the block\n * @param {Object.<string,string>} [titles] Dictionary of titles mapping name to value\n * @param {string} child Xml for the child block\n */\nexports.blockWithNext = function (type, titles, child) {\n  var titleText = '';\n  if (titles) {\n    for (var key in titles) {\n      titleText += '<title name=\"' + key + '\">' + titles[key] + '</title>';\n    }\n  }\n  return '<block type=\"' + type + '\">' + titleText + '<next>' + child + '</next></block>';\n};\n\n/**\n * Give a list of types, returns the xml assuming each block is a child of\n * the previous block.\n */\nexports.blocksFromList = function (types) {\n  if (types.length === 1) {\n    return this.blockOfType(types[0]);\n  }\n\n  return this.blockWithNext(types[0], {}, this.blocksFromList(types.slice(1)));\n};\n\n/**\n * Create the xml for a category in a toolbox\n */\nexports.createCategory = function (name, blocks, custom) {\n  return '<category name=\"' + name + '\"' + (custom ? ' custom=\"' + custom + '\"' : '') + '>' + blocks + '</category>';\n};\n\n/**\n * Generate a simple block with a plain title and next/previous connectors.\n */\nexports.generateSimpleBlock = function (blockly, generator, options) {\n  ['name', 'title', 'tooltip', 'functionName'].forEach(function (param) {\n    if (!options[param]) {\n      throw new Error('generateSimpleBlock requires param \"' + param + '\"');\n    }\n  });\n\n  var name = options.name;\n  var helpUrl = options.helpUrl || \"\"; // optional param\n  var title = options.title;\n  var titleImage = options.titleImage;\n  var tooltip = options.tooltip;\n  var functionName = options.functionName;\n\n  blockly.Blocks[name] = {\n    helpUrl: helpUrl,\n    init: function init() {\n      // Note: has a fixed HSV.  Could make this customizable if need be\n      this.setHSV(184, 1.00, 0.74);\n      var input = this.appendDummyInput();\n      if (title) {\n        input.appendTitle(title);\n      }\n      if (titleImage) {\n        input.appendTitle(new blockly.FieldImage(titleImage));\n      }\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n      this.setTooltip(tooltip);\n    }\n  };\n\n  generator[name] = function () {\n    // Generate JavaScript for putting dirt on to a tile.\n    return functionName + '(\\'block_id_' + this.id + '\\');\\n';\n  };\n};\n\n/**\n * Generates a single block from a <block/> DOM element, adding it to the main workspace\n * @param blockDOM {Element}\n * @returns {*}\n */\nexports.domToBlock = function (blockDOM) {\n  return Blockly.Xml.domToBlock(Blockly.mainBlockSpace, blockDOM);\n};\n\n/**\n * Generates a single block from a block XML string—e.g., <block type=\"testBlock\"></block>,\n * and adds it to the main workspace\n * @param blockDOMString\n * @returns {*}\n */\nexports.domStringToBlock = function (blockDOMString) {\n  return exports.domToBlock(xml.parseElement(blockDOMString).firstChild);\n};\n\n/**\n * Takes a set of start blocks, and returns them with a particular top level\n * block inserted in front of the first non-function block.  If we already have\n * this block, does nothing.\n */\nexports.forceInsertTopBlock = function (input, blockType) {\n  input = input || '';\n\n  if (blockType === null || input.indexOf(blockType) !== -1) {\n    return input;\n  }\n\n  var root = xml.parseElement(input);\n\n  // Extract the document from the root. The reason I do this instead of just\n  // using document.createElement elsewhere is\n  var doc = root.parentNode;\n\n  var topBlock = doc.createElement('block');\n  topBlock.setAttribute('type', blockType);\n  topBlock.setAttribute('movable', 'false');\n  topBlock.setAttribute('deletable', 'false');\n\n  var numChildren = root.childNodes ? root.childNodes.length : 0;\n\n  // find the first non-function definition block and extract it\n  var firstBlock = null,\n      i = 0;\n  while (i < numChildren && firstBlock === null) {\n    var child = root.childNodes[i];\n    // only look at element nodes\n    if (child.nodeType === 1) {\n      var type = child.getAttribute('type');\n      if (type !== 'procedures_defnoreturn' && type !== 'procedures_defreturn') {\n        firstBlock = root.removeChild(child);\n        numChildren--;\n      }\n    }\n    i++;\n  }\n\n  if (firstBlock !== null) {\n    // when run -> next -> firstBlock\n    var next;\n    if (/^functional/.test(blockType)) {\n      next = doc.createElement('functional_input');\n      next.setAttribute('name', 'ARG1');\n    } else {\n      next = doc.createElement('next');\n    }\n    next.appendChild(firstBlock);\n    topBlock.appendChild(next);\n  }\n\n  if (numChildren > 0) {\n    root.insertBefore(topBlock, root.childNodes[0]);\n  } else {\n    root.appendChild(topBlock);\n  }\n  return xml.serialize(root);\n};\n\n/**\n * Generate the xml for a block for the calc app.\n * @param {string} type Type for this block\n * @param {number[]|string[]} args List of args, where each arg is either the\n *   xml for a child block, a number, or the name of a variable.\n */\nexports.calcBlockXml = function (type, args) {\n  var str = '<block type=\"' + type + '\" inline=\"false\">';\n  for (var i = 1; i <= args.length; i++) {\n    str += '<functional_input name=\"ARG' + i + '\">';\n    var arg = args[i - 1];\n    if (typeof arg === \"number\") {\n      arg = '<block type=\"functional_math_number\"><title name=\"NUM\">' + arg + '</title></block>';\n    } else if (/^<block/.test(arg)) {\n      // we have xml, dont make any changes\n      arg = arg;\n    } else {\n      // we think we have a variable\n      arg = exports.calcBlockGetVar(arg);\n    }\n    str += arg;\n    str += '</functional_input>';\n  }\n  str += '</block>';\n\n  return str;\n};\n\n/**\n * @returns the xml for a functional_parameters_get block with the given\n *   variableName\n */\nexports.calcBlockGetVar = function (variableName) {\n  return '' + '<block type=\"functional_parameters_get\" uservisible=\"false\">' + '  <mutation>' + '    <outputtype>Number</outputtype>' + '  </mutation>' + '  <title name=\"VAR\">' + variableName + '</title>' + '</block>';\n};\n\n/**\n * Generate the xml for a math block (either calc or eval apps).\n * @param {string} type Type for this block\n * @param {Object.<string,string} inputs Dictionary mapping input name to the\n     xml for that input\n * @param {Object.<string.string>} [titles] Dictionary of titles mapping name to value\n */\nexports.mathBlockXml = function (type, inputs, titles) {\n  var str = '<block type=\"' + type + '\" inline=\"false\">';\n  for (var title in titles) {\n    str += '<title name=\"' + title + '\">' + titles[title] + '</title>';\n  }\n\n  for (var input in inputs) {\n    str += '<functional_input name=\"' + input + '\">' + inputs[input] + '</functional_input>';\n  }\n\n  str += '</block>';\n\n  return str;\n};\n\n/**\n * Generate xml for a functional defintion\n * @param {string} name The name of the function\n * @param {string} outputType Function's output type\n * @param {Object<string, string>[]} argList Name and type for each arg\n * @param {string} blockXml Xml for the blocks that actually define the function\n */\nexports.functionalDefinitionXml = function (name, outputType, argList, blockXml) {\n  var mutation = '<mutation>';\n  argList.forEach(function (argInfo) {\n    mutation += '<arg name=\"' + argInfo.name + '\" type=\"' + argInfo.type + '\"></arg>';\n  });\n  mutation += '<outputtype>' + outputType + '</outputtype></mutation>';\n\n  return '<block type=\"functional_definition\" inline=\"false\">' + mutation + '<title name=\"NAME\">' + name + '</title>' + '<functional_input name=\"STACK\">' + blockXml + '</functional_input>' + '</block>';\n};\n\n/**\n * Generate xml for a calling a functional function\n * @param {string} name The name of the function\n * @param {Object<string, string>[]} argList Name and type for each arg\n */\nexports.functionalCallXml = function (name, argList, inputContents) {\n  if (argList.length !== inputContents.length) {\n    throw new Error('must define contents for each arg');\n  }\n\n  var mutation = '<mutation name=\"' + name + '\">';\n  argList.forEach(function (argInfo) {\n    mutation += '<arg name=\"' + argInfo.name + '\" type=\"' + argInfo.type + '\"></arg>';\n  });\n  mutation += '</mutation>';\n\n  var contents = '';\n  inputContents.forEach(function (blockXml, index) {\n    contents += '<functional_input name=\"ARG' + index + '\">' + blockXml + '</functional_input>';\n  });\n\n  return '<block type=\"functional_call\">' + mutation + contents + '</block>';\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./xml":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js","sourceRoot":"file://localhost","sourceFile":"build/js/block_utils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blocksCommon.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blocksCommon.js","source":"/**\n * Defines blocks useful in multiple blockly apps\n */\n'use strict';\n\nvar commonMsg = require('./locale');\n\n/**\n * Install extensions to Blockly's language and JavaScript generator\n * @param blockly instance of Blockly\n */\nexports.install = function (blockly, blockInstallOptions) {\n  var skin = blockInstallOptions.skin;\n  var isK1 = blockInstallOptions.isK1;\n\n  installControlsRepeatSimplified(blockly, skin);\n  installControlsRepeatDropdown(blockly);\n  installNumberDropdown(blockly);\n  installPickOne(blockly);\n  installCategory(blockly);\n  installWhenRun(blockly, skin, isK1);\n};\n\nfunction installControlsRepeatSimplified(blockly, skin) {\n  // Re-uses the repeat block generator from core\n  blockly.JavaScript.controls_repeat_simplified = blockly.JavaScript.controls_repeat;\n  blockly.JavaScript.controls_repeat_simplified_dropdown = blockly.JavaScript.controls_repeat;\n\n  blockly.Blocks.controls_repeat_simplified = {\n    // Repeat n times (internal number) with simplified UI\n    init: function init() {\n      this.setHelpUrl(blockly.Msg.CONTROLS_REPEAT_HELPURL);\n      this.setHSV(322, 0.90, 0.95);\n      this.appendDummyInput().appendTitle(blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT).appendTitle(new blockly.FieldTextInput('10', blockly.FieldTextInput.nonnegativeIntegerValidator), 'TIMES');\n      this.appendStatementInput('DO').appendTitle(new blockly.FieldImage(skin.repeatImage));\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n      this.setTooltip(blockly.Msg.CONTROLS_REPEAT_TOOLTIP);\n    }\n  };\n\n  blockly.Blocks.controls_repeat_simplified_dropdown = {\n    // Repeat n times (internal number) with simplified UI\n    init: function init() {\n      this.setHelpUrl(blockly.Msg.CONTROLS_REPEAT_HELPURL);\n      this.setHSV(322, 0.90, 0.95);\n      this.appendDummyInput().appendTitle(blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT).appendTitle(new blockly.FieldDropdown(), 'TIMES');\n      this.appendStatementInput('DO').appendTitle(new blockly.FieldImage(skin.repeatImage));\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n      this.setTooltip(blockly.Msg.CONTROLS_REPEAT_TOOLTIP);\n    }\n  };\n}\n\nfunction installControlsRepeatDropdown(blockly) {\n  blockly.JavaScript.controls_repeat_dropdown = blockly.JavaScript.controls_repeat;\n\n  blockly.Blocks.controls_repeat_dropdown = {\n    // Repeat n times (internal number) with a customizable dropdown of # choices.\n    init: function init() {\n      this.setHelpUrl(blockly.Msg.CONTROLS_REPEAT_HELPURL);\n      this.setHSV(322, 0.90, 0.95);\n      this.appendDummyInput().appendTitle(blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT).appendTitle(new blockly.FieldDropdown(), 'TIMES').appendTitle(blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES);\n      this.appendStatementInput('DO').appendTitle(blockly.Msg.CONTROLS_REPEAT_INPUT_DO);\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n      this.setTooltip(blockly.Msg.CONTROLS_REPEAT_TOOLTIP);\n    }\n  };\n}\n\nfunction installNumberDropdown(blockly) {\n  blockly.JavaScript.math_number_dropdown = blockly.JavaScript.math_number;\n\n  blockly.Blocks.math_number_dropdown = {\n    // Numeric value with a customizable dropdown.\n    init: function init() {\n      this.setHelpUrl(blockly.Msg.MATH_NUMBER_HELPURL);\n      this.setHSV(258, 0.35, 0.62);\n      this.appendDummyInput().appendTitle(new blockly.FieldDropdown(), 'NUM');\n      this.setOutput(true, Blockly.BlockValueType.NUMBER);\n      this.setTooltip(blockly.Msg.MATH_NUMBER_TOOLTIP);\n    }\n  };\n}\n\n// A \"Pick 1\" block for level editing, where you want to require that one of a\n// set of blocks is used.\nfunction installPickOne(blockly) {\n  blockly.Blocks.pick_one = {\n    // Repeat n times (internal number).\n    init: function init() {\n      this.setHSV(322, 0.90, 0.95);\n\n      // Not localized as this is only used by level builders\n      this.appendDummyInput().appendTitle('Pick one (Use only in required blocks)');\n      this.appendStatementInput('PICK');\n    }\n  };\n\n  blockly.JavaScript.pick_one = function () {\n    return '\\n';\n  };\n}\n\n// A \"Category\" block for level editing, for delineating category groups.\nfunction installCategory(blockly) {\n  blockly.Blocks.category = {\n    // Repeat n times (internal number).\n    init: function init() {\n      this.setHSV(322, 0.90, 0.95);\n      this.setInputsInline(true);\n\n      // Not localized as this is only used by level builders\n      this.appendDummyInput().appendTitle('Category').appendTitle(new blockly.FieldTextInput('Name'), 'CATEGORY');\n      this.setPreviousStatement(false);\n      this.setNextStatement(false);\n    }\n  };\n\n  blockly.JavaScript.category = function () {\n    return '\\n';\n  };\n}\n\nfunction installWhenRun(blockly, skin, isK1) {\n  blockly.Blocks.when_run = {\n    // Block to handle event where mouse is clicked\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(39, 1.00, 0.99);\n      if (isK1) {\n        this.appendDummyInput().appendTitle(commonMsg.whenRun()).appendTitle(new blockly.FieldImage(skin.runArrow));\n      } else {\n        this.appendDummyInput().appendTitle(commonMsg.whenRun());\n      }\n      this.setPreviousStatement(false);\n      this.setNextStatement(true);\n    },\n    shouldBeGrayedOut: function shouldBeGrayedOut() {\n      return false;\n    }\n  };\n\n  blockly.JavaScript.when_run = function () {\n    // Generate JavaScript for handling click event.\n    return '\\n';\n  };\n}\n//# sourceMappingURL=data:application/json;base64,","deps":{"./locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blocksCommon.js","sourceRoot":"file://localhost","sourceFile":"build/js/blocksCommon.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/clientApi.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/clientApi.js","source":"/* global dashboard */\n// TODO(dave): Merge with the client API in /shared.\n// TODO: The client API should be instantiated with the channel ID, instead of grabbing it from the `dashboard.project` global.\n\n'use strict';\n\nmodule.exports = {\n  assets: clientApi('assets'),\n  sources: clientApi('sources')\n};\n\nfunction clientApi(endpoint) {\n  return {\n    basePath: function basePath(path) {\n      return '/v3/' + endpoint + '/' + dashboard.project.getCurrentId() + (path ? '/' + path : '');\n    },\n    ajax: function ajax(method, file, success, error, data) {\n      var xhr = new XMLHttpRequest();\n      xhr.addEventListener('load', function () {\n        if (xhr.status >= 400) {\n          error(xhr);\n          return;\n        }\n        success(xhr);\n      });\n      xhr.addEventListener('error', function () {\n        error(xhr);\n      });\n\n      xhr.open(method, this.basePath(file), true);\n      xhr.send(data);\n    }\n  };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NsaWVudEFwaS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQSxNQUFNLENBQUMsT0FBTyxHQUFHO0FBQ2YsUUFBTSxFQUFFLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDM0IsU0FBTyxFQUFFLFNBQVMsQ0FBQyxTQUFTLENBQUM7Q0FDOUIsQ0FBQzs7QUFFRixTQUFTLFNBQVMsQ0FBQyxRQUFRLEVBQUU7QUFDM0IsU0FBTztBQUNMLFlBQVEsRUFBRSxrQkFBVSxJQUFJLEVBQUU7QUFDeEIsYUFBTyxNQUFNLEdBQUcsUUFBUSxHQUFHLEdBQUcsR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQSxBQUFDLENBQUM7S0FDOUY7QUFDRCxRQUFJLEVBQUUsY0FBVSxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQ2xELFVBQUksR0FBRyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7QUFDL0IsU0FBRyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxZQUFZO0FBQ3ZDLFlBQUksR0FBRyxDQUFDLE1BQU0sSUFBSSxHQUFHLEVBQUU7QUFDckIsZUFBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ1gsaUJBQU87U0FDUjtBQUNELGVBQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUNkLENBQUMsQ0FBQztBQUNILFNBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBWTtBQUN4QyxhQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7T0FDWixDQUFDLENBQUM7O0FBRUgsU0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM1QyxTQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO0dBQ0YsQ0FBQztDQUNIIiwiZmlsZSI6ImJ1aWxkL2pzL2NsaWVudEFwaS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBkYXNoYm9hcmQgKi9cbi8vIFRPRE8oZGF2ZSk6IE1lcmdlIHdpdGggdGhlIGNsaWVudCBBUEkgaW4gL3NoYXJlZC5cbi8vIFRPRE86IFRoZSBjbGllbnQgQVBJIHNob3VsZCBiZSBpbnN0YW50aWF0ZWQgd2l0aCB0aGUgY2hhbm5lbCBJRCwgaW5zdGVhZCBvZiBncmFiYmluZyBpdCBmcm9tIHRoZSBgZGFzaGJvYXJkLnByb2plY3RgIGdsb2JhbC5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFzc2V0czogY2xpZW50QXBpKCdhc3NldHMnKSxcbiAgc291cmNlczogY2xpZW50QXBpKCdzb3VyY2VzJylcbn07XG5cbmZ1bmN0aW9uIGNsaWVudEFwaShlbmRwb2ludCkge1xuICByZXR1cm4ge1xuICAgIGJhc2VQYXRoOiBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgcmV0dXJuICcvdjMvJyArIGVuZHBvaW50ICsgJy8nICsgZGFzaGJvYXJkLnByb2plY3QuZ2V0Q3VycmVudElkKCkgKyAocGF0aCA/ICcvJyArIHBhdGggOiAnJyk7XG4gICAgfSxcbiAgICBhamF4OiBmdW5jdGlvbiAobWV0aG9kLCBmaWxlLCBzdWNjZXNzLCBlcnJvciwgZGF0YSkge1xuICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh4aHIuc3RhdHVzID49IDQwMCkge1xuICAgICAgICAgIGVycm9yKHhocik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHN1Y2Nlc3MoeGhyKTtcbiAgICAgIH0pO1xuICAgICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBlcnJvcih4aHIpO1xuICAgICAgfSk7XG5cbiAgICAgIHhoci5vcGVuKG1ldGhvZCwgdGhpcy5iYXNlUGF0aChmaWxlKSwgdHJ1ZSk7XG4gICAgICB4aHIuc2VuZChkYXRhKTtcbiAgICB9XG4gIH07XG59XG4iXX0=","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/clientApi.js","sourceRoot":"file://localhost","sourceFile":"build/js/clientApi.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js","source":"/* global Interpreter, CanvasPixelArray */\n\n'use strict';\n\nvar dropletUtils = require('./dropletUtils');\n\n/**\n * Evaluates a string of code parameterized with a dictionary.\n */\nexports.evalWith = function (code, options) {\n  if (options.StudioApp && options.StudioApp.editCode) {\n    // Use JS interpreter on editCode levels\n    var initFunc = function initFunc(interpreter, scope) {\n      exports.initJSInterpreter(interpreter, null, null, scope, options);\n    };\n    var myInterpreter = new Interpreter(code, initFunc);\n    // interpret the JS program all at once:\n    myInterpreter.run();\n  } else {\n    // execute JS code \"natively\"\n    var params = [];\n    var args = [];\n    for (var k in options) {\n      params.push(k);\n      args.push(options[k]);\n    }\n    params.push(code);\n    var ctor = function ctor() {\n      return Function.apply(this, params);\n    };\n    ctor.prototype = Function.prototype;\n    return new ctor().apply(null, args);\n  }\n};\n\n/**\n * Returns a function based on a string of code parameterized with a dictionary.\n */\nexports.functionFromCode = function (code, options) {\n  if (options.StudioApp && options.StudioApp.editCode) {\n    // Since this returns a new native function, it doesn't make sense in the\n    // editCode case (we assume that the app will be using JSInterpreter)\n    throw \"Unexpected\";\n  } else {\n    var params = [];\n    var args = [];\n    for (var k in options) {\n      params.push(k);\n      args.push(options[k]);\n    }\n    params.push(code);\n    var ctor = function ctor() {\n      return Function.apply(this, params);\n    };\n    ctor.prototype = Function.prototype;\n    return new ctor();\n  }\n};\n\n//\n// Blockly specific codegen functions:\n//\n\nvar INFINITE_LOOP_TRAP = '  executionInfo.checkTimeout(); if (executionInfo.isTerminated()){return;}\\n';\n\nvar LOOP_HIGHLIGHT = 'loopHighlight();\\n';\nvar LOOP_HIGHLIGHT_RE = new RegExp(LOOP_HIGHLIGHT.replace(/\\(.*\\)/, '\\\\(.*\\\\)'), 'g');\n\n/**\n * Returns javascript code to call a timeout check\n */\nexports.loopTrap = function () {\n  return INFINITE_LOOP_TRAP;\n};\n\nexports.loopHighlight = function (apiName, blockId) {\n  var args = \"'block_id_\" + blockId + \"'\";\n  if (blockId === undefined) {\n    args = \"%1\";\n  }\n  return apiName + '.' + LOOP_HIGHLIGHT.replace('()', '(' + args + ')');\n};\n\n/**\n * Extract the user's code as raw JavaScript.\n * @param {string} code Generated code.\n * @return {string} The code without serial numbers and timeout checks.\n */\nexports.strip = function (code) {\n  return code\n  // Strip out serial numbers.\n  .replace(/(,\\s*)?'block_id_\\d+'\\)/g, ')')\n  // Remove timeouts.\n  .replace(INFINITE_LOOP_TRAP, '')\n  // Strip out loop highlight\n  .replace(LOOP_HIGHLIGHT_RE, '')\n  // Strip out class namespaces.\n  .replace(/(StudioApp|Maze|Turtle)\\./g, '')\n  // Strip out particular helper functions.\n  .replace(/^function (colour_random)[\\s\\S]*?^}/gm, '')\n  // Collapse consecutive blank lines.\n  .replace(/\\n\\n+/gm, '\\n\\n')\n  // Trim.\n  .replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Extract the user's code as raw JavaScript.\n */\nexports.workspaceCode = function (blockly) {\n  var code = blockly.Generator.blockSpaceToCode('JavaScript');\n  return exports.strip(code);\n};\n\n//\n// Property access wrapped in try/catch. This is in an indepedendent function\n// so the JIT compiler can optimize the calling function.\n//\n\nfunction safeReadProperty(object, property) {\n  try {\n    return object[property];\n  } catch (e) {}\n}\n\n//\n// Marshal a single native object from native to interpreter. This is in an\n// indepedendent function so the JIT compiler can optimize the calling function.\n// (Chrome V8 says ForInStatement is not fast case)\n//\n\nfunction marshalNativeToInterpreterObject(interpreter, nativeObject, maxDepth) {\n  var retVal = interpreter.createObject(interpreter.OBJECT);\n  for (var prop in nativeObject) {\n    var value = safeReadProperty(nativeObject, prop);\n    interpreter.setProperty(retVal, prop, exports.marshalNativeToInterpreter(interpreter, value, nativeObject, maxDepth));\n  }\n  return retVal;\n}\n\nfunction isCanvasImageData(nativeVar) {\n  // IE 9/10 don't know about Uint8ClampedArray and call it CanvasPixelArray instead\n  if (typeof Uint8ClampedArray !== \"undefined\") {\n    return nativeVar instanceof Uint8ClampedArray;\n  }\n  return nativeVar instanceof CanvasPixelArray;\n}\n\n//\n// Droplet/JavaScript/Interpreter codegen functions:\n//\nexports.marshalNativeToInterpreter = function (interpreter, nativeVar, nativeParentObj, maxDepth) {\n  if (typeof nativeVar === 'undefined') {\n    return interpreter.UNDEFINED;\n  }\n  var i, retVal;\n  if (typeof maxDepth === \"undefined\") {\n    maxDepth = Infinity; // default to inifinite levels of depth\n  }\n  if (maxDepth === 0) {\n    return interpreter.createPrimitive(undefined);\n  }\n  if (nativeVar instanceof Array) {\n    retVal = interpreter.createObject(interpreter.ARRAY);\n    for (i = 0; i < nativeVar.length; i++) {\n      retVal.properties[i] = exports.marshalNativeToInterpreter(interpreter, nativeVar[i], null, maxDepth - 1);\n    }\n    retVal.length = nativeVar.length;\n  } else if (isCanvasImageData(nativeVar)) {\n    // Special case for canvas image data - could expand to support TypedArray\n    retVal = interpreter.createObject(interpreter.ARRAY);\n    for (i = 0; i < nativeVar.length; i++) {\n      retVal.properties[i] = interpreter.createPrimitive(nativeVar[i]);\n    }\n    retVal.length = nativeVar.length;\n  } else if (nativeVar instanceof Function) {\n    var wrapper = exports.makeNativeMemberFunction({\n      interpreter: interpreter,\n      nativeFunc: nativeVar,\n      nativeParentObj: nativeParentObj\n    });\n    retVal = interpreter.createNativeFunction(wrapper);\n  } else if (nativeVar instanceof Object) {\n    // note Object must be checked after Function and Array (since they are also Objects)\n    if (interpreter.isa(nativeVar, interpreter.FUNCTION)) {\n      // Special case to see if we are trying to marshal an interpreter object\n      // (this currently happens when we store interpreter function objects in native\n      //  and return them back in nativeGetCallback)\n\n      // NOTE: this check could be expanded to check for other interpreter object types\n      // if we have reason to believe that we may be passing those back\n\n      retVal = nativeVar;\n    } else {\n      retVal = marshalNativeToInterpreterObject(interpreter, nativeVar, maxDepth - 1);\n    }\n  } else {\n    retVal = interpreter.createPrimitive(nativeVar);\n  }\n  return retVal;\n};\n\nexports.marshalInterpreterToNative = function (interpreter, interpreterVar) {\n  if (interpreterVar.isPrimitive) {\n    return interpreterVar.data;\n  } else if (interpreter.isa(interpreterVar, interpreter.ARRAY)) {\n    var nativeArray = [];\n    nativeArray.length = interpreterVar.length;\n    for (var i = 0; i < nativeArray.length; i++) {\n      nativeArray[i] = exports.marshalInterpreterToNative(interpreter, interpreterVar.properties[i]);\n    }\n    return nativeArray;\n  } else if (interpreter.isa(interpreterVar, interpreter.OBJECT)) {\n    var nativeObject = {};\n    for (var prop in interpreterVar.properties) {\n      nativeObject[prop] = exports.marshalInterpreterToNative(interpreter, interpreterVar.properties[prop]);\n    }\n    return nativeObject;\n  } else {\n    // Just return the interpreter object if we can't convert it. This is needed\n    // for passing interpreter callback functions into native.\n    return interpreterVar;\n  }\n};\n\n/**\n * Generate a native function wrapper for use with the JS interpreter.\n */\nexports.makeNativeMemberFunction = function (opts) {\n  if (opts.dontMarshal) {\n    return function () {\n      // Just call the native function and marshal the return value:\n      var nativeRetVal = opts.nativeFunc.apply(opts.nativeParentObj, arguments);\n      return exports.marshalNativeToInterpreter(opts.interpreter, nativeRetVal, null, opts.maxDepth);\n    };\n  } else {\n    return function () {\n      // Call the native function after marshalling parameters:\n      var nativeArgs = [];\n      for (var i = 0; i < arguments.length; i++) {\n        nativeArgs[i] = exports.marshalInterpreterToNative(opts.interpreter, arguments[i]);\n      }\n      var nativeRetVal = opts.nativeFunc.apply(opts.nativeParentObj, nativeArgs);\n      return exports.marshalNativeToInterpreter(opts.interpreter, nativeRetVal, null, opts.maxDepth);\n    };\n  }\n};\n\nfunction populateFunctionsIntoScope(interpreter, scope, funcsObj, parentObj) {\n  for (var prop in funcsObj) {\n    var func = funcsObj[prop];\n    if (func instanceof Function) {\n      // Populate the scope with native functions\n      // NOTE: other properties are not currently passed to the interpreter\n      var parent = parentObj ? parentObj : funcsObj;\n      var wrapper = exports.makeNativeMemberFunction({\n        interpreter: interpreter,\n        nativeFunc: func,\n        nativeParentObj: parent\n      });\n      interpreter.setProperty(scope, prop, interpreter.createNativeFunction(wrapper));\n    }\n  }\n}\n\nfunction populateGlobalFunctions(interpreter, blocks, blockFilter, scope) {\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n    if (block.parent && (!blockFilter || typeof blockFilter[block.func] !== 'undefined')) {\n      var funcScope = scope;\n      var funcName = block.func;\n      var funcComponents = funcName.split('.');\n      if (funcComponents.length === 2) {\n        // Special accommodation for Object.function syntax (2 components only):\n        var objName = funcComponents[0];\n        // Find or create global object named 'objName' and make it the scope:\n        funcScope = interpreter.getProperty(scope, objName);\n        if (interpreter.UNDEFINED === funcScope) {\n          funcScope = interpreter.createObject(interpreter.OBJECT);\n          interpreter.setProperty(scope, objName, funcScope);\n        }\n        funcName = funcComponents[1];\n      }\n      var func = block.parent[funcName];\n      var wrapper = exports.makeNativeMemberFunction({\n        interpreter: interpreter,\n        nativeFunc: func,\n        nativeParentObj: block.parent,\n        dontMarshal: block.dontMarshal\n      });\n      interpreter.setProperty(funcScope, funcName, interpreter.createNativeFunction(wrapper));\n    }\n  }\n}\n\nfunction populateJSFunctions(interpreter) {\n  // The interpreter is missing some basic JS functions. Add them as needed:\n  var wrapper;\n\n  // Add static methods from String:\n  var functions = ['fromCharCode'];\n  for (var i = 0; i < functions.length; i++) {\n    wrapper = exports.makeNativeMemberFunction({\n      interpreter: interpreter,\n      nativeFunc: String[functions[i]],\n      nativeParentObj: String\n    });\n    interpreter.setProperty(interpreter.STRING, functions[i], interpreter.createNativeFunction(wrapper), false, true);\n  }\n\n  // Add String.prototype.includes\n  wrapper = function (searchStr) {\n    // Polyfill based off of https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n    return interpreter.createPrimitive(String.prototype.indexOf.apply(this, arguments) !== -1);\n  };\n  interpreter.setProperty(interpreter.STRING.properties.prototype, 'includes', interpreter.createNativeFunction(wrapper), false, true);\n}\n\n/**\n * Initialize a JS interpreter.\n *\n * interpreter (required): JS interpreter instance.\n * blocks (optional): blocks in dropletConfig.blocks format. If a block has\n *  a parent property, we will populate that function into the specified scope.\n * blockFilter (optional): an object with block-name keys that should be used\n *  to filter which blocks are populated.\n * scope (required): interpreter's global scope.\n * options (optional): objects containing functions to placed in a new scope\n *  created beneath the supplied scope.\n */\nexports.initJSInterpreter = function (interpreter, blocks, blockFilter, scope, options) {\n  for (var optsObj in options) {\n    // The options object contains objects that will be referenced\n    // by the code we plan to execute. Since these objects exist in the native\n    // world, we need to create associated objects in the interpreter's world\n    // so the interpreted code can call out to these native objects\n\n    // Create global objects in the interpreter for everything in options\n    var obj = interpreter.createObject(interpreter.OBJECT);\n    interpreter.setProperty(scope, optsObj.toString(), obj);\n    populateFunctionsIntoScope(interpreter, obj, options[optsObj]);\n  }\n  populateGlobalFunctions(interpreter, dropletUtils.dropletGlobalConfigBlocks, blockFilter, scope);\n  if (blocks) {\n    populateGlobalFunctions(interpreter, blocks, blockFilter, scope);\n  }\n  populateJSFunctions(interpreter);\n};\n\n/**\n * Check to see if it is safe to step the interpreter while we are unwinding.\n * (Called repeatedly after completing a step where the node was marked 'done')\n */\nexports.isNextStepSafeWhileUnwinding = function (interpreter) {\n  var state = interpreter.stateStack[0];\n  var type = state.node.type;\n  if (state.done) {\n    return true;\n  }\n  if (type === \"ForStatement\") {\n    var mode = state.mode || 0;\n    // Safe to skip over ForStatement's in mode 0 (init) and 3 (update),\n    // but not mode 1 (test) or mode 2 (body) while unwinding...\n    return mode === 0 || mode === 3;\n  }\n  if (type === \"SwitchStatement\") {\n    // Safe to skip over SwitchStatement's except the very start (before a\n    // switchValue has been set):\n    return typeof state.switchValue !== 'undefined';\n  }\n  switch (type) {\n    // Declarations:\n    case \"VariableDeclaration\":\n    // Statements:\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    // All Expressions:\n    case \"ThisExpression\":\n    case \"ArrayExpression\":\n    case \"ObjectExpression\":\n    case \"ArrowExpression\":\n    case \"SequenceExpression\":\n    case \"UnaryExpression\":\n    case \"BinaryExpression\":\n    case \"UpdateExpression\":\n    case \"LogicalExpression\":\n    case \"ConditionalExpression\":\n    case \"NewExpression\":\n    case \"CallExpression\":\n    case \"MemberExpression\":\n    case \"FunctionExpression\":\n    case \"AssignmentExpression\":\n    // Other:\n    case \"Identifier\":\n    case \"Literal\":\n    case \"Program\":\n      return true;\n  }\n  return false;\n};\n\n// session is an instance of Ace editSession\n// Usage\n// var lengthArray = aceCalculateCumulativeLength(editor.getSession());\n// Need to call this only if the document is updated after the last call.\nexports.aceCalculateCumulativeLength = function (session) {\n  var cumulativeLength = [];\n  var cnt = session.getLength();\n  var cuml = 0,\n      nlLength = session.getDocument().getNewLineCharacter().length;\n  cumulativeLength.push(cuml);\n  var text = session.getLines(0, cnt);\n  for (var i = 0; i < cnt; i++) {\n    cuml += text[i].length + nlLength;\n    cumulativeLength.push(cuml);\n  }\n  return cumulativeLength;\n};\n\n// Fast binary search implementation\n// Pass the cumulative length array here.\n// Usage\n// var row = aceFindRow(lengthArray, 0, lengthArray.length, 2512);\n// tries to find 2512th character lies in which row.\nexports.aceFindRow = function (cumulativeLength, rows, rowe, pos) {\n  if (rows > rowe) {\n    return null;\n  }\n  if (rows + 1 === rowe) {\n    return rows;\n  }\n\n  var mid = Math.floor((rows + rowe) / 2);\n\n  if (pos < cumulativeLength[mid]) {\n    return exports.aceFindRow(cumulativeLength, rows, mid, pos);\n  } else if (pos > cumulativeLength[mid]) {\n    return exports.aceFindRow(cumulativeLength, mid, rowe, pos);\n  }\n  return mid;\n};\n\nexports.isAceBreakpointRow = function (session, userCodeRow) {\n  if (!session) {\n    return false;\n  }\n  var bps = session.getBreakpoints();\n  return Boolean(bps[userCodeRow]);\n};\n\nvar lastHighlightMarkerIds = {};\n\n/**\n * Clears all highlights that we have added in the ace editor.\n */\nfunction clearAllHighlightedAceLines(aceEditor) {\n  var session = aceEditor.getSession();\n  for (var hlClass in lastHighlightMarkerIds) {\n    session.removeMarker(lastHighlightMarkerIds[hlClass]);\n  }\n  lastHighlightMarkerIds = {};\n}\n\n/**\n * Highlights lines in the ace editor. Always moves the previous highlight with\n * the same class to the new location.\n *\n * If the row parameters are not supplied, just clear the last highlight.\n */\nfunction highlightAceLines(aceEditor, className, startRow, endRow) {\n  var session = aceEditor.getSession();\n  className = className || 'ace_step';\n  if (lastHighlightMarkerIds[className]) {\n    session.removeMarker(lastHighlightMarkerIds[className]);\n    lastHighlightMarkerIds[className] = null;\n  }\n  if (typeof startRow !== 'undefined') {\n    lastHighlightMarkerIds[className] = aceEditor.getSession().highlightLines(startRow, endRow, className).id;\n  }\n}\n\n/**\n * Selects and highlights code in droplet/ace editor to indicate an error.\n *\n * This function simply highlights one spot, not a range. It is typically used\n * to highlight where an error has occurred.\n */\nexports.selectEditorRowColError = function (editor, row, col) {\n  if (!editor) {\n    return;\n  }\n  if (editor.currentlyUsingBlocks) {\n    var style = { color: '#FFFF22' };\n    editor.clearLineMarks();\n    editor.markLine(row, style);\n  } else {\n    var selection = editor.aceEditor.getSelection();\n    var range = selection.getRange();\n\n    range.start.row = row;\n    range.start.column = col;\n    range.end.row = row;\n    range.end.column = col + 1;\n\n    // setting with the backwards parameter set to true - this prevents horizontal\n    // scrolling to the right\n    selection.setSelectionRange(range, true);\n  }\n  highlightAceLines(editor.aceEditor, \"ace_error\", row, row);\n};\n\n/**\n * Removes highlights (for the default ace_step class) and selection in\n * droplet and ace editors.\n *\n * @param {boolean} allClasses When set to true, remove all classes of\n * highlights (including ace_step, ace_error, and anything else)\n */\nexports.clearDropletAceHighlighting = function (editor, allClasses) {\n  if (editor.currentlyUsingBlocks) {\n    editor.clearLineMarks();\n  } else {\n    editor.aceEditor.getSelection().clearSelection();\n  }\n  if (allClasses) {\n    clearAllHighlightedAceLines(editor.aceEditor);\n  } else {\n    // when calling without a class or rows, highlightAceLines() will clear\n    // everything highlighted with the default highlight class\n    highlightAceLines(editor.aceEditor);\n  }\n};\n\nfunction selectAndHighlightCode(aceEditor, cumulativeLength, start, end, highlightClass) {\n  var selection = aceEditor.getSelection();\n  var range = selection.getRange();\n\n  range.start.row = exports.aceFindRow(cumulativeLength, 0, cumulativeLength.length, start);\n  range.start.column = start - cumulativeLength[range.start.row];\n  range.end.row = exports.aceFindRow(cumulativeLength, 0, cumulativeLength.length, end);\n  range.end.column = end - cumulativeLength[range.end.row];\n\n  // calling with the backwards parameter set to true - this prevents horizontal\n  // scrolling to the right while stepping through in the debugger\n  selection.setSelectionRange(range, true);\n  highlightAceLines(aceEditor, highlightClass || \"ace_step\", range.start.row, range.end.row);\n}\n\n/**\n * Selects code in droplet/ace editor.\n *\n * Returns the row (line) of code highlighted. If nothing is highlighted\n * because it is outside of the userCode area, the return value is -1\n *\n * @param {string} highlightClass CSS class to use when highlighting in ACE\n */\nexports.selectCurrentCode = function (interpreter, cumulativeLength, userCodeStartOffset, userCodeLength, editor, highlightClass) {\n  var userCodeRow = -1;\n  if (interpreter.stateStack[0]) {\n    var node = interpreter.stateStack[0].node;\n    // Adjust start/end by userCodeStartOffset since the code running\n    // has been expanded vs. what the user sees in the editor window:\n    var start = node.start - userCodeStartOffset;\n    var end = node.end - userCodeStartOffset;\n\n    // Only show selection if the node being executed is inside the user's\n    // code (not inside code we inserted before or after their code that is\n    // not visible in the editor):\n    if (start >= 0 && start < userCodeLength && end <= userCodeLength) {\n      userCodeRow = exports.aceFindRow(cumulativeLength, 0, cumulativeLength.length, start);\n      // Highlight the code being executed in each step:\n      if (editor.currentlyUsingBlocks) {\n        var style = { color: '#FFFF22' };\n        editor.clearLineMarks();\n        // NOTE: replace markLine with this new mark() call once we have a new\n        // version of droplet\n\n        //editor.mark(userCodeRow, start - cumulativeLength[userCodeRow], style);\n        editor.markLine(userCodeRow, style);\n      } else {\n        selectAndHighlightCode(editor.aceEditor, cumulativeLength, start, end, highlightClass);\n      }\n    } else {\n      exports.clearDropletAceHighlighting(editor);\n    }\n  } else {\n    exports.clearDropletAceHighlighting(editor);\n  }\n  return userCodeRow;\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./dropletUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js","sourceRoot":"file://localhost","sourceFile":"build/js/codegen.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js","source":"/**\n * @fileoverview Constants used in production code and tests.\n */\n\n/**\n * Enumeration of user program execution outcomes.\n * These are determined by each app.\n */\n'use strict';\n\nexports.ResultType = {\n  UNSET: 0, // The result has not yet been computed.\n  SUCCESS: 1, // The program completed successfully, achieving the goal.\n  FAILURE: -1, // The program ran without error but did not achieve goal.\n  TIMEOUT: 2, // The program did not complete (likely infinite loop).\n  ERROR: -2 // The program generated an error.\n};\n\n/**\n * Enumeration of test results.\n * EMPTY_BLOCK_FAIL and EMPTY_FUNCTION_BLOCK_FAIL can only occur if\n * StudioApp.checkForEmptyBlocks_ is true.\n * NOTE: We store the results for user attempts in our db, so changing these\n * values would necessitate a migration\n */\nexports.TestResults = {\n  // Default value before any tests are run.\n  NO_TESTS_RUN: -1,\n\n  // The level was not solved.\n  EMPTY_BLOCK_FAIL: 1, // An \"if\" or \"repeat\" block was empty.\n  TOO_FEW_BLOCKS_FAIL: 2, // Fewer than the ideal number of blocks used.\n  LEVEL_INCOMPLETE_FAIL: 3, // Default failure to complete a level.\n  MISSING_BLOCK_UNFINISHED: 4, // A required block was not used.\n  EXTRA_TOP_BLOCKS_FAIL: 5, // There was more than one top-level block.\n  RUNTIME_ERROR_FAIL: 6, // There was a runtime error in the program.\n  SYNTAX_ERROR_FAIL: 7, // There was a syntax error in the program.\n  MISSING_BLOCK_FINISHED: 10, // The level was solved without required block.\n  APP_SPECIFIC_FAIL: 11, // Application-specific failure.\n  EMPTY_FUNCTION_BLOCK_FAIL: 12, // A \"function\" block was empty\n  UNUSED_PARAM: 13, // Param declared but not used in function.\n  UNUSED_FUNCTION: 14, // Function declared but not used in workspace.\n  PARAM_INPUT_UNATTACHED: 15, // Function not called with enough params.\n  INCOMPLETE_BLOCK_IN_FUNCTION: 16, // Incomplete block inside a function.\n  QUESTION_MARKS_IN_NUMBER_FIELD: 17, // Block has ??? instead of a value.\n  EMPTY_FUNCTIONAL_BLOCK: 18, // There's a functional block with an open input\n  EXAMPLE_FAILED: 19, // One of our examples didn't match the definition\n\n  // start using negative values, since we consider >= 20 to be \"solved\"\n  NESTED_FOR_SAME_VARIABLE: -2, // We have nested for loops each using the same counter variable\n  // NOTE: for smoe period of time, this was -1 and conflicted with NO_TESTS_RUN\n  EMPTY_FUNCTION_NAME: -3, // We have a variable or function with the name \"\"\n  MISSING_RECOMMENDED_BLOCK_UNFINISHED: -4, // The level was attempted but not solved without a recommended block\n\n  // The level was solved in a non-optimal way.  User may advance or retry.\n  TOO_MANY_BLOCKS_FAIL: 20, // More than the ideal number of blocks were used.\n  APP_SPECIFIC_ACCEPTABLE_FAIL: 21, // Application-specific acceptable failure.\n  MISSING_RECOMMENDED_BLOCK_FINISHED: 22, // The level was solved without a recommended block\n\n  // Other.\n  FREE_PLAY: 30, // The user is in free-play mode.\n  EDIT_BLOCKS: 70, // The user is creating/editing a new level.\n\n  // The level was solved in the ideal manner.\n  ALL_PASS: 100,\n\n  // submitted for grading\n  SUBMITTED: 1000\n};\n\nexports.BeeTerminationValue = {\n  FAILURE: false,\n  SUCCESS: true,\n  INFINITE_LOOP: Infinity,\n  NOT_AT_FLOWER: 1, // Tried to get nectar when not at flower.\n  FLOWER_EMPTY: 2, // Tried to get nectar when flower empty.\n  NOT_AT_HONEYCOMB: 3, // Tried to make honey when not at honeycomb.\n  HONEYCOMB_FULL: 4, // Tried to make honey, but no room at honeycomb.\n  UNCHECKED_CLOUD: 5, // Finished puzzle, but didn't check every clouded item\n  UNCHECKED_PURPLE: 6, // Finished puzzle, but didn't check every purple flower\n  INSUFFICIENT_NECTAR: 7, // Didn't collect all nectar by finish\n  INSUFFICIENT_HONEY: 8 // Didn't make all honey by finish\n};\n\nexports.KeyCodes = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  SPACE: 32,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  DELETE: 127\n};\n\n/** @const {string} SVG element namespace */\nexports.SVG_NS = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NvbnN0YW50cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBUUEsT0FBTyxDQUFDLFVBQVUsR0FBRztBQUNuQixPQUFLLEVBQUUsQ0FBQztBQUNSLFNBQU8sRUFBRSxDQUFDO0FBQ1YsU0FBTyxFQUFFLENBQUMsQ0FBQztBQUNYLFNBQU8sRUFBRSxDQUFDO0FBQ1YsT0FBSyxFQUFFLENBQUMsQ0FBQztDQUNWLENBQUM7Ozs7Ozs7OztBQVNGLE9BQU8sQ0FBQyxXQUFXLEdBQUc7O0FBRXBCLGNBQVksRUFBRSxDQUFDLENBQUM7OztBQUdoQixrQkFBZ0IsRUFBRSxDQUFDO0FBQ25CLHFCQUFtQixFQUFFLENBQUM7QUFDdEIsdUJBQXFCLEVBQUUsQ0FBQztBQUN4QiwwQkFBd0IsRUFBRSxDQUFDO0FBQzNCLHVCQUFxQixFQUFFLENBQUM7QUFDeEIsb0JBQWtCLEVBQUUsQ0FBQztBQUNyQixtQkFBaUIsRUFBRSxDQUFDO0FBQ3BCLHdCQUFzQixFQUFFLEVBQUU7QUFDMUIsbUJBQWlCLEVBQUUsRUFBRTtBQUNyQiwyQkFBeUIsRUFBRSxFQUFFO0FBQzdCLGNBQVksRUFBRSxFQUFFO0FBQ2hCLGlCQUFlLEVBQUUsRUFBRTtBQUNuQix3QkFBc0IsRUFBRSxFQUFFO0FBQzFCLDhCQUE0QixFQUFFLEVBQUU7QUFDaEMsZ0NBQThCLEVBQUUsRUFBRTtBQUNsQyx3QkFBc0IsRUFBRSxFQUFFO0FBQzFCLGdCQUFjLEVBQUUsRUFBRTs7O0FBR2xCLDBCQUF3QixFQUFFLENBQUMsQ0FBQzs7QUFFNUIscUJBQW1CLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZCLHNDQUFvQyxFQUFFLENBQUMsQ0FBQzs7O0FBR3hDLHNCQUFvQixFQUFFLEVBQUU7QUFDeEIsOEJBQTRCLEVBQUUsRUFBRTtBQUNoQyxvQ0FBa0MsRUFBRSxFQUFFOzs7QUFHdEMsV0FBUyxFQUFFLEVBQUU7QUFDYixhQUFXLEVBQUUsRUFBRTs7O0FBR2YsVUFBUSxFQUFFLEdBQUc7OztBQUdiLFdBQVMsRUFBRSxJQUFJO0NBQ2hCLENBQUM7O0FBRUYsT0FBTyxDQUFDLG1CQUFtQixHQUFHO0FBQzVCLFNBQU8sRUFBRSxLQUFLO0FBQ2QsU0FBTyxFQUFFLElBQUk7QUFDYixlQUFhLEVBQUUsUUFBUTtBQUN2QixlQUFhLEVBQUUsQ0FBQztBQUNoQixjQUFZLEVBQUUsQ0FBQztBQUNmLGtCQUFnQixFQUFFLENBQUM7QUFDbkIsZ0JBQWMsRUFBRSxDQUFDO0FBQ2pCLGlCQUFlLEVBQUUsQ0FBQztBQUNsQixrQkFBZ0IsRUFBRSxDQUFDO0FBQ25CLHFCQUFtQixFQUFFLENBQUM7QUFDdEIsb0JBQWtCLEVBQUUsQ0FBQztDQUN0QixDQUFDOztBQUVGLE9BQU8sQ0FBQyxRQUFRLEdBQUc7QUFDakIsV0FBUyxFQUFFLENBQUM7QUFDWixPQUFLLEVBQUUsRUFBRTtBQUNULE9BQUssRUFBRSxFQUFFO0FBQ1QsTUFBSSxFQUFFLEVBQUU7QUFDUixJQUFFLEVBQUUsRUFBRTtBQUNOLE9BQUssRUFBRSxFQUFFO0FBQ1QsTUFBSSxFQUFFLEVBQUU7QUFDUixRQUFNLEVBQUUsR0FBRztDQUNaLENBQUM7OztBQUdGLE9BQU8sQ0FBQyxNQUFNLEdBQUcsNEJBQTRCLENBQUMiLCJmaWxlIjoiYnVpbGQvanMvY29uc3RhbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IENvbnN0YW50cyB1c2VkIGluIHByb2R1Y3Rpb24gY29kZSBhbmQgdGVzdHMuXG4gKi9cblxuLyoqXG4gKiBFbnVtZXJhdGlvbiBvZiB1c2VyIHByb2dyYW0gZXhlY3V0aW9uIG91dGNvbWVzLlxuICogVGhlc2UgYXJlIGRldGVybWluZWQgYnkgZWFjaCBhcHAuXG4gKi9cbmV4cG9ydHMuUmVzdWx0VHlwZSA9IHtcbiAgVU5TRVQ6IDAsICAgICAgIC8vIFRoZSByZXN1bHQgaGFzIG5vdCB5ZXQgYmVlbiBjb21wdXRlZC5cbiAgU1VDQ0VTUzogMSwgICAgIC8vIFRoZSBwcm9ncmFtIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHksIGFjaGlldmluZyB0aGUgZ29hbC5cbiAgRkFJTFVSRTogLTEsICAgIC8vIFRoZSBwcm9ncmFtIHJhbiB3aXRob3V0IGVycm9yIGJ1dCBkaWQgbm90IGFjaGlldmUgZ29hbC5cbiAgVElNRU9VVDogMiwgICAgIC8vIFRoZSBwcm9ncmFtIGRpZCBub3QgY29tcGxldGUgKGxpa2VseSBpbmZpbml0ZSBsb29wKS5cbiAgRVJST1I6IC0yICAgICAgIC8vIFRoZSBwcm9ncmFtIGdlbmVyYXRlZCBhbiBlcnJvci5cbn07XG5cbi8qKlxuICogRW51bWVyYXRpb24gb2YgdGVzdCByZXN1bHRzLlxuICogRU1QVFlfQkxPQ0tfRkFJTCBhbmQgRU1QVFlfRlVOQ1RJT05fQkxPQ0tfRkFJTCBjYW4gb25seSBvY2N1ciBpZlxuICogU3R1ZGlvQXBwLmNoZWNrRm9yRW1wdHlCbG9ja3NfIGlzIHRydWUuXG4gKiBOT1RFOiBXZSBzdG9yZSB0aGUgcmVzdWx0cyBmb3IgdXNlciBhdHRlbXB0cyBpbiBvdXIgZGIsIHNvIGNoYW5naW5nIHRoZXNlXG4gKiB2YWx1ZXMgd291bGQgbmVjZXNzaXRhdGUgYSBtaWdyYXRpb25cbiAqL1xuZXhwb3J0cy5UZXN0UmVzdWx0cyA9IHtcbiAgLy8gRGVmYXVsdCB2YWx1ZSBiZWZvcmUgYW55IHRlc3RzIGFyZSBydW4uXG4gIE5PX1RFU1RTX1JVTjogLTEsXG5cbiAgLy8gVGhlIGxldmVsIHdhcyBub3Qgc29sdmVkLlxuICBFTVBUWV9CTE9DS19GQUlMOiAxLCAgICAgICAgICAgICAgICAvLyBBbiBcImlmXCIgb3IgXCJyZXBlYXRcIiBibG9jayB3YXMgZW1wdHkuXG4gIFRPT19GRVdfQkxPQ0tTX0ZBSUw6IDIsICAgICAgICAgICAgIC8vIEZld2VyIHRoYW4gdGhlIGlkZWFsIG51bWJlciBvZiBibG9ja3MgdXNlZC5cbiAgTEVWRUxfSU5DT01QTEVURV9GQUlMOiAzLCAgICAgICAgICAgLy8gRGVmYXVsdCBmYWlsdXJlIHRvIGNvbXBsZXRlIGEgbGV2ZWwuXG4gIE1JU1NJTkdfQkxPQ0tfVU5GSU5JU0hFRDogNCwgICAgICAgIC8vIEEgcmVxdWlyZWQgYmxvY2sgd2FzIG5vdCB1c2VkLlxuICBFWFRSQV9UT1BfQkxPQ0tTX0ZBSUw6IDUsICAgICAgICAgICAvLyBUaGVyZSB3YXMgbW9yZSB0aGFuIG9uZSB0b3AtbGV2ZWwgYmxvY2suXG4gIFJVTlRJTUVfRVJST1JfRkFJTDogNiwgICAgICAgICAgICAgIC8vIFRoZXJlIHdhcyBhIHJ1bnRpbWUgZXJyb3IgaW4gdGhlIHByb2dyYW0uXG4gIFNZTlRBWF9FUlJPUl9GQUlMOiA3LCAgICAgICAgICAgICAgIC8vIFRoZXJlIHdhcyBhIHN5bnRheCBlcnJvciBpbiB0aGUgcHJvZ3JhbS5cbiAgTUlTU0lOR19CTE9DS19GSU5JU0hFRDogMTAsICAgICAgICAgLy8gVGhlIGxldmVsIHdhcyBzb2x2ZWQgd2l0aG91dCByZXF1aXJlZCBibG9jay5cbiAgQVBQX1NQRUNJRklDX0ZBSUw6IDExLCAgICAgICAgICAgICAgLy8gQXBwbGljYXRpb24tc3BlY2lmaWMgZmFpbHVyZS5cbiAgRU1QVFlfRlVOQ1RJT05fQkxPQ0tfRkFJTDogMTIsICAgICAgLy8gQSBcImZ1bmN0aW9uXCIgYmxvY2sgd2FzIGVtcHR5XG4gIFVOVVNFRF9QQVJBTTogMTMsICAgICAgICAgICAgICAgICAgIC8vIFBhcmFtIGRlY2xhcmVkIGJ1dCBub3QgdXNlZCBpbiBmdW5jdGlvbi5cbiAgVU5VU0VEX0ZVTkNUSU9OOiAxNCwgICAgICAgICAgICAgICAgLy8gRnVuY3Rpb24gZGVjbGFyZWQgYnV0IG5vdCB1c2VkIGluIHdvcmtzcGFjZS5cbiAgUEFSQU1fSU5QVVRfVU5BVFRBQ0hFRDogMTUsICAgICAgICAgLy8gRnVuY3Rpb24gbm90IGNhbGxlZCB3aXRoIGVub3VnaCBwYXJhbXMuXG4gIElOQ09NUExFVEVfQkxPQ0tfSU5fRlVOQ1RJT046IDE2LCAgIC8vIEluY29tcGxldGUgYmxvY2sgaW5zaWRlIGEgZnVuY3Rpb24uXG4gIFFVRVNUSU9OX01BUktTX0lOX05VTUJFUl9GSUVMRDogMTcsIC8vIEJsb2NrIGhhcyA/Pz8gaW5zdGVhZCBvZiBhIHZhbHVlLlxuICBFTVBUWV9GVU5DVElPTkFMX0JMT0NLOiAxOCwgICAgICAgICAvLyBUaGVyZSdzIGEgZnVuY3Rpb25hbCBibG9jayB3aXRoIGFuIG9wZW4gaW5wdXRcbiAgRVhBTVBMRV9GQUlMRUQ6IDE5LCAgICAgICAgICAgICAgICAgLy8gT25lIG9mIG91ciBleGFtcGxlcyBkaWRuJ3QgbWF0Y2ggdGhlIGRlZmluaXRpb25cblxuICAvLyBzdGFydCB1c2luZyBuZWdhdGl2ZSB2YWx1ZXMsIHNpbmNlIHdlIGNvbnNpZGVyID49IDIwIHRvIGJlIFwic29sdmVkXCJcbiAgTkVTVEVEX0ZPUl9TQU1FX1ZBUklBQkxFOiAtMiwgLy8gV2UgaGF2ZSBuZXN0ZWQgZm9yIGxvb3BzIGVhY2ggdXNpbmcgdGhlIHNhbWUgY291bnRlciB2YXJpYWJsZVxuICAvLyBOT1RFOiBmb3Igc21vZSBwZXJpb2Qgb2YgdGltZSwgdGhpcyB3YXMgLTEgYW5kIGNvbmZsaWN0ZWQgd2l0aCBOT19URVNUU19SVU5cbiAgRU1QVFlfRlVOQ1RJT05fTkFNRTogLTMsICAgICAgICAgICAgICAgICAgLy8gV2UgaGF2ZSBhIHZhcmlhYmxlIG9yIGZ1bmN0aW9uIHdpdGggdGhlIG5hbWUgXCJcIlxuICBNSVNTSU5HX1JFQ09NTUVOREVEX0JMT0NLX1VORklOSVNIRUQ6IC00LCAvLyBUaGUgbGV2ZWwgd2FzIGF0dGVtcHRlZCBidXQgbm90IHNvbHZlZCB3aXRob3V0IGEgcmVjb21tZW5kZWQgYmxvY2tcblxuICAvLyBUaGUgbGV2ZWwgd2FzIHNvbHZlZCBpbiBhIG5vbi1vcHRpbWFsIHdheS4gIFVzZXIgbWF5IGFkdmFuY2Ugb3IgcmV0cnkuXG4gIFRPT19NQU5ZX0JMT0NLU19GQUlMOiAyMCwgICAgICAgICAgICAgICAvLyBNb3JlIHRoYW4gdGhlIGlkZWFsIG51bWJlciBvZiBibG9ja3Mgd2VyZSB1c2VkLlxuICBBUFBfU1BFQ0lGSUNfQUNDRVBUQUJMRV9GQUlMOiAyMSwgICAgICAgLy8gQXBwbGljYXRpb24tc3BlY2lmaWMgYWNjZXB0YWJsZSBmYWlsdXJlLlxuICBNSVNTSU5HX1JFQ09NTUVOREVEX0JMT0NLX0ZJTklTSEVEOiAyMiwgLy8gVGhlIGxldmVsIHdhcyBzb2x2ZWQgd2l0aG91dCBhIHJlY29tbWVuZGVkIGJsb2NrXG5cbiAgLy8gT3RoZXIuXG4gIEZSRUVfUExBWTogMzAsICAgLy8gVGhlIHVzZXIgaXMgaW4gZnJlZS1wbGF5IG1vZGUuXG4gIEVESVRfQkxPQ0tTOiA3MCwgLy8gVGhlIHVzZXIgaXMgY3JlYXRpbmcvZWRpdGluZyBhIG5ldyBsZXZlbC5cblxuICAvLyBUaGUgbGV2ZWwgd2FzIHNvbHZlZCBpbiB0aGUgaWRlYWwgbWFubmVyLlxuICBBTExfUEFTUzogMTAwLFxuXG4gIC8vIHN1Ym1pdHRlZCBmb3IgZ3JhZGluZ1xuICBTVUJNSVRURUQ6IDEwMDBcbn07XG5cbmV4cG9ydHMuQmVlVGVybWluYXRpb25WYWx1ZSA9IHtcbiAgRkFJTFVSRTogZmFsc2UsXG4gIFNVQ0NFU1M6IHRydWUsXG4gIElORklOSVRFX0xPT1A6IEluZmluaXR5LFxuICBOT1RfQVRfRkxPV0VSOiAxLCAgICAgLy8gVHJpZWQgdG8gZ2V0IG5lY3RhciB3aGVuIG5vdCBhdCBmbG93ZXIuXG4gIEZMT1dFUl9FTVBUWTogMiwgICAgICAvLyBUcmllZCB0byBnZXQgbmVjdGFyIHdoZW4gZmxvd2VyIGVtcHR5LlxuICBOT1RfQVRfSE9ORVlDT01COiAzLCAgLy8gVHJpZWQgdG8gbWFrZSBob25leSB3aGVuIG5vdCBhdCBob25leWNvbWIuXG4gIEhPTkVZQ09NQl9GVUxMOiA0LCAgICAvLyBUcmllZCB0byBtYWtlIGhvbmV5LCBidXQgbm8gcm9vbSBhdCBob25leWNvbWIuXG4gIFVOQ0hFQ0tFRF9DTE9VRDogNSwgICAgLy8gRmluaXNoZWQgcHV6emxlLCBidXQgZGlkbid0IGNoZWNrIGV2ZXJ5IGNsb3VkZWQgaXRlbVxuICBVTkNIRUNLRURfUFVSUExFOiA2LCAgIC8vIEZpbmlzaGVkIHB1enpsZSwgYnV0IGRpZG4ndCBjaGVjayBldmVyeSBwdXJwbGUgZmxvd2VyXG4gIElOU1VGRklDSUVOVF9ORUNUQVI6IDcsLy8gRGlkbid0IGNvbGxlY3QgYWxsIG5lY3RhciBieSBmaW5pc2hcbiAgSU5TVUZGSUNJRU5UX0hPTkVZOiA4ICAvLyBEaWRuJ3QgbWFrZSBhbGwgaG9uZXkgYnkgZmluaXNoXG59O1xuXG5leHBvcnRzLktleUNvZGVzID0ge1xuICBCQUNLU1BBQ0U6IDgsXG4gIEVOVEVSOiAxMyxcbiAgU1BBQ0U6IDMyLFxuICBMRUZUOiAzNyxcbiAgVVA6IDM4LFxuICBSSUdIVDogMzksXG4gIERPV046IDQwLFxuICBERUxFVEU6IDEyN1xufTtcblxuLyoqIEBjb25zdCB7c3RyaW5nfSBTVkcgZWxlbWVudCBuYW1lc3BhY2UgKi9cbmV4cG9ydHMuU1ZHX05TID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js","sourceRoot":"file://localhost","sourceFile":"build/js/constants.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/api.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/api.js","source":"\"use strict\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9hcGkuanMiLCJzb3VyY2VzQ29udGVudCI6W119","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/api.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/api.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/blocks.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/blocks.js","source":"'use strict';\n\nvar blocksToDisplayText = {\n  bedrock: 'bedrock',\n  bricks: 'bricks',\n  clay: 'clay',\n  oreCoal: 'coal ore',\n  dirtCoarse: 'coarse dirt',\n  cobblestone: 'cobblestone',\n  oreDiamond: 'diamond ore',\n  dirt: 'dirt',\n  oreEmerald: 'emerald ore',\n  farmlandWet: 'farmland',\n  glass: 'glass',\n  oreGold: 'gold ore',\n  grass: 'grass',\n  gravel: 'gravel',\n  clayHardened: 'hardened clay',\n  oreIron: 'iron ore',\n  oreLapis: 'lapis ore',\n  lava: 'lava',\n  logAcacia: 'acacia log',\n  logBirch: 'birch log',\n  logJungle: 'jungle log',\n  logOak: 'oak log',\n  logSpruce: 'spruce log',\n  planksAcacia: 'acacia planks',\n  planksBirch: 'birch planks',\n  planksJungle: 'jungle planks',\n  planksOak: 'oak planks',\n  planksSpruce: 'spruce planks',\n  oreRedstone: 'redstone ore',\n  rail: 'rail',\n  sand: 'sand',\n  sandstone: 'sandstone',\n  stone: 'stone',\n  tnt: 'tnt',\n  tree: 'tree',\n  water: 'water',\n  wool: 'wool',\n  '': 'empty'\n};\n\nvar allBlocks = ['bedrock', 'bricks', 'clay', 'oreCoal', 'dirtCoarse', 'cobblestone', 'oreDiamond', 'dirt', 'oreEmerald', 'farmlandWet', 'glass', 'oreGold', 'grass', 'gravel', 'clayHardened', 'oreIron', 'oreLapis', 'lava', 'logAcacia', 'logBirch', 'logJungle', 'logOak', 'logSpruce', 'planksAcacia', 'planksBirch', 'planksJungle', 'planksOak', 'planksSpruce', 'oreRedstone', 'sand', 'sandstone', 'stone', 'tnt', 'tree', 'wool'];\n\nfunction keysToDropdownOptions(keysList) {\n  return keysList.map(function (key) {\n    var displayText = blocksToDisplayText[key] || key;\n    return [displayText, key];\n  });\n}\n\n// Install extensions to Blockly's language and JavaScript generator.\nexports.install = function (blockly, blockInstallOptions) {\n  var dropdownBlocks = (blockInstallOptions.level.availableBlocks || []).concat(JSON.parse(window.localStorage.getItem('craftPlayerInventory')) || []);\n\n  var dropdownBlockSet = {};\n\n  dropdownBlocks.forEach(function (type) {\n    dropdownBlockSet[type] = true;\n  });\n\n  var craftBlockOptions = {\n    inventoryBlocks: Object.keys(dropdownBlockSet),\n    ifBlockOptions: blockInstallOptions.level.ifBlockOptions,\n    placeBlockOptions: blockInstallOptions.level.placeBlockOptions\n  };\n\n  var inventoryBlocksEmpty = !craftBlockOptions.inventoryBlocks || craftBlockOptions.inventoryBlocks.length === 0;\n  var allDropdownBlocks = inventoryBlocksEmpty ? allBlocks : craftBlockOptions.inventoryBlocks;\n\n  blockly.Blocks.craft_moveForward = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(new blockly.FieldLabel(\"move forward\"));\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_moveForward = function () {\n    return 'moveForward(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_turn = {\n    // Block for turning left or right.\n    helpUrl: 'http://code.google.com/p/blockly/wiki/Turn',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(new blockly.FieldDropdown(this.DIRECTIONS), 'DIR');\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Blocks.craft_turn.DIRECTIONS = [[\"turn left\" + ' ↺', 'left'], [\"turn right\" + ' ↻', 'right']];\n\n  blockly.Generator.get('JavaScript').craft_turn = function () {\n    // Generate JavaScript for turning left or right.\n    var dir = this.getTitleValue('DIR');\n    var methodCall = dir === \"left\" ? \"turnLeft\" : \"turnRight\";\n    return methodCall + '(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_destroyBlock = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(new blockly.FieldLabel(\"destroy block\"));\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_destroyBlock = function () {\n    return 'destroyBlock(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_shear = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(new blockly.FieldLabel(\"shear\"));\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_shear = function () {\n    return 'shear(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_whileBlockAhead = {\n    helpUrl: '',\n    init: function init() {\n      var dropdownOptions = keysToDropdownOptions(craftBlockOptions.ifBlockOptions || allDropdownBlocks);\n      var dropdown = new blockly.FieldDropdown(dropdownOptions);\n      dropdown.setValue(dropdownOptions[0][1]);\n\n      this.setHSV(322, 0.90, 0.95);\n      this.appendDummyInput().appendTitle(\"while\").appendTitle(dropdown, 'TYPE').appendTitle(\"ahead\");\n      this.appendStatementInput('DO').appendTitle(\"do\");\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_whileBlockAhead = function () {\n    var innerCode = blockly.Generator.get('JavaScript').statementToCode(this, 'DO');\n    var blockType = this.getTitleValue('TYPE');\n    return 'whileBlockAhead(\\'block_id_' + this.id + '\\',\\n\"' + blockType + '\", ' + '  function() { ' + innerCode + '  }' + ');\\n';\n  };\n\n  blockly.Blocks.craft_ifBlockAhead = {\n    helpUrl: '',\n    init: function init() {\n      var dropdownOptions = keysToDropdownOptions(craftBlockOptions.ifBlockOptions || allDropdownBlocks);\n      var dropdown = new blockly.FieldDropdown(dropdownOptions);\n      dropdown.setValue(dropdownOptions[0][1]);\n      this.setHSV(196, 1.0, 0.79);\n      this.appendDummyInput().appendTitle(\"if\").appendTitle(dropdown, 'TYPE').appendTitle(\"ahead\");\n      this.appendStatementInput('DO').appendTitle(\"do\");\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_ifBlockAhead = function () {\n    var innerCode = blockly.Generator.get('JavaScript').statementToCode(this, 'DO');\n    var blockType = this.getTitleValue('TYPE');\n    return 'ifBlockAhead(\"' + blockType + '\", function() {\\n' + innerCode + '}, \\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_ifLavaAhead = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(196, 1.0, 0.79);\n      this.appendDummyInput().appendTitle(\"if lava ahead\");\n      this.appendStatementInput('DO').appendTitle(\"do\");\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_ifLavaAhead = function () {\n    var innerCode = blockly.Generator.get('JavaScript').statementToCode(this, 'DO');\n    return 'ifLavaAhead(function() {\\n' + innerCode + '}, \\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_placeBlock = {\n    helpUrl: '',\n    init: function init() {\n      var dropdownOptions = keysToDropdownOptions(craftBlockOptions.placeBlockOptions || allDropdownBlocks);\n      var dropdown = new blockly.FieldDropdown(dropdownOptions);\n      dropdown.setValue(dropdownOptions[0][1]);\n\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(\"place\").appendTitle(dropdown, 'TYPE');\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_placeBlock = function () {\n    var blockType = this.getTitleValue('TYPE');\n    return 'placeBlock(\"' + blockType + '\", \\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_placeTorch = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(\"place torch\");\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_placeTorch = function () {\n    return 'placeTorch(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_plantCrop = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle('plant crop');\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_plantCrop = function () {\n    return 'plantCrop(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_tillSoil = {\n    helpUrl: '',\n    init: function init() {\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle('till soil');\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_tillSoil = function () {\n    return 'tillSoil(\\'block_id_' + this.id + '\\');\\n';\n  };\n\n  blockly.Blocks.craft_placeBlockAhead = {\n    helpUrl: '',\n    init: function init() {\n      var dropdownOptions = keysToDropdownOptions(craftBlockOptions.placeBlockOptions || allDropdownBlocks);\n      var dropdown = new blockly.FieldDropdown(dropdownOptions);\n      dropdown.setValue(dropdownOptions[0][1]);\n\n      this.setHSV(184, 1.00, 0.74);\n      this.appendDummyInput().appendTitle(\"place\").appendTitle(dropdown, 'TYPE').appendTitle(\"ahead\");\n      this.setPreviousStatement(true);\n      this.setNextStatement(true);\n    }\n  };\n\n  blockly.Generator.get('JavaScript').craft_placeBlockAhead = function () {\n    var blockType = this.getTitleValue('TYPE');\n    return 'placeBlockAhead(\"' + blockType + '\", \\'block_id_' + this.id + '\\');\\n';\n  };\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/blocks.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/blocks.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/controls.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/controls.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale') ; buf.push('\\n\\n<div id=\"right-button-cell\">\\n  <button id=\"rightButton\" class=\"share\">\\n    <img src=\"', escape((5,  assetUrl('media/1x1.gif') )), '\">', escape((5,  msg.finish() )), '\\n  </button>\\n</div>\\n\\n<!-- This is a comment unique to Craft -->\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/controls.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/craft/controls.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/craft.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/craft.js","source":"/*jshint -W061 */\n// We use eval in our code, this allows it.\n// @see https://jslinterrors.com/eval-is-evil\n\n'use strict';\nvar studioApp = require('../StudioApp').singleton;\nvar commonMsg = require('../locale');\nvar craftMsg = require('./locale');\nvar skins = require('../skins');\nvar codegen = require('../codegen');\nvar api = require('./api');\nvar GameController = require('./game/GameController');\nvar dom = require('../dom');\nvar houseLevels = require('./houseLevels');\nvar levelbuilderOverrides = require('./levelbuilderOverrides');\nvar MusicController = require('../MusicController');\n\nvar ResultType = studioApp.ResultType;\nvar TestResults = studioApp.TestResults;\n\nvar MEDIA_URL = '/blockly/media/craft/';\n\n/**\n * Create a namespace for the application.\n */\nvar Craft = module.exports;\n\nvar characters = {\n  Steve: {\n    name: \"Steve\",\n    staticAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Steve_Neutral.png\",\n    smallStaticAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Steve_Neutral.png\",\n    failureAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Steve_Fail.png\",\n    winAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Steve_Win.png\"\n  },\n  Alex: {\n    name: \"Alex\",\n    staticAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Alex_Neutral.png\",\n    smallStaticAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Alex_Neutral.png\",\n    failureAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Alex_Fail.png\",\n    winAvatar: MEDIA_URL + \"Sliced_Parts/Pop_Up_Character_Alex_Win.png\"\n  }\n};\n\nvar interfaceImages = {\n  1: [MEDIA_URL + \"Sliced_Parts/MC_Loading_Spinner.gif\", MEDIA_URL + \"Sliced_Parts/Game_Window_BG_Frame.png\", MEDIA_URL + \"Sliced_Parts/Pop_Up_Slice.png\", MEDIA_URL + \"Sliced_Parts/Steve_Character_Select.png\", MEDIA_URL + \"Sliced_Parts/Alex_Character_Select.png\", MEDIA_URL + \"Sliced_Parts/X_Button.png\", MEDIA_URL + \"Sliced_Parts/Button_Grey_Slice.png\", MEDIA_URL + \"Sliced_Parts/Run_Button_Up_Slice.png\", MEDIA_URL + \"Sliced_Parts/MC_Run_Arrow_Icon.png\", MEDIA_URL + \"Sliced_Parts/Run_Button_Down_Slice.png\", MEDIA_URL + \"Sliced_Parts/Reset_Button_Up_Slice.png\", MEDIA_URL + \"Sliced_Parts/MC_Reset_Arrow_Icon.png\", MEDIA_URL + \"Sliced_Parts/Reset_Button_Down_Slice.png\", MEDIA_URL + \"Sliced_Parts/Callout_Tail.png\", characters.Steve.staticAvatar, characters.Steve.smallStaticAvatar, characters.Alex.staticAvatar, characters.Alex.smallStaticAvatar],\n  2: [\n  // TODO(bjordan): find different pre-load point for feedback images,\n  // bucket by selected character\n  characters.Alex.winAvatar, characters.Steve.winAvatar, characters.Alex.failureAvatar, characters.Steve.failureAvatar],\n  6: [MEDIA_URL + \"Sliced_Parts/House_Option_A_v3.png\", MEDIA_URL + \"Sliced_Parts/House_Option_B_v3.png\", MEDIA_URL + \"Sliced_Parts/House_Option_C_v3.png\"]\n};\n\nvar musicMetadata = [{ volume: 1, hasOgg: true, name: \"vignette1\" }, { volume: 1, hasOgg: true, name: \"vignette2-quiet\" }, { volume: 1, hasOgg: true, name: \"vignette3\" }, { volume: 1, hasOgg: true, name: \"vignette4-intro\" }, { volume: 1, hasOgg: true, name: \"vignette5-shortpiano\" }, { volume: 1, hasOgg: true, name: \"vignette7-funky-chirps-short\" }, { volume: 1, hasOgg: true, name: \"vignette8-free-play\" }];\n\nvar CHARACTER_STEVE = 'Steve';\nvar CHARACTER_ALEX = 'Alex';\nvar DEFAULT_CHARACTER = CHARACTER_STEVE;\nvar AUTO_LOAD_CHARACTER_ASSET_PACK = 'player' + DEFAULT_CHARACTER;\n\nfunction trySetLocalStorageItem(key, value) {\n  try {\n    window.localStorage.setItem(key, value);\n  } catch (e) {\n    /**\n     * localstorage .setItem in iOS Safari Private Mode always causes an\n     * exception, see http://stackoverflow.com/a/14555361\n     */\n    if (console && console.log) {\n      console.log(\"Couldn't set local storage item for key \" + key);\n    }\n  }\n}\n\n/**\n * Initialize Blockly and the Craft app. Called on page load.\n */\nCraft.init = function (config) {\n  if (config.level.puzzle_number === 1 && config.level.stage_total === 1) {\n    // Not viewing level within a script, bump puzzle # to unused one so\n    // asset loading system and levelbuilder overrides don't think this is\n    // level 1 or any other special level.\n    config.level.puzzle_number = 999;\n  }\n\n  if (config.level.isTestLevel) {\n    config.level.customSlowMotion = 0.1;\n  }\n\n  // Return the version of Internet Explorer (8+) or undefined if not IE.\n  var getIEVersion = function getIEVersion() {\n    return document.documentMode;\n  };\n\n  var ieVersionNumber = getIEVersion();\n  if (ieVersionNumber) {\n    $('body').addClass(\"ieVersion\" + ieVersionNumber);\n  }\n\n  var bodyElement = document.body;\n  bodyElement.className = bodyElement.className + \" minecraft\";\n\n  if (config.level.showPopupOnLoad) {\n    config.level.afterVideoBeforeInstructionsFn = function (showInstructions) {\n      var event = document.createEvent('Event');\n      event.initEvent('instructionsShown', true, true);\n      document.dispatchEvent(event);\n\n      if (config.level.showPopupOnLoad === 'playerSelection') {\n        Craft.showPlayerSelectionPopup(function (selectedPlayer) {\n          Craft.clearPlayerState();\n          trySetLocalStorageItem('craftSelectedPlayer', selectedPlayer);\n          Craft.updateUIForCharacter(selectedPlayer);\n          Craft.initializeAppLevel(config.level);\n          showInstructions();\n        });\n      } else if (config.level.showPopupOnLoad === 'houseLayoutSelection') {\n        Craft.showHouseSelectionPopup(function (selectedHouse) {\n          if (!levelConfig.edit_blocks) {\n            $.extend(config.level, houseLevels[selectedHouse]);\n\n            Blockly.mainBlockSpace.clear();\n            studioApp.setStartBlocks_(config, true);\n          }\n          Craft.initializeAppLevel(config.level);\n          showInstructions();\n        });\n      }\n    };\n  }\n\n  if (config.level.puzzle_number && levelbuilderOverrides[config.level.puzzle_number]) {\n    $.extend(config.level, levelbuilderOverrides[config.level.puzzle_number]);\n  }\n  Craft.initialConfig = config;\n\n  // replace studioApp methods with our own\n  studioApp.reset = this.reset.bind(this);\n  studioApp.runButtonClick = this.runButtonClick.bind(this);\n\n  Craft.level = config.level;\n  Craft.skin = config.skin;\n\n  var levelTracks = [];\n  if (Craft.level.songs && musicMetadata) {\n    levelTracks = musicMetadata.filter(function (trackMetadata) {\n      return Craft.level.songs.indexOf(trackMetadata.name) !== -1;\n    });\n  }\n\n  Craft.musicController = new MusicController(studioApp.cdoSounds, function (filename) {\n    return config.skin.assetUrl('music/' + filename);\n  }, levelTracks, levelTracks.length > 1 ? 7500 : null);\n  if (studioApp.cdoSounds && !studioApp.cdoSounds.isAudioUnlocked()) {\n    // Would use addClickTouchEvent, but iOS9 does not let you unlock audio\n    // on touchstart, only on touchend.\n    var removeEvent = dom.addMouseUpTouchEvent(document, function () {\n      studioApp.cdoSounds.unlockAudio();\n      removeEvent();\n    });\n  }\n\n  // Play music when the instructions are shown\n  var playOnce = function playOnce() {\n    if (studioApp.cdoSounds && studioApp.cdoSounds.isAudioUnlocked()) {\n      $(window).off('run_button_pressed', playOnce);\n\n      window.setTimeout(function () {\n        var hasSongInlevel = Craft.level.songs && Craft.level.songs.length > 1;\n        var songToPlayFirst = hasSongInlevel ? Craft.level.songs[0] : null;\n        Craft.musicController.play(songToPlayFirst);\n      }, Craft.level.songDelay || 1500);\n    }\n  };\n  $(window).on('run_button_pressed', playOnce);\n\n  var character = characters[Craft.getCurrentCharacter()];\n  config.skin.staticAvatar = character.staticAvatar;\n  config.skin.smallStaticAvatar = character.smallStaticAvatar;\n  config.skin.failureAvatar = character.failureAvatar;\n  config.skin.winAvatar = character.winAvatar;\n\n  var levelConfig = config.level;\n  var specialLevelType = levelConfig.specialLevelType;\n  switch (specialLevelType) {\n    case 'houseWallBuild':\n      levelConfig.blocksToStore = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"houseBottomA\", \"houseBottomB\", \"houseBottomC\", \"houseBottomD\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      break;\n  }\n\n  studioApp.init($.extend({}, config, {\n    forceInsertTopBlock: 'when_run',\n    html: require('../templates/page.html.ejs')({\n      assetUrl: studioApp.assetUrl,\n      data: {\n        localeDirection: studioApp.localeDirection(),\n        visualization: require('./visualization.html.ejs')(),\n        controls: require('./controls.html.ejs')({\n          assetUrl: studioApp.assetUrl,\n          shareable: config.level.shareable\n        }),\n        editCode: config.level.editCode,\n        blockCounterClass: 'block-counter-default',\n        readonlyWorkspace: config.readonlyWorkspace\n      }\n    }),\n    loadAudio: function loadAudio() {},\n    afterInject: function afterInject() {\n      var slowMotionURLParam = parseFloat((location.search.split('customSlowMotion=')[1] || '').split('&')[0]);\n      Craft.gameController = new GameController({\n        Phaser: window.Phaser,\n        containerId: 'phaser-game',\n        assetRoot: Craft.skin.assetUrl(''),\n        audioPlayer: {\n          register: studioApp.registerAudio.bind(studioApp),\n          play: studioApp.playAudio.bind(studioApp)\n        },\n        debug: false,\n        customSlowMotion: slowMotionURLParam, // NaN if not set\n        /**\n         * First asset packs to load while video playing, etc.\n         * Won't matter for levels without delayed level initialization\n         * (due to e.g. character / house select popups).\n         */\n        earlyLoadAssetPacks: Craft.earlyLoadAssetsForLevel(levelConfig.puzzle_number),\n        earlyLoadNiceToHaveAssetPacks: Craft.niceToHaveAssetsForLevel(levelConfig.puzzle_number)\n      });\n\n      if (!config.level.showPopupOnLoad) {\n        Craft.initializeAppLevel(config.level);\n      }\n\n      // preload music after essential game initialization assets kicked off loading\n      Craft.musicController.preload();\n    },\n    twitter: {\n      text: \"Share on Twitter\",\n      hashtag: \"Craft\"\n    }\n  }));\n\n  if (config.level.puzzle_number && interfaceImages[config.level.puzzle_number]) {\n    interfaceImages[config.level.puzzle_number].forEach(function (url) {\n      preloadImage(url);\n    });\n  }\n};\n\nvar preloadImage = function preloadImage(url) {\n  var img = new Image();\n  img.src = url;\n};\n\nCraft.characterAssetPackName = function (playerName) {\n  return 'player' + playerName;\n};\n\nCraft.getCurrentCharacter = function () {\n  return window.localStorage.getItem('craftSelectedPlayer') || DEFAULT_CHARACTER;\n};\n\nCraft.updateUIForCharacter = function (character) {\n  Craft.initialConfig.skin.staticAvatar = characters[character].staticAvatar;\n  Craft.initialConfig.skin.smallStaticAvatar = characters[character].smallStaticAvatar;\n  Craft.initialConfig.skin.failureAvatar = characters[character].failureAvatar;\n  Craft.initialConfig.skin.winAvatar = characters[character].winAvatar;\n  studioApp.setIconsFromSkin(Craft.initialConfig.skin);\n  $('#prompt-icon').attr('src', characters[character].smallStaticAvatar);\n};\n\nCraft.showPlayerSelectionPopup = function (onSelectedCallback) {\n  var selectedPlayer = DEFAULT_CHARACTER;\n  var popupDiv = document.createElement('div');\n  popupDiv.innerHTML = require('./dialogs/playerSelection.html.ejs')({\n    image: studioApp.assetUrl()\n  });\n  var popupDialog = studioApp.createModalDialog({\n    contentDiv: popupDiv,\n    defaultBtnSelector: '#choose-steve',\n    onHidden: function onHidden() {\n      onSelectedCallback(selectedPlayer);\n    },\n    id: 'craft-popup-player-selection'\n  });\n  dom.addClickTouchEvent($('#close-character-select')[0], (function () {\n    popupDialog.hide();\n  }).bind(this));\n  dom.addClickTouchEvent($('#choose-steve')[0], (function () {\n    selectedPlayer = CHARACTER_STEVE;\n    popupDialog.hide();\n  }).bind(this));\n  dom.addClickTouchEvent($('#choose-alex')[0], (function () {\n    selectedPlayer = CHARACTER_ALEX;\n    popupDialog.hide();\n  }).bind(this));\n  popupDialog.show();\n};\n\nCraft.showHouseSelectionPopup = function (onSelectedCallback) {\n  var popupDiv = document.createElement('div');\n  popupDiv.innerHTML = require('./dialogs/houseSelection.html.ejs')({\n    image: studioApp.assetUrl()\n  });\n  var selectedHouse = 'houseA';\n\n  var popupDialog = studioApp.createModalDialog({\n    contentDiv: popupDiv,\n    defaultBtnSelector: '#choose-house-a',\n    onHidden: function onHidden() {\n      onSelectedCallback(selectedHouse);\n    },\n    id: 'craft-popup-house-selection',\n    icon: characters[Craft.getCurrentCharacter()].staticAvatar\n  });\n\n  dom.addClickTouchEvent($('#close-house-select')[0], (function () {\n    popupDialog.hide();\n  }).bind(this));\n  dom.addClickTouchEvent($('#choose-house-a')[0], (function () {\n    selectedHouse = \"houseA\";\n    popupDialog.hide();\n  }).bind(this));\n  dom.addClickTouchEvent($('#choose-house-b')[0], (function () {\n    selectedHouse = \"houseB\";\n    popupDialog.hide();\n  }).bind(this));\n  dom.addClickTouchEvent($('#choose-house-c')[0], (function () {\n    selectedHouse = \"houseC\";\n    popupDialog.hide();\n  }).bind(this));\n\n  popupDialog.show();\n};\n\nCraft.clearPlayerState = function () {\n  window.localStorage.removeItem('craftHouseBlocks');\n  window.localStorage.removeItem('craftPlayerInventory');\n  window.localStorage.removeItem('craftSelectedPlayer');\n  window.localStorage.removeItem('craftSelectedHouse');\n};\n\nCraft.onHouseSelected = function (houseType) {\n  trySetLocalStorageItem('craftSelectedHouse', houseType);\n};\n\nCraft.initializeAppLevel = function (levelConfig) {\n  var houseBlocks = JSON.parse(window.localStorage.getItem('craftHouseBlocks'));\n  Craft.foldInCustomHouseBlocks(houseBlocks, levelConfig);\n\n  var fluffPlane = [];\n  // TODO(bjordan): remove configuration requirement in visualization\n  for (var i = 0; i < (levelConfig.gridWidth || 10) * (levelConfig.gridHeight || 10); i++) {\n    fluffPlane.push('');\n  }\n\n  var levelAssetPacks = {\n    beforeLoad: Craft.minAssetsForLevelWithCharacter(levelConfig.puzzle_number),\n    afterLoad: Craft.afterLoadAssetsForLevel(levelConfig.puzzle_number)\n  };\n\n  Craft.gameController.loadLevel({\n    isDaytime: levelConfig.isDaytime,\n    groundPlane: levelConfig.groundPlane,\n    groundDecorationPlane: levelConfig.groundDecorationPlane,\n    actionPlane: levelConfig.actionPlane,\n    fluffPlane: fluffPlane,\n    playerStartPosition: levelConfig.playerStartPosition,\n    playerStartDirection: levelConfig.playerStartDirection,\n    playerName: Craft.getCurrentCharacter(),\n    assetPacks: levelAssetPacks,\n    specialLevelType: levelConfig.specialLevelType,\n    houseBottomRight: levelConfig.houseBottomRight,\n    gridDimensions: levelConfig.gridWidth && levelConfig.gridHeight ? [levelConfig.gridWidth, levelConfig.gridHeight] : null,\n    verificationFunction: eval('[' + levelConfig.verificationFunction + ']')[0] // TODO(bjordan): add to utils\n  });\n};\n\nCraft.minAssetsForLevelWithCharacter = function (levelNumber) {\n  return Craft.minAssetsForLevelNumber(levelNumber).concat([Craft.characterAssetPackName(Craft.getCurrentCharacter())]);\n};\n\nCraft.minAssetsForLevelNumber = function (levelNumber) {\n  switch (levelNumber) {\n    case 1:\n      return ['levelOneAssets'];\n    case 2:\n      return ['levelTwoAssets'];\n    case 3:\n      return ['levelThreeAssets'];\n    default:\n      return ['allAssetsMinusPlayer'];\n  }\n};\n\nCraft.afterLoadAssetsForLevel = function (levelNumber) {\n  // After level loads & player starts playing, kick off further asset downloads\n  switch (levelNumber) {\n    case 1:\n      // can disable if performance issue on early level 1\n      return Craft.minAssetsForLevelNumber(2);\n    case 2:\n      return Craft.minAssetsForLevelNumber(3);\n    default:\n      // May want to push this to occur on level with video\n      return ['allAssetsMinusPlayer'];\n  }\n};\n\nCraft.earlyLoadAssetsForLevel = function (levelNumber) {\n  switch (levelNumber) {\n    case 1:\n      return Craft.minAssetsForLevelNumber(levelNumber);\n    default:\n      return Craft.minAssetsForLevelWithCharacter(levelNumber);\n  }\n};\n\nCraft.niceToHaveAssetsForLevel = function (levelNumber) {\n  switch (levelNumber) {\n    case 1:\n      return ['playerSteve', 'playerAlex'];\n    default:\n      return ['allAssetsMinusPlayer'];\n  }\n};\n\n/** Folds array B on top of array A */\nCraft.foldInArray = function (arrayA, arrayB) {\n  for (var i = 0; i < arrayA.length; i++) {\n    if (arrayB[i] !== '') {\n      arrayA[i] = arrayB[i];\n    }\n  }\n};\n\nCraft.foldInCustomHouseBlocks = function (houseBlockMap, levelConfig) {\n  var planesToCustomize = [levelConfig.groundPlane, levelConfig.actionPlane];\n  planesToCustomize.forEach(function (plane) {\n    for (var i = 0; i < plane.length; i++) {\n      var item = plane[i];\n      if (item.match(/house/)) {\n        plane[i] = houseBlockMap && houseBlockMap[item] ? houseBlockMap[item] : \"planksBirch\";\n      }\n    }\n  });\n};\n\n/**\n * Reset the app to the start position and kill any pending animation tasks.\n * @param {boolean} first true if first reset\n */\nCraft.reset = function (first) {\n  if (first) {\n    return;\n  }\n  Craft.gameController.codeOrgAPI.resetAttempt();\n};\n\nCraft.phaserLoaded = function () {\n  return Craft.gameController && Craft.gameController.game && !Craft.gameController.game.load.isLoading;\n};\n\n/**\n * Click the run button.  Start the program.\n */\nCraft.runButtonClick = function () {\n  if (!Craft.phaserLoaded()) {\n    return;\n  }\n\n  var runButton = document.getElementById('runButton');\n  var resetButton = document.getElementById('resetButton');\n\n  // Ensure that Reset button is at least as wide as Run button.\n  if (!resetButton.style.minWidth) {\n    resetButton.style.minWidth = runButton.offsetWidth + 'px';\n  }\n\n  studioApp.toggleRunReset('reset');\n  Blockly.mainBlockSpace.traceOn(true);\n  studioApp.attempts++;\n\n  Craft.executeUserCode();\n};\n\nCraft.executeUserCode = function () {\n  if (Craft.initialConfig.level.edit_blocks) {\n    this.reportResult(true);\n    return;\n  }\n\n  if (studioApp.hasExtraTopBlocks()) {\n    // immediately check answer instead of executing, which will fail and\n    // report top level blocks (rather than executing them)\n    this.reportResult(false);\n    return;\n  }\n\n  studioApp.playAudio('start');\n\n  // Start tracing calls.\n  Blockly.mainBlockSpace.traceOn(true);\n\n  var appCodeOrgAPI = Craft.gameController.codeOrgAPI;\n  appCodeOrgAPI.startCommandCollection();\n  // Run user generated code, calling appCodeOrgAPI\n  var code = Blockly.Generator.blockSpaceToCode('JavaScript');\n  codegen.evalWith(code, {\n    moveForward: function moveForward(blockID) {\n      appCodeOrgAPI.moveForward(studioApp.highlight.bind(studioApp, blockID));\n    },\n    turnLeft: function turnLeft(blockID) {\n      appCodeOrgAPI.turn(studioApp.highlight.bind(studioApp, blockID), \"left\");\n    },\n    turnRight: function turnRight(blockID) {\n      appCodeOrgAPI.turn(studioApp.highlight.bind(studioApp, blockID), \"right\");\n    },\n    destroyBlock: function destroyBlock(blockID) {\n      appCodeOrgAPI.destroyBlock(studioApp.highlight.bind(studioApp, blockID));\n    },\n    shear: function shear(blockID) {\n      appCodeOrgAPI.destroyBlock(studioApp.highlight.bind(studioApp, blockID));\n    },\n    tillSoil: function tillSoil(blockID) {\n      appCodeOrgAPI.tillSoil(studioApp.highlight.bind(studioApp, blockID));\n    },\n    whilePathAhead: function whilePathAhead(blockID, callback) {\n      // if resurrected, move blockID be last parameter to fix \"Show Code\"\n      appCodeOrgAPI.whilePathAhead(studioApp.highlight.bind(studioApp, blockID), '', callback);\n    },\n    whileBlockAhead: function whileBlockAhead(blockID, blockType, callback) {\n      // if resurrected, move blockID be last parameter to fix \"Show Code\"\n      appCodeOrgAPI.whilePathAhead(studioApp.highlight.bind(studioApp, blockID), blockType, callback);\n    },\n    ifLavaAhead: function ifLavaAhead(callback, blockID) {\n      // if resurrected, move blockID be last parameter to fix \"Show Code\"\n      appCodeOrgAPI.ifBlockAhead(studioApp.highlight.bind(studioApp, blockID), \"lava\", callback);\n    },\n    ifBlockAhead: function ifBlockAhead(blockType, callback, blockID) {\n      appCodeOrgAPI.ifBlockAhead(studioApp.highlight.bind(studioApp, blockID), blockType, callback);\n    },\n    placeBlock: function placeBlock(blockType, blockID) {\n      appCodeOrgAPI.placeBlock(studioApp.highlight.bind(studioApp, blockID), blockType);\n    },\n    plantCrop: function plantCrop(blockID) {\n      appCodeOrgAPI.placeBlock(studioApp.highlight.bind(studioApp, blockID), \"cropWheat\");\n    },\n    placeTorch: function placeTorch(blockID) {\n      appCodeOrgAPI.placeBlock(studioApp.highlight.bind(studioApp, blockID), \"torch\");\n    },\n    placeBlockAhead: function placeBlockAhead(blockType, blockID) {\n      appCodeOrgAPI.placeInFront(studioApp.highlight.bind(studioApp, blockID), blockType);\n    }\n  });\n  appCodeOrgAPI.startAttempt((function (success, levelModel) {\n    this.reportResult(success);\n\n    var tileIDsToStore = Craft.initialConfig.level.blocksToStore;\n    if (success && tileIDsToStore) {\n      var newHouseBlocks = JSON.parse(window.localStorage.getItem('craftHouseBlocks')) || {};\n      for (var i = 0; i < levelModel.actionPlane.length; i++) {\n        if (tileIDsToStore[i] !== '') {\n          newHouseBlocks[tileIDsToStore[i]] = levelModel.actionPlane[i].blockType;\n        }\n      }\n      trySetLocalStorageItem('craftHouseBlocks', JSON.stringify(newHouseBlocks));\n    }\n\n    var attemptInventoryTypes = levelModel.getInventoryTypes();\n    var playerInventoryTypes = JSON.parse(window.localStorage.getItem('craftPlayerInventory')) || [];\n\n    var newInventorySet = {};\n    attemptInventoryTypes.concat(playerInventoryTypes).forEach(function (type) {\n      newInventorySet[type] = true;\n    });\n\n    trySetLocalStorageItem('craftPlayerInventory', JSON.stringify(Object.keys(newInventorySet)));\n  }).bind(this));\n};\n\nCraft.getTestResultFrom = function (success, studioTestResults) {\n  if (Craft.initialConfig.level.freePlay) {\n    return TestResults.FREE_PLAY;\n  }\n\n  if (studioTestResults === TestResults.LEVEL_INCOMPLETE_FAIL) {\n    return TestResults.APP_SPECIFIC_FAIL;\n  }\n\n  return studioTestResults;\n};\n\nCraft.reportResult = function (success) {\n  var studioTestResults = studioApp.getTestResults(success);\n  var testResultType = Craft.getTestResultFrom(success, studioTestResults);\n\n  var keepPlayingText = Craft.replayTextForResult(testResultType);\n\n  studioApp.report({\n    app: 'craft',\n    level: Craft.initialConfig.level.id,\n    result: Craft.initialConfig.level.freePlay ? true : success,\n    testResult: testResultType,\n    program: encodeURIComponent(Blockly.Xml.domToText(Blockly.Xml.blockSpaceToDom(Blockly.mainBlockSpace))),\n    // typically delay feedback until response back\n    // for things like e.g. crowdsourced hints & hint blocks\n    onComplete: function onComplete(response) {\n      studioApp.displayFeedback({\n        keepPlayingText: keepPlayingText,\n        app: 'craft',\n        skin: Craft.initialConfig.skin.id,\n        feedbackType: testResultType,\n        response: response,\n        level: Craft.initialConfig.level,\n        appStrings: {\n          reinfFeedbackMsg: craftMsg.reinfFeedbackMsg(),\n          nextLevelMsg: craftMsg.nextLevelMsg({\n            puzzleNumber: Craft.initialConfig.level.puzzle_number\n          }),\n          tooManyBlocksFailMsgFunction: craftMsg.tooManyBlocksFail\n        },\n        feedbackImage: Craft.initialConfig.level.freePlay ? Craft.gameController.getScreenshot() : null,\n        showingSharing: Craft.initialConfig.level.freePlay\n      });\n    }\n  });\n};\n\nCraft.replayTextForResult = function (testResultType) {\n  if (testResultType === TestResults.FREE_PLAY) {\n    return \"Keep Playing\";\n  } else if (testResultType <= TestResults.APP_SPECIFIC_ACCEPTABLE_FAIL) {\n    return commonMsg.tryAgain();\n  } else {\n    return \"Replay\";\n  }\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../StudioApp":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js","../dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","../skins":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js","../codegen":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js","../MusicController":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/MusicController.js","./locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/locale.js","./api":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/api.js","./houseLevels":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/houseLevels.js","./levelbuilderOverrides":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levelbuilderOverrides.js","./visualization.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/visualization.html.ejs","./controls.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/controls.html.ejs","../templates/page.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/page.html.ejs","./dialogs/playerSelection.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/playerSelection.html.ejs","./dialogs/houseSelection.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/houseSelection.html.ejs","./game/GameController":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/GameController.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/craft.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/craft.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/houseSelection.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/houseSelection.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<h1 class=\"minecraft-big-yellow-header\" id=\"getting-started-header\">Let\\'s build a house.</h1>\\n\\n<h2 id=\"select-house-text\">Choose the floor plan for your house.</h2>\\n\\n<div id=\"choose-house-container\">\\n  <div class=\"minecraft-house\" id=\"choose-house-a\">\\n    <h1 class=\"minecraft-big-yellow-header\">Easy</h1>\\n    <div class=\"house-outline-container\">\\n      <div class=\"house-photo\" id=\"house-a-picture\"></div>\\n    </div>\\n    <div class=\"choose-house-button\">Select</div>\\n  </div>\\n  <div class=\"minecraft-house\" id=\"choose-house-b\">\\n    <h1 class=\"minecraft-big-yellow-header\">Medium</h1>\\n    <div class=\"house-outline-container\">\\n      <div class=\"house-photo\" id=\"house-b-picture\"></div>\\n    </div>\\n    <div class=\"choose-house-button\">Select</div>\\n  </div>\\n  <div class=\"minecraft-house\" id=\"choose-house-c\">\\n    <h1 class=\"minecraft-big-yellow-header\">Hard</h1>\\n    <div class=\"house-outline-container\">\\n      <div class=\"house-photo\" id=\"house-c-picture\"></div>\\n    </div>\\n    <div class=\"choose-house-button\">Select</div>\\n  </div>\\n</div>\\n\\n<div id=\"close-house-select\"></div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/houseSelection.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/craft/dialogs/houseSelection.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/playerSelection.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/playerSelection.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<h1 class=\"minecraft-big-yellow-header\" id=\"getting-started-header\">Let\\'s get started.</h1>\\n\\n<h2 id=\"select-character-text\">Choose your character.</h2>\\n\\n<div id=\"choose-character-container\">\\n  <div class=\"minecraft-character\" id=\"choose-steve\">\\n    <h1 class=\"minecraft-big-yellow-header\">Steve</h1>\\n    <div class=\"character-portrait\" id=\"steve-portrait\"></div>\\n    <div class=\"choose-character-button\" id=\"choose-steve-select\">Select</div>\\n  </div>\\n  <div class=\"minecraft-character\" id=\"choose-alex\">\\n    <h1 class=\"minecraft-big-yellow-header\">Alex</h1>\\n    <div class=\"character-portrait\" id=\"alex-portrait\"></div>\\n    <div class=\"choose-character-button\" id=\"choose-alex-select\">Select</div>\\n  </div>\\n</div>\\n\\n<div id=\"close-character-select\"></div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/playerSelection.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/craft/dialogs/playerSelection.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/API/CodeOrgAPI.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/API/CodeOrgAPI.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.get = get;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _CommandQueueCommandQueueJs = require(\"../CommandQueue/CommandQueue.js\");\n\nvar _CommandQueueCommandQueueJs2 = _interopRequireDefault(_CommandQueueCommandQueueJs);\n\nvar _CommandQueueBaseCommandJs = require(\"../CommandQueue/BaseCommand.js\");\n\nvar _CommandQueueBaseCommandJs2 = _interopRequireDefault(_CommandQueueBaseCommandJs);\n\nvar _CommandQueueDestroyBlockCommandJs = require(\"../CommandQueue/DestroyBlockCommand.js\");\n\nvar _CommandQueueDestroyBlockCommandJs2 = _interopRequireDefault(_CommandQueueDestroyBlockCommandJs);\n\nvar _CommandQueuePlaceBlockCommandJs = require(\"../CommandQueue/PlaceBlockCommand.js\");\n\nvar _CommandQueuePlaceBlockCommandJs2 = _interopRequireDefault(_CommandQueuePlaceBlockCommandJs);\n\nvar _CommandQueuePlaceInFrontCommandJs = require(\"../CommandQueue/PlaceInFrontCommand.js\");\n\nvar _CommandQueuePlaceInFrontCommandJs2 = _interopRequireDefault(_CommandQueuePlaceInFrontCommandJs);\n\nvar _CommandQueueMoveForwardCommandJs = require(\"../CommandQueue/MoveForwardCommand.js\");\n\nvar _CommandQueueMoveForwardCommandJs2 = _interopRequireDefault(_CommandQueueMoveForwardCommandJs);\n\nvar _CommandQueueTurnCommandJs = require(\"../CommandQueue/TurnCommand.js\");\n\nvar _CommandQueueTurnCommandJs2 = _interopRequireDefault(_CommandQueueTurnCommandJs);\n\nvar _CommandQueueWhileCommandJs = require(\"../CommandQueue/WhileCommand.js\");\n\nvar _CommandQueueWhileCommandJs2 = _interopRequireDefault(_CommandQueueWhileCommandJs);\n\nvar _CommandQueueIfBlockAheadCommandJs = require(\"../CommandQueue/IfBlockAheadCommand.js\");\n\nvar _CommandQueueIfBlockAheadCommandJs2 = _interopRequireDefault(_CommandQueueIfBlockAheadCommandJs);\n\nvar _CommandQueueCheckSolutionCommandJs = require(\"../CommandQueue/CheckSolutionCommand.js\");\n\nvar _CommandQueueCheckSolutionCommandJs2 = _interopRequireDefault(_CommandQueueCheckSolutionCommandJs);\n\nfunction get(controller) {\n    return {\n        /**\n         * Called before a list of user commands will be issued.\n         */\n        startCommandCollection: function startCommandCollection() {\n            if (controller.DEBUG) {\n                console.log(\"Collecting commands.\");\n            }\n        },\n\n        /**\n         * Called when an attempt should be started, and the entire set of\n         * command-queue API calls have been issued.\n         *\n         * @param {Function} onAttemptComplete - callback with two parameters,\n         * \"success\", i.e., true if attempt was successful (level completed),\n         * false if unsuccessful (level not completed), and the current level model.\n         */\n        startAttempt: function startAttempt(onAttemptComplete) {\n            controller.OnCompleteCallback = onAttemptComplete;\n            controller.queue.addCommand(new _CommandQueueCheckSolutionCommandJs2[\"default\"](controller));\n            controller.queue.begin();\n        },\n\n        resetAttempt: function resetAttempt() {\n            controller.reset();\n            controller.queue.reset();\n            controller.OnCompleteCallback = null;\n        },\n\n        moveForward: function moveForward(highlightCallback) {\n            controller.queue.addCommand(new _CommandQueueMoveForwardCommandJs2[\"default\"](controller, highlightCallback));\n        },\n\n        turn: function turn(highlightCallback, direction) {\n            controller.queue.addCommand(new _CommandQueueTurnCommandJs2[\"default\"](controller, highlightCallback, direction === 'right' ? 1 : -1));\n        },\n\n        turnRight: function turnRight(highlightCallback) {\n            controller.queue.addCommand(new _CommandQueueTurnCommandJs2[\"default\"](controller, highlightCallback, 1));\n        },\n\n        turnLeft: function turnLeft(highlightCallback) {\n            controller.queue.addCommand(new _CommandQueueTurnCommandJs2[\"default\"](controller, highlightCallback, -1));\n        },\n\n        destroyBlock: function destroyBlock(highlightCallback) {\n            controller.queue.addCommand(new _CommandQueueDestroyBlockCommandJs2[\"default\"](controller, highlightCallback));\n        },\n\n        placeBlock: function placeBlock(highlightCallback, blockType) {\n            controller.queue.addCommand(new _CommandQueuePlaceBlockCommandJs2[\"default\"](controller, highlightCallback, blockType));\n        },\n\n        placeInFront: function placeInFront(highlightCallback, blockType) {\n            controller.queue.addCommand(new _CommandQueuePlaceInFrontCommandJs2[\"default\"](controller, highlightCallback, blockType));\n        },\n\n        tillSoil: function tillSoil(highlightCallback) {\n            controller.queue.addCommand(new _CommandQueuePlaceInFrontCommandJs2[\"default\"](controller, highlightCallback, 'watering'));\n        },\n\n        whilePathAhead: function whilePathAhead(highlightCallback, blockType, codeBlock) {\n            controller.queue.addCommand(new _CommandQueueWhileCommandJs2[\"default\"](controller, highlightCallback, blockType, codeBlock));\n        },\n\n        ifBlockAhead: function ifBlockAhead(highlightCallback, blockType, codeBlock) {\n            controller.queue.addCommand(new _CommandQueueIfBlockAheadCommandJs2[\"default\"](controller, highlightCallback, blockType, codeBlock));\n        },\n\n        getScreenshot: function getScreenshot() {\n            return controller.getScreenshot();\n        }\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQVBJL0NvZGVPcmdBUEkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzBDQUF5QixpQ0FBaUM7Ozs7eUNBQ2xDLGdDQUFnQzs7OztpREFDeEIsd0NBQXdDOzs7OytDQUMxQyxzQ0FBc0M7Ozs7aURBQ3BDLHdDQUF3Qzs7OztnREFDekMsdUNBQXVDOzs7O3lDQUM5QyxnQ0FBZ0M7Ozs7MENBQy9CLGlDQUFpQzs7OztpREFDMUIsd0NBQXdDOzs7O2tEQUN2Qyx5Q0FBeUM7Ozs7QUFFbkUsU0FBUyxHQUFHLENBQUMsVUFBVSxFQUFFO0FBQzlCLFdBQU87Ozs7QUFJTCw4QkFBc0IsRUFBRSxrQ0FBVztBQUNqQyxnQkFBSSxVQUFVLENBQUMsS0FBSyxFQUFFO0FBQ3BCLHVCQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7YUFDckM7U0FDRjs7Ozs7Ozs7OztBQVVELG9CQUFZLEVBQUUsc0JBQVMsaUJBQWlCLEVBQUU7QUFDdEMsc0JBQVUsQ0FBQyxrQkFBa0IsR0FBRyxpQkFBaUIsQ0FBQztBQUNsRCxzQkFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsb0RBQXlCLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDbEUsc0JBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDNUI7O0FBRUQsb0JBQVksRUFBRSx3QkFBVztBQUNyQixzQkFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ25CLHNCQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ3pCLHNCQUFVLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1NBQ3hDOztBQUVELG1CQUFXLEVBQUUscUJBQVMsaUJBQWlCLEVBQUU7QUFDckMsc0JBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLGtEQUF1QixVQUFVLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1NBQ3RGOztBQUVELFlBQUksRUFBRSxjQUFTLGlCQUFpQixFQUFFLFNBQVMsRUFBRTtBQUN6QyxzQkFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsMkNBQWdCLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEtBQUssT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDL0c7O0FBRUQsaUJBQVMsRUFBRSxtQkFBUyxpQkFBaUIsRUFBRTtBQUNuQyxzQkFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsMkNBQWdCLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xGOztBQUVELGdCQUFRLEVBQUUsa0JBQVMsaUJBQWlCLEVBQUU7QUFDbEMsc0JBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLDJDQUFnQixVQUFVLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25GOztBQUVELG9CQUFZLEVBQUUsc0JBQVMsaUJBQWlCLEVBQUU7QUFDdEMsc0JBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLG1EQUF3QixVQUFVLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1NBQ3ZGOztBQUVELGtCQUFVLEVBQUUsb0JBQVMsaUJBQWlCLEVBQUUsU0FBUyxFQUFFO0FBQy9DLHNCQUFVLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxpREFBc0IsVUFBVSxFQUFFLGlCQUFpQixFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7U0FDaEc7O0FBRUQsb0JBQVksRUFBRSxzQkFBUyxpQkFBaUIsRUFBRSxTQUFTLEVBQUU7QUFDakQsc0JBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLG1EQUF3QixVQUFVLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUNsRzs7QUFFRCxnQkFBUSxFQUFFLGtCQUFTLGlCQUFpQixFQUFFO0FBQ2xDLHNCQUFVLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxtREFBd0IsVUFBVSxFQUFFLGlCQUFpQixFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7U0FDbkc7O0FBRUQsc0JBQWMsRUFBRSx3QkFBUyxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFO0FBQzlELHNCQUFVLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyw0Q0FBaUIsVUFBVSxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO1NBQ3RHOztBQUVELG9CQUFZLEVBQUUsc0JBQVMsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRTtBQUM1RCxzQkFBVSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsbURBQXdCLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUM3Rzs7QUFFRCxxQkFBYSxFQUFFLHlCQUFXO0FBQ3RCLG1CQUFPLFVBQVUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUNyQztLQUNGLENBQUM7Q0FDSCIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0FQSS9Db2RlT3JnQVBJLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbW1hbmRRdWV1ZSBmcm9tIFwiLi4vQ29tbWFuZFF1ZXVlL0NvbW1hbmRRdWV1ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvQmFzZUNvbW1hbmQuanNcIjtcbmltcG9ydCBEZXN0cm95QmxvY2tDb21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvRGVzdHJveUJsb2NrQ29tbWFuZC5qc1wiO1xuaW1wb3J0IFBsYWNlQmxvY2tDb21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvUGxhY2VCbG9ja0NvbW1hbmQuanNcIjtcbmltcG9ydCBQbGFjZUluRnJvbnRDb21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvUGxhY2VJbkZyb250Q29tbWFuZC5qc1wiO1xuaW1wb3J0IE1vdmVGb3J3YXJkQ29tbWFuZCBmcm9tIFwiLi4vQ29tbWFuZFF1ZXVlL01vdmVGb3J3YXJkQ29tbWFuZC5qc1wiO1xuaW1wb3J0IFR1cm5Db21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvVHVybkNvbW1hbmQuanNcIjtcbmltcG9ydCBXaGlsZUNvbW1hbmQgZnJvbSBcIi4uL0NvbW1hbmRRdWV1ZS9XaGlsZUNvbW1hbmQuanNcIjtcbmltcG9ydCBJZkJsb2NrQWhlYWRDb21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvSWZCbG9ja0FoZWFkQ29tbWFuZC5qc1wiO1xuaW1wb3J0IENoZWNrU29sdXRpb25Db21tYW5kIGZyb20gXCIuLi9Db21tYW5kUXVldWUvQ2hlY2tTb2x1dGlvbkNvbW1hbmQuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldChjb250cm9sbGVyKSB7XG4gIHJldHVybiB7XG4gICAgLyoqXG4gICAgICogQ2FsbGVkIGJlZm9yZSBhIGxpc3Qgb2YgdXNlciBjb21tYW5kcyB3aWxsIGJlIGlzc3VlZC5cbiAgICAgKi9cbiAgICBzdGFydENvbW1hbmRDb2xsZWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChjb250cm9sbGVyLkRFQlVHKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ29sbGVjdGluZyBjb21tYW5kcy5cIik7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENhbGxlZCB3aGVuIGFuIGF0dGVtcHQgc2hvdWxkIGJlIHN0YXJ0ZWQsIGFuZCB0aGUgZW50aXJlIHNldCBvZlxuICAgICAqIGNvbW1hbmQtcXVldWUgQVBJIGNhbGxzIGhhdmUgYmVlbiBpc3N1ZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkF0dGVtcHRDb21wbGV0ZSAtIGNhbGxiYWNrIHdpdGggdHdvIHBhcmFtZXRlcnMsXG4gICAgICogXCJzdWNjZXNzXCIsIGkuZS4sIHRydWUgaWYgYXR0ZW1wdCB3YXMgc3VjY2Vzc2Z1bCAobGV2ZWwgY29tcGxldGVkKSxcbiAgICAgKiBmYWxzZSBpZiB1bnN1Y2Nlc3NmdWwgKGxldmVsIG5vdCBjb21wbGV0ZWQpLCBhbmQgdGhlIGN1cnJlbnQgbGV2ZWwgbW9kZWwuXG4gICAgICovXG4gICAgc3RhcnRBdHRlbXB0OiBmdW5jdGlvbihvbkF0dGVtcHRDb21wbGV0ZSkge1xuICAgICAgICBjb250cm9sbGVyLk9uQ29tcGxldGVDYWxsYmFjayA9IG9uQXR0ZW1wdENvbXBsZXRlO1xuICAgICAgICBjb250cm9sbGVyLnF1ZXVlLmFkZENvbW1hbmQobmV3IENoZWNrU29sdXRpb25Db21tYW5kKGNvbnRyb2xsZXIpKTtcbiAgICAgICAgY29udHJvbGxlci5xdWV1ZS5iZWdpbigpO1xuICAgIH0sXG5cbiAgICByZXNldEF0dGVtcHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb250cm9sbGVyLnJlc2V0KCk7XG4gICAgICAgIGNvbnRyb2xsZXIucXVldWUucmVzZXQoKTtcbiAgICAgICAgY29udHJvbGxlci5PbkNvbXBsZXRlQ2FsbGJhY2sgPSBudWxsO1xuICAgIH0sXG5cbiAgICBtb3ZlRm9yd2FyZDogZnVuY3Rpb24oaGlnaGxpZ2h0Q2FsbGJhY2spIHtcbiAgICAgICAgY29udHJvbGxlci5xdWV1ZS5hZGRDb21tYW5kKG5ldyBNb3ZlRm9yd2FyZENvbW1hbmQoY29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2spKTtcbiAgICB9LFxuXG4gICAgdHVybjogZnVuY3Rpb24oaGlnaGxpZ2h0Q2FsbGJhY2ssIGRpcmVjdGlvbikge1xuICAgICAgICBjb250cm9sbGVyLnF1ZXVlLmFkZENvbW1hbmQobmV3IFR1cm5Db21tYW5kKGNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCBkaXJlY3Rpb24gPT09ICdyaWdodCcgPyAxIDogLTEpKTtcbiAgICB9LFxuXG4gICAgdHVyblJpZ2h0OiBmdW5jdGlvbihoaWdobGlnaHRDYWxsYmFjaykge1xuICAgICAgICBjb250cm9sbGVyLnF1ZXVlLmFkZENvbW1hbmQobmV3IFR1cm5Db21tYW5kKGNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCAxKSk7XG4gICAgfSxcblxuICAgIHR1cm5MZWZ0OiBmdW5jdGlvbihoaWdobGlnaHRDYWxsYmFjaykge1xuICAgICAgICBjb250cm9sbGVyLnF1ZXVlLmFkZENvbW1hbmQobmV3IFR1cm5Db21tYW5kKGNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCAtMSkpO1xuICAgIH0sXG5cbiAgICBkZXN0cm95QmxvY2s6IGZ1bmN0aW9uKGhpZ2hsaWdodENhbGxiYWNrKSB7XG4gICAgICAgIGNvbnRyb2xsZXIucXVldWUuYWRkQ29tbWFuZChuZXcgRGVzdHJveUJsb2NrQ29tbWFuZChjb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjaykpO1xuICAgIH0sXG5cbiAgICBwbGFjZUJsb2NrOiBmdW5jdGlvbihoaWdobGlnaHRDYWxsYmFjaywgYmxvY2tUeXBlKSB7XG4gICAgICAgIGNvbnRyb2xsZXIucXVldWUuYWRkQ29tbWFuZChuZXcgUGxhY2VCbG9ja0NvbW1hbmQoY29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2ssIGJsb2NrVHlwZSkpO1xuICAgIH0sXG5cbiAgICBwbGFjZUluRnJvbnQ6IGZ1bmN0aW9uKGhpZ2hsaWdodENhbGxiYWNrLCBibG9ja1R5cGUpIHtcbiAgICAgICAgY29udHJvbGxlci5xdWV1ZS5hZGRDb21tYW5kKG5ldyBQbGFjZUluRnJvbnRDb21tYW5kKGNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCBibG9ja1R5cGUpKTtcbiAgICB9LFxuXG4gICAgdGlsbFNvaWw6IGZ1bmN0aW9uKGhpZ2hsaWdodENhbGxiYWNrKSB7XG4gICAgICAgIGNvbnRyb2xsZXIucXVldWUuYWRkQ29tbWFuZChuZXcgUGxhY2VJbkZyb250Q29tbWFuZChjb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjaywgJ3dhdGVyaW5nJykpO1xuICAgIH0sXG5cbiAgICB3aGlsZVBhdGhBaGVhZDogZnVuY3Rpb24oaGlnaGxpZ2h0Q2FsbGJhY2ssIGJsb2NrVHlwZSwgY29kZUJsb2NrKSB7XG4gICAgICAgIGNvbnRyb2xsZXIucXVldWUuYWRkQ29tbWFuZChuZXcgV2hpbGVDb21tYW5kKGNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCBibG9ja1R5cGUsIGNvZGVCbG9jaykpO1xuICAgIH0sXG5cbiAgICBpZkJsb2NrQWhlYWQ6IGZ1bmN0aW9uKGhpZ2hsaWdodENhbGxiYWNrLCBibG9ja1R5cGUsIGNvZGVCbG9jaykge1xuICAgICAgICBjb250cm9sbGVyLnF1ZXVlLmFkZENvbW1hbmQobmV3IElmQmxvY2tBaGVhZENvbW1hbmQoY29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2ssIGJsb2NrVHlwZSwgY29kZUJsb2NrKSk7XG4gICAgfSxcblxuICAgIGdldFNjcmVlbnNob3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY29udHJvbGxlci5nZXRTY3JlZW5zaG90KCk7XG4gICAgfVxuICB9O1xufVxuIl19","deps":{"../CommandQueue/CommandQueue.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","../CommandQueue/BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js","../CommandQueue/DestroyBlockCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js","../CommandQueue/MoveForwardCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js","../CommandQueue/TurnCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js","../CommandQueue/WhileCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js","../CommandQueue/IfBlockAheadCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js","../CommandQueue/PlaceBlockCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceBlockCommand.js","../CommandQueue/PlaceInFrontCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceInFrontCommand.js","../CommandQueue/CheckSolutionCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CheckSolutionCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/API/CodeOrgAPI.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/API/CodeOrgAPI.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar BaseCommand = (function () {\n    function BaseCommand(gameController, highlightCallback) {\n        _classCallCheck(this, BaseCommand);\n\n        this.GameController = gameController;\n        this.Game = gameController.game;\n        this.HighlightCallback = highlightCallback;\n        this.state = _CommandStateJs2[\"default\"].NOT_STARTED;\n    }\n\n    _createClass(BaseCommand, [{\n        key: \"tick\",\n        value: function tick() {}\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            if (this.HighlightCallback) {\n                this.HighlightCallback();\n            }\n            this.state = _CommandStateJs2[\"default\"].WORKING;\n        }\n\n        /**\n         * Whether the command has started working.\n         * @returns {boolean}\n         */\n    }, {\n        key: \"isStarted\",\n        value: function isStarted() {\n            return this.state != _CommandStateJs2[\"default\"].NOT_STARTED;\n        }\n\n        /**\n         * Whether the command has succeeded or failed, and is\n         * finished with its work.\n         * @returns {boolean}\n         */\n    }, {\n        key: \"isFinished\",\n        value: function isFinished() {\n            return this.isSucceeded() || this.isFailed();\n        }\n\n        /**\n         * Whether the command has finished with its work and reported success.\n         * @returns {boolean}\n         */\n    }, {\n        key: \"isSucceeded\",\n        value: function isSucceeded() {\n            return this.state === _CommandStateJs2[\"default\"].SUCCESS;\n        }\n\n        /**\n         * Whether the command has finished with its work and reported failure.\n         * @returns {boolean}\n         */\n    }, {\n        key: \"isFailed\",\n        value: function isFailed() {\n            return this.state === _CommandStateJs2[\"default\"].FAILURE;\n        }\n    }, {\n        key: \"succeeded\",\n        value: function succeeded() {\n            this.state = _CommandStateJs2[\"default\"].SUCCESS;\n        }\n    }, {\n        key: \"failed\",\n        value: function failed() {\n            this.state = _CommandStateJs2[\"default\"].FAILURE;\n        }\n    }]);\n\n    return BaseCommand;\n})();\n\nexports[\"default\"] = BaseCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0Jhc2VDb21tYW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs4QkFDeUIsbUJBQW1COzs7O0lBRXZCLFdBQVc7QUFDakIsYUFETSxXQUFXLENBQ2hCLGNBQWMsRUFBRSxpQkFBaUIsRUFBRTs4QkFEOUIsV0FBVzs7QUFFeEIsWUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7QUFDckMsWUFBSSxDQUFDLElBQUksR0FBRyxjQUFjLENBQUMsSUFBSSxDQUFDO0FBQ2hDLFlBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztBQUMzQyxZQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLFdBQVcsQ0FBQztLQUN6Qzs7aUJBTmdCLFdBQVc7O2VBUXhCLGdCQUFHLEVBQ047OztlQUVJLGlCQUFHO0FBQ0osZ0JBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO0FBQ3hCLG9CQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQzthQUM1QjtBQUNELGdCQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQztTQUNyQzs7Ozs7Ozs7ZUFNUSxxQkFBRztBQUNSLG1CQUFPLElBQUksQ0FBQyxLQUFLLElBQUksNEJBQWEsV0FBVyxDQUFDO1NBQ2pEOzs7Ozs7Ozs7ZUFPUyxzQkFBRztBQUNULG1CQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDaEQ7Ozs7Ozs7O2VBTVMsdUJBQUc7QUFDVCxtQkFBUSxJQUFJLENBQUMsS0FBSyxLQUFLLDRCQUFhLE9BQU8sQ0FBRTtTQUNoRDs7Ozs7Ozs7ZUFNTSxvQkFBRztBQUNOLG1CQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssNEJBQWEsT0FBTyxDQUFDO1NBQy9DOzs7ZUFFUSxxQkFBRztBQUNSLGdCQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQztTQUNyQzs7O2VBRUssa0JBQUc7QUFDTCxnQkFBSSxDQUFDLEtBQUssR0FBRyw0QkFBYSxPQUFPLENBQUM7U0FDckM7OztXQXpEaUIsV0FBVzs7O3FCQUFYLFdBQVciLCJmaWxlIjoiYnVpbGQvanMvY3JhZnQvZ2FtZS9Db21tYW5kUXVldWUvQmFzZUNvbW1hbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBDb21tYW5kU3RhdGUgZnJvbSBcIi4vQ29tbWFuZFN0YXRlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VDb21tYW5kIHtcbiAgICBjb25zdHJ1Y3RvcihnYW1lQ29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlciA9IGdhbWVDb250cm9sbGVyO1xuICAgICAgICB0aGlzLkdhbWUgPSBnYW1lQ29udHJvbGxlci5nYW1lO1xuICAgICAgICB0aGlzLkhpZ2hsaWdodENhbGxiYWNrID0gaGlnaGxpZ2h0Q2FsbGJhY2s7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBDb21tYW5kU3RhdGUuTk9UX1NUQVJURUQ7XG4gICAgfVxuXG4gICAgdGljaygpIHtcbiAgICB9XG4gICAgXG4gICAgYmVnaW4oKSB7XG4gICAgICAgIGlmICh0aGlzLkhpZ2hsaWdodENhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aGlzLkhpZ2hsaWdodENhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5XT1JLSU5HO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIGNvbW1hbmQgaGFzIHN0YXJ0ZWQgd29ya2luZy5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBpc1N0YXJ0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlICE9IENvbW1hbmRTdGF0ZS5OT1RfU1RBUlRFRDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSBjb21tYW5kIGhhcyBzdWNjZWVkZWQgb3IgZmFpbGVkLCBhbmQgaXNcbiAgICAgKiBmaW5pc2hlZCB3aXRoIGl0cyB3b3JrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGlzRmluaXNoZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzU3VjY2VlZGVkKCkgfHwgdGhpcy5pc0ZhaWxlZCgpO1xuICAgIH1cbiAgICBcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSBjb21tYW5kIGhhcyBmaW5pc2hlZCB3aXRoIGl0cyB3b3JrIGFuZCByZXBvcnRlZCBzdWNjZXNzLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgaXNTdWNjZWVkZWQoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5zdGF0ZSA9PT0gQ29tbWFuZFN0YXRlLlNVQ0NFU1MpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIGNvbW1hbmQgaGFzIGZpbmlzaGVkIHdpdGggaXRzIHdvcmsgYW5kIHJlcG9ydGVkIGZhaWx1cmUuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICBpc0ZhaWxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUgPT09IENvbW1hbmRTdGF0ZS5GQUlMVVJFO1xuICAgfVxuXG4gICBzdWNjZWVkZWQoKSB7XG4gICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5TVUNDRVNTO1xuICAgfVxuICAgIFxuICAgZmFpbGVkKCkge1xuICAgICAgIHRoaXMuc3RhdGUgPSBDb21tYW5kU3RhdGUuRkFJTFVSRTtcbiAgIH1cbn1cblxuIl19","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/BaseCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CheckSolutionCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CheckSolutionCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _CommandQueueJs = require(\"./CommandQueue.js\");\n\nvar _CommandQueueJs2 = _interopRequireDefault(_CommandQueueJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar CheckSolutionCommand = (function (_BaseCommand) {\n    _inherits(CheckSolutionCommand, _BaseCommand);\n\n    function CheckSolutionCommand(gameController) {\n        _classCallCheck(this, CheckSolutionCommand);\n\n        var dummyFunc = function dummyFunc() {\n            if (gameController.DEBUG) {\n                console.log(\"Execute solve command\");\n            }\n        };\n\n        _get(Object.getPrototypeOf(CheckSolutionCommand.prototype), \"constructor\", this).call(this, gameController, dummyFunc);\n    }\n\n    _createClass(CheckSolutionCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(CheckSolutionCommand.prototype), \"begin\", this).call(this);\n            if (this.GameController.DEBUG) {\n                console.log(\"Solve command: BEGIN\");\n            }\n            var result = this.GameController.checkSolution(this);\n        }\n    }]);\n\n    return CheckSolutionCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = CheckSolutionCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0NoZWNrU29sdXRpb25Db21tYW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OEJBQ3lCLG1CQUFtQjs7Ozs4QkFDbkIsbUJBQW1COzs7OzZCQUNwQixrQkFBa0I7Ozs7SUFFckIsb0JBQW9CO2NBQXBCLG9CQUFvQjs7QUFDMUIsYUFETSxvQkFBb0IsQ0FDekIsY0FBYyxFQUFFOzhCQURYLG9CQUFvQjs7QUFFakMsWUFBSSxTQUFTLEdBQUcsU0FBWixTQUFTLEdBQWM7QUFDdkIsZ0JBQUksY0FBYyxDQUFDLEtBQUssRUFBRTtBQUN0Qix1QkFBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO2FBQ3hDO1NBQ0osQ0FBQzs7QUFFRixtQ0FSYSxvQkFBb0IsNkNBUTNCLGNBQWMsRUFBRSxTQUFTLEVBQUU7S0FDcEM7O2lCQVRnQixvQkFBb0I7O2VBV2pDLGdCQUFHOztTQUVOOzs7ZUFFSSxpQkFBRztBQUNKLHVDQWhCYSxvQkFBb0IsdUNBZ0JuQjtBQUNkLGdCQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFO0FBQzNCLHVCQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7YUFDdkM7QUFDRCxnQkFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDeEQ7OztXQXJCZ0Isb0JBQW9COzs7cUJBQXBCLG9CQUFvQiIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0NvbW1hbmRRdWV1ZS9DaGVja1NvbHV0aW9uQ29tbWFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IENvbW1hbmRTdGF0ZSBmcm9tIFwiLi9Db21tYW5kU3RhdGUuanNcIjtcbmltcG9ydCBDb21tYW5kUXVldWUgZnJvbSBcIi4vQ29tbWFuZFF1ZXVlLmpzXCI7XG5pbXBvcnQgQmFzZUNvbW1hbmQgZnJvbSBcIi4vQmFzZUNvbW1hbmQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hlY2tTb2x1dGlvbkNvbW1hbmQgZXh0ZW5kcyBCYXNlQ29tbWFuZCB7XG4gICAgY29uc3RydWN0b3IoZ2FtZUNvbnRyb2xsZXIpIHtcbiAgICAgICAgdmFyIGR1bW15RnVuYyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGdhbWVDb250cm9sbGVyLkRFQlVHKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFeGVjdXRlIHNvbHZlIGNvbW1hbmRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGR1bW15RnVuYyk7XG4gICAgfVxuXG4gICAgdGljaygpIHtcbiAgICAgICAgLy8gZG8gc3R1ZmZcbiAgICB9XG4gICAgXG4gICAgYmVnaW4oKSB7XG4gICAgICAgIHN1cGVyLmJlZ2luKCk7XG4gICAgICAgIGlmICh0aGlzLkdhbWVDb250cm9sbGVyLkRFQlVHKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbHZlIGNvbW1hbmQ6IEJFR0lOXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXN1bHQgPSB0aGlzLkdhbWVDb250cm9sbGVyLmNoZWNrU29sdXRpb24odGhpcyk7XG4gICAgfVxuXG59XG5cbiJdfQ==","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./CommandQueue.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CheckSolutionCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/CheckSolutionCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _BaseCommand = require(\"./BaseCommand\");\n\nvar _BaseCommand2 = _interopRequireDefault(_BaseCommand);\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar CommandQueue = (function () {\n  function CommandQueue(gameController) {\n    _classCallCheck(this, CommandQueue);\n\n    this.gameController = gameController;\n    this.game = gameController.game;\n    this.reset();\n  }\n\n  _createClass(CommandQueue, [{\n    key: \"addCommand\",\n    value: function addCommand(command) {\n      // if we're handling a while command, add to the while command's queue instead of this queue\n      if (this.whileCommandQueue) {\n        this.whileCommandQueue.addCommand(command);\n      } else {\n        this.commandList_.push(command);\n      }\n    }\n  }, {\n    key: \"setWhileCommandInsertState\",\n    value: function setWhileCommandInsertState(queue) {\n      this.whileCommandQueue = queue;\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      this.state = _CommandStateJs2[\"default\"].WORKING;\n      if (this.gameController.DEBUG) {\n        console.log(\"Debug Queue: BEGIN\");\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.state = _CommandStateJs2[\"default\"].NOT_STARTED;\n      this.currentCommand = null;\n      this.commandList_ = [];\n      if (this.whileCommandQueue) {\n        this.whileCommandQueue.reset();\n      }\n      this.whileCommandQueue = null;\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      if (this.state === _CommandStateJs2[\"default\"].WORKING) {\n        if (!this.currentCommand) {\n          if (this.commandList_.length === 0) {\n            this.state = _CommandStateJs2[\"default\"].SUCCESS;\n            return;\n          }\n          this.currentCommand = this.commandList_.shift();\n        }\n\n        if (!this.currentCommand.isStarted()) {\n          this.currentCommand.begin();\n        } else {\n          this.currentCommand.tick();\n        }\n\n        // check if command is done\n        if (this.currentCommand.isSucceeded()) {\n          this.currentCommand = null;\n        } else if (this.currentCommand.isFailed()) {\n          this.state = _CommandStateJs2[\"default\"].FAILURE;\n        }\n      }\n    }\n\n    /**\n     * Whether the command has started working.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.state !== _CommandStateJs2[\"default\"].NOT_STARTED;\n    }\n\n    /**\n     * Whether the command has succeeded or failed, and is\n     * finished with its work.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.isSucceeded() || this.isFailed();\n    }\n\n    /**\n     * Whether the command has finished with its work and reported success.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isSucceeded\",\n    value: function isSucceeded() {\n      return this.state === _CommandStateJs2[\"default\"].SUCCESS;\n    }\n\n    /**\n     * Whether the command has finished with its work and reported failure.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isFailed\",\n    value: function isFailed() {\n      return this.state === _CommandStateJs2[\"default\"].FAILURE;\n    }\n  }]);\n\n  return CommandQueue;\n})();\n\nexports[\"default\"] = CommandQueue;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0NvbW1hbmRRdWV1ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7MkJBQXdCLGVBQWU7Ozs7OEJBQ2QsbUJBQW1COzs7O0lBR3ZCLFlBQVk7QUFDcEIsV0FEUSxZQUFZLENBQ25CLGNBQWMsRUFBRTswQkFEVCxZQUFZOztBQUU3QixRQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztBQUNyQyxRQUFJLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUM7QUFDaEMsUUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0dBQ2Q7O2VBTGtCLFlBQVk7O1dBT3JCLG9CQUFDLE9BQU8sRUFBRTs7QUFFbEIsVUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7QUFDMUIsWUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztPQUM1QyxNQUFNO0FBQ0wsWUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7T0FDakM7S0FDRjs7O1dBRXlCLG9DQUFDLEtBQUssRUFBRTtBQUNoQyxVQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0tBQ2hDOzs7V0FFSSxpQkFBRztBQUNOLFVBQUksQ0FBQyxLQUFLLEdBQUcsNEJBQWEsT0FBTyxDQUFDO0FBQ2xDLFVBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUU7QUFDN0IsZUFBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO09BQ25DO0tBQ0Y7OztXQUVJLGlCQUFHO0FBQ04sVUFBSSxDQUFDLEtBQUssR0FBRyw0QkFBYSxXQUFXLENBQUM7QUFDdEMsVUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7QUFDM0IsVUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7QUFDdkIsVUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7QUFDMUIsWUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssRUFBRSxDQUFDO09BQ2hDO0FBQ0QsVUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQztLQUMvQjs7O1dBRUcsZ0JBQUc7QUFDTCxVQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssNEJBQWEsT0FBTyxFQUFFO0FBQ3ZDLFlBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFO0FBQ3hCLGNBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBQ2xDLGdCQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQztBQUNsQyxtQkFBTztXQUNSO0FBQ0QsY0FBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2pEOztBQUVELFlBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxFQUFFO0FBQ3BDLGNBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDN0IsTUFBTTtBQUNMLGNBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDNUI7OztBQUdELFlBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsRUFBRTtBQUNyQyxjQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztTQUM1QixNQUFNLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtBQUN6QyxjQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQztTQUNuQztPQUNGO0tBQ0Y7Ozs7Ozs7O1dBTVEscUJBQUc7QUFDVixhQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssNEJBQWEsV0FBVyxDQUFDO0tBQ2hEOzs7Ozs7Ozs7V0FPUyxzQkFBRztBQUNYLGFBQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztLQUM5Qzs7Ozs7Ozs7V0FNVSx1QkFBRztBQUNaLGFBQU8sSUFBSSxDQUFDLEtBQUssS0FBSyw0QkFBYSxPQUFPLENBQUM7S0FDNUM7Ozs7Ozs7O1dBTU8sb0JBQUc7QUFDVCxhQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssNEJBQWEsT0FBTyxDQUFDO0tBQzVDOzs7U0E3RmtCLFlBQVk7OztxQkFBWixZQUFZIiwiZmlsZSI6ImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0NvbW1hbmRRdWV1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlQ29tbWFuZCBmcm9tIFwiLi9CYXNlQ29tbWFuZFwiO1xuaW1wb3J0IENvbW1hbmRTdGF0ZSBmcm9tIFwiLi9Db21tYW5kU3RhdGUuanNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tYW5kUXVldWUge1xuICBjb25zdHJ1Y3RvcihnYW1lQ29udHJvbGxlcikge1xuICAgIHRoaXMuZ2FtZUNvbnRyb2xsZXIgPSBnYW1lQ29udHJvbGxlcjtcbiAgICB0aGlzLmdhbWUgPSBnYW1lQ29udHJvbGxlci5nYW1lO1xuICAgIHRoaXMucmVzZXQoKTtcbiAgfVxuXG4gIGFkZENvbW1hbmQoY29tbWFuZCkge1xuICAgIC8vIGlmIHdlJ3JlIGhhbmRsaW5nIGEgd2hpbGUgY29tbWFuZCwgYWRkIHRvIHRoZSB3aGlsZSBjb21tYW5kJ3MgcXVldWUgaW5zdGVhZCBvZiB0aGlzIHF1ZXVlXG4gICAgaWYgKHRoaXMud2hpbGVDb21tYW5kUXVldWUpIHtcbiAgICAgIHRoaXMud2hpbGVDb21tYW5kUXVldWUuYWRkQ29tbWFuZChjb21tYW5kKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jb21tYW5kTGlzdF8ucHVzaChjb21tYW5kKTtcbiAgICB9XG4gIH1cblxuICBzZXRXaGlsZUNvbW1hbmRJbnNlcnRTdGF0ZShxdWV1ZSkge1xuICAgIHRoaXMud2hpbGVDb21tYW5kUXVldWUgPSBxdWV1ZTtcbiAgfVxuXG4gIGJlZ2luKCkge1xuICAgIHRoaXMuc3RhdGUgPSBDb21tYW5kU3RhdGUuV09SS0lORztcbiAgICBpZiAodGhpcy5nYW1lQ29udHJvbGxlci5ERUJVRykge1xuICAgICAgY29uc29sZS5sb2coXCJEZWJ1ZyBRdWV1ZTogQkVHSU5cIik7XG4gICAgfVxuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5OT1RfU1RBUlRFRDtcbiAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gbnVsbDtcbiAgICB0aGlzLmNvbW1hbmRMaXN0XyA9IFtdO1xuICAgIGlmICh0aGlzLndoaWxlQ29tbWFuZFF1ZXVlKSB7XG4gICAgICB0aGlzLndoaWxlQ29tbWFuZFF1ZXVlLnJlc2V0KCk7XG4gICAgfVxuICAgIHRoaXMud2hpbGVDb21tYW5kUXVldWUgPSBudWxsO1xuICB9XG5cbiAgdGljaygpIHtcbiAgICBpZiAodGhpcy5zdGF0ZSA9PT0gQ29tbWFuZFN0YXRlLldPUktJTkcpIHtcbiAgICAgIGlmICghdGhpcy5jdXJyZW50Q29tbWFuZCkge1xuICAgICAgICBpZiAodGhpcy5jb21tYW5kTGlzdF8ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5TVUNDRVNTO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1cnJlbnRDb21tYW5kID0gdGhpcy5jb21tYW5kTGlzdF8uc2hpZnQoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmN1cnJlbnRDb21tYW5kLmlzU3RhcnRlZCgpKSB7XG4gICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQuYmVnaW4oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuY3VycmVudENvbW1hbmQudGljaygpO1xuICAgICAgfVxuXG4gICAgICAvLyBjaGVjayBpZiBjb21tYW5kIGlzIGRvbmVcbiAgICAgIGlmICh0aGlzLmN1cnJlbnRDb21tYW5kLmlzU3VjY2VlZGVkKCkpIHtcbiAgICAgICAgdGhpcy5jdXJyZW50Q29tbWFuZCA9IG51bGw7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVudENvbW1hbmQuaXNGYWlsZWQoKSkge1xuICAgICAgICB0aGlzLnN0YXRlID0gQ29tbWFuZFN0YXRlLkZBSUxVUkU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGNvbW1hbmQgaGFzIHN0YXJ0ZWQgd29ya2luZy5cbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBpc1N0YXJ0ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUgIT09IENvbW1hbmRTdGF0ZS5OT1RfU1RBUlRFRDtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBjb21tYW5kIGhhcyBzdWNjZWVkZWQgb3IgZmFpbGVkLCBhbmQgaXNcbiAgICogZmluaXNoZWQgd2l0aCBpdHMgd29yay5cbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBpc0ZpbmlzaGVkKCkge1xuICAgIHJldHVybiB0aGlzLmlzU3VjY2VlZGVkKCkgfHwgdGhpcy5pc0ZhaWxlZCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGNvbW1hbmQgaGFzIGZpbmlzaGVkIHdpdGggaXRzIHdvcmsgYW5kIHJlcG9ydGVkIHN1Y2Nlc3MuXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaXNTdWNjZWVkZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUgPT09IENvbW1hbmRTdGF0ZS5TVUNDRVNTO1xuICB9XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGNvbW1hbmQgaGFzIGZpbmlzaGVkIHdpdGggaXRzIHdvcmsgYW5kIHJlcG9ydGVkIGZhaWx1cmUuXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaXNGYWlsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUgPT09IENvbW1hbmRTdGF0ZS5GQUlMVVJFO1xuICB9XG59XG5cbiJdfQ==","deps":{"./BaseCommand":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js","./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/CommandQueue.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = Object.freeze({\n    NOT_STARTED: 0,\n    WORKING: 1,\n    SUCCESS: 2,\n    FAILURE: 3\n});\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0NvbW1hbmRTdGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFDZSxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ3pCLGVBQVcsRUFBRSxDQUFDO0FBQ2QsV0FBTyxFQUFFLENBQUM7QUFDVixXQUFPLEVBQUUsQ0FBQztBQUNWLFdBQU8sRUFBRSxDQUFDO0NBQ2IsQ0FBQyIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0NvbW1hbmRRdWV1ZS9Db21tYW5kU3RhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5mcmVlemUoe1xuICAgIE5PVF9TVEFSVEVEOiAwLFxuICAgIFdPUktJTkc6IDEsXG4gICAgU1VDQ0VTUzogMixcbiAgICBGQUlMVVJFOiAzXG59KTtcbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/CommandState.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar DestroyBlockCommand = (function (_BaseCommand) {\n    _inherits(DestroyBlockCommand, _BaseCommand);\n\n    function DestroyBlockCommand(gameController, highlightCallback) {\n        _classCallCheck(this, DestroyBlockCommand);\n\n        _get(Object.getPrototypeOf(DestroyBlockCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n    }\n\n    _createClass(DestroyBlockCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(DestroyBlockCommand.prototype), \"begin\", this).call(this);\n            this.GameController.destroyBlock(this);\n        }\n    }]);\n\n    return DestroyBlockCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = DestroyBlockCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0Rlc3Ryb3lCbG9ja0NvbW1hbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFDeUIsbUJBQW1COzs7OzZCQUNwQixrQkFBa0I7Ozs7SUFFckIsbUJBQW1CO2NBQW5CLG1CQUFtQjs7QUFDekIsYUFETSxtQkFBbUIsQ0FDeEIsY0FBYyxFQUFFLGlCQUFpQixFQUFFOzhCQUQ5QixtQkFBbUI7O0FBR2hDLG1DQUhhLG1CQUFtQiw2Q0FHMUIsY0FBYyxFQUFFLGlCQUFpQixFQUFFO0tBQzVDOztpQkFKZ0IsbUJBQW1COztlQU1oQyxnQkFBRzs7U0FFTjs7O2VBRUksaUJBQUc7QUFDSix1Q0FYYSxtQkFBbUIsdUNBV2xCO0FBQ2QsZ0JBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzFDOzs7V0FiZ0IsbUJBQW1COzs7cUJBQW5CLG1CQUFtQiIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0NvbW1hbmRRdWV1ZS9EZXN0cm95QmxvY2tDb21tYW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQ29tbWFuZFN0YXRlIGZyb20gXCIuL0NvbW1hbmRTdGF0ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuL0Jhc2VDb21tYW5kLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlc3Ryb3lCbG9ja0NvbW1hbmQgZXh0ZW5kcyBCYXNlQ29tbWFuZCB7XG4gICAgY29uc3RydWN0b3IoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKSB7XG5cbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKTtcbiAgICB9XG5cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBkbyBzdHVmZlxuICAgIH1cbiAgICBcbiAgICBiZWdpbigpIHtcbiAgICAgICAgc3VwZXIuYmVnaW4oKTtcbiAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlci5kZXN0cm95QmxvY2sodGhpcyk7XG4gICAgfVxuXG59XG5cbiJdfQ==","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/DestroyBlockCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _CommandQueueJs = require(\"./CommandQueue.js\");\n\nvar _CommandQueueJs2 = _interopRequireDefault(_CommandQueueJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar IfBlockAheadCommand = (function (_BaseCommand) {\n    _inherits(IfBlockAheadCommand, _BaseCommand);\n\n    function IfBlockAheadCommand(gameController, highlightCallback, blockType, callback) {\n        _classCallCheck(this, IfBlockAheadCommand);\n\n        _get(Object.getPrototypeOf(IfBlockAheadCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n\n        this.blockType = blockType;\n        this.ifCodeCallback = callback;\n\n        this.queue = new _CommandQueueJs2[\"default\"](this);\n    }\n\n    _createClass(IfBlockAheadCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            if (this.state === _CommandStateJs2[\"default\"].WORKING) {\n                // tick our command queue\n                this.queue.tick();\n            }\n\n            if (this.queue.isFailed()) {\n                this.state = _CommandStateJs2[\"default\"].FAILURE;\n            }\n\n            if (this.queue.isSucceeded()) {\n                this.state = _CommandStateJs2[\"default\"].SUCCESS;\n            }\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(IfBlockAheadCommand.prototype), \"begin\", this).call(this);\n            if (this.GameController.DEBUG) {\n                console.log(\"WHILE command: BEGIN\");\n            }\n\n            // setup the \"if\" check\n            this.handleIfCheck();\n        }\n    }, {\n        key: \"handleIfCheck\",\n        value: function handleIfCheck() {\n            if (this.GameController.isPathAhead(this.blockType)) {\n                this.queue.reset();\n                this.GameController.queue.setWhileCommandInsertState(this.queue);\n                this.ifCodeCallback(); // inserts commands via CodeOrgAPI\n                this.GameController.queue.setWhileCommandInsertState(null);\n                this.queue.begin();\n            } else {\n                this.state = _CommandStateJs2[\"default\"].SUCCESS;\n            }\n        }\n    }]);\n\n    return IfBlockAheadCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = IfBlockAheadCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL0lmQmxvY2tBaGVhZENvbW1hbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFDeUIsbUJBQW1COzs7OzhCQUNuQixtQkFBbUI7Ozs7NkJBQ3BCLGtCQUFrQjs7OztJQUVyQixtQkFBbUI7Y0FBbkIsbUJBQW1COztBQUN6QixhQURNLG1CQUFtQixDQUN4QixjQUFjLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRTs4QkFEbkQsbUJBQW1COztBQUVoQyxtQ0FGYSxtQkFBbUIsNkNBRTFCLGNBQWMsRUFBRSxpQkFBaUIsRUFBRTs7QUFFekMsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDM0IsWUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUM7O0FBRS9CLFlBQUksQ0FBQyxLQUFLLEdBQUcsZ0NBQWlCLElBQUksQ0FBQyxDQUFDO0tBQ3ZDOztpQkFSZ0IsbUJBQW1COztlQVVoQyxnQkFBRztBQUNILGdCQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssNEJBQWEsT0FBTyxFQUFHOztBQUV0QyxvQkFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNyQjs7QUFFRCxnQkFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFO0FBQ3ZCLG9CQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQzthQUNyQzs7QUFFRCxnQkFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxFQUFFO0FBQzFCLG9CQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQzthQUNyQztTQUVKOzs7ZUFFSSxpQkFBRztBQUNKLHVDQTNCYSxtQkFBbUIsdUNBMkJsQjtBQUNkLGdCQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFO0FBQzNCLHVCQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7YUFDdkM7OztBQUdELGdCQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDeEI7OztlQUVZLHlCQUFHO0FBQ1osZ0JBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFO0FBQ2pELG9CQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ25CLG9CQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDakUsb0JBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUN0QixvQkFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsMEJBQTBCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0Qsb0JBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDdEIsTUFBTTtBQUNILG9CQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQzthQUNyQztTQUNKOzs7V0E5Q2dCLG1CQUFtQjs7O3FCQUFuQixtQkFBbUIiLCJmaWxlIjoiYnVpbGQvanMvY3JhZnQvZ2FtZS9Db21tYW5kUXVldWUvSWZCbG9ja0FoZWFkQ29tbWFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IENvbW1hbmRTdGF0ZSBmcm9tIFwiLi9Db21tYW5kU3RhdGUuanNcIjtcbmltcG9ydCBDb21tYW5kUXVldWUgZnJvbSBcIi4vQ29tbWFuZFF1ZXVlLmpzXCI7XG5pbXBvcnQgQmFzZUNvbW1hbmQgZnJvbSBcIi4vQmFzZUNvbW1hbmQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSWZCbG9ja0FoZWFkQ29tbWFuZCBleHRlbmRzIEJhc2VDb21tYW5kIHtcbiAgICBjb25zdHJ1Y3RvcihnYW1lQ29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2ssIGJsb2NrVHlwZSwgY2FsbGJhY2spIHtcbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKTtcblxuICAgICAgICB0aGlzLmJsb2NrVHlwZSA9IGJsb2NrVHlwZTtcbiAgICAgICAgdGhpcy5pZkNvZGVDYWxsYmFjayA9IGNhbGxiYWNrO1xuXG4gICAgICAgIHRoaXMucXVldWUgPSBuZXcgQ29tbWFuZFF1ZXVlKHRoaXMpO1xuICAgIH1cblxuICAgIHRpY2soKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSBDb21tYW5kU3RhdGUuV09SS0lORyApIHtcbiAgICAgICAgICAgIC8vIHRpY2sgb3VyIGNvbW1hbmQgcXVldWVcbiAgICAgICAgICAgIHRoaXMucXVldWUudGljaygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucXVldWUuaXNGYWlsZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5GQUlMVVJFO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucXVldWUuaXNTdWNjZWVkZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5TVUNDRVNTO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBiZWdpbigpIHtcbiAgICAgICAgc3VwZXIuYmVnaW4oKTtcbiAgICAgICAgaWYgKHRoaXMuR2FtZUNvbnRyb2xsZXIuREVCVUcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV0hJTEUgY29tbWFuZDogQkVHSU5cIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzZXR1cCB0aGUgXCJpZlwiIGNoZWNrXG4gICAgICAgIHRoaXMuaGFuZGxlSWZDaGVjaygpO1xuICAgIH1cblxuICAgIGhhbmRsZUlmQ2hlY2soKSB7XG4gICAgICAgIGlmICh0aGlzLkdhbWVDb250cm9sbGVyLmlzUGF0aEFoZWFkKHRoaXMuYmxvY2tUeXBlKSkge1xuICAgICAgICAgICAgdGhpcy5xdWV1ZS5yZXNldCgpO1xuICAgICAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlci5xdWV1ZS5zZXRXaGlsZUNvbW1hbmRJbnNlcnRTdGF0ZSh0aGlzLnF1ZXVlKTtcbiAgICAgICAgICAgIHRoaXMuaWZDb2RlQ2FsbGJhY2soKTsgLy8gaW5zZXJ0cyBjb21tYW5kcyB2aWEgQ29kZU9yZ0FQSVxuICAgICAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlci5xdWV1ZS5zZXRXaGlsZUNvbW1hbmRJbnNlcnRTdGF0ZShudWxsKTtcbiAgICAgICAgICAgIHRoaXMucXVldWUuYmVnaW4oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDb21tYW5kU3RhdGUuU1VDQ0VTUztcbiAgICAgICAgfVxuICAgIH1cblxufVxuXG4iXX0=","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./CommandQueue.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/IfBlockAheadCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar MoveForwardCommand = (function (_BaseCommand) {\n    _inherits(MoveForwardCommand, _BaseCommand);\n\n    function MoveForwardCommand(gameController, highlightCallback) {\n        _classCallCheck(this, MoveForwardCommand);\n\n        _get(Object.getPrototypeOf(MoveForwardCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n    }\n\n    _createClass(MoveForwardCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(MoveForwardCommand.prototype), \"begin\", this).call(this);\n            this.GameController.moveForward(this);\n        }\n    }]);\n\n    return MoveForwardCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = MoveForwardCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL01vdmVGb3J3YXJkQ29tbWFuZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OzhCQUN5QixtQkFBbUI7Ozs7NkJBQ3BCLGtCQUFrQjs7OztJQUVyQixrQkFBa0I7Y0FBbEIsa0JBQWtCOztBQUN4QixhQURNLGtCQUFrQixDQUN2QixjQUFjLEVBQUUsaUJBQWlCLEVBQUU7OEJBRDlCLGtCQUFrQjs7QUFHL0IsbUNBSGEsa0JBQWtCLDZDQUd6QixjQUFjLEVBQUUsaUJBQWlCLEVBQUU7S0FDNUM7O2lCQUpnQixrQkFBa0I7O2VBTS9CLGdCQUFHOztTQUVOOzs7ZUFFSSxpQkFBRztBQUNKLHVDQVhhLGtCQUFrQix1Q0FXakI7QUFDZCxnQkFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDekM7OztXQWJnQixrQkFBa0I7OztxQkFBbEIsa0JBQWtCIiwiZmlsZSI6ImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL01vdmVGb3J3YXJkQ29tbWFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IENvbW1hbmRTdGF0ZSBmcm9tIFwiLi9Db21tYW5kU3RhdGUuanNcIjtcbmltcG9ydCBCYXNlQ29tbWFuZCBmcm9tIFwiLi9CYXNlQ29tbWFuZC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb3ZlRm9yd2FyZENvbW1hbmQgZXh0ZW5kcyBCYXNlQ29tbWFuZCB7XG4gICAgY29uc3RydWN0b3IoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKSB7XG5cbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKTtcbiAgICB9XG5cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBkbyBzdHVmZlxuICAgIH1cblxuICAgIGJlZ2luKCkge1xuICAgICAgICBzdXBlci5iZWdpbigpO1xuICAgICAgICB0aGlzLkdhbWVDb250cm9sbGVyLm1vdmVGb3J3YXJkKHRoaXMpO1xuICAgIH1cblxufVxuXG4iXX0=","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/MoveForwardCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceBlockCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceBlockCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar PlaceBlockCommand = (function (_BaseCommand) {\n    _inherits(PlaceBlockCommand, _BaseCommand);\n\n    function PlaceBlockCommand(gameController, highlightCallback, blockType) {\n        _classCallCheck(this, PlaceBlockCommand);\n\n        _get(Object.getPrototypeOf(PlaceBlockCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n\n        this.BlockType = blockType;\n    }\n\n    _createClass(PlaceBlockCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff??\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(PlaceBlockCommand.prototype), \"begin\", this).call(this);\n            this.GameController.placeBlock(this, this.BlockType);\n        }\n    }]);\n\n    return PlaceBlockCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = PlaceBlockCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1BsYWNlQmxvY2tDb21tYW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OEJBQ3lCLG1CQUFtQjs7Ozs2QkFDcEIsa0JBQWtCOzs7O0lBRXJCLGlCQUFpQjtjQUFqQixpQkFBaUI7O0FBQ3ZCLGFBRE0saUJBQWlCLENBQ3RCLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUU7OEJBRHpDLGlCQUFpQjs7QUFFOUIsbUNBRmEsaUJBQWlCLDZDQUV4QixjQUFjLEVBQUUsaUJBQWlCLEVBQUU7O0FBRXpDLFlBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO0tBQzlCOztpQkFMZ0IsaUJBQWlCOztlQU85QixnQkFBRzs7U0FFTjs7O2VBRUksaUJBQUc7QUFDSix1Q0FaYSxpQkFBaUIsdUNBWWhCO0FBQ2QsZ0JBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDeEQ7OztXQWRnQixpQkFBaUI7OztxQkFBakIsaUJBQWlCIiwiZmlsZSI6ImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1BsYWNlQmxvY2tDb21tYW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQ29tbWFuZFN0YXRlIGZyb20gXCIuL0NvbW1hbmRTdGF0ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuL0Jhc2VDb21tYW5kLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYWNlQmxvY2tDb21tYW5kIGV4dGVuZHMgQmFzZUNvbW1hbmQge1xuICAgIGNvbnN0cnVjdG9yKGdhbWVDb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjaywgYmxvY2tUeXBlKSB7XG4gICAgICAgIHN1cGVyKGdhbWVDb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjayk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLkJsb2NrVHlwZSA9IGJsb2NrVHlwZTtcbiAgICB9XG5cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBkbyBzdHVmZj8/XG4gICAgfVxuICAgIFxuICAgIGJlZ2luKCkge1xuICAgICAgICBzdXBlci5iZWdpbigpO1xuICAgICAgICB0aGlzLkdhbWVDb250cm9sbGVyLnBsYWNlQmxvY2sodGhpcywgdGhpcy5CbG9ja1R5cGUpO1xuICAgIH1cbn1cblxuIl19","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceBlockCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/PlaceBlockCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceInFrontCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceInFrontCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar PlaceInFrontCommand = (function (_BaseCommand) {\n    _inherits(PlaceInFrontCommand, _BaseCommand);\n\n    function PlaceInFrontCommand(gameController, highlightCallback, blockType) {\n        _classCallCheck(this, PlaceInFrontCommand);\n\n        _get(Object.getPrototypeOf(PlaceInFrontCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n\n        this.BlockType = blockType;\n    }\n\n    _createClass(PlaceInFrontCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff??\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(PlaceInFrontCommand.prototype), \"begin\", this).call(this);\n            this.GameController.placeBlockForward(this, this.BlockType);\n        }\n    }]);\n\n    return PlaceInFrontCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = PlaceInFrontCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1BsYWNlSW5Gcm9udENvbW1hbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFDeUIsbUJBQW1COzs7OzZCQUNwQixrQkFBa0I7Ozs7SUFFckIsbUJBQW1CO2NBQW5CLG1CQUFtQjs7QUFDekIsYUFETSxtQkFBbUIsQ0FDeEIsY0FBYyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRTs4QkFEekMsbUJBQW1COztBQUVoQyxtQ0FGYSxtQkFBbUIsNkNBRTFCLGNBQWMsRUFBRSxpQkFBaUIsRUFBRTs7QUFFekMsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7S0FDOUI7O2lCQUxnQixtQkFBbUI7O2VBT2hDLGdCQUFHOztTQUVOOzs7ZUFFSSxpQkFBRztBQUNKLHVDQVphLG1CQUFtQix1Q0FZbEI7QUFDZCxnQkFBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQy9EOzs7V0FkZ0IsbUJBQW1COzs7cUJBQW5CLG1CQUFtQiIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0NvbW1hbmRRdWV1ZS9QbGFjZUluRnJvbnRDb21tYW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQ29tbWFuZFN0YXRlIGZyb20gXCIuL0NvbW1hbmRTdGF0ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuL0Jhc2VDb21tYW5kLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBsYWNlSW5Gcm9udENvbW1hbmQgZXh0ZW5kcyBCYXNlQ29tbWFuZCB7XG4gICAgY29uc3RydWN0b3IoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrLCBibG9ja1R5cGUpIHtcbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuQmxvY2tUeXBlID0gYmxvY2tUeXBlO1xuICAgIH1cblxuICAgIHRpY2soKSB7XG4gICAgICAgIC8vIGRvIHN0dWZmPz9cbiAgICB9XG4gICAgXG4gICAgYmVnaW4oKSB7XG4gICAgICAgIHN1cGVyLmJlZ2luKCk7XG4gICAgICAgIHRoaXMuR2FtZUNvbnRyb2xsZXIucGxhY2VCbG9ja0ZvcndhcmQodGhpcywgdGhpcy5CbG9ja1R5cGUpO1xuICAgIH1cbn1cblxuIl19","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceInFrontCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/PlaceInFrontCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar TurnCommand = (function (_BaseCommand) {\n    _inherits(TurnCommand, _BaseCommand);\n\n    function TurnCommand(gameController, highlightCallback, direction) {\n        _classCallCheck(this, TurnCommand);\n\n        _get(Object.getPrototypeOf(TurnCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n\n        this.Direction = direction;\n    }\n\n    _createClass(TurnCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff??\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(TurnCommand.prototype), \"begin\", this).call(this);\n            if (this.GameController.DEBUG) {\n                console.log(\"TURN command: BEGIN turning \" + this.Direction + \"  \");\n            }\n            this.GameController.turn(this, this.Direction);\n        }\n    }]);\n\n    return TurnCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = TurnCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1R1cm5Db21tYW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OEJBQ3lCLG1CQUFtQjs7Ozs2QkFDcEIsa0JBQWtCOzs7O0lBRXJCLFdBQVc7Y0FBWCxXQUFXOztBQUNqQixhQURNLFdBQVcsQ0FDaEIsY0FBYyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRTs4QkFEekMsV0FBVzs7QUFFeEIsbUNBRmEsV0FBVyw2Q0FFbEIsY0FBYyxFQUFFLGlCQUFpQixFQUFFOztBQUV6QyxZQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztLQUM5Qjs7aUJBTGdCLFdBQVc7O2VBT3hCLGdCQUFHOztTQUVOOzs7ZUFFSSxpQkFBRztBQUNKLHVDQVphLFdBQVcsdUNBWVY7QUFDZCxnQkFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRTtBQUMzQix1QkFBTyxDQUFDLEdBQUcsa0NBQWdDLElBQUksQ0FBQyxTQUFTLFFBQUssQ0FBQzthQUNsRTtBQUNELGdCQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2xEOzs7V0FqQmdCLFdBQVc7OztxQkFBWCxXQUFXIiwiZmlsZSI6ImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1R1cm5Db21tYW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgQ29tbWFuZFN0YXRlIGZyb20gXCIuL0NvbW1hbmRTdGF0ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuL0Jhc2VDb21tYW5kLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR1cm5Db21tYW5kIGV4dGVuZHMgQmFzZUNvbW1hbmQge1xuICAgIGNvbnN0cnVjdG9yKGdhbWVDb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjaywgZGlyZWN0aW9uKSB7XG4gICAgICAgIHN1cGVyKGdhbWVDb250cm9sbGVyLCBoaWdobGlnaHRDYWxsYmFjayk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLkRpcmVjdGlvbiA9IGRpcmVjdGlvbjtcbiAgICB9XG5cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBkbyBzdHVmZj8/XG4gICAgfVxuICAgIFxuICAgIGJlZ2luKCkge1xuICAgICAgICBzdXBlci5iZWdpbigpO1xuICAgICAgICBpZiAodGhpcy5HYW1lQ29udHJvbGxlci5ERUJVRykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFRVUk4gY29tbWFuZDogQkVHSU4gdHVybmluZyAke3RoaXMuRGlyZWN0aW9ufSAgYCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlci50dXJuKHRoaXMsIHRoaXMuRGlyZWN0aW9uKTtcbiAgICB9XG5cbn1cblxuIl19","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/TurnCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _CommandStateJs = require(\"./CommandState.js\");\n\nvar _CommandStateJs2 = _interopRequireDefault(_CommandStateJs);\n\nvar _CommandQueueJs = require(\"./CommandQueue.js\");\n\nvar _CommandQueueJs2 = _interopRequireDefault(_CommandQueueJs);\n\nvar _BaseCommandJs = require(\"./BaseCommand.js\");\n\nvar _BaseCommandJs2 = _interopRequireDefault(_BaseCommandJs);\n\nvar WhileCommand = (function (_BaseCommand) {\n    _inherits(WhileCommand, _BaseCommand);\n\n    function WhileCommand(gameController, highlightCallback, blockType, callback) {\n        _classCallCheck(this, WhileCommand);\n\n        _get(Object.getPrototypeOf(WhileCommand.prototype), \"constructor\", this).call(this, gameController, highlightCallback);\n\n        this.iterationsLeft = 15;\n        this.BlockType = blockType;\n        this.WhileCode = callback;\n        this.queue = new _CommandQueueJs2[\"default\"](this);\n    }\n\n    _createClass(WhileCommand, [{\n        key: \"tick\",\n        value: function tick() {\n            // do stuff\n\n            if (this.state === _CommandStateJs2[\"default\"].WORKING) {\n                // tick our command queue\n                this.queue.tick();\n            }\n\n            if (this.queue.isFailed()) {\n                this.state = _CommandStateJs2[\"default\"].FAILURE;\n            }\n\n            if (this.queue.isSucceeded()) {\n                this.handleWhileCheck();\n            }\n        }\n    }, {\n        key: \"begin\",\n        value: function begin() {\n            _get(Object.getPrototypeOf(WhileCommand.prototype), \"begin\", this).call(this);\n            if (this.GameController.DEBUG) {\n                console.log(\"WHILE command: BEGIN\");\n            }\n\n            // setup the while check the first time\n            this.handleWhileCheck();\n        }\n    }, {\n        key: \"handleWhileCheck\",\n        value: function handleWhileCheck() {\n            if (this.iterationsLeft <= 0) {\n                this.state = _CommandStateJs2[\"default\"].FAILURE;\n            }\n\n            if (this.GameController.isPathAhead(this.BlockType)) {\n                this.queue.reset();\n                this.GameController.queue.setWhileCommandInsertState(this.queue);\n                this.WhileCode();\n                this.GameController.queue.setWhileCommandInsertState(null);\n                this.queue.begin();\n            } else {\n                this.state = _CommandStateJs2[\"default\"].SUCCESS;\n            }\n\n            this.iterationsLeft--;\n            if (this.GameController.DEBUG) {\n                console.log(\"While command: Iterationsleft   \" + this.iterationsLeft + \" \");\n            }\n        }\n    }]);\n\n    return WhileCommand;\n})(_BaseCommandJs2[\"default\"]);\n\nexports[\"default\"] = WhileCommand;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvQ29tbWFuZFF1ZXVlL1doaWxlQ29tbWFuZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OzhCQUN5QixtQkFBbUI7Ozs7OEJBQ25CLG1CQUFtQjs7Ozs2QkFDcEIsa0JBQWtCOzs7O0lBRXJCLFlBQVk7Y0FBWixZQUFZOztBQUNsQixhQURNLFlBQVksQ0FDakIsY0FBYyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUU7OEJBRG5ELFlBQVk7O0FBRXpCLG1DQUZhLFlBQVksNkNBRW5CLGNBQWMsRUFBRSxpQkFBaUIsRUFBRTs7QUFFekMsWUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDekIsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDM0IsWUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDMUIsWUFBSSxDQUFDLEtBQUssR0FBRyxnQ0FBaUIsSUFBSSxDQUFDLENBQUM7S0FDdkM7O2lCQVJnQixZQUFZOztlQVV6QixnQkFBRzs7O0FBR0gsZ0JBQUksSUFBSSxDQUFDLEtBQUssS0FBSyw0QkFBYSxPQUFPLEVBQUc7O0FBRXRDLG9CQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO2FBQ3JCOztBQUVELGdCQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEVBQUU7QUFDdkIsb0JBQUksQ0FBQyxLQUFLLEdBQUcsNEJBQWEsT0FBTyxDQUFDO2FBQ3JDOztBQUVELGdCQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLEVBQUU7QUFDMUIsb0JBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO2FBQzNCO1NBRUo7OztlQUVJLGlCQUFHO0FBQ0osdUNBN0JhLFlBQVksdUNBNkJYO0FBQ2QsZ0JBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUU7QUFDM0IsdUJBQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQzthQUN2Qzs7O0FBR0QsZ0JBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQzNCOzs7ZUFFZSw0QkFBRztBQUNmLGdCQUFJLElBQUksQ0FBQyxjQUFjLElBQUksQ0FBQyxFQUFFO0FBQzFCLG9CQUFJLENBQUMsS0FBSyxHQUFHLDRCQUFhLE9BQU8sQ0FBQzthQUNyQzs7QUFFRCxnQkFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7QUFDakQsb0JBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDbkIsb0JBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNqRSxvQkFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQ2pCLG9CQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMzRCxvQkFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUN0QixNQUNJO0FBQ0Qsb0JBQUksQ0FBQyxLQUFLLEdBQUcsNEJBQWEsT0FBTyxDQUFDO2FBQ3JDOztBQUVELGdCQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDdEIsZ0JBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUU7QUFDM0IsdUJBQU8sQ0FBQyxHQUFHLHNDQUFvQyxJQUFJLENBQUMsY0FBYyxPQUFJLENBQUM7YUFDMUU7U0FDSjs7O1dBMURnQixZQUFZOzs7cUJBQVosWUFBWSIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0NvbW1hbmRRdWV1ZS9XaGlsZUNvbW1hbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBDb21tYW5kU3RhdGUgZnJvbSBcIi4vQ29tbWFuZFN0YXRlLmpzXCI7XG5pbXBvcnQgQ29tbWFuZFF1ZXVlIGZyb20gXCIuL0NvbW1hbmRRdWV1ZS5qc1wiO1xuaW1wb3J0IEJhc2VDb21tYW5kIGZyb20gXCIuL0Jhc2VDb21tYW5kLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdoaWxlQ29tbWFuZCBleHRlbmRzIEJhc2VDb21tYW5kIHtcbiAgICBjb25zdHJ1Y3RvcihnYW1lQ29udHJvbGxlciwgaGlnaGxpZ2h0Q2FsbGJhY2ssIGJsb2NrVHlwZSwgY2FsbGJhY2spIHtcbiAgICAgICAgc3VwZXIoZ2FtZUNvbnRyb2xsZXIsIGhpZ2hsaWdodENhbGxiYWNrKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuaXRlcmF0aW9uc0xlZnQgPSAxNTsgXG4gICAgICAgIHRoaXMuQmxvY2tUeXBlID0gYmxvY2tUeXBlO1xuICAgICAgICB0aGlzLldoaWxlQ29kZSA9IGNhbGxiYWNrO1xuICAgICAgICB0aGlzLnF1ZXVlID0gbmV3IENvbW1hbmRRdWV1ZSh0aGlzKTtcbiAgICB9XG5cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBkbyBzdHVmZlxuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSBDb21tYW5kU3RhdGUuV09SS0lORyApIHtcbiAgICAgICAgICAgIC8vIHRpY2sgb3VyIGNvbW1hbmQgcXVldWVcbiAgICAgICAgICAgIHRoaXMucXVldWUudGljaygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucXVldWUuaXNGYWlsZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IENvbW1hbmRTdGF0ZS5GQUlMVVJFO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy5xdWV1ZS5pc1N1Y2NlZWRlZCgpKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZVdoaWxlQ2hlY2soKTtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIFxuICAgIGJlZ2luKCkge1xuICAgICAgICBzdXBlci5iZWdpbigpO1xuICAgICAgICBpZiAodGhpcy5HYW1lQ29udHJvbGxlci5ERUJVRykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJXSElMRSBjb21tYW5kOiBCRUdJTlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNldHVwIHRoZSB3aGlsZSBjaGVjayB0aGUgZmlyc3QgdGltZVxuICAgICAgICB0aGlzLmhhbmRsZVdoaWxlQ2hlY2soKTtcbiAgICB9XG5cbiAgICBoYW5kbGVXaGlsZUNoZWNrKCkge1xuICAgICAgICBpZiAodGhpcy5pdGVyYXRpb25zTGVmdCA8PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gQ29tbWFuZFN0YXRlLkZBSUxVUkU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5HYW1lQ29udHJvbGxlci5pc1BhdGhBaGVhZCh0aGlzLkJsb2NrVHlwZSkpIHtcbiAgICAgICAgICAgIHRoaXMucXVldWUucmVzZXQoKTtcbiAgICAgICAgICAgIHRoaXMuR2FtZUNvbnRyb2xsZXIucXVldWUuc2V0V2hpbGVDb21tYW5kSW5zZXJ0U3RhdGUodGhpcy5xdWV1ZSk7XG4gICAgICAgICAgICB0aGlzLldoaWxlQ29kZSgpO1xuICAgICAgICAgICAgdGhpcy5HYW1lQ29udHJvbGxlci5xdWV1ZS5zZXRXaGlsZUNvbW1hbmRJbnNlcnRTdGF0ZShudWxsKTtcbiAgICAgICAgICAgIHRoaXMucXVldWUuYmVnaW4oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDb21tYW5kU3RhdGUuU1VDQ0VTUztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaXRlcmF0aW9uc0xlZnQtLTtcbiAgICAgICAgaWYgKHRoaXMuR2FtZUNvbnRyb2xsZXIuREVCVUcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBXaGlsZSBjb21tYW5kOiBJdGVyYXRpb25zbGVmdCAgICR7dGhpcy5pdGVyYXRpb25zTGVmdH0gYCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuIl19","deps":{"./CommandState.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js","./CommandQueue.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","./BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/CommandQueue/WhileCommand.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/GameController.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/GameController.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _CommandQueueCommandQueueJs = require(\"./CommandQueue/CommandQueue.js\");\n\nvar _CommandQueueCommandQueueJs2 = _interopRequireDefault(_CommandQueueCommandQueueJs);\n\nvar _CommandQueueBaseCommandJs = require(\"./CommandQueue/BaseCommand.js\");\n\nvar _CommandQueueBaseCommandJs2 = _interopRequireDefault(_CommandQueueBaseCommandJs);\n\nvar _CommandQueueDestroyBlockCommandJs = require(\"./CommandQueue/DestroyBlockCommand.js\");\n\nvar _CommandQueueDestroyBlockCommandJs2 = _interopRequireDefault(_CommandQueueDestroyBlockCommandJs);\n\nvar _CommandQueueMoveForwardCommandJs = require(\"./CommandQueue/MoveForwardCommand.js\");\n\nvar _CommandQueueMoveForwardCommandJs2 = _interopRequireDefault(_CommandQueueMoveForwardCommandJs);\n\nvar _CommandQueueTurnCommandJs = require(\"./CommandQueue/TurnCommand.js\");\n\nvar _CommandQueueTurnCommandJs2 = _interopRequireDefault(_CommandQueueTurnCommandJs);\n\nvar _CommandQueueWhileCommandJs = require(\"./CommandQueue/WhileCommand.js\");\n\nvar _CommandQueueWhileCommandJs2 = _interopRequireDefault(_CommandQueueWhileCommandJs);\n\nvar _CommandQueueIfBlockAheadCommandJs = require(\"./CommandQueue/IfBlockAheadCommand.js\");\n\nvar _CommandQueueIfBlockAheadCommandJs2 = _interopRequireDefault(_CommandQueueIfBlockAheadCommandJs);\n\nvar _LevelMVCLevelModelJs = require(\"./LevelMVC/LevelModel.js\");\n\nvar _LevelMVCLevelModelJs2 = _interopRequireDefault(_LevelMVCLevelModelJs);\n\nvar _LevelMVCLevelViewJs = require(\"./LevelMVC/LevelView.js\");\n\nvar _LevelMVCLevelViewJs2 = _interopRequireDefault(_LevelMVCLevelViewJs);\n\nvar _LevelMVCAssetLoaderJs = require(\"./LevelMVC/AssetLoader.js\");\n\nvar _LevelMVCAssetLoaderJs2 = _interopRequireDefault(_LevelMVCAssetLoaderJs);\n\nvar _APICodeOrgAPIJs = require(\"./API/CodeOrgAPI.js\");\n\nvar CodeOrgAPI = _interopRequireWildcard(_APICodeOrgAPIJs);\n\nvar GAME_WIDTH = 400;\nvar GAME_HEIGHT = 400;\n\n/**\n * Initializes a new instance of a mini-game visualization\n */\n\nvar GameController = (function () {\n  /**\n   * @param {Object} gameControllerConfig\n   * @param {String} gameControllerConfig.containerId DOM ID to mount this app\n   * @param {Phaser} gameControllerConfig.Phaser Phaser package\n   * @constructor\n   */\n\n  function GameController(gameControllerConfig) {\n    var _this = this;\n\n    _classCallCheck(this, GameController);\n\n    this.DEBUG = gameControllerConfig.debug;\n\n    // Phaser pre-initialization config\n    window.PhaserGlobal = {\n      disableAudio: true,\n      hideBanner: !this.DEBUG\n    };\n\n    /**\n     * @public {Object} codeOrgAPI - API with externally-callable methods for\n     * starting an attempt, issuing commands, etc.\n     */\n    this.codeOrgAPI = CodeOrgAPI.get(this);\n\n    var Phaser = gameControllerConfig.Phaser;\n\n    /**\n     * Main Phaser game instance.\n     * @property {Phaser.Game}\n     */\n    this.game = new Phaser.Game({\n      width: GAME_WIDTH,\n      height: GAME_HEIGHT,\n      renderer: Phaser.CANVAS,\n      parent: gameControllerConfig.containerId,\n      state: 'earlyLoad',\n      // TODO(bjordan): remove now that using canvas?\n      preserveDrawingBuffer: true // enables saving .png screengrabs\n    });\n\n    this.specialLevelType = null;\n    this.queue = new _CommandQueueCommandQueueJs2[\"default\"](this);\n    this.OnCompleteCallback = null;\n\n    this.assetRoot = gameControllerConfig.assetRoot;\n\n    this.audioPlayer = gameControllerConfig.audioPlayer;\n    this.assetLoader = new _LevelMVCAssetLoaderJs2[\"default\"](this);\n    this.earlyLoadAssetPacks = gameControllerConfig.earlyLoadAssetPacks || [];\n    this.earlyLoadNiceToHaveAssetPacks = gameControllerConfig.earlyLoadNiceToHaveAssetPacks || [];\n\n    this.resettableTimers = [];\n\n    // Phaser \"slow motion\" modifier we originally tuned animations using\n    this.assumedSlowMotion = 1.5;\n    this.initialSlowMotion = gameControllerConfig.customSlowMotion || this.assumedSlowMotion;\n\n    this.game.state.add('earlyLoad', {\n      preload: function preload() {\n        // don't let state change stomp essential asset downloads in progress\n        _this.game.load.resetLocked = true;\n        _this.assetLoader.loadPacks(_this.earlyLoadAssetPacks);\n      },\n      create: function create() {\n        // optionally load some more assets if we complete early load before level load\n        _this.assetLoader.loadPacks(_this.earlyLoadNiceToHaveAssetPacks);\n        _this.game.load.start();\n      }\n    });\n\n    this.game.state.add('levelRunner', {\n      preload: this.preload.bind(this),\n      create: this.create.bind(this),\n      update: this.update.bind(this),\n      render: this.render.bind(this)\n    });\n  }\n\n  /**\n   * @param {Object} levelConfig\n   */\n\n  _createClass(GameController, [{\n    key: \"loadLevel\",\n    value: function loadLevel(levelConfig) {\n      this.levelData = Object.freeze(levelConfig);\n\n      this.levelModel = new _LevelMVCLevelModelJs2[\"default\"](this.levelData);\n      this.levelView = new _LevelMVCLevelViewJs2[\"default\"](this);\n      this.specialLevelType = levelConfig.specialLevelType;\n\n      this.game.state.start('levelRunner');\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.levelModel.reset();\n      this.levelView.reset(this.levelModel);\n      this.resettableTimers.forEach(function (timer) {\n        timer.stop(true);\n      });\n      this.resettableTimers.length = 0;\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this.game.load.resetLocked = true;\n      this.game.time.advancedTiming = this.DEBUG;\n      this.game.stage.disableVisibilityChange = true;\n      this.assetLoader.loadPacks(this.levelData.assetPacks.beforeLoad);\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.levelView.create(this.levelModel);\n      this.game.time.slowMotion = this.initialSlowMotion;\n      this.addCheatKeys();\n      this.assetLoader.loadPacks(this.levelData.assetPacks.afterLoad);\n      this.game.load.start();\n    }\n  }, {\n    key: \"followingPlayer\",\n    value: function followingPlayer() {\n      return !!this.levelData.gridDimensions;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.queue.tick();\n      this.levelView.update();\n\n      if (this.queue.isFinished()) {\n        this.handleEndState();\n      }\n    }\n  }, {\n    key: \"addCheatKeys\",\n    value: function addCheatKeys() {\n      var _this2 = this;\n\n      this.game.input.keyboard.addKey(Phaser.Keyboard.TILDE).onUp.add(function () {\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.UP).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"highlight move forward command.\");\n          };\n          _this2.codeOrgAPI.moveForward(dummyFunc);\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"highlight turn right command.\");\n          };\n          _this2.codeOrgAPI.turnRight(dummyFunc);\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.LEFT).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"highlight turn left command.\");\n          };\n          _this2.codeOrgAPI.turnLeft(dummyFunc);\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.P).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"highlight placeBlock command.\");\n          };\n          _this2.codeOrgAPI.placeBlock(dummyFunc, \"logOak\");\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.D).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"highlight destroy block command.\");\n          };\n          _this2.codeOrgAPI.destroyBlock(dummyFunc);\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.E).onUp.add(function () {\n          var dummyFunc = function dummyFunc(result) {\n            console.log(\"Execute command list done: \" + result + \" \");\n          };\n          _this2.codeOrgAPI.startAttempt(dummyFunc);\n        });\n\n        _this2.game.input.keyboard.addKey(Phaser.Keyboard.W).onUp.add(function () {\n          var dummyFunc = function dummyFunc() {\n            console.log(\"Execute While command list\");\n          };\n          var blockType = \"empty\";\n          var codeBlock = function codeBlock() {\n            this.GameController.codeOrgAPI.moveForward(function () {\n              console.log(\"Execute While command move block\");\n            });\n            this.GameController.codeOrgAPI.moveForward(function () {\n              console.log(\"Execute While command move block2\");\n            });\n            this.GameController.codeOrgAPI.turnLeft(function () {\n              console.log(\"Execute While command turn\");\n            });\n          };\n          _this2.codeOrgAPI.whilePathAhead(dummyFunc, blockType, codeBlock);\n        });\n      });\n    }\n  }, {\n    key: \"handleEndState\",\n    value: function handleEndState() {\n      // TODO: go into success/failure animation? (or are we called by CodeOrg for that?)\n\n      // report back to the code.org side the pass/fail result\n      //     then clear the callback so we dont keep calling it\n      if (this.OnCompleteCallback) {\n        if (this.queue.isSucceeded()) {\n          this.OnCompleteCallback(true, this.levelModel);\n        } else {\n          this.OnCompleteCallback(false, this.levelModel);\n        }\n        this.OnCompleteCallback = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.DEBUG) {\n        this.game.debug.text(this.game.time.fps || '--', 2, 14, \"#00ff00\");\n      }\n      this.levelView.render();\n    }\n  }, {\n    key: \"scaleFromOriginal\",\n    value: function scaleFromOriginal() {\n      var _ref = this.levelData.gridDimensions || [10, 10];\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var newWidth = _ref2[0];\n      var newHeight = _ref2[1];\n      var originalWidth = 10;\n      var originalHeight = 10;\n\n      return [newWidth / originalWidth, newHeight / originalHeight];\n    }\n  }, {\n    key: \"getScreenshot\",\n    value: function getScreenshot() {\n      return this.game.canvas.toDataURL(\"image/png\");\n    }\n\n    // command processors\n  }, {\n    key: \"moveForward\",\n    value: function moveForward(commandQueueItem) {\n      var _this3 = this;\n\n      var player = this.levelModel.player,\n          allFoundCreepers,\n          groundType,\n          jumpOff;\n\n      if (this.levelModel.canMoveForward()) {\n        var wasOnBlock = player.isOnBlock;\n        this.levelModel.moveForward();\n        // TODO: check for Lava, Creeper, water => play approp animation & call commandQueueItem.failed()\n\n        jumpOff = wasOnBlock && wasOnBlock != player.isOnBlock;\n        if (player.isOnBlock || jumpOff) {\n          groundType = this.levelModel.actionPlane[this.levelModel.yToIndex(player.position[1]) + player.position[0]].blockType;\n        } else {\n          groundType = this.levelModel.groundPlane[this.levelModel.yToIndex(player.position[1]) + player.position[0]].blockType;\n        }\n\n        this.levelView.playMoveForwardAnimation(player.position, player.facing, jumpOff, player.isOnBlock, groundType, function () {\n          _this3.levelView.playIdleAnimation(player.position, player.facing, player.isOnBlock);\n\n          //First arg is if we found a creeper\n          allFoundCreepers = _this3.levelModel.isPlayerStandingNearCreeper();\n\n          if (_this3.levelModel.isPlayerStandingInWater()) {\n            _this3.levelView.playDrownFailureAnimation(player.position, player.facing, player.isOnBlock, function () {\n              commandQueueItem.failed();\n            });\n          } else if (_this3.levelModel.isPlayerStandingInLava()) {\n            _this3.levelView.playBurnInLavaAnimation(player.position, player.facing, player.isOnBlock, function () {\n              commandQueueItem.failed();\n            });\n          } else {\n            _this3.delayBy(200, function () {\n              commandQueueItem.succeeded();\n            });\n          }\n        });\n      } else {\n        if (this.levelModel.isForwardBlockOfType(\"creeper\")) {\n          this.levelView.playCreeperExplodeAnimation(player.position, player.facing, this.levelModel.getMoveForwardPosition(), player.isOnBlock, function () {\n            commandQueueItem.failed();\n          });\n        } else {\n          this.levelView.playBumpAnimation(player.position, player.facing, false);\n          this.delayBy(800, function () {\n            commandQueueItem.succeeded();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"turn\",\n    value: function turn(commandQueueItem, direction) {\n      if (direction == -1) {\n        this.levelModel.turnLeft();\n      }\n\n      if (direction == 1) {\n        this.levelModel.turnRight();\n      }\n      this.levelView.updatePlayerDirection(this.levelModel.player.position, this.levelModel.player.facing);\n\n      this.delayBy(800, function () {\n        commandQueueItem.succeeded();\n      });\n    }\n  }, {\n    key: \"destroyBlockWithoutPlayerInteraction\",\n    value: function destroyBlockWithoutPlayerInteraction(position) {\n      var block = this.levelModel.actionPlane[this.levelModel.yToIndex(position[1]) + position[0]];\n      this.levelModel.destroyBlock(position);\n\n      if (block !== null) {\n        var destroyPosition = block.position;\n        var blockType = block.blockType;\n\n        if (block.isDestroyable) {\n          this.levelModel.computeShadingPlane();\n          this.levelModel.computeFowPlane();\n          switch (blockType) {\n            case \"logAcacia\":\n            case \"treeAcacia\":\n              blockType = \"planksAcacia\";\n              break;\n            case \"logBirch\":\n            case \"treeBirch\":\n              blockType = \"planksBirch\";\n              break;\n            case \"logJungle\":\n            case \"treeJungle\":\n              blockType = \"planksJungle\";\n              break;\n            case \"logOak\":\n            case \"treeOak\":\n              blockType = \"planksOak\";\n              break;\n            case \"logSpruce\":\n            case \"treeSpruce\":\n              blockType = \"planksSpruce\";\n              break;\n          }\n          this.levelView.actionPlaneBlocks[this.levelModel.yToIndex(destroyPosition[1]) + destroyPosition[0]].kill();\n          this.levelView.playExplosionAnimation(this.levelModel.player.position, this.levelModel.player.facing, destroyPosition, blockType, function () {}, true);\n        } else if (block.isUsable) {\n          switch (blockType) {\n            case \"sheep\":\n              // TODO: What to do with already sheered sheep?\n              this.levelView.playShearAnimation(this.levelModel.player.position, this.levelModel.player.facing, destroyPosition, blockType, function () {});\n              break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"destroyBlock\",\n    value: function destroyBlock(commandQueueItem) {\n      var _this4 = this;\n\n      var player = this.levelModel.player;\n      if (this.levelModel.canDestroyBlockForward()) {\n        var block = this.levelModel.destroyBlockForward();\n\n        if (block !== null) {\n          var destroyPosition = block.position;\n          var blockType = block.blockType;\n\n          if (block.isDestroyable) {\n            this.levelModel.computeShadingPlane();\n            this.levelModel.computeFowPlane();\n            switch (blockType) {\n              case \"logAcacia\":\n              case \"treeAcacia\":\n                blockType = \"planksAcacia\";\n                break;\n              case \"logBirch\":\n              case \"treeBirch\":\n                blockType = \"planksBirch\";\n                break;\n              case \"logJungle\":\n              case \"treeJungle\":\n                blockType = \"planksJungle\";\n                break;\n              case \"logOak\":\n              case \"treeOak\":\n                blockType = \"planksOak\";\n                break;\n              case \"logSpruce\":\n              case \"treeSpruce\":\n                blockType = \"planksSpruce\";\n                break;\n            }\n\n            this.levelView.playDestroyBlockAnimation(player.position, player.facing, destroyPosition, blockType, this.levelModel.shadingPlane, this.levelModel.fowPlane, function () {\n              commandQueueItem.succeeded();\n            });\n          } else if (block.isUsable) {\n            switch (blockType) {\n              case \"sheep\":\n                // TODO: What to do with already sheered sheep?\n                this.levelView.playShearSheepAnimation(player.position, player.facing, destroyPosition, blockType, function () {\n                  commandQueueItem.succeeded();\n                });\n                break;\n              default:\n                commandQueueItem.succeeded();\n            }\n          } else {\n            commandQueueItem.succeeded();\n          }\n        }\n      } else {\n        this.levelView.playPunchDestroyAirAnimation(player.position, player.facing, this.levelModel.getMoveForwardPosition(), function () {\n          _this4.levelView.setSelectionIndicatorPosition(player.position[0], player.position[1]);\n          _this4.levelView.playIdleAnimation(player.position, player.facing, player.isOnBlock);\n          _this4.delayBy(600, function () {\n            commandQueueItem.succeeded();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"canUseTints\",\n    value: function canUseTints() {\n      // TODO(bjordan): Remove\n      // all browsers appear to work with new version of Phaser\n      return true;\n    }\n  }, {\n    key: \"checkTntAnimation\",\n    value: function checkTntAnimation() {\n      return this.specialLevelType === 'freeplay';\n    }\n  }, {\n    key: \"checkMinecartLevelEndAnimation\",\n    value: function checkMinecartLevelEndAnimation() {\n      return this.specialLevelType === 'minecart';\n    }\n  }, {\n    key: \"checkHouseBuiltEndAnimation\",\n    value: function checkHouseBuiltEndAnimation() {\n      return this.specialLevelType === 'houseBuild';\n    }\n  }, {\n    key: \"checkRailBlock\",\n    value: function checkRailBlock(blockType) {\n      var checkRailBlock = this.levelModel.railMap[this.levelModel.yToIndex(this.levelModel.player.position[1]) + this.levelModel.player.position[0]];\n      if (checkRailBlock !== \"\") {\n        blockType = checkRailBlock;\n      } else {\n        blockType = \"railsVertical\";\n      }\n      return blockType;\n    }\n  }, {\n    key: \"placeBlock\",\n    value: function placeBlock(commandQueueItem, blockType) {\n      var _this5 = this;\n\n      var blockIndex = this.levelModel.yToIndex(this.levelModel.player.position[1]) + this.levelModel.player.position[0];\n      var blockTypeAtPosition = this.levelModel.actionPlane[blockIndex].blockType;\n      if (this.levelModel.canPlaceBlock()) {\n        if (this.checkMinecartLevelEndAnimation() && blockType == \"rail\") {\n          blockType = this.checkRailBlock(blockType);\n        }\n\n        if (blockTypeAtPosition !== \"\") {\n          this.levelModel.destroyBlock(blockIndex);\n        }\n        if (this.levelModel.placeBlock(blockType)) {\n          this.levelView.playPlaceBlockAnimation(this.levelModel.player.position, this.levelModel.player.facing, blockType, blockTypeAtPosition, function () {\n            _this5.levelModel.computeShadingPlane();\n            _this5.levelModel.computeFowPlane();\n            _this5.levelView.updateShadingPlane(_this5.levelModel.shadingPlane);\n            _this5.levelView.updateFowPlane(_this5.levelModel.fowPlane);\n            _this5.delayBy(200, function () {\n              _this5.levelView.playIdleAnimation(_this5.levelModel.player.position, _this5.levelModel.player.facing, false);\n            });\n            _this5.delayBy(400, function () {\n              commandQueueItem.succeeded();\n            });\n          });\n        } else {\n          var signalBinding = this.levelView.playPlayerAnimation(\"jumpUp\", this.levelModel.player.position, this.levelModel.player.facing, false).onLoop.add(function () {\n            _this5.levelView.playIdleAnimation(_this5.levelModel.player.position, _this5.levelModel.player.facing, false);\n            signalBinding.detach();\n            _this5.delayBy(800, function () {\n              commandQueueItem.succeeded();\n            });\n          }, this);\n        }\n      } else {\n        commandQueueItem.failed();\n      }\n    }\n  }, {\n    key: \"delayBy\",\n    value: function delayBy(ms, completionHandler) {\n      var timer = this.game.time.create(true);\n      timer.add(this.originalMsToScaled(ms), completionHandler, this);\n      timer.start();\n      this.resettableTimers.push(timer);\n    }\n  }, {\n    key: \"originalMsToScaled\",\n    value: function originalMsToScaled(ms) {\n      var realMs = ms / this.assumedSlowMotion;\n      return realMs * this.game.time.slowMotion;\n    }\n  }, {\n    key: \"originalFpsToScaled\",\n    value: function originalFpsToScaled(fps) {\n      var realFps = fps * this.assumedSlowMotion;\n      return realFps / this.game.time.slowMotion;\n    }\n  }, {\n    key: \"placeBlockForward\",\n    value: function placeBlockForward(commandQueueItem, blockType) {\n      var _this6 = this;\n\n      var forwardPosition,\n          placementPlane,\n          soundEffect = function soundEffect() {};\n\n      if (!this.levelModel.canPlaceBlockForward()) {\n        this.levelView.playPunchAirAnimation(this.levelModel.player.position, this.levelModel.player.facing, this.levelModel.player.position, function () {\n          _this6.levelView.playIdleAnimation(_this6.levelModel.player.position, _this6.levelModel.player.facing, false);\n          commandQueueItem.succeeded();\n        });\n        return;\n      }\n\n      forwardPosition = this.levelModel.getMoveForwardPosition();\n      placementPlane = this.levelModel.getPlaneToPlaceOn(forwardPosition);\n      if (this.levelModel.isBlockOfTypeOnPlane(forwardPosition, \"lava\", placementPlane)) {\n        soundEffect = function () {\n          _this6.levelView.audioPlayer.play(\"fizz\");\n        };\n      }\n      this.levelModel.placeBlockForward(blockType, placementPlane);\n      this.levelView.playPlaceBlockInFrontAnimation(this.levelModel.player.position, this.levelModel.player.facing, this.levelModel.getMoveForwardPosition(), placementPlane, blockType, function () {\n        _this6.levelModel.computeShadingPlane();\n        _this6.levelModel.computeFowPlane();\n        _this6.levelView.updateShadingPlane(_this6.levelModel.shadingPlane);\n        _this6.levelView.updateFowPlane(_this6.levelModel.fowPlane);\n        soundEffect();\n        _this6.delayBy(200, function () {\n          _this6.levelView.playIdleAnimation(_this6.levelModel.player.position, _this6.levelModel.player.facing, false);\n        });\n        _this6.delayBy(400, function () {\n          commandQueueItem.succeeded();\n        });\n      });\n    }\n  }, {\n    key: \"checkSolution\",\n    value: function checkSolution(commandQueueItem) {\n      var _this7 = this;\n\n      var player = this.levelModel.player;\n      this.levelView.setSelectionIndicatorPosition(player.position[0], player.position[1]);\n\n      // check the final state to see if its solved\n      if (this.levelModel.isSolved()) {\n        if (this.checkHouseBuiltEndAnimation()) {\n          var houseBottomRight = this.levelModel.getHouseBottomRight();\n          var inFrontOfDoor = [houseBottomRight[0] - 1, houseBottomRight[1] + 2];\n          var bedPosition = [houseBottomRight[0], houseBottomRight[1]];\n          var doorPosition = [houseBottomRight[0] - 1, houseBottomRight[1] + 1];\n          this.levelModel.moveTo(inFrontOfDoor);\n          this.levelView.playSuccessHouseBuiltAnimation(player.position, player.facing, player.isOnBlock, this.levelModel.houseGroundToFloorBlocks(houseBottomRight), [bedPosition, doorPosition], function () {\n            commandQueueItem.succeeded();\n          }, function () {\n            _this7.levelModel.destroyBlock(bedPosition);\n            _this7.levelModel.destroyBlock(doorPosition);\n            _this7.levelModel.computeShadingPlane();\n            _this7.levelModel.computeFowPlane();\n            _this7.levelView.updateShadingPlane(_this7.levelModel.shadingPlane);\n            _this7.levelView.updateFowPlane(_this7.levelModel.fowPlane);\n          });\n        } else if (this.checkMinecartLevelEndAnimation()) {\n          this.levelView.playMinecartAnimation(player.position, player.facing, player.isOnBlock, function () {\n            commandQueueItem.succeeded();\n          }, this.levelModel.getMinecartTrack(), this.levelModel.getUnpoweredRails());\n        } else if (this.checkTntAnimation()) {\n          this.levelView.scaleShowWholeWorld(function () {});\n          var tnt = this.levelModel.getTnt();\n          var wasOnBlock = player.isOnBlock;\n          this.levelView.playDestroyTntAnimation(player.position, player.facing, player.isOnBlock, this.levelModel.getTnt(), this.levelModel.shadingPlane, function () {\n            if (tnt.length) {\n              // Shakes camera (need to avoid contention with pan?)\n              //this.game.camera.setPosition(0, 5);\n              //this.game.add.tween(this.game.camera)\n              //    .to({y: -10}, 40, Phaser.Easing.Sinusoidal.InOut, false, 0, 3, true)\n              //    .to({y: 0}, 0)\n              //    .start();\n            }\n            for (var i in tnt) {\n              if (tnt[i].x === _this7.levelModel.player.position.x && tnt[i].y === _this7.levelModel.player.position.y) {\n                _this7.levelModel.player.isOnBlock = false;\n              }\n              var surroundingBlocks = _this7.levelModel.getAllBorderingPositionNotOfType(tnt[i], \"tnt\");\n              _this7.levelModel.destroyBlock(tnt[i]);\n              for (var b = 1; b < surroundingBlocks.length; ++b) {\n                if (surroundingBlocks[b][0]) {\n                  _this7.destroyBlockWithoutPlayerInteraction(surroundingBlocks[b][1]);\n                }\n              }\n            }\n            if (!player.isOnBlock && wasOnBlock) {\n              _this7.levelView.playPlayerJumpDownVerticalAnimation(player.position, player.facing);\n            }\n            _this7.levelModel.computeShadingPlane();\n            _this7.levelModel.computeFowPlane();\n            _this7.levelView.updateShadingPlane(_this7.levelModel.shadingPlane);\n            _this7.levelView.updateFowPlane(_this7.levelModel.fowPlane);\n            _this7.delayBy(200, function () {\n              _this7.levelView.playSuccessAnimation(player.position, player.facing, player.isOnBlock, function () {\n                commandQueueItem.succeeded();\n              });\n            });\n          });\n        } else {\n          this.levelView.playSuccessAnimation(player.position, player.facing, player.isOnBlock, function () {\n            commandQueueItem.succeeded();\n          });\n        }\n      } else {\n        this.levelView.playFailureAnimation(player.position, player.facing, player.isOnBlock, function () {\n          commandQueueItem.failed();\n        });\n      }\n    }\n  }, {\n    key: \"isPathAhead\",\n    value: function isPathAhead(blockType) {\n      return this.levelModel.isForwardBlockOfType(blockType);\n    }\n  }]);\n\n  return GameController;\n})();\n\nwindow.GameController = GameController;\n\nexports[\"default\"] = GameController;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,","deps":{"./LevelMVC/AssetLoader.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/AssetLoader.js","./CommandQueue/BaseCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js","./CommandQueue/DestroyBlockCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js","./CommandQueue/MoveForwardCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js","./CommandQueue/TurnCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js","./CommandQueue/WhileCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js","./CommandQueue/IfBlockAheadCommand.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js","./LevelMVC/LevelView.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelView.js","./CommandQueue/CommandQueue.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js","./LevelMVC/LevelModel.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelModel.js","./API/CodeOrgAPI.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/API/CodeOrgAPI.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/GameController.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/GameController.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/AssetLoader.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/AssetLoader.js","source":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar AssetLoader = (function () {\n  function AssetLoader(controller) {\n    _classCallCheck(this, AssetLoader);\n\n    this.controller = controller;\n    this.audioPlayer = controller.audioPlayer;\n    this.game = controller.game;\n    this.assetRoot = controller.assetRoot;\n\n    this.assets = {\n      entityShadow: {\n        type: 'image',\n        path: this.assetRoot + 'images/Character_Shadow.png'\n      },\n      selectionIndicator: {\n        type: 'image',\n        path: this.assetRoot + 'images/Selection_Indicator.png'\n      },\n      shadeLayer: {\n        type: 'image',\n        path: this.assetRoot + 'images/Shade_Layer.png'\n      },\n      tallGrass: {\n        type: 'image',\n        path: this.assetRoot + 'images/TallGrass.png'\n      },\n      finishOverlay: {\n        type: 'image',\n        path: this.assetRoot + 'images/WhiteRect.png'\n      },\n      bed: {\n        type: 'image',\n        path: this.assetRoot + 'images/Bed.png'\n      },\n      playerSteve: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Steve.png',\n        jsonPath: this.assetRoot + 'images/Steve.json'\n      },\n      playerAlex: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Alex.png',\n        jsonPath: this.assetRoot + 'images/Alex.json'\n      },\n      AO: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/AO.png',\n        jsonPath: this.assetRoot + 'images/AO.json'\n      },\n      blockShadows: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Block_Shadows.png',\n        jsonPath: this.assetRoot + 'images/Block_Shadows.json'\n      },\n      undergroundFow: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/UndergroundFoW.png',\n        jsonPath: this.assetRoot + 'images/UndergroundFoW.json'\n      },\n      blocks: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Blocks.png',\n        jsonPath: this.assetRoot + 'images/Blocks.json'\n      },\n      leavesAcacia: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Leaves_Acacia_Decay.png',\n        jsonPath: this.assetRoot + 'images/Leaves_Acacia_Decay.json'\n      },\n      leavesBirch: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Leaves_Birch_Decay.png',\n        jsonPath: this.assetRoot + 'images/Leaves_Birch_Decay.json'\n      },\n      leavesJungle: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Leaves_Jungle_Decay.png',\n        jsonPath: this.assetRoot + 'images/Leaves_Jungle_Decay.json'\n      },\n      leavesOak: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Leaves_Oak_Decay.png',\n        jsonPath: this.assetRoot + 'images/Leaves_Oak_Decay.json'\n      },\n      leavesSpruce: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Leaves_Spruce_Decay.png',\n        jsonPath: this.assetRoot + 'images/Leaves_Spruce_Decay.json'\n      },\n      sheep: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Sheep.png',\n        jsonPath: this.assetRoot + 'images/Sheep.json'\n      },\n      creeper: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Creeper.png',\n        jsonPath: this.assetRoot + 'images/Creeper.json'\n      },\n      crops: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Crops.png',\n        jsonPath: this.assetRoot + 'images/Crops.json'\n      },\n      torch: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Torch.png',\n        jsonPath: this.assetRoot + 'images/Torch.json'\n      },\n      destroyOverlay: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Destroy_Overlay.png',\n        jsonPath: this.assetRoot + 'images/Destroy_Overlay.json'\n      },\n      blockExplode: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/BlockExplode.png',\n        jsonPath: this.assetRoot + 'images/BlockExplode.json'\n      },\n      miningParticles: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/MiningParticles.png',\n        jsonPath: this.assetRoot + 'images/MiningParticles.json'\n      },\n      miniBlocks: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Miniblocks.png',\n        jsonPath: this.assetRoot + 'images/Miniblocks.json'\n      },\n      lavaPop: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/LavaPop.png',\n        jsonPath: this.assetRoot + 'images/LavaPop.json'\n      },\n      fire: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Fire.png',\n        jsonPath: this.assetRoot + 'images/Fire.json'\n      },\n      bubbles: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Bubbles.png',\n        jsonPath: this.assetRoot + 'images/Bubbles.json'\n      },\n      explosion: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Explosion.png',\n        jsonPath: this.assetRoot + 'images/Explosion.json'\n      },\n      door: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Door.png',\n        jsonPath: this.assetRoot + 'images/Door.json'\n      },\n      rails: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/Rails.png',\n        jsonPath: this.assetRoot + 'images/Rails.json'\n      },\n      tnt: {\n        type: 'atlasJSON',\n        pngPath: this.assetRoot + 'images/TNT.png',\n        jsonPath: this.assetRoot + 'images/TNT.json'\n      },\n      dig_wood1: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/dig_wood1.mp3',\n        wav: this.assetRoot + 'audio/dig_wood1.wav',\n        ogg: this.assetRoot + 'audio/dig_wood1.ogg'\n      },\n      stepGrass: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/step_grass1.mp3',\n        wav: this.assetRoot + 'audio/step_grass1.wav',\n        ogg: this.assetRoot + 'audio/step_grass1.ogg'\n      },\n      stepWood: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/wood2.mp3',\n        ogg: this.assetRoot + 'audio/wood2.ogg'\n      },\n      stepStone: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/stone2.mp3',\n        ogg: this.assetRoot + 'audio/stone2.ogg'\n      },\n      stepGravel: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/gravel1.mp3',\n        ogg: this.assetRoot + 'audio/gravel1.ogg'\n      },\n      stepFarmland: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/cloth4.mp3',\n        ogg: this.assetRoot + 'audio/cloth4.ogg'\n      },\n      failure: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/break.mp3',\n        ogg: this.assetRoot + 'audio/break.ogg'\n      },\n      success: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/levelup.mp3',\n        ogg: this.assetRoot + 'audio/levelup.ogg'\n      },\n      fall: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/fallsmall.mp3',\n        ogg: this.assetRoot + 'audio/fallsmall.ogg'\n      },\n      fuse: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/fuse.mp3',\n        ogg: this.assetRoot + 'audio/fuse.ogg'\n      },\n      explode: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/explode3.mp3',\n        ogg: this.assetRoot + 'audio/explode3.ogg'\n      },\n      placeBlock: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/cloth1.mp3',\n        ogg: this.assetRoot + 'audio/cloth1.ogg'\n      },\n      collectedBlock: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/pop.mp3',\n        ogg: this.assetRoot + 'audio/pop.ogg'\n      },\n      bump: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/hit3.mp3',\n        ogg: this.assetRoot + 'audio/hit3.ogg'\n      },\n      punch: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/cloth1.mp3',\n        ogg: this.assetRoot + 'audio/cloth1.ogg'\n      },\n      fizz: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/fizz.mp3',\n        ogg: this.assetRoot + 'audio/fizz.ogg'\n      },\n      doorOpen: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/door_open.mp3',\n        ogg: this.assetRoot + 'audio/door_open.ogg'\n      },\n      houseSuccess: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/launch1.mp3',\n        ogg: this.assetRoot + 'audio/launch1.ogg'\n      },\n      minecart: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/minecartBase.mp3',\n        ogg: this.assetRoot + 'audio/minecartBase.ogg'\n      },\n      sheepBaa: {\n        type: 'sound',\n        mp3: this.assetRoot + 'audio/say3.mp3',\n        ogg: this.assetRoot + 'audio/say3.ogg'\n      }\n    };\n\n    this.assetPacks = {\n      levelOneAssets: ['entityShadow', 'selectionIndicator', 'shadeLayer', 'AO', 'blockShadows', 'leavesOak', 'leavesBirch', 'tallGrass', 'blocks', 'sheep', 'bump', 'stepGrass', 'failure', 'success'],\n      levelTwoAssets: ['entityShadow', 'selectionIndicator', 'shadeLayer', 'AO', 'blockShadows', 'leavesSpruce', 'tallGrass', 'blocks', 'sheep', 'bump', 'stepGrass', 'failure', 'playerSteve', 'success', 'miniBlocks', 'blockExplode', 'miningParticles', 'destroyOverlay', 'dig_wood1', 'collectedBlock', 'punch'],\n      levelThreeAssets: ['entityShadow', 'selectionIndicator', 'shadeLayer', 'AO', 'blockShadows', 'leavesOak', 'tallGrass', 'blocks', 'sheep', 'bump', 'stepGrass', 'failure', 'playerSteve', 'success', 'miniBlocks', 'blockExplode', 'miningParticles', 'destroyOverlay', 'dig_wood1', 'collectedBlock', 'sheepBaa', 'punch'],\n      allAssetsMinusPlayer: ['entityShadow', 'selectionIndicator', 'shadeLayer', 'tallGrass', 'finishOverlay', 'bed', 'AO', 'blockShadows', 'undergroundFow', 'blocks', 'leavesAcacia', 'leavesBirch', 'leavesJungle', 'leavesOak', 'leavesSpruce', 'sheep', 'creeper', 'crops', 'torch', 'destroyOverlay', 'blockExplode', 'miningParticles', 'miniBlocks', 'lavaPop', 'fire', 'bubbles', 'explosion', 'door', 'rails', 'tnt', 'dig_wood1', 'stepGrass', 'stepWood', 'stepStone', 'stepGravel', 'stepFarmland', 'failure', 'success', 'fall', 'fuse', 'explode', 'placeBlock', 'collectedBlock', 'bump', 'punch', 'fizz', 'doorOpen', 'houseSuccess', 'minecart', 'sheepBaa'],\n      playerSteve: ['playerSteve'],\n      playerAlex: ['playerAlex'],\n      grass: ['tallGrass']\n    };\n  }\n\n  _createClass(AssetLoader, [{\n    key: 'loadPacks',\n    value: function loadPacks(packList) {\n      var _this = this;\n\n      packList.forEach(function (packName) {\n        _this.loadPack(packName);\n      });\n    }\n  }, {\n    key: 'loadPack',\n    value: function loadPack(packName) {\n      var packAssets = this.assetPacks[packName];\n      this.loadAssets(packAssets);\n    }\n  }, {\n    key: 'loadAssets',\n    value: function loadAssets(assetNames) {\n      var _this2 = this;\n\n      assetNames.forEach(function (assetKey) {\n        var assetConfig = _this2.assets[assetKey];\n        _this2.loadAsset(assetKey, assetConfig);\n      });\n    }\n  }, {\n    key: 'loadAsset',\n    value: function loadAsset(key, config) {\n      switch (config.type) {\n        case 'image':\n          this.game.load.image(key, config.path);\n          break;\n        case 'sound':\n          this.audioPlayer.register({\n            id: key,\n            mp3: config.mp3,\n            ogg: config.ogg\n          });\n          break;\n        case 'atlasJSON':\n          this.game.load.atlasJSONHash(key, config.pngPath, config.jsonPath);\n          break;\n        default:\n          throw 'Asset ' + key + ' needs config.type set in configuration.';\n      }\n    }\n  }]);\n\n  return AssetLoader;\n})();\n\nexports['default'] = AssetLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/AssetLoader.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/LevelMVC/AssetLoader.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports[\"default\"] = Object.freeze({\n    Up: 0,\n    Right: 1,\n    Down: 2,\n    Left: 3\n});\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvTGV2ZWxNVkMvRmFjaW5nRGlyZWN0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQUFlLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDekIsTUFBRSxFQUFFLENBQUM7QUFDTCxTQUFLLEVBQUUsQ0FBQztBQUNSLFFBQUksRUFBRSxDQUFDO0FBQ1AsUUFBSSxFQUFFLENBQUM7Q0FDVixDQUFDIiwiZmlsZSI6ImJ1aWxkL2pzL2NyYWZ0L2dhbWUvTGV2ZWxNVkMvRmFjaW5nRGlyZWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmZyZWV6ZSh7XG4gICAgVXA6IDAsXG4gICAgUmlnaHQ6IDEsXG4gICAgRG93bjogMixcbiAgICBMZWZ0OiAzXG59KTtcbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/LevelMVC/FacingDirection.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelBlock.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelBlock.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LevelBlock = (function () {\n  function LevelBlock(blockType) {\n    _classCallCheck(this, LevelBlock);\n\n    this.blockType = blockType;\n\n    // Default values apply to simple, action-plane destroyable blocks\n    this.isEntity = false;\n    this.isWalkable = false;\n    this.isDeadly = false;\n    this.isPlacable = false; // whether another block can be placed in this block's spot\n    this.isDestroyable = true;\n    this.isUsable = true;\n    this.isEmpty = false;\n    this.isEmissive = false;\n    this.isTransparent = false;\n\n    if (blockType === \"\") {\n      this.isWalkable = true;\n      this.isDestroyable = false;\n      this.isEmpty = true;\n      this.isPlacable = true;\n      this.isUsable = false;\n    }\n\n    if (blockType.match('torch')) {\n      this.isWalkable = true;\n      this.isPlacable = true;\n    }\n\n    if (blockType.substring(0, 5) == \"rails\") {\n      this.isEntity = true;\n      this.isWalkable = true;\n      this.isUsable = true;\n      this.isDestroyable = false;\n      this.isTransparent = true;\n    }\n\n    if (blockType == \"sheep\") {\n      this.isEntity = true;\n      this.isDestroyable = false;\n      this.isUsable = true;\n    }\n\n    if (blockType == \"creeper\") {\n      this.isEntity = true;\n    }\n\n    if (blockType == \"glass\") {\n      this.isDestroyable = false;\n    }\n\n    if (blockType == \"bedrock\") {\n      this.isDestroyable = false;\n    }\n\n    if (blockType == \"lava\") {\n      this.isEmissive = true;\n      this.isWalkable = true;\n      this.isDeadly = true;\n      this.isPlacable = true;\n    }\n\n    if (blockType == \"water\") {\n      this.isPlacable = true;\n    }\n\n    if (blockType == \"torch\") {\n      this.isEmissive = true;\n      this.isEntity = true;\n      this.isWalkable = true;\n      this.isUsable = true;\n      this.isDestroyable = false;\n      this.isTransparent = true;\n    }\n\n    if (blockType == \"cropWheat\") {\n      this.isEmissive = false;\n      this.isEntity = true;\n      this.isWalkable = true;\n      this.isUsable = true;\n      this.isDestroyable = false;\n      this.isTransparent = true;\n    }\n\n    if (blockType == \"tnt\") {\n      this.isUsable = true;\n      this.isDestroyable = true;\n    }\n\n    if (blockType == \"door\") {\n      this.isEntity = true;\n      this.isWalkable = true;\n      this.isUsable = true;\n      this.isDestroyable = false;\n      this.isTransparent = true;\n    }\n  }\n\n  _createClass(LevelBlock, [{\n    key: \"getIsTree\",\n    value: function getIsTree() {\n      return !!this.blockType.match(/^tree/);\n    }\n  }, {\n    key: \"getIsEmptyOrEntity\",\n    value: function getIsEmptyOrEntity() {\n      return this.isEmpty || this.isEntity;\n    }\n  }]);\n\n  return LevelBlock;\n})();\n\nexports[\"default\"] = LevelBlock;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvTGV2ZWxNVkMvTGV2ZWxCbG9jay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCLFVBQVU7QUFDbEIsV0FEUSxVQUFVLENBQ2pCLFNBQVMsRUFBRTswQkFESixVQUFVOztBQUUzQixRQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQzs7O0FBRzNCLFFBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ3RCLFFBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ3RCLFFBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0FBQzFCLFFBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0FBQ3JCLFFBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLFFBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDOztBQUUzQixRQUFJLFNBQVMsS0FBSyxFQUFFLEVBQUU7QUFDcEIsVUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7QUFDdkIsVUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7QUFDM0IsVUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFDcEIsVUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7QUFDdkIsVUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7S0FDdkI7O0FBRUQsUUFBSSxTQUFTLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFO0FBQzVCLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0tBQ3hCOztBQUVELFFBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVB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QyxPQUFPLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQztLQUN0Qzs7O1NBeEdrQixVQUFVOzs7cUJBQVYsVUFBVSIsImZpbGUiOiJidWlsZC9qcy9jcmFmdC9nYW1lL0xldmVsTVZDL0xldmVsQmxvY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBMZXZlbEJsb2NrIHtcbiAgY29uc3RydWN0b3IoYmxvY2tUeXBlKSB7XG4gICAgdGhpcy5ibG9ja1R5cGUgPSBibG9ja1R5cGU7XG5cbiAgICAvLyBEZWZhdWx0IHZhbHVlcyBhcHBseSB0byBzaW1wbGUsIGFjdGlvbi1wbGFuZSBkZXN0cm95YWJsZSBibG9ja3NcbiAgICB0aGlzLmlzRW50aXR5ID0gZmFsc2U7XG4gICAgdGhpcy5pc1dhbGthYmxlID0gZmFsc2U7XG4gICAgdGhpcy5pc0RlYWRseSA9IGZhbHNlO1xuICAgIHRoaXMuaXNQbGFjYWJsZSA9IGZhbHNlOyAvLyB3aGV0aGVyIGFub3RoZXIgYmxvY2sgY2FuIGJlIHBsYWNlZCBpbiB0aGlzIGJsb2NrJ3Mgc3BvdFxuICAgIHRoaXMuaXNEZXN0cm95YWJsZSA9IHRydWU7XG4gICAgdGhpcy5pc1VzYWJsZSA9IHRydWU7XG4gICAgdGhpcy5pc0VtcHR5ID0gZmFsc2U7XG4gICAgdGhpcy5pc0VtaXNzaXZlID0gZmFsc2U7XG4gICAgdGhpcy5pc1RyYW5zcGFyZW50ID0gZmFsc2U7XG5cbiAgICBpZiAoYmxvY2tUeXBlID09PSBcIlwiKSB7XG4gICAgICB0aGlzLmlzV2Fsa2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5pc0Rlc3Ryb3lhYmxlID0gZmFsc2U7XG4gICAgICB0aGlzLmlzRW1wdHkgPSB0cnVlO1xuICAgICAgdGhpcy5pc1BsYWNhYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNVc2FibGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlLm1hdGNoKCd0b3JjaCcpKSB7XG4gICAgICB0aGlzLmlzV2Fsa2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5pc1BsYWNhYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZihibG9ja1R5cGUuc3Vic3RyaW5nKDAsIDUpID09IFwicmFpbHNcIilcbiAgICB7XG4gICAgICB0aGlzLmlzRW50aXR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNXYWxrYWJsZSA9IHRydWU7XG4gICAgICB0aGlzLmlzVXNhYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNEZXN0cm95YWJsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5pc1RyYW5zcGFyZW50ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlID09IFwic2hlZXBcIikge1xuICAgICAgdGhpcy5pc0VudGl0eSA9IHRydWU7XG4gICAgICB0aGlzLmlzRGVzdHJveWFibGUgPSBmYWxzZTtcbiAgICAgIHRoaXMuaXNVc2FibGUgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChibG9ja1R5cGUgPT0gXCJjcmVlcGVyXCIpe1xuICAgICAgdGhpcy5pc0VudGl0eSA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKGJsb2NrVHlwZSA9PSBcImdsYXNzXCIpe1xuICAgICAgdGhpcy5pc0Rlc3Ryb3lhYmxlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGJsb2NrVHlwZSA9PSBcImJlZHJvY2tcIil7XG4gICAgICB0aGlzLmlzRGVzdHJveWFibGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlID09IFwibGF2YVwiKSB7XG4gICAgICB0aGlzLmlzRW1pc3NpdmUgPSB0cnVlO1xuICAgICAgdGhpcy5pc1dhbGthYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNEZWFkbHkgPSB0cnVlO1xuICAgICAgdGhpcy5pc1BsYWNhYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlID09IFwid2F0ZXJcIikge1xuICAgICAgdGhpcy5pc1BsYWNhYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlID09IFwidG9yY2hcIikge1xuICAgICAgdGhpcy5pc0VtaXNzaXZlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNFbnRpdHkgPSB0cnVlO1xuICAgICAgdGhpcy5pc1dhbGthYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNVc2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5pc0Rlc3Ryb3lhYmxlID0gZmFsc2U7XG4gICAgICB0aGlzLmlzVHJhbnNwYXJlbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChibG9ja1R5cGUgPT0gXCJjcm9wV2hlYXRcIikge1xuICAgICAgdGhpcy5pc0VtaXNzaXZlID0gZmFsc2U7XG4gICAgICB0aGlzLmlzRW50aXR5ID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNXYWxrYWJsZSA9IHRydWU7XG4gICAgICB0aGlzLmlzVXNhYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNEZXN0cm95YWJsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5pc1RyYW5zcGFyZW50ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYmxvY2tUeXBlID09IFwidG50XCIpIHtcbiAgICAgIHRoaXMuaXNVc2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5pc0Rlc3Ryb3lhYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZihibG9ja1R5cGUgPT0gXCJkb29yXCIpIHtcbiAgICAgIHRoaXMuaXNFbnRpdHkgPSB0cnVlO1xuICAgICAgdGhpcy5pc1dhbGthYmxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuaXNVc2FibGUgPSB0cnVlO1xuICAgICAgdGhpcy5pc0Rlc3Ryb3lhYmxlID0gZmFsc2U7XG4gICAgICB0aGlzLmlzVHJhbnNwYXJlbnQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGdldElzVHJlZSgpIHtcbiAgICByZXR1cm4gISF0aGlzLmJsb2NrVHlwZS5tYXRjaCgvXnRyZWUvKTtcbiAgfVxuXG4gIGdldElzRW1wdHlPckVudGl0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc0VtcHR5IHx8IHRoaXMuaXNFbnRpdHk7XG4gIH1cbn1cbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelBlock.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/LevelMVC/LevelBlock.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelModel.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelModel.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _LevelBlockJs = require(\"./LevelBlock.js\");\n\nvar _LevelBlockJs2 = _interopRequireDefault(_LevelBlockJs);\n\nvar _FacingDirectionJs = require(\"./FacingDirection.js\");\n\nvar _FacingDirectionJs2 = _interopRequireDefault(_FacingDirectionJs);\n\n// for blocks on the action plane, we need an actual \"block\" object, so we can model\n\nvar LevelModel = (function () {\n  function LevelModel(levelData) {\n    _classCallCheck(this, LevelModel);\n\n    this.planeWidth = levelData.gridDimensions ? levelData.gridDimensions[0] : 10;\n    this.planeHeight = levelData.gridDimensions ? levelData.gridDimensions[1] : 10;\n\n    this.player = {};\n\n    this.railMap = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsUnpoweredVertical\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsUnpoweredVertical\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsUnpoweredVertical\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsUnpoweredVertical\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsUnpoweredVertical\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"railsBottomLeft\", \"railsHorizontal\", \"railsHorizontal\", \"railsHorizontal\", \"railsHorizontal\", \"railsHorizontal\", \"railsHorizontal\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\n    this.initialLevelData = Object.create(levelData);\n\n    this.reset();\n\n    this.initialPlayerState = Object.create(this.player);\n  }\n\n  _createClass(LevelModel, [{\n    key: \"planeArea\",\n    value: function planeArea() {\n      return this.planeWidth * this.planeHeight;\n    }\n  }, {\n    key: \"inBounds\",\n    value: function inBounds(x, y) {\n      return x >= 0 && x < this.planeWidth && y >= 0 && y < this.planeHeight;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.groundPlane = this.constructPlane(this.initialLevelData.groundPlane, false);\n      this.groundDecorationPlane = this.constructPlane(this.initialLevelData.groundDecorationPlane, false);\n      this.shadingPlane = [];\n      this.actionPlane = this.constructPlane(this.initialLevelData.actionPlane, true);\n      this.fluffPlane = this.constructPlane(this.initialLevelData.fluffPlane, false);\n      this.fowPlane = [];\n      this.isDaytime = this.initialLevelData.isDaytime === undefined || this.initialLevelData.isDaytime;\n\n      var levelData = Object.create(this.initialLevelData);\n      var x = levelData.playerStartPosition[0];\n      var y = levelData.playerStartPosition[1];\n\n      this.player.name = this.initialLevelData.playerName || \"Steve\";\n      this.player.position = levelData.playerStartPosition;\n      this.player.isOnBlock = !this.actionPlane[this.yToIndex(y) + x].getIsEmptyOrEntity();\n      this.player.facing = levelData.playerStartDirection;\n\n      this.player.inventory = {};\n\n      this.computeShadingPlane();\n      this.computeFowPlane();\n    }\n  }, {\n    key: \"yToIndex\",\n    value: function yToIndex(y) {\n      return y * this.planeWidth;\n    }\n  }, {\n    key: \"constructPlane\",\n    value: function constructPlane(planeData, isActionPlane) {\n      var index,\n          result = [],\n          block;\n\n      for (index = 0; index < planeData.length; ++index) {\n        block = new _LevelBlockJs2[\"default\"](planeData[index]);\n        // TODO(bjordan): put this truth in constructor like other attrs\n        block.isWalkable = block.isWalkable || !isActionPlane;\n        result.push(block);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"isSolved\",\n    value: function isSolved() {\n      return this.initialLevelData.verificationFunction(this);\n    }\n  }, {\n    key: \"getHouseBottomRight\",\n    value: function getHouseBottomRight() {\n      return this.initialLevelData.houseBottomRight;\n    }\n\n    // Verifications\n  }, {\n    key: \"isPlayerNextTo\",\n    value: function isPlayerNextTo(blockType) {\n      var position;\n      var result = false;\n\n      // above\n      position = [this.player.position[0], this.player.position[1] - 1];\n      if (this.isBlockOfType(position, blockType)) {\n        return true;\n      }\n\n      // below\n      position = [this.player.position[0], this.player.position[1] + 1];\n      if (this.isBlockOfType(position, blockType)) {\n        return true;\n      }\n\n      // left\n      position = [this.player.position[0] + 1, this.player.position[1]];\n      if (this.isBlockOfType(position, blockType)) {\n        return true;\n      }\n\n      // Right\n      position = [this.player.position[0] - 1, this.player.position[1]];\n      if (this.isBlockOfType(position, blockType)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getInventoryAmount\",\n    value: function getInventoryAmount(inventoryType) {\n      return this.player.inventory[inventoryType] || 0;\n    }\n  }, {\n    key: \"getInventoryTypes\",\n    value: function getInventoryTypes() {\n      return Object.keys(this.player.inventory);\n    }\n  }, {\n    key: \"countOfTypeOnMap\",\n    value: function countOfTypeOnMap(blockType) {\n      var count = 0,\n          i;\n\n      for (i = 0; i < this.planeArea(); ++i) {\n        if (blockType == this.actionPlane[i].blockType) {\n          ++count;\n        }\n      }\n      return count;\n    }\n  }, {\n    key: \"isPlayerAt\",\n    value: function isPlayerAt(position) {\n      return this.player.position[0] === position[0] && this.player.position[1] === position[1];\n    }\n  }, {\n    key: \"solutionMapMatchesResultMap\",\n    value: function solutionMapMatchesResultMap(solutionMap) {\n      for (var i = 0; i < this.planeArea(); i++) {\n        var solutionItemType = solutionMap[i];\n\n        // \"\" on the solution map means we dont care what's at that spot\n        if (solutionItemType !== \"\") {\n          if (solutionItemType === \"empty\") {\n            if (!this.actionPlane[i].isEmpty) {\n              return false;\n            }\n          } else if (solutionItemType === \"any\") {\n            if (this.actionPlane[i].isEmpty) {\n              return false;\n            }\n          } else if (this.actionPlane[i].blockType !== solutionItemType) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"getTnt\",\n    value: function getTnt() {\n      var tnt = [];\n      for (var x = 0; x < this.planeWidth; ++x) {\n        for (var y = 0; y < this.planeHeight; ++y) {\n          var index = this.coordinatesToIndex([x, y]);\n          var block = this.actionPlane[index];\n          if (block.blockType === \"tnt\") {\n            tnt.push([x, y]);\n          }\n        }\n      }\n      return tnt;\n    }\n  }, {\n    key: \"getUnpoweredRails\",\n    value: function getUnpoweredRails() {\n      var unpoweredRails = [];\n      for (var x = 0; x < this.planeWidth; ++x) {\n        for (var y = 0; y < this.planeHeight; ++y) {\n          var index = this.coordinatesToIndex([x, y]);\n          var block = this.actionPlane[index];\n          if (block.blockType.substring(0, 7) == \"railsUn\") {\n            unpoweredRails.push([x, y], \"railsPowered\" + this.actionPlane[index].blockType.substring(14));\n          }\n        }\n      }\n\n      return unpoweredRails;\n    }\n  }, {\n    key: \"getMoveForwardPosition\",\n    value: function getMoveForwardPosition() {\n      var cx = this.player.position[0],\n          cy = this.player.position[1];\n\n      switch (this.player.facing) {\n        case _FacingDirectionJs2[\"default\"].Up:\n          --cy;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Down:\n          ++cy;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Left:\n          --cx;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Right:\n          ++cx;\n          break;\n      }\n\n      return [cx, cy];\n    }\n  }, {\n    key: \"isForwardBlockOfType\",\n    value: function isForwardBlockOfType(blockType) {\n      var blockForwardPosition = this.getMoveForwardPosition();\n\n      var actionIsEmpty = this.isBlockOfTypeOnPlane(blockForwardPosition, \"empty\", this.actionPlane);\n\n      if (blockType === '' && actionIsEmpty) {\n        return true;\n      }\n\n      return actionIsEmpty ? this.isBlockOfTypeOnPlane(blockForwardPosition, blockType, this.groundPlane) : this.isBlockOfTypeOnPlane(blockForwardPosition, blockType, this.actionPlane);\n    }\n  }, {\n    key: \"isBlockOfType\",\n    value: function isBlockOfType(position, blockType) {\n      return this.isBlockOfTypeOnPlane(position, blockType, this.actionPlane);\n    }\n  }, {\n    key: \"isBlockOfTypeOnPlane\",\n    value: function isBlockOfTypeOnPlane(position, blockType, plane) {\n      var result = false;\n\n      var blockIndex = this.yToIndex(position[1]) + position[0];\n      if (blockIndex >= 0 && blockIndex < this.planeArea()) {\n\n        if (blockType == \"empty\") {\n          result = plane[blockIndex].isEmpty;\n        } else if (blockType == \"tree\") {\n          result = plane[blockIndex].getIsTree();\n        } else {\n          result = blockType == plane[blockIndex].blockType;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"isPlayerStandingInWater\",\n    value: function isPlayerStandingInWater() {\n      var blockIndex = this.yToIndex(this.player.position[1]) + this.player.position[0];\n      return this.groundPlane[blockIndex].blockType === \"water\";\n    }\n  }, {\n    key: \"isPlayerStandingInLava\",\n    value: function isPlayerStandingInLava() {\n      var blockIndex = this.yToIndex(this.player.position[1]) + this.player.position[0];\n      return this.groundPlane[blockIndex].blockType === \"lava\";\n    }\n  }, {\n    key: \"coordinatesToIndex\",\n    value: function coordinatesToIndex(coordinates) {\n      return this.yToIndex(coordinates[1]) + coordinates[0];\n    }\n  }, {\n    key: \"checkPositionForTypeAndPush\",\n    value: function checkPositionForTypeAndPush(blockType, position, objectArray) {\n      if (!blockType && this.actionPlane[this.coordinatesToIndex(position)].blockType !== \"\" || this.isBlockOfType(position, blockType)) {\n        objectArray.push([true, position]);\n        return true;\n      } else {\n        objectArray.push([false, null]);\n        return false;\n      }\n    }\n  }, {\n    key: \"houseGroundToFloorHelper\",\n    value: function houseGroundToFloorHelper(position, woolType, arrayCheck) {\n      var checkActionBlock,\n          checkGroundBlock,\n          posAbove,\n          posBelow,\n          posRight,\n          posLeft,\n          checkIndex = 0,\n          array = arrayCheck;\n      var index = this.yToIndex(position[2]) + position[1];\n\n      if (index === 44) {\n        index = 44;\n      }\n\n      posAbove = [0, position[1], position[2] + 1];\n      posAbove[0] = this.yToIndex(posAbove[2]) + posAbove[1];\n\n      posBelow = [0, position[1], position[2] - 1];\n      posBelow[0] = this.yToIndex(posBelow[2]) + posBelow[1];\n\n      posRight = [0, position[1] + 1, position[2]];\n      posRight[0] = this.yToIndex(posRight[2]) + posRight[1];\n\n      posLeft = [0, position[1] - 1, position[2]];\n      posRight[0] = this.yToIndex(posRight[2]) + posRight[1];\n\n      checkActionBlock = this.actionPlane[index];\n      checkGroundBlock = this.groundPlane[index];\n      for (var i = 0; i < array.length; ++i) {\n        if (array[i][0] === index) {\n          checkIndex = -1;\n          break;\n        }\n      }\n\n      if (checkActionBlock.blockType !== \"\") {\n        return {};\n      } else if (array.length > 0 && checkIndex === -1) {\n        return {};\n      }\n      array.push(position);\n      array.concat(this.houseGroundToFloorHelper(posAbove, woolType, array));\n      array.concat(this.houseGroundToFloorHelper(posBelow, woolType, array));\n      array.concat(this.houseGroundToFloorHelper(posRight, woolType, array));\n      array.concat(this.houseGroundToFloorHelper(posLeft, woolType, array));\n\n      return array;\n    }\n  }, {\n    key: \"houseGroundToFloorBlocks\",\n    value: function houseGroundToFloorBlocks(startingPosition) {\n      //checkCardinalDirections for actionblocks.\n      //If no action block and square isn't the type we want.\n      //Change it.\n      var woolType = \"wool_orange\";\n\n      //Place this block here\n      //this.createBlock(this.groundPlane, startingPosition[0], startingPosition[1], woolType);\n      var helperStartData = [0, startingPosition[0], startingPosition[1]];\n      return this.houseGroundToFloorHelper(helperStartData, woolType, []);\n    }\n  }, {\n    key: \"getAllBorderingPositionNotOfType\",\n    value: function getAllBorderingPositionNotOfType(position, blockType) {\n      var surroundingBlocks = this.getAllBorderingPosition(position, null);\n      for (var b = 1; b < surroundingBlocks.length; ++b) {\n        if (surroundingBlocks[b][0] && this.actionPlane[this.coordinatesToIndex(surroundingBlocks[b][1])].blockType == blockType) {\n          surroundingBlocks[b][0] = false;\n        }\n      }\n      return surroundingBlocks;\n    }\n  }, {\n    key: \"getAllBorderingPosition\",\n    value: function getAllBorderingPosition(position, blockType) {\n      var p;\n      var allFoundObjects = [false];\n      //Check all 8 directions\n\n      //Top Right\n      p = [position[0] + 1, position[1] + 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Top Left\n      p = [position[0] - 1, position[1] + 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Bot Right\n      p = [position[0] + 1, position[1] - 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Bot Left\n      p = [position[0] - 1, position[1] - 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n\n      //Check cardinal Directions\n      //Top\n      p = [position[0], position[1] + 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Bot\n      p = [position[0], position[1] - 1];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Right\n      p = [position[0] + 1, position[1]];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n      //Left\n      p = [position[0] - 1, position[1]];\n      if (this.checkPositionForTypeAndPush(blockType, p, allFoundObjects)) {\n        allFoundObjects[0] = true;\n      }\n\n      return allFoundObjects;\n    }\n  }, {\n    key: \"getAllBorderingPlayer\",\n    value: function getAllBorderingPlayer(blockType) {\n      return this.getAllBorderingPosition(this.player.position, blockType);\n    }\n  }, {\n    key: \"isPlayerStandingNearCreeper\",\n    value: function isPlayerStandingNearCreeper() {\n      return this.getAllBorderingPlayer(\"creeper\");\n    }\n  }, {\n    key: \"getMinecartTrack\",\n    value: function getMinecartTrack() {\n      var track = [];\n      track.push([\"down\", [3, 2], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"down\", [3, 3], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"down\", [3, 4], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"down\", [3, 5], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"down\", [3, 6], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"down\", [3, 7], _FacingDirectionJs2[\"default\"].Down, 300]);\n      track.push([\"turn_left\", [3, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [4, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [5, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [6, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [7, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [8, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [9, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [10, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      track.push([\"right\", [11, 7], _FacingDirectionJs2[\"default\"].Right, 400]);\n      return track;\n    }\n  }, {\n    key: \"canMoveForward\",\n    value: function canMoveForward() {\n      var result = false;\n\n      var blockForwardPosition = this.getMoveForwardPosition();\n      var blockIndex = this.yToIndex(blockForwardPosition[1]) + blockForwardPosition[0];\n      var x = blockForwardPosition[0];\n      var y = blockForwardPosition[1];\n\n      if (this.inBounds(x, y)) {\n        result = this.actionPlane[blockIndex].isWalkable || this.player.isOnBlock && !this.actionPlane[blockIndex].isEmpty;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"canPlaceBlock\",\n    value: function canPlaceBlock() {\n      return true;\n    }\n  }, {\n    key: \"canPlaceBlockForward\",\n    value: function canPlaceBlockForward() {\n      if (this.player.isOnBlock) {\n        return false;\n      }\n\n      return this.getPlaneToPlaceOn(this.getMoveForwardPosition()) !== null;\n    }\n  }, {\n    key: \"getPlaneToPlaceOn\",\n    value: function getPlaneToPlaceOn(coordinates) {\n      var blockIndex = this.yToIndex(coordinates[1]) + coordinates[0];\n      var x = coordinates[0];\n      var y = coordinates[1];\n\n      if (this.inBounds(x, y)) {\n        var actionBlock = this.actionPlane[blockIndex];\n        if (actionBlock.isPlacable) {\n          var groundBlock = this.groundPlane[blockIndex];\n          if (groundBlock.isPlacable) {\n            return this.groundPlane;\n          }\n          return this.actionPlane;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"canDestroyBlockForward\",\n    value: function canDestroyBlockForward() {\n      var result = false;\n\n      if (!this.player.isOnBlock) {\n        var blockForwardPosition = this.getMoveForwardPosition();\n        var blockIndex = this.yToIndex(blockForwardPosition[1]) + blockForwardPosition[0];\n        var x = blockForwardPosition[0];\n        var y = blockForwardPosition[1];\n\n        if (this.inBounds(x, y)) {\n          var block = this.actionPlane[blockIndex];\n          result = !block.isEmpty && (block.isDestroyable || block.isUsable);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"moveForward\",\n    value: function moveForward() {\n      var blockForwardPosition = this.getMoveForwardPosition();\n      this.moveTo(blockForwardPosition);\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(position) {\n      var blockIndex = this.yToIndex(position[1]) + position[0];\n\n      this.player.position = position;\n      if (this.actionPlane[blockIndex].isEmpty) {\n        this.player.isOnBlock = false;\n      }\n    }\n  }, {\n    key: \"turnLeft\",\n    value: function turnLeft() {\n      switch (this.player.facing) {\n        case _FacingDirectionJs2[\"default\"].Up:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Left;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Left:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Down;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Down:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Right;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Right:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Up;\n          break;\n      }\n    }\n  }, {\n    key: \"turnRight\",\n    value: function turnRight() {\n      switch (this.player.facing) {\n        case _FacingDirectionJs2[\"default\"].Up:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Right;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Right:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Down;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Down:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Left;\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Left:\n          this.player.facing = _FacingDirectionJs2[\"default\"].Up;\n          break;\n      }\n    }\n  }, {\n    key: \"placeBlock\",\n    value: function placeBlock(blockType) {\n      var blockPosition = this.player.position;\n      var blockIndex = this.yToIndex(blockPosition[1]) + blockPosition[0];\n      var shouldPlace = false;\n\n      switch (blockType) {\n        case \"cropWheat\":\n          shouldPlace = this.groundPlane[blockIndex].blockType === \"farmlandWet\";\n          break;\n\n        default:\n          shouldPlace = true;\n          break;\n      }\n\n      if (shouldPlace === true) {\n        var block = new _LevelBlockJs2[\"default\"](blockType);\n\n        this.actionPlane[blockIndex] = block;\n        this.player.isOnBlock = !block.isWalkable;\n      }\n\n      return shouldPlace;\n    }\n  }, {\n    key: \"placeBlockForward\",\n    value: function placeBlockForward(blockType, targetPlane) {\n      var blockPosition = this.getMoveForwardPosition();\n      var blockIndex = this.yToIndex(blockPosition[1]) + blockPosition[0];\n\n      //for placing wetland for crops in free play\n      if (blockType === \"watering\") {\n        blockType = \"farmlandWet\";\n        targetPlane = this.groundPlane;\n      }\n\n      targetPlane[blockIndex] = new _LevelBlockJs2[\"default\"](blockType);\n    }\n  }, {\n    key: \"destroyBlock\",\n    value: function destroyBlock(position) {\n      var i,\n          block = null;\n\n      var blockPosition = position;\n      var blockIndex = this.yToIndex(blockPosition[1]) + blockPosition[0];\n      var x = blockPosition[0];\n      var y = blockPosition[1];\n\n      if (this.inBounds(x, y)) {\n        block = this.actionPlane[blockIndex];\n        if (block !== null) {\n          block.position = [x, y];\n\n          if (block.isDestroyable) {\n            this.actionPlane[blockIndex] = new _LevelBlockJs2[\"default\"](\"\");\n          }\n        }\n      }\n\n      return block;\n    }\n  }, {\n    key: \"destroyBlockForward\",\n    value: function destroyBlockForward() {\n      var i,\n          shouldAddToInventory = true,\n          block = null;\n\n      var blockForwardPosition = this.getMoveForwardPosition();\n      var blockIndex = this.yToIndex(blockForwardPosition[1]) + blockForwardPosition[0];\n      var x = blockForwardPosition[0];\n      var y = blockForwardPosition[1];\n\n      if (this.inBounds(x, y)) {\n        block = this.actionPlane[blockIndex];\n        if (block !== null) {\n          block.position = [x, y];\n          var inventoryType = this.getInventoryType(block.blockType);\n          this.player.inventory[inventoryType] = (this.player.inventory[inventoryType] || 0) + 1;\n\n          if (block.isDestroyable) {\n            this.actionPlane[blockIndex] = new _LevelBlockJs2[\"default\"](\"\");\n          }\n        }\n      }\n\n      return block;\n    }\n  }, {\n    key: \"getInventoryType\",\n    value: function getInventoryType(blockType) {\n      switch (blockType) {\n        case \"sheep\":\n          return \"wool\";\n        case \"stone\":\n          return \"cobblestone\";\n        case \"treeAcacia\":\n        case \"treeBirch\":\n        case \"treeJungle\":\n        case \"treeOak\":\n        case \"treeSpruce\":\n          return \"planks\" + blockType.substring(4);\n        default:\n          return blockType;\n      }\n    }\n  }, {\n    key: \"solveFOWTypeForMap\",\n    value: function solveFOWTypeForMap() {\n      var emissives, blocksToSolve;\n\n      emissives = this.getAllEmissives();\n      blocksToSolve = this.findBlocksAffectedByEmissives(emissives);\n\n      for (var block in blocksToSolve) {\n        if (blocksToSolve.hasOwnProperty(block)) {\n          this.solveFOWTypeFor(blocksToSolve[block], emissives);\n        }\n      }\n    }\n  }, {\n    key: \"solveFOWTypeFor\",\n    value: function solveFOWTypeFor(position, emissives) {\n      var emissivesTouching,\n          topLeftQuad = false,\n          botLeftQuad = false,\n          leftQuad = false,\n          topRightQuad = false,\n          botRightQuad = false,\n          rightQuad = false,\n          topQuad = false,\n          botQuad = false,\n          angle = 0,\n          index = this.coordinatesToIndex(position),\n          x,\n          y;\n\n      emissivesTouching = this.findEmissivesThatTouch(position, emissives);\n\n      for (var torch in emissivesTouching) {\n        var currentTorch = emissivesTouching[torch];\n        y = position[1];\n        x = position[0];\n\n        angle = Math.atan2(currentTorch[1] - position[1], currentTorch[0] - position[0]);\n        //invert\n        angle = -angle;\n        //Normalize to be between 0 and 2*pi\n        if (angle < 0) {\n          angle += 2 * Math.PI;\n        }\n        //convert to degrees for simplicity\n        angle *= 360 / (2 * Math.PI);\n\n        //top right\n        if (!rightQuad && angle > 32.5 && angle <= 57.5) {\n          topRightQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_InCorner_TopRight\", precedence: 0 });\n        } //top left\n        if (!leftQuad && angle > 122.5 && angle <= 147.5) {\n          topLeftQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_InCorner_TopLeft\", precedence: 0 });\n        } //bot left\n        if (!leftQuad && angle > 212.5 && angle <= 237.5) {\n          botLeftQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_InCorner_BottomLeft\", precedence: 0 });\n        } //botright\n        if (!rightQuad && angle > 302.5 && angle <= 317.5) {\n          botRightQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_InCorner_BottomRight\", precedence: 0 });\n        }\n        //right\n        if (angle >= 327.5 || angle <= 32.5) {\n          rightQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Right\", precedence: 1 });\n        } //bot\n        if (angle > 237.5 && angle <= 302.5) {\n          botQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Bottom\", precedence: 1 });\n        }\n        //left\n        if (angle > 147.5 && angle <= 212.5) {\n          leftQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Left\", precedence: 1 });\n        }\n        //top\n        if (angle > 57.5 && angle <= 122.5) {\n          topQuad = true;\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Top\", precedence: 1 });\n        }\n      }\n\n      if (topLeftQuad && botLeftQuad) {\n        this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Left\", precedence: 1 });\n      }\n      if (topRightQuad && botRightQuad) {\n        this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Right\", precedence: 1 });\n      }\n      if (topLeftQuad && topRightQuad) {\n        this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Top\", precedence: 1 });\n      }\n      if (botRightQuad && botLeftQuad) {\n        this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Bottom\", precedence: 1 });\n      }\n\n      //fully lit\n      if (botRightQuad && topLeftQuad || botLeftQuad && topRightQuad || leftQuad && rightQuad || topQuad && botQuad || rightQuad && botQuad && topLeftQuad || botQuad && topRightQuad && topLeftQuad || topQuad && botRightQuad && botLeftQuad || leftQuad && topRightQuad && botRightQuad || leftQuad && botQuad && topRightQuad) {\n        this.fowPlane[index] = \"\";\n      }\n\n      //darkend botleft corner\n      else if (botQuad && leftQuad || botQuad && topLeftQuad || leftQuad && botRightQuad) {\n          this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Bottom_Left\", precedence: 2 });\n        }\n        //darkend botRight corner\n        else if (botQuad && rightQuad || botQuad && topRightQuad || rightQuad && botLeftQuad) {\n            this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Bottom_Right\", precedence: 2 });\n          }\n          //darkend topRight corner\n          else if (topQuad && rightQuad || topQuad && botRightQuad || rightQuad && topLeftQuad) {\n              this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Top_Right\", precedence: 2 });\n            }\n            //darkend topLeft corner\n            else if (topQuad && leftQuad || topQuad && botLeftQuad || leftQuad && topRightQuad) {\n                this.pushIfHigherPrecedence(index, { x: x, y: y, type: \"FogOfWar_Top_Left\", precedence: 2 });\n              }\n    }\n  }, {\n    key: \"pushIfHigherPrecedence\",\n    value: function pushIfHigherPrecedence(index, fowObject) {\n      if (fowObject === \"\") {\n        this.fowPlane[index] = \"\";\n        return;\n      }\n      var existingItem = this.fowPlane[index];\n      if (existingItem && existingItem.precedence > fowObject.precedence) {\n        return;\n      }\n      this.fowPlane[index] = fowObject;\n    }\n  }, {\n    key: \"getAllEmissives\",\n    value: function getAllEmissives() {\n      var emissives = [];\n      for (var y = 0; y < this.planeHeight; ++y) {\n        for (var x = 0; x < this.planeWidth; ++x) {\n          var index = this.coordinatesToIndex([x, y]);\n          if (!this.actionPlane[index].isEmpty && this.actionPlane[index].isEmissive || this.groundPlane[index].isEmissive && this.actionPlane[index].isEmpty) {\n            emissives.push([x, y]);\n          }\n        }\n      }\n      return emissives;\n    }\n  }, {\n    key: \"findBlocksAffectedByEmissives\",\n    value: function findBlocksAffectedByEmissives(emissives) {\n      var blocksTouchedByEmissives = {};\n      //find emissives that are close enough to light us.\n      for (var torch in emissives) {\n        var currentTorch = emissives[torch];\n        var y = currentTorch[1];\n        var x = currentTorch[0];\n        for (var yIndex = currentTorch[1] - 2; yIndex <= currentTorch[1] + 2; ++yIndex) {\n          for (var xIndex = currentTorch[0] - 2; xIndex <= currentTorch[0] + 2; ++xIndex) {\n\n            //Ensure we're looking inside the map\n            if (!this.inBounds(xIndex, yIndex)) {\n              continue;\n            }\n\n            //Ignore the indexes directly around us.\n            //Theyre taken care of on the FOW first pass\n            if (yIndex >= y - 1 && yIndex <= y + 1 && (xIndex >= x - 1 && xIndex <= x + 1)) {\n              continue;\n            }\n\n            //we want unique copies so we use a map.\n            blocksTouchedByEmissives[yIndex.toString() + xIndex.toString()] = [xIndex, yIndex];\n          }\n        }\n      }\n\n      return blocksTouchedByEmissives;\n    }\n  }, {\n    key: \"findEmissivesThatTouch\",\n    value: function findEmissivesThatTouch(position, emissives) {\n      var emissivesThatTouch = [];\n      var y = position[1];\n      var x = position[0];\n      //find emissives that are close enough to light us.\n      for (var yIndex = y - 2; yIndex <= y + 2; ++yIndex) {\n        for (var xIndex = x - 2; xIndex <= x + 2; ++xIndex) {\n\n          //Ensure we're looking inside the map\n          if (!this.inBounds(xIndex, yIndex)) {\n            continue;\n          }\n\n          //Ignore the indexes directly around us.\n          if (yIndex >= y - 1 && yIndex <= y + 1 && (xIndex >= x - 1 && xIndex <= x + 1)) {\n            continue;\n          }\n\n          for (var torch in emissives) {\n            if (emissives[torch][0] === xIndex && emissives[torch][1] === yIndex) {\n              emissivesThatTouch.push(emissives[torch]);\n            }\n          }\n        }\n      }\n\n      return emissivesThatTouch;\n    }\n  }, {\n    key: \"computeFowPlane\",\n    value: function computeFowPlane() {\n      var x, y;\n\n      this.fowPlane = [];\n      if (this.isDaytime) {\n        for (y = 0; y < this.planeHeight; ++y) {\n          for (x = 0; x < this.planeWidth; ++x) {\n            // this.fowPlane.push[\"\"]; // noop as originally written\n            // TODO(bjordan) completely remove?\n          }\n        }\n      } else {\n          // compute the fog of war for light emitting blocks\n          for (y = 0; y < this.planeHeight; ++y) {\n            for (x = 0; x < this.planeWidth; ++x) {\n              this.fowPlane.push({ x: x, y: y, type: \"FogOfWar_Center\" });\n            }\n          }\n\n          //second pass for partial lit squares\n          this.solveFOWTypeForMap();\n\n          for (y = 0; y < this.planeHeight; ++y) {\n            for (x = 0; x < this.planeWidth; ++x) {\n              var blockIndex = this.yToIndex(y) + x;\n\n              if (this.groundPlane[blockIndex].isEmissive && this.actionPlane[blockIndex].isEmpty || !this.actionPlane[blockIndex].isEmpty && this.actionPlane[blockIndex].isEmissive) {\n                this.clearFowAround(x, y);\n              }\n            }\n          }\n        }\n    }\n  }, {\n    key: \"clearFowAround\",\n    value: function clearFowAround(x, y) {\n      var ox, oy;\n\n      for (oy = -1; oy <= 1; ++oy) {\n        for (ox = -1; ox <= 1; ++ox) {\n          this.clearFowAt(x + ox, y + oy);\n        }\n      }\n    }\n  }, {\n    key: \"clearFowAt\",\n    value: function clearFowAt(x, y) {\n      if (x >= 0 && x < this.planeWidth && y >= 0 && y < this.planeHeight) {\n        var blockIndex = this.yToIndex(y) + x;\n        this.fowPlane[blockIndex] = \"\";\n      }\n    }\n  }, {\n    key: \"computeShadingPlane\",\n    value: function computeShadingPlane() {\n      var x, y, index, hasLeft, hasRight;\n\n      this.shadingPlane = [];\n\n      for (index = 0; index < this.planeArea(); ++index) {\n        x = index % this.planeWidth;\n        y = Math.floor(index / this.planeWidth);\n\n        hasLeft = false;\n        hasRight = false;\n\n        if (this.actionPlane[index].isEmpty || this.actionPlane[index].isTransparent) {\n          if (y === 0) {\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Bottom' });\n          }\n\n          if (y === this.planeHeight - 1) {\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Top' });\n          }\n\n          if (x === 0) {\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Right' });\n          }\n\n          if (x === this.planeWidth - 1) {\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Left' });\n          }\n\n          if (x < this.planeWidth - 1 && !this.actionPlane[this.yToIndex(y) + x + 1].getIsEmptyOrEntity()) {\n            // needs a left side AO shadow\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Left' });\n            hasLeft = true;\n          }\n\n          if (x > 0 && !this.actionPlane[this.yToIndex(y) + x - 1].getIsEmptyOrEntity()) {\n            // needs a right side AO shadow\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Right' });\n            this.shadingPlane.push({ x: x, y: y, type: 'Shadow_Parts_Fade_base.png' });\n\n            if (y > 0 && x > 0 && this.actionPlane[this.yToIndex(y - 1) + x - 1].getIsEmptyOrEntity()) {\n              this.shadingPlane.push({ x: x, y: y, type: 'Shadow_Parts_Fade_top.png' });\n            }\n\n            hasRight = true;\n          }\n\n          if (y > 0 && !this.actionPlane[this.yToIndex(y - 1) + x].getIsEmptyOrEntity()) {\n            // needs a bottom side AO shadow\n            this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_Bottom' });\n          } else if (y > 0) {\n            if (x < this.planeWidth - 1 && !this.actionPlane[this.yToIndex(y - 1) + x + 1].getIsEmptyOrEntity() && this.actionPlane[this.yToIndex(y) + x + 1].getIsEmptyOrEntity()) {\n              // needs a bottom left side AO shadow\n              this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_BottomLeft' });\n            }\n\n            if (!hasRight && x > 0 && !this.actionPlane[this.yToIndex(y - 1) + x - 1].getIsEmptyOrEntity()) {\n              // needs a bottom right side AO shadow\n              this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_BottomRight' });\n            }\n          }\n\n          if (y < this.planeHeight - 1) {\n            if (x < this.planeWidth - 1 && !this.actionPlane[this.yToIndex(y + 1) + x + 1].getIsEmptyOrEntity() && this.actionPlane[this.yToIndex(y) + x + 1].getIsEmptyOrEntity()) {\n              // needs a bottom left side AO shadow\n              this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_TopLeft' });\n            }\n\n            if (!hasRight && x > 0 && !this.actionPlane[this.yToIndex(y + 1) + x - 1].getIsEmptyOrEntity()) {\n              // needs a bottom right side AO shadow\n              this.shadingPlane.push({ x: x, y: y, type: 'AOeffect_TopRight' });\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return LevelModel;\n})();\n\nexports[\"default\"] = LevelModel;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,","deps":{"./LevelBlock.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelBlock.js","./FacingDirection.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelModel.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/LevelMVC/LevelModel.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelView.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelView.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _FacingDirectionJs = require(\"./FacingDirection.js\");\n\nvar _FacingDirectionJs2 = _interopRequireDefault(_FacingDirectionJs);\n\nvar LevelView = (function () {\n  function LevelView(controller) {\n    _classCallCheck(this, LevelView);\n\n    this.controller = controller;\n    this.audioPlayer = controller.audioPlayer;\n    this.game = controller.game;\n\n    this.baseShading = null;\n\n    this.playerSprite = null;\n    this.playerGhost = null; // The ghost is a copy of the player sprite that sits on top of everything at 20% opacity, so the player can go under trees and still be seen.\n    this.selectionIndicator = null;\n\n    this.groundPlane = null;\n    this.shadingPlane = null;\n    this.actionPlane = null;\n    this.fluffPlane = null;\n    this.fowPlane = null;\n\n    this.miniBlocks = {\n      \"dirt\": [\"Miniblocks\", 0, 5],\n      \"dirtCoarse\": [\"Miniblocks\", 6, 11],\n      \"sand\": [\"Miniblocks\", 12, 17],\n      \"gravel\": [\"Miniblocks\", 18, 23],\n      \"bricks\": [\"Miniblocks\", 24, 29],\n      \"logAcacia\": [\"Miniblocks\", 30, 35],\n      \"logBirch\": [\"Miniblocks\", 36, 41],\n      \"logJungle\": [\"Miniblocks\", 42, 47],\n      \"logOak\": [\"Miniblocks\", 48, 53],\n      \"logSpruce\": [\"Miniblocks\", 54, 59],\n      \"planksAcacia\": [\"Miniblocks\", 60, 65],\n      \"planksBirch\": [\"Miniblocks\", 66, 71],\n      \"planksJungle\": [\"Miniblocks\", 72, 77],\n      \"planksOak\": [\"Miniblocks\", 78, 83],\n      \"planksSpruce\": [\"Miniblocks\", 84, 89],\n      \"cobblestone\": [\"Miniblocks\", 90, 95],\n      \"sandstone\": [\"Miniblocks\", 96, 101],\n      \"wool\": [\"Miniblocks\", 102, 107],\n      \"redstoneDust\": [\"Miniblocks\", 108, 113],\n      \"lapisLazuli\": [\"Miniblocks\", 114, 119],\n      \"ingotIron\": [\"Miniblocks\", 120, 125],\n      \"ingotGold\": [\"Miniblocks\", 126, 131],\n      \"emerald\": [\"Miniblocks\", 132, 137],\n      \"diamond\": [\"Miniblocks\", 138, 143],\n      \"coal\": [\"Miniblocks\", 144, 149],\n      \"bucketWater\": [\"Miniblocks\", 150, 155],\n      \"bucketLava\": [\"Miniblocks\", 156, 161],\n      \"gunPowder\": [\"Miniblocks\", 162, 167],\n      \"wheat\": [\"Miniblocks\", 168, 173],\n      \"potato\": [\"Miniblocks\", 174, 179],\n      \"carrots\": [\"Miniblocks\", 180, 185],\n\n      \"sheep\": [\"Miniblocks\", 102, 107]\n    };\n\n    this.blocks = {\n      \"bedrock\": [\"blocks\", \"Bedrock\", -13, 0],\n      \"bricks\": [\"blocks\", \"Bricks\", -13, 0],\n      \"oreCoal\": [\"blocks\", \"Coal_Ore\", -13, 0],\n      \"dirtCoarse\": [\"blocks\", \"Coarse_Dirt\", -13, 0],\n      \"cobblestone\": [\"blocks\", \"Cobblestone\", -13, 0],\n      \"oreDiamond\": [\"blocks\", \"Diamond_Ore\", -13, 0],\n      \"dirt\": [\"blocks\", \"Dirt\", -13, 0],\n      \"oreEmerald\": [\"blocks\", \"Emerald_Ore\", -13, 0],\n      \"farmlandWet\": [\"blocks\", \"Farmland_Wet\", -13, 0],\n      \"flowerDandelion\": [\"blocks\", \"Flower_Dandelion\", -13, 0],\n      \"flowerOxeeye\": [\"blocks\", \"Flower_Oxeeye\", -13, 0],\n      \"flowerRose\": [\"blocks\", \"Flower_Rose\", -13, 0],\n      \"glass\": [\"blocks\", \"Glass\", -13, 0],\n      \"oreGold\": [\"blocks\", \"Gold_Ore\", -13, 0],\n      \"grass\": [\"blocks\", \"Grass\", -13, 0],\n      \"gravel\": [\"blocks\", \"Gravel\", -13, 0],\n      \"oreIron\": [\"blocks\", \"Iron_Ore\", -13, 0],\n      \"oreLapis\": [\"blocks\", \"Lapis_Ore\", -13, 0],\n      \"lava\": [\"blocks\", \"Lava_0\", -13, 0],\n      \"logAcacia\": [\"blocks\", \"Log_Acacia\", -13, 0],\n      \"logBirch\": [\"blocks\", \"Log_Birch\", -13, 0],\n      \"logJungle\": [\"blocks\", \"Log_Jungle\", -13, 0],\n      \"logOak\": [\"blocks\", \"Log_Oak\", -13, 0],\n      \"logSpruce\": [\"blocks\", \"Log_Spruce\", -13, 0],\n      //\"obsidian\": [\"blocks\", \"Obsidian\", -13, 0],\n      \"planksAcacia\": [\"blocks\", \"Planks_Acacia\", -13, 0],\n      \"planksBirch\": [\"blocks\", \"Planks_Birch\", -13, 0],\n      \"planksJungle\": [\"blocks\", \"Planks_Jungle\", -13, 0],\n      \"planksOak\": [\"blocks\", \"Planks_Oak\", -13, 0],\n      \"planksSpruce\": [\"blocks\", \"Planks_Spruce\", -13, 0],\n      \"oreRedstone\": [\"blocks\", \"Redstone_Ore\", -13, 0],\n      \"sand\": [\"blocks\", \"Sand\", -13, 0],\n      \"sandstone\": [\"blocks\", \"Sandstone\", -13, 0],\n      \"stone\": [\"blocks\", \"Stone\", -13, 0],\n      \"tnt\": [\"tnt\", \"TNTexplosion0\", -80, -58],\n      \"water\": [\"blocks\", \"Water_0\", -13, 0],\n      \"wool\": [\"blocks\", \"Wool_White\", -13, 0],\n      \"wool_orange\": [\"blocks\", \"Wool_Orange\", -13, 0],\n\n      \"leavesAcacia\": [\"leavesAcacia\", \"Leaves0\", -42, 80],\n      \"leavesBirch\": [\"leavesBirch\", \"Leaves0\", -100, -10],\n      \"leavesJungle\": [\"leavesJungle\", \"Leaves0\", -69, 43],\n      \"leavesOak\": [\"leavesOak\", \"Leaves0\", -100, 0],\n      \"leavesSpruce\": [\"leavesSpruce\", \"Leaves0\", -76, 60],\n\n      \"watering\": [\"blocks\", \"Water_0\", -13, 0],\n      \"cropWheat\": [\"blocks\", \"Wheat0\", -13, 0],\n      \"torch\": [\"torch\", \"Torch0\", -13, 0],\n\n      \"tallGrass\": [\"tallGrass\", \"\", -13, 0],\n\n      \"lavaPop\": [\"lavaPop\", \"LavaPop01\", -13, 0],\n      \"fire\": [\"fire\", \"\", -11, 135],\n      \"bubbles\": [\"bubbles\", \"\", -11, 135],\n      \"explosion\": [\"explosion\", \"\", -70, 60],\n\n      \"door\": [\"door\", \"\", -12, -15],\n\n      \"railsBottomLeft\": [\"blocks\", \"Rails_BottomLeft\", -13, 0],\n      \"railsBottomRight\": [\"blocks\", \"Rails_BottomRight\", -13, 0],\n      \"railsHorizontal\": [\"blocks\", \"Rails_Horizontal\", -13, 0],\n      \"railsTopLeft\": [\"blocks\", \"Rails_TopLeft\", -13, 0],\n      \"railsTopRight\": [\"blocks\", \"Rails_TopRight\", -13, 0],\n      \"railsUnpoweredHorizontal\": [\"blocks\", \"Rails_UnpoweredHorizontal\", -13, 0],\n      \"railsUnpoweredVertical\": [\"blocks\", \"Rails_UnpoweredVertical\", -13, 0],\n      \"railsVertical\": [\"blocks\", \"Rails_Vertical\", -13, -0],\n      \"railsPoweredHorizontal\": [\"blocks\", \"Rails_PoweredHorizontal\", -13, 0],\n      \"railsPoweredVertical\": [\"blocks\", \"Rails_PoweredVertical\", -13, 0],\n      \"railsRedstoneTorch\": [\"blocks\", \"Rails_RedstoneTorch\", -12, 9]\n    };\n\n    this.actionPlaneBlocks = [];\n    this.toDestroy = [];\n    this.resettableTweens = [];\n  }\n\n  _createClass(LevelView, [{\n    key: \"yToIndex\",\n    value: function yToIndex(y) {\n      return this.controller.levelModel.yToIndex(y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(levelModel) {\n      this.createPlanes();\n      this.reset(levelModel);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(levelModel) {\n      var player = levelModel.player;\n\n      this.resettableTweens.forEach(function (tween) {\n        tween.stop(false);\n      });\n      this.resettableTweens.length = 0;\n\n      this.resetPlanes(levelModel);\n      this.preparePlayerSprite(player.name);\n      this.playerSprite.animations.stop();\n      this.updateShadingPlane(levelModel.shadingPlane);\n      this.updateFowPlane(levelModel.fowPlane);\n      this.setPlayerPosition(player.position[0], player.position[1], player.isOnBlock);\n      this.setSelectionIndicatorPosition(player.position[0], player.position[1]);\n      this.selectionIndicator.visible = true;\n      this.playIdleAnimation(player.position, player.facing, player.isOnBlock);\n\n      if (this.controller.followingPlayer()) {\n        this.game.world.setBounds(0, 0, levelModel.planeWidth * 40, levelModel.planeHeight * 40);\n        this.game.camera.follow(this.playerSprite);\n        this.game.world.scale.x = 1;\n        this.game.world.scale.y = 1;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var i;\n\n      for (i = 0; i < this.toDestroy.length; ++i) {\n        this.toDestroy[i].destroy();\n      }\n      this.toDestroy = [];\n\n      if (this.playerGhost) {\n        this.playerGhost.frame = this.playerSprite.frame;\n        this.playerGhost.z = 1000;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.actionPlane.sort('sortOrder');\n      this.fluffPlane.sort('z');\n    }\n  }, {\n    key: \"getDirectionName\",\n    value: function getDirectionName(facing) {\n      var direction;\n\n      switch (facing) {\n        case _FacingDirectionJs2[\"default\"].Up:\n          direction = \"_up\";\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Right:\n          direction = \"_right\";\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Down:\n          direction = \"_down\";\n          break;\n\n        case _FacingDirectionJs2[\"default\"].Left:\n          direction = \"_left\";\n          break;\n      }\n\n      return direction;\n    }\n  }, {\n    key: \"updatePlayerDirection\",\n    value: function updatePlayerDirection(position, facing) {\n      var direction = this.getDirectionName(facing);\n\n      this.setSelectionIndicatorPosition(position[0], position[1]);\n      this.playScaledSpeed(this.playerSprite.animations, \"idle\" + direction);\n    }\n  }, {\n    key: \"playPlayerAnimation\",\n    value: function playPlayerAnimation(animationName, position, facing, isOnBlock) {\n      var direction = this.getDirectionName(facing);\n      this.playerSprite.sortOrder = this.yToIndex(position[1]) + 5;\n\n      var animName = animationName + direction;\n      return this.playScaledSpeed(this.playerSprite.animations, animName);\n    }\n  }, {\n    key: \"playIdleAnimation\",\n    value: function playIdleAnimation(position, facing, isOnBlock) {\n      this.playPlayerAnimation(\"idle\", position, facing, isOnBlock);\n    }\n  }, {\n    key: \"scaleShowWholeWorld\",\n    value: function scaleShowWholeWorld(completionHandler) {\n      var _controller$scaleFromOriginal = this.controller.scaleFromOriginal();\n\n      var _controller$scaleFromOriginal2 = _slicedToArray(_controller$scaleFromOriginal, 2);\n\n      var scaleX = _controller$scaleFromOriginal2[0];\n      var scaleY = _controller$scaleFromOriginal2[1];\n\n      var scaleTween = this.addResettableTween(this.game.world.scale).to({\n        x: 1 / scaleX,\n        y: 1 / scaleY\n      }, 1000, Phaser.Easing.Exponential.Out);\n\n      this.game.camera.unfollow();\n\n      var positionTween = this.addResettableTween(this.game.camera).to({\n        x: 0,\n        y: 0\n      }, 1000, Phaser.Easing.Exponential.Out);\n\n      scaleTween.onComplete.addOnce(function () {\n        completionHandler();\n      });\n\n      positionTween.start();\n      scaleTween.start();\n    }\n  }, {\n    key: \"playSuccessAnimation\",\n    value: function playSuccessAnimation(position, facing, isOnBlock, completionHandler) {\n      var _this = this;\n\n      this.controller.delayBy(250, function () {\n        _this.audioPlayer.play(\"success\");\n        _this.onAnimationEnd(_this.playPlayerAnimation(\"celebrate\", position, facing, isOnBlock), function () {\n          completionHandler();\n        });\n      });\n    }\n  }, {\n    key: \"playFailureAnimation\",\n    value: function playFailureAnimation(position, facing, isOnBlock, completionHandler) {\n      var _this2 = this;\n\n      this.controller.delayBy(500, function () {\n        _this2.audioPlayer.play(\"failure\");\n        _this2.onAnimationEnd(_this2.playPlayerAnimation(\"fail\", position, facing, isOnBlock), function () {\n          _this2.controller.delayBy(1400, completionHandler);\n        });\n      });\n    }\n  }, {\n    key: \"playBumpAnimation\",\n    value: function playBumpAnimation(position, facing, isOnBlock) {\n      var _this3 = this;\n\n      var animation = this.playPlayerAnimation(\"bump\", position, facing, isOnBlock);\n      animation.onComplete.add(function () {\n        _this3.playIdleAnimation(position, facing, isOnBlock);\n      });\n      return animation;\n    }\n  }, {\n    key: \"playDrownFailureAnimation\",\n    value: function playDrownFailureAnimation(position, facing, isOnBlock, completionHandler) {\n      var sprite, tween;\n\n      this.playPlayerAnimation(\"fail\", position, facing, isOnBlock);\n      this.createBlock(this.fluffPlane, position[0], position[1], \"bubbles\");\n\n      sprite = this.fluffPlane.create(0, 0, \"finishOverlay\");\n\n      var _controller$scaleFromOriginal3 = this.controller.scaleFromOriginal();\n\n      var _controller$scaleFromOriginal32 = _slicedToArray(_controller$scaleFromOriginal3, 2);\n\n      var scaleX = _controller$scaleFromOriginal32[0];\n      var scaleY = _controller$scaleFromOriginal32[1];\n\n      sprite.scale.x = scaleX;\n      sprite.scale.y = scaleY;\n      sprite.alpha = 0;\n      if (this.controller.canUseTints()) {\n        sprite.tint = 0x324bff;\n      }\n\n      tween = this.addResettableTween(sprite).to({\n        alpha: 0.5\n      }, 200, Phaser.Easing.Linear.None);\n\n      tween.onComplete.add(function () {\n        completionHandler();\n      });\n\n      tween.start();\n    }\n  }, {\n    key: \"playBurnInLavaAnimation\",\n    value: function playBurnInLavaAnimation(position, facing, isOnBlock, completionHandler) {\n      var sprite, tween;\n\n      this.playPlayerAnimation(\"jumpUp\", position, facing, isOnBlock);\n      this.createBlock(this.fluffPlane, position[0], position[1], \"fire\");\n\n      sprite = this.fluffPlane.create(0, 0, \"finishOverlay\");\n\n      var _controller$scaleFromOriginal4 = this.controller.scaleFromOriginal();\n\n      var _controller$scaleFromOriginal42 = _slicedToArray(_controller$scaleFromOriginal4, 2);\n\n      var scaleX = _controller$scaleFromOriginal42[0];\n      var scaleY = _controller$scaleFromOriginal42[1];\n\n      sprite.scale.x = scaleX;\n      sprite.scale.y = scaleY;\n      sprite.alpha = 0;\n      if (this.controller.canUseTints()) {\n        sprite.tint = 0xd1580d;\n      }\n\n      tween = this.addResettableTween(sprite).to({\n        alpha: 0.5\n      }, 200, Phaser.Easing.Linear.None);\n\n      tween.onComplete.add(function () {\n        completionHandler();\n      });\n\n      tween.start();\n    }\n  }, {\n    key: \"playDestroyTntAnimation\",\n    value: function playDestroyTntAnimation(position, facing, isOnBlock, tntArray, newShadingPlaneData, completionHandler) {\n      var _this4 = this;\n\n      var block, lastAnimation;\n      if (tntArray.length === 0) {\n        completionHandler();\n        return;\n      }\n\n      this.audioPlayer.play(\"fuse\");\n      for (var tnt in tntArray) {\n        block = this.actionPlaneBlocks[this.coordinatesToIndex(tntArray[tnt])];\n        lastAnimation = this.playScaledSpeed(block.animations, \"explode\");\n      }\n\n      this.onAnimationEnd(lastAnimation, function () {\n        _this4.audioPlayer.play(\"explode\");\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"playCreeperExplodeAnimation\",\n    value: function playCreeperExplodeAnimation(position, facing, destroyPosition, isOnBlock, completionHandler) {\n      var _this5 = this;\n\n      this.controller.delayBy(180, function () {\n        //this.onAnimationLoopOnce(\n        _this5.playPlayerAnimation(\"bump\", position, facing, false).onComplete.add(function () {\n          //add creeper windup sound\n          _this5.audioPlayer.play(\"fuse\");\n          _this5.playExplodingCreeperAnimation(position, facing, destroyPosition, isOnBlock, completionHandler, _this5);\n\n          _this5.controller.delayBy(200, function () {\n            _this5.onAnimationLoopOnce(_this5.playPlayerAnimation(\"jumpUp\", position, facing, false), function () {\n              _this5.playIdleAnimation(position, facing, isOnBlock);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"playExplodingCreeperAnimation\",\n    value: function playExplodingCreeperAnimation(position, facing, destroyPosition, isOnBlock, completionHandler) {\n      var _this6 = this;\n\n      var direction = this.getDirectionName(facing);\n\n      var blockIndex = this.yToIndex(destroyPosition[1]) + destroyPosition[0];\n      var blockToExplode = this.actionPlaneBlocks[blockIndex];\n\n      var creeperExplodeAnimation = blockToExplode.animations.getAnimation(\"explode\");\n      creeperExplodeAnimation.onComplete.add(function () {\n        var borderingPositions;\n        blockToExplode.kill();\n        _this6.playExplosionAnimation(position, facing, destroyPosition, isOnBlock, function () {\n          _this6.controller.delayBy(100, function () {\n            _this6.playFailureAnimation(position, facing, false, completionHandler);\n          });\n        }, false);\n        _this6.audioPlayer.play(\"explode\");\n        _this6.playExplosionCloudAnimation(destroyPosition);\n      });\n\n      creeperExplodeAnimation.play();\n    }\n  }, {\n    key: \"playExplosionCloudAnimation\",\n    value: function playExplosionCloudAnimation(position) {\n      this.createBlock(this.fluffPlane, position[0], position[1], \"explosion\");\n    }\n  }, {\n    key: \"coordinatesToIndex\",\n    value: function coordinatesToIndex(coordinates) {\n      return this.yToIndex(coordinates[1]) + coordinates[0];\n    }\n  }, {\n    key: \"playMinecartTurnAnimation\",\n    value: function playMinecartTurnAnimation(position, facing, isOnBlock, completionHandler, turnDirection) {\n      var animation = this.playPlayerAnimation(\"mineCart_turn\" + turnDirection, position, _FacingDirectionJs2[\"default\"].Down, false);\n      return animation;\n    }\n  }, {\n    key: \"playMinecartMoveForwardAnimation\",\n    value: function playMinecartMoveForwardAnimation(position, facing, isOnBlock, completionHandler, nextPosition, speed) {\n      var animation, tween;\n\n      //if we loop the sfx that might be better?\n      this.audioPlayer.play(\"minecart\");\n      this.playPlayerAnimation(\"mineCart\", position, facing, false);\n      tween = this.addResettableTween(this.playerSprite).to({\n        x: -18 + 40 * nextPosition[0],\n        y: -32 + 40 * nextPosition[1]\n      }, speed, Phaser.Easing.Linear.None);\n      tween.start();\n      this.playerSprite.sortOrder = this.yToIndex(nextPosition[1]) + 5;\n\n      return tween;\n    }\n  }, {\n    key: \"activateUnpoweredRails\",\n    value: function activateUnpoweredRails(unpoweredRails) {\n      for (var railIndex = 0; railIndex < unpoweredRails.length; railIndex += 2) {\n        var rail = unpoweredRails[railIndex + 1];\n        var position = unpoweredRails[railIndex];\n        this.createActionPlaneBlock(position, rail);\n      }\n    }\n  }, {\n    key: \"playMinecartAnimation\",\n    value: function playMinecartAnimation(position, facing, isOnBlock, completionHandler, minecartTrack, unpoweredRails) {\n      var _this7 = this;\n\n      var animation;\n      this.track = minecartTrack;\n      this.i = 0;\n\n      //start at 3,2\n      this.setPlayerPosition(3, 2, isOnBlock);\n      position = [3, 2];\n\n      animation = this.playLevelEndAnimation(position, facing, isOnBlock, completionHandler, false);\n\n      animation.onComplete.add(function () {\n        _this7.activateUnpoweredRails(unpoweredRails);\n        _this7.playTrack(position, facing, isOnBlock, completionHandler, minecartTrack);\n      });\n    }\n  }, {\n    key: \"playTrack\",\n    value: function playTrack(position, facing, isOnBlock, completionHandler, minecartTrack) {\n      var _this8 = this;\n\n      if (this.i < this.track.length) {\n        var direction,\n            arraydirection = this.track[this.i][0],\n            nextPosition = this.track[this.i][1],\n            speed = this.track[this.i][3];\n        facing = this.track[this.i][2];\n\n        //turn\n        if (arraydirection.substring(0, 4) === \"turn\") {\n          direction = arraydirection.substring(5);\n          this.playMinecartTurnAnimation(position, facing, isOnBlock, completionHandler, direction).onComplete.add(function () {\n            _this8.playMinecartMoveForwardAnimation(position, facing, isOnBlock, completionHandler, nextPosition, speed).onComplete.add(function () {\n              position = nextPosition;\n              _this8.playTrack(position, facing, isOnBlock, completionHandler, minecartTrack);\n            });\n          });\n        } else {\n          this.playMinecartMoveForwardAnimation(position, facing, isOnBlock, completionHandler, nextPosition, speed).onComplete.add(function () {\n            _this8.playTrack(position, facing, isOnBlock, completionHandler, minecartTrack);\n          });\n        }\n        this.i++;\n      } else {\n        this.playSuccessAnimation(position, facing, isOnBlock, function () {});\n        completionHandler();\n      }\n    }\n  }, {\n    key: \"addHouseBed\",\n    value: function addHouseBed(bottomCoordinates) {\n      //Temporary, will be replaced by bed blocks\n      var bedTopCoordinate = bottomCoordinates[1] - 1;\n      var sprite = this.actionPlane.create(38 * bottomCoordinates[0], 35 * bedTopCoordinate, \"bed\");\n      sprite.sortOrder = this.yToIndex(bottomCoordinates[1]);\n    }\n  }, {\n    key: \"addDoor\",\n    value: function addDoor(coordinates) {\n      var sprite;\n      var toDestroy = this.actionPlaneBlocks[this.coordinatesToIndex(coordinates)];\n      this.createActionPlaneBlock(coordinates, \"door\");\n      //Need to grab the correct blocktype from the action layer\n      //And use that type block to create the ground block under the door\n      sprite = this.createBlock(this.groundPlane, coordinates[0], coordinates[1], \"wool_orange\");\n      toDestroy.kill();\n      sprite.sortOrder = this.yToIndex(6);\n    }\n  }, {\n    key: \"playSuccessHouseBuiltAnimation\",\n    value: function playSuccessHouseBuiltAnimation(position, facing, isOnBlock, createFloor, houseObjectPositions, completionHandler, updateScreen) {\n      var _this9 = this;\n\n      //fade screen to white\n      //Add house blocks\n      //fade out of white\n      //Play success animation on player.\n      var tweenToW, tweenWToC;\n\n      tweenToW = this.playLevelEndAnimation(position, facing, isOnBlock, function () {\n        _this9.controller.delayBy(4000, completionHandler);\n      }, true);\n      tweenToW.onComplete.add(function () {\n        _this9.audioPlayer.play(\"houseSuccess\");\n        //Change house ground to floor\n        var xCoord;\n        var yCoord;\n        var sprite;\n\n        for (var i = 0; i < createFloor.length; ++i) {\n          xCoord = createFloor[i][1];\n          yCoord = createFloor[i][2];\n          /*this.groundPlane[this.coordinatesToIndex([xCoord,yCoord])].kill();*/\n          sprite = _this9.createBlock(_this9.groundPlane, xCoord, yCoord, \"wool_orange\");\n          sprite.sortOrder = _this9.yToIndex(yCoord);\n        }\n\n        _this9.addHouseBed(houseObjectPositions[0]);\n        _this9.addDoor(houseObjectPositions[1]);\n        _this9.groundPlane.sort('sortOrder');\n        updateScreen();\n      });\n    }\n\n    //Tweens in and then out of white. returns the tween to white for adding callbacks\n  }, {\n    key: \"playLevelEndAnimation\",\n    value: function playLevelEndAnimation(position, facing, isOnBlock, completionHandler, playSuccessAnimation) {\n      var _this10 = this;\n\n      var sprite, tweenToW, tweenWToC;\n\n      sprite = this.fluffPlane.create(0, 0, \"finishOverlay\");\n\n      var _controller$scaleFromOriginal5 = this.controller.scaleFromOriginal();\n\n      var _controller$scaleFromOriginal52 = _slicedToArray(_controller$scaleFromOriginal5, 2);\n\n      var scaleX = _controller$scaleFromOriginal52[0];\n      var scaleY = _controller$scaleFromOriginal52[1];\n\n      sprite.scale.x = scaleX;\n      sprite.scale.y = scaleY;\n      sprite.alpha = 0;\n\n      tweenToW = this.tweenToWhite(sprite);\n      tweenWToC = this.tweenFromWhiteToClear(sprite);\n\n      tweenToW.onComplete.add(function () {\n        _this10.selectionIndicator.visible = false;\n        _this10.setPlayerPosition(position[0], position[1], isOnBlock);\n        tweenWToC.start();\n      });\n      if (playSuccessAnimation) {\n        tweenWToC.onComplete.add(function () {\n          _this10.playSuccessAnimation(position, facing, isOnBlock, completionHandler);\n        });\n      }\n      tweenToW.start();\n\n      return tweenToW;\n    }\n  }, {\n    key: \"tweenFromWhiteToClear\",\n    value: function tweenFromWhiteToClear(sprite) {\n      var tweenWhiteToClear;\n\n      tweenWhiteToClear = this.addResettableTween(sprite).to({\n        alpha: 0.0\n      }, 700, Phaser.Easing.Linear.None);\n      return tweenWhiteToClear;\n    }\n  }, {\n    key: \"tweenToWhite\",\n    value: function tweenToWhite(sprite) {\n      var tweenToWhite;\n\n      tweenToWhite = this.addResettableTween(sprite).to({\n        alpha: 1.0\n      }, 300, Phaser.Easing.Linear.None);\n      return tweenToWhite;\n    }\n  }, {\n    key: \"playBlockSound\",\n    value: function playBlockSound(groundType) {\n      var oreString = groundType.substring(0, 3);\n      if (groundType === \"stone\" || groundType === \"cobblestone\" || groundType === \"bedrock\" || oreString === \"ore\" || groundType === \"bricks\") {\n        this.audioPlayer.play(\"stepStone\");\n      } else if (groundType === \"grass\" || groundType === \"dirt\" || groundType === \"dirtCoarse\" || groundType == \"wool_orange\" || groundType == \"wool\") {\n        this.audioPlayer.play(\"stepGrass\");\n      } else if (groundType === \"gravel\") {\n        this.audioPlayer.play(\"stepGravel\");\n      } else if (groundType === \"farmlandWet\") {\n        this.audioPlayer.play(\"stepFarmland\");\n      } else {\n        this.audioPlayer.play(\"stepWood\");\n      }\n    }\n  }, {\n    key: \"playMoveForwardAnimation\",\n    value: function playMoveForwardAnimation(position, facing, shouldJumpDown, isOnBlock, groundType, completionHandler) {\n      var _this11 = this;\n\n      var tween,\n          oldPosition,\n          newPosVec,\n          animName,\n          yOffset = -32;\n\n      //stepping on stone sfx\n      this.playBlockSound(groundType);\n\n      var direction = this.getDirectionName(facing);\n\n      this.setSelectionIndicatorPosition(position[0], position[1]);\n      //make sure to render high for when moving up after placing a block\n      var zOrderYIndex = position[1] + (facing === _FacingDirectionJs2[\"default\"].Up ? 1 : 0);\n      this.playerSprite.sortOrder = this.yToIndex(zOrderYIndex) + 5;\n      oldPosition = [Math.trunc((this.playerSprite.position.x + 18) / 40), Math.ceil((this.playerSprite.position.y + 32) / 40)];\n      newPosVec = [position[0] - oldPosition[0], position[1] - oldPosition[1]];\n\n      //change offset for moving on top of blocks\n      if (isOnBlock) {\n        yOffset -= 22;\n      }\n\n      if (!shouldJumpDown) {\n        animName = \"walk\" + direction;\n        this.playScaledSpeed(this.playerSprite.animations, animName);\n        tween = this.addResettableTween(this.playerSprite).to({\n          x: -18 + 40 * position[0],\n          y: yOffset + 40 * position[1]\n        }, 200, Phaser.Easing.Linear.None);\n      } else {\n        animName = \"jumpDown\" + direction;\n        this.playScaledSpeed(this.playerSprite.animations, animName);\n        tween = this.addResettableTween(this.playerSprite).to({\n          x: [-18 + 40 * oldPosition[0], -18 + 40 * (oldPosition[0] + newPosVec[0]), -18 + 40 * position[0]],\n          y: [-32 + 40 * oldPosition[1], -32 + 40 * (oldPosition[1] + newPosVec[1]) - 50, -32 + 40 * position[1]]\n        }, 300, Phaser.Easing.Linear.None).interpolation(function (v, k) {\n          return Phaser.Math.bezierInterpolation(v, k);\n        });\n\n        tween.onComplete.add(function () {\n          _this11.audioPlayer.play(\"fall\");\n        });\n      }\n\n      tween.onComplete.add(function () {\n        completionHandler();\n      });\n\n      tween.start();\n\n      return tween;\n    }\n  }, {\n    key: \"playPlayerJumpDownVerticalAnimation\",\n    value: function playPlayerJumpDownVerticalAnimation(position, direction) {\n      var _this12 = this;\n\n      var animName = \"jumpDown\" + this.getDirectionName(direction);\n      this.playScaledSpeed(this.playerSprite.animations, animName);\n      var tween = this.addResettableTween(this.playerSprite).to({\n        x: [-18 + 40 * position[0], -18 + 40 * position[0], -18 + 40 * position[0]],\n        y: [-32 + 40 * position[1], -32 + 40 * position[1] - 50, -32 + 40 * position[1]]\n      }, 300, Phaser.Easing.Linear.None).interpolation(function (v, k) {\n        return Phaser.Math.bezierInterpolation(v, k);\n      });\n      tween.onComplete.addOnce(function () {\n        _this12.audioPlayer.play(\"fall\");\n      });\n      tween.start();\n    }\n  }, {\n    key: \"playPlaceBlockAnimation\",\n    value: function playPlaceBlockAnimation(position, facing, blockType, blockTypeAtPosition, completionHandler) {\n      var _this13 = this;\n\n      var jumpAnimName;\n      var blockIndex = this.yToIndex(position[1]) + position[0];\n\n      if (blockType === \"cropWheat\" || blockType === \"torch\" || blockType.substring(0, 5) === \"rails\") {\n        this.setSelectionIndicatorPosition(position[0], position[1]);\n\n        var signalDetacher = this.playPlayerAnimation(\"punch\", position, facing, false).onComplete.add(function () {\n          var sprite;\n          signalDetacher.detach();\n          var blockIndex = _this13.yToIndex(position[1]) + position[0];\n          sprite = _this13.createBlock(_this13.actionPlane, position[0], position[1], blockType);\n\n          if (sprite) {\n            sprite.sortOrder = _this13.yToIndex(position[1]);\n          }\n\n          _this13.actionPlaneBlocks[blockIndex] = sprite;\n          completionHandler();\n        });\n      } else {\n        this.audioPlayer.play(\"placeBlock\");\n\n        var direction = this.getDirectionName(facing);\n        this.setSelectionIndicatorPosition(position[0], position[1]);\n\n        jumpAnimName = \"jumpUp\" + direction;\n\n        if (blockTypeAtPosition !== \"\") {\n          this.playExplosionAnimation(position, facing, position, blockTypeAtPosition, function () {}, false);\n        }\n\n        this.playScaledSpeed(this.playerSprite.animations, jumpAnimName);\n        var placementTween = this.addResettableTween(this.playerSprite).to({\n          y: -55 + 40 * position[1]\n        }, 125, Phaser.Easing.Cubic.EaseOut);\n\n        placementTween.onComplete.addOnce(function () {\n          placementTween = null;\n\n          if (blockTypeAtPosition !== \"\") {\n            _this13.actionPlaneBlocks[blockIndex].kill();\n          }\n          var sprite = _this13.createBlock(_this13.actionPlane, position[0], position[1], blockType);\n\n          if (sprite) {\n            sprite.sortOrder = _this13.yToIndex(position[1]);\n          }\n\n          _this13.actionPlaneBlocks[blockIndex] = sprite;\n          completionHandler();\n        });\n        placementTween.start();\n      }\n    }\n  }, {\n    key: \"playPlaceBlockInFrontAnimation\",\n    value: function playPlaceBlockInFrontAnimation(playerPosition, facing, blockPosition, plane, blockType, completionHandler) {\n      var _this14 = this;\n\n      this.setSelectionIndicatorPosition(blockPosition[0], blockPosition[1]);\n\n      this.playPlayerAnimation(\"punch\", playerPosition, facing, false).onComplete.add(function () {\n        if (plane === _this14.controller.levelModel.actionPlane) {\n          _this14.createActionPlaneBlock(blockPosition, blockType);\n        } else {\n          // re-lay ground tiles based on model\n          _this14.refreshGroundPlane();\n        }\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"createActionPlaneBlock\",\n    value: function createActionPlaneBlock(position, blockType) {\n      var blockIndex = this.yToIndex(position[1]) + position[0];\n      var sprite = this.createBlock(this.actionPlane, position[0], position[1], blockType);\n\n      if (sprite) {\n        sprite.sortOrder = this.yToIndex(position[1]);\n      }\n\n      this.actionPlaneBlocks[blockIndex] = sprite;\n    }\n  }, {\n    key: \"playShearAnimation\",\n    value: function playShearAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler) {\n      var _this15 = this;\n\n      var blockIndex = this.yToIndex(destroyPosition[1]) + destroyPosition[0];\n      var blockToShear = this.actionPlaneBlocks[blockIndex];\n\n      blockToShear.animations.stop(null, true);\n      this.onAnimationLoopOnce(this.playScaledSpeed(blockToShear.animations, \"used\"), function () {\n        _this15.playScaledSpeed(blockToShear.animations, \"face\");\n      });\n\n      this.playExplosionAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler, true);\n    }\n  }, {\n    key: \"playShearSheepAnimation\",\n    value: function playShearSheepAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler) {\n      var _this16 = this;\n\n      var direction = this.getDirectionName(facing);\n      this.setSelectionIndicatorPosition(destroyPosition[0], destroyPosition[1]);\n\n      this.onAnimationEnd(this.playPlayerAnimation(\"punch\", playerPosition, facing, false), function () {\n        var blockIndex = _this16.yToIndex(destroyPosition[1]) + destroyPosition[0];\n        var blockToShear = _this16.actionPlaneBlocks[blockIndex];\n\n        blockToShear.animations.stop(null, true);\n        _this16.onAnimationLoopOnce(_this16.playScaledSpeed(blockToShear.animations, \"used\"), function () {\n          _this16.playScaledSpeed(blockToShear.animations, \"face\");\n        });\n\n        _this16.playExplosionAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler, true);\n      });\n    }\n  }, {\n    key: \"playDestroyBlockAnimation\",\n    value: function playDestroyBlockAnimation(playerPosition, facing, destroyPosition, blockType, newShadingPlaneData, newFowPlaneData, completionHandler) {\n      this.setSelectionIndicatorPosition(destroyPosition[0], destroyPosition[1]);\n\n      var playerAnimation = blockType.match(/(ore|stone|clay|bricks|bedrock)/) ? \"mine\" : \"punchDestroy\";\n      this.playPlayerAnimation(playerAnimation, playerPosition, facing, false);\n      this.playMiningParticlesAnimation(facing, destroyPosition);\n      this.playBlockDestroyOverlayAnimation(playerPosition, facing, destroyPosition, blockType, newShadingPlaneData, newFowPlaneData, completionHandler);\n    }\n  }, {\n    key: \"playPunchDestroyAirAnimation\",\n    value: function playPunchDestroyAirAnimation(playerPosition, facing, destroyPosition, completionHandler) {\n      this.playPunchAnimation(playerPosition, facing, destroyPosition, \"punchDestroy\", completionHandler);\n    }\n  }, {\n    key: \"playPunchAirAnimation\",\n    value: function playPunchAirAnimation(playerPosition, facing, destroyPosition, completionHandler) {\n      this.playPunchAnimation(playerPosition, facing, destroyPosition, \"punch\", completionHandler);\n    }\n  }, {\n    key: \"playPunchAnimation\",\n    value: function playPunchAnimation(playerPosition, facing, destroyPosition, animationType, completionHandler) {\n      this.setSelectionIndicatorPosition(destroyPosition[0], destroyPosition[1]);\n      this.onAnimationEnd(this.playPlayerAnimation(animationType, playerPosition, facing, false), function () {\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"playBlockDestroyOverlayAnimation\",\n    value: function playBlockDestroyOverlayAnimation(playerPosition, facing, destroyPosition, blockType, newShadingPlaneData, newFowPlaneData, completionHandler) {\n      var _this17 = this;\n\n      var blockIndex = this.yToIndex(destroyPosition[1]) + destroyPosition[0];\n      var blockToDestroy = this.actionPlaneBlocks[blockIndex];\n      var direction = this.getDirectionName(facing);\n\n      var destroyOverlay = this.actionPlane.create(-12 + 40 * destroyPosition[0], -22 + 40 * destroyPosition[1], \"destroyOverlay\", \"destroy1\");\n      destroyOverlay.sortOrder = this.yToIndex(destroyPosition[1]) + 2;\n      this.onAnimationEnd(destroyOverlay.animations.add(\"destroy\", Phaser.Animation.generateFrameNames(\"destroy\", 1, 12, \"\", 0), 30, false), function () {\n        _this17.actionPlaneBlocks[blockIndex] = null;\n\n        if (blockToDestroy.hasOwnProperty(\"onBlockDestroy\")) {\n          blockToDestroy.onBlockDestroy(blockToDestroy);\n        }\n\n        blockToDestroy.kill();\n        destroyOverlay.kill();\n        _this17.toDestroy.push(blockToDestroy);\n        _this17.toDestroy.push(destroyOverlay);\n        _this17.updateShadingPlane(newShadingPlaneData);\n        _this17.updateFowPlane(newFowPlaneData);\n\n        _this17.setSelectionIndicatorPosition(playerPosition[0], playerPosition[1]);\n\n        _this17.audioPlayer.play('dig_wood1');\n        _this17.playExplosionAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler, true);\n      });\n\n      this.playScaledSpeed(destroyOverlay.animations, \"destroy\");\n    }\n  }, {\n    key: \"playMiningParticlesAnimation\",\n    value: function playMiningParticlesAnimation(facing, destroyPosition) {\n      var _this18 = this;\n\n      var miningParticlesData = [[24, -100, -80], // left\n      [12, -120, -80], // bottom\n      [0, -60, -80], // right\n      [36, -80, -60]];\n\n      // top\n      var direction = this.getDirectionName(facing);\n      var miningParticlesIndex = direction === \"_left\" ? 0 : direction === \"_bottom\" ? 1 : direction === \"_right\" ? 2 : 3;\n      var miningParticlesFirstFrame = miningParticlesData[miningParticlesIndex][0];\n      var miningParticlesOffsetX = miningParticlesData[miningParticlesIndex][1];\n      var miningParticlesOffsetY = miningParticlesData[miningParticlesIndex][2];\n      var miningParticles = this.actionPlane.create(miningParticlesOffsetX + 40 * destroyPosition[0], miningParticlesOffsetY + 40 * destroyPosition[1], \"miningParticles\", \"MiningParticles\" + miningParticlesFirstFrame);\n      miningParticles.sortOrder = this.yToIndex(destroyPosition[1]) + 2;\n      this.onAnimationEnd(miningParticles.animations.add(\"miningParticles\", Phaser.Animation.generateFrameNames(\"MiningParticles\", miningParticlesFirstFrame, miningParticlesFirstFrame + 11, \"\", 0), 30, false), function () {\n        miningParticles.kill();\n        _this18.toDestroy.push(miningParticles);\n      });\n      this.playScaledSpeed(miningParticles.animations, \"miningParticles\");\n    }\n  }, {\n    key: \"playExplosionAnimation\",\n    value: function playExplosionAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler, placeBlock) {\n      var _this19 = this;\n\n      var signalBinding,\n          explodeAnim = this.actionPlane.create(-36 + 40 * destroyPosition[0], -30 + 40 * destroyPosition[1], \"blockExplode\", \"BlockBreakParticle0\");\n\n      //explodeAnim.tint = 0x324bff;\n      if (this.controller.canUseTints()) {\n        switch (blockType) {\n          case \"treeAcacia\":\n          case \"logAcacia\":\n            explodeAnim.tint = 0x6c655a;\n            break;\n          case \"treeBirch\":\n          case \"logBirch\":\n            explodeAnim.tint = 0xdad6cc;\n            break;\n          case \"treeJungle\":\n          case \"logJungle\":\n            explodeAnim.tint = 0x6a4f31;\n            break;\n          case \"treeOak\":\n          case \"logOak\":\n            explodeAnim.tint = 0x675231;\n            break;\n          case \"treeSpruce\":\n          case \"logSpruce\":\n            explodeAnim.tint = 0x4b3923;\n            break;\n\n          case \"planksAcacia\":\n            explodeAnim.tint = 0xba6337;\n            break;\n          case \"planksBirch\":\n            explodeAnim.tint = 0xd7cb8d;\n            break;\n          case \"planksJungle\":\n            explodeAnim.tint = 0xb88764;\n            break;\n          case \"planksOak\":\n            explodeAnim.tint = 0xb4905a;\n            break;\n          case \"planksSpruce\":\n            explodeAnim.tint = 0x805e36;\n            break;\n          case \"stone\":\n          case \"oreCoal\":\n          case \"oreDiamond\":\n          case \"oreIron\":\n          case \"oreGold\":\n          case \"oreEmerald\":\n          case \"oreRedstone\":\n            explodeAnim.tint = 0xC6C6C6;\n            break;\n          case \"grass\":\n          case \"cropWheat\":\n            explodeAnim.tint = 0x5d8f23;\n            break;\n          case \"dirt\":\n            explodeAnim.tint = 0x8a5e33;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      explodeAnim.sortOrder = this.yToIndex(destroyPosition[1]) + 2;\n      this.onAnimationEnd(explodeAnim.animations.add(\"explode\", Phaser.Animation.generateFrameNames(\"BlockBreakParticle\", 0, 7, \"\", 0), 30, false), function () {\n        explodeAnim.kill();\n        _this19.toDestroy.push(explodeAnim);\n\n        if (placeBlock) {\n          _this19.playPlayerAnimation(\"idle\", playerPosition, facing, false);\n          _this19.playItemDropAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler);\n        }\n      });\n      this.playScaledSpeed(explodeAnim.animations, \"explode\");\n      if (!placeBlock) {\n        completionHandler();\n      }\n    }\n  }, {\n    key: \"playItemDropAnimation\",\n    value: function playItemDropAnimation(playerPosition, facing, destroyPosition, blockType, completionHandler) {\n      var _this20 = this;\n\n      var sprite = this.createMiniBlock(destroyPosition[0], destroyPosition[1], blockType);\n      sprite.sortOrder = this.yToIndex(destroyPosition[1]) + 2;\n      this.onAnimationEnd(this.playScaledSpeed(sprite.animations, \"animate\"), function () {\n        _this20.playItemAcquireAnimation(playerPosition, facing, destroyPosition, blockType, sprite, completionHandler);\n      });\n    }\n  }, {\n    key: \"playScaledSpeed\",\n    value: function playScaledSpeed(animationManager, name) {\n      var animation = animationManager.getAnimation(name);\n      if (!animation.originalFps) {\n        animation.originalFps = 1000 / animation.delay;\n      }\n      return animationManager.play(name, this.controller.originalFpsToScaled(animation.originalFps));\n    }\n  }, {\n    key: \"playItemAcquireAnimation\",\n    value: function playItemAcquireAnimation(playerPosition, facing, destroyPosition, blockType, sprite, completionHandler) {\n      var _this21 = this;\n\n      var tween;\n\n      tween = this.addResettableTween(sprite).to({\n        x: -18 + 40 * playerPosition[0],\n        y: -32 + 40 * playerPosition[1]\n      }, 200, Phaser.Easing.Linear.None);\n\n      tween.onComplete.add(function () {\n        _this21.audioPlayer.play(\"collectedBlock\");\n        sprite.kill();\n        _this21.toDestroy.push(sprite);\n        completionHandler();\n      });\n\n      tween.start();\n    }\n  }, {\n    key: \"setPlayerPosition\",\n    value: function setPlayerPosition(x, y, isOnBlock) {\n      this.playerSprite.x = -18 + 40 * x;\n      this.playerSprite.y = -32 + (isOnBlock ? -23 : 0) + 40 * y;\n      this.playerSprite.sortOrder = this.yToIndex(y) + 5;\n    }\n  }, {\n    key: \"setSelectionIndicatorPosition\",\n    value: function setSelectionIndicatorPosition(x, y) {\n      this.selectionIndicator.x = -35 + 23 + 40 * x;\n      this.selectionIndicator.y = -55 + 43 + 40 * y;\n    }\n  }, {\n    key: \"createPlanes\",\n    value: function createPlanes() {\n      this.groundPlane = this.game.add.group();\n      this.groundPlane.yOffset = -2;\n      this.shadingPlane = this.game.add.group();\n      this.shadingPlane.yOffset = -2;\n      this.actionPlane = this.game.add.group();\n      this.actionPlane.yOffset = -22;\n      this.fluffPlane = this.game.add.group();\n      this.fluffPlane.yOffset = -160;\n      this.fowPlane = this.game.add.group();\n      this.fowPlane.yOffset = 0;\n    }\n  }, {\n    key: \"resetPlanes\",\n    value: function resetPlanes(levelData) {\n      var sprite, x, y, i, blockType, frameList;\n\n      this.groundPlane.removeAll(true);\n      this.actionPlane.removeAll(true);\n      this.fluffPlane.removeAll(true);\n      this.shadingPlane.removeAll(true);\n      this.fowPlane.removeAll(true);\n\n      this.baseShading = this.game.add.group();\n\n      for (var shadeX = 0; shadeX < this.controller.levelModel.planeWidth * 40; shadeX += 400) {\n        for (var shadeY = 0; shadeY < this.controller.levelModel.planeHeight * 40; shadeY += 400) {\n          this.baseShading.create(shadeX, shadeY, 'shadeLayer');\n        }\n      }\n\n      this.refreshGroundPlane();\n\n      this.actionPlaneBlocks = [];\n      for (y = 0; y < this.controller.levelModel.planeHeight; ++y) {\n        for (x = 0; x < this.controller.levelModel.planeWidth; ++x) {\n          var blockIndex = this.yToIndex(y) + x;\n          sprite = null;\n\n          if (!levelData.groundDecorationPlane[blockIndex].isEmpty) {\n            sprite = this.createBlock(this.actionPlane, x, y, levelData.groundDecorationPlane[blockIndex].blockType);\n            if (sprite) {\n              sprite.sortOrder = this.yToIndex(y);\n            }\n          }\n\n          sprite = null;\n          if (!levelData.actionPlane[blockIndex].isEmpty) {\n            blockType = levelData.actionPlane[blockIndex].blockType;\n            sprite = this.createBlock(this.actionPlane, x, y, blockType);\n            if (sprite !== null) {\n              sprite.sortOrder = this.yToIndex(y);\n            }\n          }\n\n          this.actionPlaneBlocks.push(sprite);\n        }\n      }\n\n      for (y = 0; y < this.controller.levelModel.planeHeight; ++y) {\n        for (x = 0; x < this.controller.levelModel.planeWidth; ++x) {\n          var blockIndex = this.yToIndex(y) + x;\n          if (!levelData.fluffPlane[blockIndex].isEmpty) {\n            sprite = this.createBlock(this.fluffPlane, x, y, levelData.fluffPlane[blockIndex].blockType);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"refreshGroundPlane\",\n    value: function refreshGroundPlane() {\n      this.groundPlane.removeAll(true);\n      for (var y = 0; y < this.controller.levelModel.planeHeight; ++y) {\n        for (var x = 0; x < this.controller.levelModel.planeWidth; ++x) {\n          var blockIndex = this.yToIndex(y) + x;\n          var sprite = this.createBlock(this.groundPlane, x, y, this.controller.levelModel.groundPlane[blockIndex].blockType);\n          if (sprite) {\n            sprite.sortOrder = this.yToIndex(y);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateShadingPlane\",\n    value: function updateShadingPlane(shadingData) {\n      var index, shadowItem, sx, sy, atlas;\n\n      this.shadingPlane.removeAll();\n\n      this.shadingPlane.add(this.baseShading);\n      this.shadingPlane.add(this.selectionIndicator);\n\n      for (index = 0; index < shadingData.length; ++index) {\n        shadowItem = shadingData[index];\n\n        atlas = \"AO\";\n        sx = 40 * shadowItem.x;\n        sy = -22 + 40 * shadowItem.y;\n\n        switch (shadowItem.type) {\n          case \"AOeffect_Left\":\n            sx += 26;\n            sy += 22;\n            break;\n\n          case \"AOeffect_Right\":\n            sx += 0;\n            sy += 22;\n            break;\n\n          case \"AOeffect_Bottom\":\n            sx += 0;\n            sy += 22;\n            break;\n\n          case \"AOeffect_BottomLeft\":\n            sx += 25;\n            sy += 22;\n            break;\n\n          case \"AOeffect_BottomRight\":\n            sx += 0;\n            sy += 22;\n            break;\n\n          case \"AOeffect_Top\":\n            sx += 0;\n            sy += 47;\n            break;\n\n          case \"AOeffect_TopLeft\":\n            sx += 25;\n            sy += 47;\n            break;\n\n          case \"AOeffect_TopRight\":\n            sx += 0;\n            sy += 47;\n            break;\n\n          case \"Shadow_Parts_Fade_base.png\":\n            atlas = \"blockShadows\";\n            sx -= 52;\n            sy += 0;\n            break;\n\n          case \"Shadow_Parts_Fade_top.png\":\n            atlas = \"blockShadows\";\n            sx -= 52;\n            sy += 0;\n            break;\n        }\n\n        this.shadingPlane.create(sx, sy, atlas, shadowItem.type);\n      }\n    }\n  }, {\n    key: \"updateFowPlane\",\n    value: function updateFowPlane(fowData) {\n      var index, fx, fy, atlas;\n\n      this.fowPlane.removeAll();\n\n      for (index = 0; index < fowData.length; ++index) {\n        var fowItem = fowData[index];\n\n        if (fowItem !== \"\") {\n          atlas = \"undergroundFow\";\n          fx = -40 + 40 * fowItem.x;\n          fy = -40 + 40 * fowItem.y;\n\n          switch (fowItem.type) {\n            case \"FogOfWar_Center\":\n              break;\n\n            default:\n              break;\n          }\n\n          this.fowPlane.create(fx, fy, atlas, fowItem.type);\n        }\n      }\n    }\n  }, {\n    key: \"playRandomPlayerIdle\",\n    value: function playRandomPlayerIdle(facing) {\n      var facingName, rand, animationName;\n\n      facingName = this.getDirectionName(facing);\n      rand = Math.trunc(Math.random() * 4) + 1;\n\n      switch (rand) {\n        case 1:\n          animationName = \"idle\";\n          break;\n        case 2:\n          animationName = \"lookLeft\";\n          break;\n        case 3:\n          animationName = \"lookRight\";\n          break;\n        case 4:\n          animationName = \"lookAtCam\";\n          break;\n        default:\n      }\n\n      animationName += facingName;\n      this.playScaledSpeed(this.playerSprite.animations, animationName);\n    }\n  }, {\n    key: \"generatePlayerCelebrateFrames\",\n    value: function generatePlayerCelebrateFrames() {\n      var frameList = [],\n          i;\n\n      //Crouch Down\n      /* frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 29, 32, \"\", 3));\n       //Crouch Down\n       frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 29, 32, \"\", 3));\n       //turn and pause\n       for (i = 0; i < 4; ++i) {\n       frameList = frameList.concat(\"Player_061\");\n       }\n       for (i = 0; i < 2; ++i) {\n       frameList = frameList.concat(\"Player_149\");\n       }\n           //Crouch Up\n       frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 149, 152, \"\", 3));\n       //Crouch Up\n       frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 149, 152, \"\", 3));*/\n\n      ///////////////////////////Alternative Animation/////////////////////\n      //Face Down\n      for (i = 0; i < 6; ++i) {\n        frameList.push(\"Player_001\");\n      }\n      //Crouch Left\n      //frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 209, 212, \"\", 3));\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_209\");\n      //Crouch Left\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_211\");\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_209\");\n      frameList = frameList.concat(\"Player_209\");\n      //Crouch Right\n      //frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 89, 92, \"\", 3));\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_089\");\n      //Crouch Right\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_091\");\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_089\");\n      frameList = frameList.concat(\"Player_089\");\n      //Face Down (for pause)\n      for (i = 0; i < 3; ++i) {\n        frameList.push(\"Player_001\");\n      }\n      //////////////////////////////////////////////////////////////////\n\n      //Jump success\n      /*frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 285, 296, \"\", 3));\n      //frolick celebrate\n      frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 37, 44, \"\", 3));*/\n      //look at cam\n      frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"Player_\", 263, 262, \"\", 3));\n      for (i = 0; i < 5; ++i) {\n        frameList.push(\"Player_262\");\n      }\n      return frameList;\n    }\n  }, {\n    key: \"generateFramesWithEndDelay\",\n    value: function generateFramesWithEndDelay(frameName, startFrame, endFrame, endFrameFullName, buffer, frameDelay) {\n      var frameList = Phaser.Animation.generateFrameNames(frameName, startFrame, endFrame, \"\", buffer);\n      for (var i = 0; i < frameDelay; ++i) {\n        frameList.push(endFrameFullName);\n      }\n      return frameList;\n    }\n  }, {\n    key: \"preparePlayerSprite\",\n    value: function preparePlayerSprite(playerName) {\n      var _this22 = this;\n\n      var frameList,\n          genFrames,\n          i,\n          singlePunch,\n          jumpCelebrateFrames,\n          idleFrameRate = 10;\n\n      var frameRate = 20;\n\n      this.playerSprite = this.actionPlane.create(0, 0, \"player\" + playerName, 'Player_121');\n      if (this.controller.followingPlayer()) {\n        this.game.camera.follow(this.playerSprite);\n      }\n      this.playerGhost = this.fluffPlane.create(0, 0, \"player\" + playerName, 'Player_121');\n      this.playerGhost.parent = this.playerSprite;\n      this.playerGhost.alpha = 0.2;\n\n      this.selectionIndicator = this.shadingPlane.create(24, 44, 'selectionIndicator');\n\n      jumpCelebrateFrames = Phaser.Animation.generateFrameNames(\"Player_\", 285, 296, \"\", 3);\n\n      frameList = [];\n\n      frameList.push(\"Player_001\");\n      frameList.push(\"Player_003\");\n      frameList.push(\"Player_001\");\n      frameList.push(\"Player_007\");\n      frameList.push(\"Player_009\");\n      frameList.push(\"Player_007\");\n      for (i = 0; i < 5; ++i) {\n        frameList.push(\"Player_001\");\n      }\n\n      this.playerSprite.animations.add('idle_down', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Down);\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 6, 5, \"Player_005\", 3, 5);\n      frameList.push(\"Player_006\");\n      this.playerSprite.animations.add('lookLeft_down', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_down\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 12, 11, \"Player_011\", 3, 5);\n      frameList.push(\"Player_012\");\n      this.playerSprite.animations.add('lookRight_down', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_down\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 263, 262, \"Player_262\", 3, 5);\n      frameList.push(\"Player_263\");\n      this.playerSprite.animations.add('lookAtCam_down', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_down\");\n      });\n      frameList = [];\n      for (i = 0; i < 13; ++i) {\n        frameList.push(\"Player_001\");\n      }\n      this.playerSprite.animations.add('idlePause_down', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Down);\n      });\n\n      this.playerSprite.animations.add('walk_down', Phaser.Animation.generateFrameNames(\"Player_\", 13, frameRate, \"\", 3), frameRate, true);\n      singlePunch = Phaser.Animation.generateFrameNames(\"Player_\", 21, 24, \"\", 3);\n      this.playerSprite.animations.add('punch_down', singlePunch, frameRate, false).onComplete.add(function () {\n        _this22.audioPlayer.play(\"punch\");\n      });\n      this.playerSprite.animations.add('punchDestroy_down', singlePunch.concat(singlePunch).concat(singlePunch), frameRate, false);\n      this.playerSprite.animations.add('hurt_down', Phaser.Animation.generateFrameNames(\"Player_\", 25, 28, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('crouch_down', Phaser.Animation.generateFrameNames(\"Player_\", 29, 32, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('jumpUp_down', Phaser.Animation.generateFrameNames(\"Player_\", 33, 36, \"\", 3), frameRate / 2, true);\n      this.playerSprite.animations.add('fail_down', Phaser.Animation.generateFrameNames(\"Player_\", 45, 48, \"\", 3), frameRate, false);\n      this.playerSprite.animations.add('celebrate_down', this.generatePlayerCelebrateFrames(), frameRate / 2, false);\n      this.playerSprite.animations.add('bump_down', Phaser.Animation.generateFrameNames(\"Player_\", 49, 54, \"\", 3), frameRate, false).onStart.add(function () {\n        _this22.audioPlayer.play(\"bump\");\n      });\n      this.playerSprite.animations.add('jumpDown_down', Phaser.Animation.generateFrameNames(\"Player_\", 55, 60, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mine_down', Phaser.Animation.generateFrameNames(\"Player_\", 241, 244, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mineCart_down', Phaser.Animation.generateFrameNames(\"Minecart_\", 5, 5, \"\", 2), frameRate, false);\n      this.playerSprite.animations.add('mineCart_turnleft_down', Phaser.Animation.generateFrameNames(\"Minecart_\", 6, 6, \"\", 2), frameRate, false);\n      this.playerSprite.animations.add('mineCart_turnright_down', Phaser.Animation.generateFrameNames(\"Minecart_\", 12, 12, \"\", 2), frameRate, false);\n\n      frameList = [];\n\n      frameList.push(\"Player_061\");\n      frameList.push(\"Player_063\");\n      frameList.push(\"Player_061\");\n      frameList.push(\"Player_067\");\n      frameList.push(\"Player_069\");\n      frameList.push(\"Player_067\");\n      for (i = 0; i < 5; ++i) {\n        frameList.push(\"Player_061\");\n      }\n\n      this.playerSprite.animations.add('idle_right', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Right);\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 66, 65, \"Player_065\", 3, 5);\n      frameList.push(\"Player_066\");\n      this.playerSprite.animations.add('lookLeft_right', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_right\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 72, 71, \"Player_071\", 3, 5);\n      frameList.push(\"Player_072\");\n      this.playerSprite.animations.add('lookRight_right', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_right\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 270, 269, \"Player_269\", 3, 5);\n      frameList.push(\"Player_270\");\n      this.playerSprite.animations.add('lookAtCam_right', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_right\");\n      });\n      frameList = [];\n      for (i = 0; i < 13; ++i) {\n        frameList.push(\"Player_061\");\n      }\n      this.playerSprite.animations.add('idlePause_right', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Right);\n      });\n\n      this.playerSprite.animations.add('walk_right', Phaser.Animation.generateFrameNames(\"Player_\", 73, 80, \"\", 3), frameRate, true);\n      singlePunch = Phaser.Animation.generateFrameNames(\"Player_\", 81, 84, \"\", 3);\n      this.playerSprite.animations.add('punch_right', singlePunch, frameRate, false).onComplete.add(function () {\n        _this22.audioPlayer.play(\"punch\");\n      });\n      this.playerSprite.animations.add('punchDestroy_right', singlePunch.concat(singlePunch).concat(singlePunch), frameRate, false);\n      this.playerSprite.animations.add('hurt_right', Phaser.Animation.generateFrameNames(\"Player_\", 85, 88, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('crouch_right', Phaser.Animation.generateFrameNames(\"Player_\", 89, 92, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('jumpUp_right', Phaser.Animation.generateFrameNames(\"Player_\", 93, 96, \"\", 3), frameRate / 2, true);\n      this.playerSprite.animations.add('fail_right', Phaser.Animation.generateFrameNames(\"Player_\", 105, 108, \"\", 3), frameRate / 2, false);\n      this.playerSprite.animations.add('celebrate_right', this.generatePlayerCelebrateFrames(), frameRate / 2, false);\n      this.playerSprite.animations.add('bump_right', Phaser.Animation.generateFrameNames(\"Player_\", 109, 114, \"\", 3), frameRate, false).onStart.add(function () {\n        _this22.audioPlayer.play(\"bump\");\n      });\n      this.playerSprite.animations.add('jumpDown_right', Phaser.Animation.generateFrameNames(\"Player_\", 115, 120, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mine_right', Phaser.Animation.generateFrameNames(\"Player_\", 245, 248, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mineCart_right', Phaser.Animation.generateFrameNames(\"Minecart_\", 7, 7, \"\", 2), frameRate, false);\n\n      frameList = [];\n\n      frameList.push(\"Player_181\");\n      frameList.push(\"Player_183\");\n      frameList.push(\"Player_181\");\n      frameList.push(\"Player_187\");\n      frameList.push(\"Player_189\");\n      frameList.push(\"Player_187\");\n      for (i = 0; i < 5; ++i) {\n        frameList.push(\"Player_181\");\n      }\n\n      this.playerSprite.animations.add('idle_left', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Left);\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 186, 185, \"Player_185\", 3, 5);\n      frameList.push(\"Player_186\");\n      this.playerSprite.animations.add('lookLeft_left', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_left\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 192, 191, \"Player_191\", 3, 5);\n      frameList.push(\"Player_192\");\n      this.playerSprite.animations.add('lookRight_left', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_left\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 284, 283, \"Player_283\", 3, 5);\n      frameList.push(\"Player_284\");\n      this.playerSprite.animations.add('lookAtCam_left', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_left\");\n      });\n      frameList = [];\n      for (i = 0; i < 13; ++i) {\n        frameList.push(\"Player_181\");\n      }\n      this.playerSprite.animations.add('idlePause_left', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Left);\n      });\n\n      this.playerSprite.animations.add('walk_left', Phaser.Animation.generateFrameNames(\"Player_\", 193, 200, \"\", 3), frameRate, true);\n      singlePunch = Phaser.Animation.generateFrameNames(\"Player_\", 201, 204, \"\", 3);\n      this.playerSprite.animations.add('punch_left', singlePunch, frameRate, false).onComplete.add(function () {\n        _this22.audioPlayer.play(\"punch\");\n      });\n      this.playerSprite.animations.add('punchDestroy_left', singlePunch.concat(singlePunch).concat(singlePunch), frameRate, false);\n      this.playerSprite.animations.add('hurt_left', Phaser.Animation.generateFrameNames(\"Player_\", 205, 208, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('crouch_left', Phaser.Animation.generateFrameNames(\"Player_\", 209, 212, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('jumpUp_left', Phaser.Animation.generateFrameNames(\"Player_\", 213, 216, \"\", 3), frameRate / 2, true);\n      this.playerSprite.animations.add('fail_left', Phaser.Animation.generateFrameNames(\"Player_\", 225, 228, \"\", 3), frameRate / 2, false);\n      this.playerSprite.animations.add('celebrate_left', this.generatePlayerCelebrateFrames(), frameRate / 2, false);\n      this.playerSprite.animations.add('bump_left', Phaser.Animation.generateFrameNames(\"Player_\", 229, 234, \"\", 3), frameRate, false).onStart.add(function () {\n        _this22.audioPlayer.play(\"bump\");\n      });\n      this.playerSprite.animations.add('jumpDown_left', Phaser.Animation.generateFrameNames(\"Player_\", 235, 240, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mine_left', Phaser.Animation.generateFrameNames(\"Player_\", 253, 256, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mineCart_left', Phaser.Animation.generateFrameNames(\"Minecart_\", 11, 11, \"\", 2), frameRate, false);\n\n      frameList = [];\n      frameList.push(\"Player_121\");\n      frameList.push(\"Player_123\");\n      frameList.push(\"Player_121\");\n      frameList.push(\"Player_127\");\n      frameList.push(\"Player_129\");\n      frameList.push(\"Player_127\");\n      for (i = 0; i < 5; ++i) {\n        frameList.push(\"Player_121\");\n      }\n\n      this.playerSprite.animations.add('idle_up', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Up);\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 126, 125, \"Player_125\", 3, 5);\n      frameList.push(\"Player_126\");\n      this.playerSprite.animations.add('lookLeft_up', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_up\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 132, 131, \"Player_131\", 3, 5);\n      frameList.push(\"Player_132\");\n      this.playerSprite.animations.add('lookRight_up', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_up\");\n      });\n      frameList = this.generateFramesWithEndDelay(\"Player_\", 277, 276, \"Player_276\", 3, 5);\n      frameList.push(\"Player_277\");\n      this.playerSprite.animations.add('lookAtCam_up', frameList, idleFrameRate, false).onComplete.add(function () {\n        _this22.playScaledSpeed(_this22.playerSprite.animations, \"idlePause_up\");\n      });\n\n      frameList = [];\n      for (i = 0; i < 13; ++i) {\n        frameList.push(\"Player_121\");\n      }\n      this.playerSprite.animations.add('idlePause_up', frameList, frameRate / 3, false).onComplete.add(function () {\n        _this22.playRandomPlayerIdle(_FacingDirectionJs2[\"default\"].Up);\n      });\n      this.playerSprite.animations.add('walk_up', Phaser.Animation.generateFrameNames(\"Player_\", 133, 140, \"\", 3), frameRate, true);\n      singlePunch = Phaser.Animation.generateFrameNames(\"Player_\", 141, 144, \"\", 3);\n      this.playerSprite.animations.add('punch_up', singlePunch, frameRate, false).onComplete.add(function () {\n        _this22.audioPlayer.play(\"punch\");\n      });\n      this.playerSprite.animations.add('punchDestroy_up', singlePunch.concat(singlePunch).concat(singlePunch), frameRate, false);\n      this.playerSprite.animations.add('hurt_up', Phaser.Animation.generateFrameNames(\"Player_\", 145, 148, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('crouch_up', Phaser.Animation.generateFrameNames(\"Player_\", 149, 152, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('jumpUp_up', Phaser.Animation.generateFrameNames(\"Player_\", 153, 156, \"\", 3), frameRate / 2, true);\n      this.playerSprite.animations.add('fail_up', Phaser.Animation.generateFrameNames(\"Player_\", 165, 168, \"\", 3), frameRate / 2, false);\n      this.playerSprite.animations.add('celebrate_up', this.generatePlayerCelebrateFrames(), frameRate / 2, false);\n      this.playerSprite.animations.add('bump_up', Phaser.Animation.generateFrameNames(\"Player_\", 169, 174, \"\", 3), frameRate, false).onStart.add(function () {\n        _this22.audioPlayer.play(\"bump\");\n      });\n      this.playerSprite.animations.add('jumpDown_up', Phaser.Animation.generateFrameNames(\"Player_\", 175, 180, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mine_up', Phaser.Animation.generateFrameNames(\"Player_\", 249, 252, \"\", 3), frameRate, true);\n      this.playerSprite.animations.add('mineCart_up', Phaser.Animation.generateFrameNames(\"Minecart_\", 9, 9, \"\", 2), frameRate, false);\n      this.playerSprite.animations.add('mineCart_turnleft_up', Phaser.Animation.generateFrameNames(\"Minecart_\", 10, 10, \"\", 2), frameRate, false);\n      this.playerSprite.animations.add('mineCart_turnright_up', Phaser.Animation.generateFrameNames(\"Minecart_\", 8, 8, \"\", 2), frameRate, false);\n    }\n  }, {\n    key: \"createMiniBlock\",\n    value: function createMiniBlock(x, y, blockType) {\n      var frame = \"\",\n          sprite = null,\n          frameList,\n          i,\n          len;\n\n      switch (blockType) {\n        case \"treeAcacia\":\n        case \"treeBirch\":\n        case \"treeJungle\":\n        case \"treeOak\":\n        case \"treeSpruce\":\n          frame = \"log\" + blockType.substring(4);\n          break;\n        case \"stone\":\n          frame = \"cobblestone\";\n          break;\n        case \"oreCoal\":\n          frame = \"coal\";\n          break;\n        case \"oreDiamond\":\n          frame = \"diamond\";\n          break;\n        case \"oreIron\":\n          frame = \"ingotIron\";\n          break;\n        case \"oreLapis\":\n          frame = \"lapisLazuli\";\n          break;\n        case \"oreGold\":\n          frame = \"ingotGold\";\n          break;\n        case \"oreEmerald\":\n          frame = \"emerald\";\n          break;\n        case \"oreRedstone\":\n          frame = \"redstoneDust\";\n          break;\n        case \"grass\":\n          frame = \"dirt\";\n          break;\n        case \"wool_orange\":\n          frame = \"wool\";\n          break;\n        case \"tnt\":\n          frame = \"gunPowder\";\n          break;\n        default:\n          frame = blockType;\n          break;\n      }\n\n      var atlas = \"miniBlocks\";\n      var framePrefix = this.miniBlocks[frame][0];\n      var frameStart = this.miniBlocks[frame][1];\n      var frameEnd = this.miniBlocks[frame][2];\n      var xOffset = -10;\n      var yOffset = 0;\n\n      frameList = Phaser.Animation.generateFrameNames(framePrefix, frameStart, frameEnd, \"\", 3);\n\n      sprite = this.actionPlane.create(xOffset + 40 * x, yOffset + this.actionPlane.yOffset + 40 * y, atlas, \"\");\n      sprite.animations.add(\"animate\", frameList, 10, false);\n      return sprite;\n    }\n  }, {\n    key: \"playAnimationWithOffset\",\n    value: function playAnimationWithOffset(sprite, animationName, animationFrameTotal, startFrame) {\n      var rand = Math.trunc(Math.random() * animationFrameTotal) + startFrame;\n      this.playScaledSpeed(sprite.animations, animationName).setFrame(rand, true);\n    }\n  }, {\n    key: \"playRandomSheepAnimation\",\n    value: function playRandomSheepAnimation(sprite) {\n      var rand = Math.trunc(Math.random() * 20 + 1);\n\n      switch (rand) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n          //eat grass\n          sprite.play(\"idle\");\n          break;\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n          //look left\n          sprite.play(\"lookLeft\");\n          break;\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n          //look right\n          sprite.play(\"lookRight\");\n          break;\n        case 15:\n        case 16:\n        case 17:\n          //cam\n          sprite.play(\"lookAtCam\");\n          break;\n        case 18:\n        case 19:\n          //kick\n          sprite.play(\"kick\");\n          break;\n        case 20:\n          //idlePause\n          sprite.play(\"idlePause\");\n          break;\n        default:\n      }\n    }\n  }, {\n    key: \"playRandomCreeperAnimation\",\n    value: function playRandomCreeperAnimation(sprite) {\n      var rand = Math.trunc(this.yToIndex(Math.random()) + 1);\n\n      switch (rand) {\n        case 1:\n        case 2:\n        case 3:\n          //look left\n          sprite.play(\"lookLeft\");\n          break;\n        case 4:\n        case 5:\n        case 6:\n          //look right\n          sprite.play(\"lookRight\");\n          break;\n        case 7:\n        case 8:\n          //look at cam\n          sprite.play(\"lookAtCam\");\n          break;\n        case 9:\n        case 10:\n          //shuffle feet\n          sprite.play(\"idle\");\n          break;\n        default:\n      }\n    }\n  }, {\n    key: \"createBlock\",\n    value: function createBlock(plane, x, y, blockType) {\n      var _this23 = this;\n\n      var i,\n          sprite = null,\n          frameList,\n          atlas,\n          frame,\n          xOffset,\n          yOffset,\n          stillFrames;\n\n      switch (blockType) {\n        case \"treeAcacia\":\n        case \"treeBirch\":\n        case \"treeJungle\":\n        case \"treeOak\":\n        case \"treeSpruce\":\n          sprite = this.createBlock(plane, x, y, \"log\" + blockType.substring(4));\n          sprite.fluff = this.createBlock(this.fluffPlane, x, y, \"leaves\" + blockType.substring(4));\n\n          sprite.onBlockDestroy = function (logSprite) {\n            logSprite.fluff.animations.add(\"despawn\", Phaser.Animation.generateFrameNames(\"Leaves\", 0, 6, \"\", 0), 10, false).onComplete.add(function () {\n              _this23.toDestroy.push(logSprite.fluff);\n              logSprite.fluff.kill();\n            });\n\n            _this23.playScaledSpeed(logSprite.fluff.animations, \"despawn\");\n          };\n          break;\n\n        case \"sheep\":\n          var sFrames = 10;\n          // Facing Left: Eat Grass: 199-216\n          sprite = plane.create(-22 + 40 * x, -12 + 40 * y, \"sheep\", \"Sheep_199\");\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 199, 215, \"\", 0);\n          for (i = 0; i < sFrames; ++i) {\n            frameList.push(\"Sheep_215\");\n          }\n          sprite.animations.add(\"idle\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Look Right\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 184, 186, \"\", 0);\n          for (i = 0; i < sFrames; ++i) {\n            frameList.push(\"Sheep_186\");\n          }\n          frameList.push(\"Sheep_188\");\n          sprite.animations.add(\"lookRight\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Look Left\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 193, 195, \"\", 0);\n          for (i = 0; i < sFrames; ++i) {\n            frameList.push(\"Sheep_195\");\n          }\n          frameList.push(\"Sheep_197\");\n          sprite.animations.add(\"lookLeft\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Kick\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 217, 233, \"\", 0);\n          sprite.animations.add(\"kick\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Look At Camera\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 484, 485, \"\", 0);\n          for (i = 0; i < sFrames; ++i) {\n            frameList.push(\"Sheep_485\");\n          }\n          frameList.push(\"Sheep_486\");\n          sprite.animations.add(\"lookAtCam\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          frameList = [];\n          for (i = 0; i < 15; ++i) {\n            frameList.push(\"Sheep_215\");\n          }\n          sprite.animations.add(\"idlePause\", frameList, 15, false).onComplete.add(function () {\n            _this23.playRandomSheepAnimation(sprite);\n          });\n\n          // TODO(bjordan/gaallen) - update once updated Sheep.json\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 490, 491, \"\", 0);\n          stillFrames = Math.trunc(Math.random() * 3) + 3;\n          for (i = 0; i < stillFrames; ++i) {\n            frameList.push(\"Sheep_491\");\n          }\n          this.onAnimationStart(sprite.animations.add(\"face\", frameList, 2, true), function () {\n            _this23.audioPlayer.play(\"sheepBaa\");\n          });\n\n          frameList = Phaser.Animation.generateFrameNames(\"Sheep_\", 439, 455, \"\", 0);\n          for (i = 0; i < 3; ++i) {\n            frameList.push(\"Sheep_455\");\n          }\n\n          sprite.animations.add(\"used\", frameList, 15, true);\n          this.playAnimationWithOffset(sprite, \"idle\", 17, 199);\n          break;\n\n        case \"creeper\":\n          sprite = plane.create(-6 + 40 * x, 0 + plane.yOffset + 40 * y, \"creeper\", \"Creeper_053\");\n\n          frameList = Phaser.Animation.generateFrameNames(\"Creeper_\", 37, 51, \"\", 3);\n          sprite.animations.add(\"explode\", frameList, 10, false);\n\n          //Look Left\n          frameList = Phaser.Animation.generateFrameNames(\"Creeper_\", 4, 7, \"\", 3);\n          for (i = 0; i < 15; ++i) {\n            frameList.push(\"Creeper_007\");\n          }\n          frameList.push(\"Creeper_008\");\n          frameList.push(\"Creeper_009\");\n          frameList.push(\"Creeper_010\");\n          frameList.push(\"Creeper_011\");\n          sprite.animations.add(\"lookLeft\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Look Right\n          frameList = Phaser.Animation.generateFrameNames(\"Creeper_\", 16, 19, \"\", 3);\n          for (i = 0; i < 15; ++i) {\n            frameList.push(\"Creeper_019\");\n          }\n          frameList.push(\"Creeper_020\");\n          frameList.push(\"Creeper_021\");\n          frameList.push(\"Creeper_022\");\n          frameList.push(\"Creeper_023\");\n          sprite.animations.add(\"lookRight\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          //Look At Cam\n          frameList = Phaser.Animation.generateFrameNames(\"Creeper_\", 244, 245, \"\", 3);\n          for (i = 0; i < 15; ++i) {\n            frameList.push(\"Creeper_245\");\n          }\n          frameList.push(\"Creeper_246\");\n          sprite.animations.add(\"lookAtCam\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n\n          frameList = [];\n          for (i = 0; i < 15; ++i) {\n            frameList.push(\"Creeper_004\");\n          }\n          sprite.animations.add(\"idlePause\", frameList, 15, false).onComplete.add(function () {\n            _this23.playRandomCreeperAnimation(sprite);\n          });\n\n          frameList = Phaser.Animation.generateFrameNames(\"Creeper_\", 53, 59, \"\", 3);\n          stillFrames = Math.trunc(this.yToIndex(Math.random())) + 20;\n          for (i = 0; i < stillFrames; ++i) {\n            frameList.push(\"Creeper_004\");\n          }\n          sprite.animations.add(\"idle\", frameList, 15, false).onComplete.add(function () {\n            sprite.play(\"idlePause\");\n          });\n          this.playAnimationWithOffset(sprite, \"idle\", 8, 52);\n          break;\n\n        case \"cropWheat\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Wheat\", 0, 2, \"\", 0);\n          sprite.animations.add(\"idle\", frameList, 0.4, false);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"torch\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Torch\", 0, 23, \"\", 0);\n          sprite.animations.add(\"idle\", frameList, 15, true);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"water\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Water_\", 0, 5, \"\", 0);\n          sprite.animations.add(\"idle\", frameList, 5, true);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        //for placing wetland for crops in free play\n        case \"watering\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          sprite.kill();\n          this.toDestroy.push(sprite);\n          this.createBlock(this.groundPlane, x, y, \"farmlandWet\");\n          this.refreshGroundPlane();\n          break;\n\n        case \"lava\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Lava_\", 0, 5, \"\", 0);\n          sprite.animations.add(\"idle\", frameList, 5, true);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"lavaPop\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"LavaPop\", 1, 7, \"\", 2);\n          for (i = 0; i < 4; ++i) {\n            frameList.push(\"LavaPop07\");\n          }\n          frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"LavaPop\", 8, 13, \"\", 2));\n          for (i = 0; i < 3; ++i) {\n            frameList.push(\"LavaPop13\");\n          }\n          frameList = frameList.concat(Phaser.Animation.generateFrameNames(\"LavaPop\", 14, 30, \"\", 2));\n          for (i = 0; i < 8; ++i) {\n            frameList.push(\"LavaPop01\");\n          }\n          sprite.animations.add(\"idle\", frameList, 5, true);\n          this.playAnimationWithOffset(sprite, \"idle\", 29, 1);\n          break;\n\n        case \"fire\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Fire\", 0, 14, \"\", 2);\n          sprite.animations.add(\"idle\", frameList, 5, true);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"bubbles\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Bubbles\", 0, 14, \"\", 2);\n          sprite.animations.add(\"idle\", frameList, 5, true);\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"explosion\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"Explosion\", 0, 16, \"\", 1);\n          sprite.animations.add(\"idle\", frameList, 15, false).onComplete.add(function () {\n            _this23.toDestroy.push(sprite);\n            sprite.kill();\n          });\n          this.playScaledSpeed(sprite.animations, \"idle\");\n          break;\n\n        case \"door\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n\n          frameList = [];\n          var animationFrames = Phaser.Animation.generateFrameNames(\"Door\", 0, 3, \"\", 1);\n          for (var j = 0; j < 5; ++j) {\n            frameList.push(\"Door0\");\n          }\n          frameList = frameList.concat(animationFrames);\n\n          var animation = sprite.animations.add(\"open\", frameList, 5, false);\n          animation.enableUpdate = true;\n          //play when the door starts opening\n          animation.onUpdate.add(function () {\n            if (animation.frame === 1) {\n              _this23.audioPlayer.play(\"doorOpen\");\n            }\n          });\n          this.playScaledSpeed(sprite.animations, \"open\");\n          break;\n\n        case \"tnt\":\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          frameList = Phaser.Animation.generateFrameNames(\"TNTexplosion\", 0, 8, \"\", 0);\n          sprite.animations.add(\"explode\", frameList, 7, false).onComplete.add(function () {\n            _this23.playExplosionCloudAnimation([x, y]);\n            sprite.kill();\n            _this23.toDestroy.push(sprite);\n            _this23.actionPlaneBlocks[_this23.coordinatesToIndex([x, y])] = null;\n          });\n          break;\n\n        default:\n          atlas = this.blocks[blockType][0];\n          frame = this.blocks[blockType][1];\n          xOffset = this.blocks[blockType][2];\n          yOffset = this.blocks[blockType][3];\n          sprite = plane.create(xOffset + 40 * x, yOffset + plane.yOffset + 40 * y, atlas, frame);\n          break;\n      }\n\n      return sprite;\n    }\n  }, {\n    key: \"onAnimationEnd\",\n    value: function onAnimationEnd(animation, completionHandler) {\n      var signalBinding = animation.onComplete.add(function () {\n        signalBinding.detach();\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(animation, completionHandler) {\n      var signalBinding = animation.onStart.add(function () {\n        signalBinding.detach();\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"onAnimationLoopOnce\",\n    value: function onAnimationLoopOnce(animation, completionHandler) {\n      var signalBinding = animation.onLoop.add(function () {\n        signalBinding.detach();\n        completionHandler();\n      });\n    }\n  }, {\n    key: \"addResettableTween\",\n    value: function addResettableTween(sprite) {\n      var tween = this.game.add.tween(sprite);\n      this.resettableTweens.push(tween);\n      return tween;\n    }\n  }]);\n\n  return LevelView;\n})();\n\nexports[\"default\"] = LevelView;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2dhbWUvTGV2ZWxNVkMvTGV2ZWxWaWV3LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O2lDQUE0QixzQkFBc0I7Ozs7SUFFN0IsU0FBUztBQUNqQixXQURRLFNBQVMsQ0FDaEIsVUFBVSxFQUFFOzBCQURMLFNBQVM7O0FBRTFCLFFBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0FBQzdCLFFBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQztBQUMxQyxRQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUM7O0FBRTVCLFFBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDOztBQUV4QixRQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztBQUN6QixRQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztBQUN4QixRQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDOztBQUUvQixRQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztBQUN4QixRQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztBQUN6QixRQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztBQUN4QixRQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztBQUN2QixRQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQzs7QUFFckIsUUFBSSxDQUFDLFVBQVUsR0FBRztBQUNoQixZQUFNLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM1QixrQkFBWSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDbkMsWUFBTSxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDOUIsY0FBUSxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDaEMsY0FBUSxFQUFFLENBQUMsWUFBWSxFQUFFLEVB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QUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQzs7QUFFM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7OztBQUczQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMzQyxlQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQzs7QUFFM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDM0MsZUFBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7O0FBRTFDLFdBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO0FBQ3ZCLGlCQUFTLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO09BQzlCOzs7Ozs7OztBQVFELGVBQVMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUYsV0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUU7QUFDdEIsaUJB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LFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFNO0FBQy9JLGdCQUFLLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7T0FDL0IsQ0FBQyxDQUFDO0FBQ0gsVUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDbEksVUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDaEksVUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsU0FBUyxDQUFDLGtCQUFrQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDbkksVUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLHdCQUF3QixFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxL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QUFXLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFlBQU07QUFDNUUsa0JBQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7V0FDMUIsQ0FBQyxDQUFDOzs7QUFHSCxtQkFBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzNFLGVBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFO0FBQzVCLHFCQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1dBQzdCO0FBQ0QsbUJBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDNUIsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsWUFBTTtBQUMzRSxrQkFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztXQUMxQixDQUFDLENBQUM7OztBQUdILG1CQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDM0UsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsWUFBTTtBQUN2RSxrQkFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztXQUMxQixDQUFDLENBQUM7OztBQUdILG1CQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFB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QUssRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN4RixnQkFBTTtBQUFBLE9BQ1Q7O0FBRUQsYUFBTyxNQUFNLENBQUM7S0FDZjs7O1dBRWEsd0JBQUMsU0FBUyxFQUFFLGlCQUFpQixFQUFFO0FBQzNDLFVBQUksYUFBYSxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFlBQU07QUFDakQscUJBQWEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN2Qix5QkFBaUIsRUFBRSxDQUFDO09BQ3JCLENBQUMsQ0FBQztLQUNKOzs7V0FFZSwwQkFBQyxTQUFTLEVBQUUsaUJBQWlCLEVBQUU7QUFDN0MsVUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBTTtBQUM5QyxxQkFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3ZCLHlCQUFpQixFQUFFLENBQUM7T0FDckIsQ0FBQyxDQUFDO0tBQ0o7OztXQUVrQiw2QkFBQyxTQUFTLEVBQUUsaUJBQWlCLEVBQUU7QUFDaEQsVUFBSSxhQUFhLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBTTtBQUM3QyxxQkFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3ZCLHlCQUFpQixFQUFFLENBQUM7T0FDckIsQ0FBQyxDQUFDO0tBQ0o7OztXQUVpQiw0QkFBQyxNQUFNLEVBQUU7QUFDekIsVUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3hDLFVBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbEMsYUFBTyxLQUFLLENBQUM7S0FDZDs7O1NBbGdFa0IsU0FBUzs7O3FCQUFULFNBQVMiLCJmaWxlIjoiYnVpbGQvanMvY3JhZnQvZ2FtZS9MZXZlbE1WQy9MZXZlbFZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmFjaW5nRGlyZWN0aW9uIGZyb20gXCIuL0ZhY2luZ0RpcmVjdGlvbi5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMZXZlbFZpZXcge1xuICBjb25zdHJ1Y3Rvcihjb250cm9sbGVyKSB7XG4gICAgdGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcbiAgICB0aGlzLmF1ZGlvUGxheWVyID0gY29udHJvbGxlci5hdWRpb1BsYXllcjtcbiAgICB0aGlzLmdhbWUgPSBjb250cm9sbGVyLmdhbWU7XG5cbiAgICB0aGlzLmJhc2VTaGFkaW5nID0gbnVsbDtcblxuICAgIHRoaXMucGxheWVyU3ByaXRlID0gbnVsbDtcbiAgICB0aGlzLnBsYXllckdob3N0ID0gbnVsbDsgICAgICAgIC8vIFRoZSBnaG9zdCBpcyBhIGNvcHkgb2YgdGhlIHBsYXllciBzcHJpdGUgdGhhdCBzaXRzIG9uIHRvcCBvZiBldmVyeXRoaW5nIGF0IDIwJSBvcGFjaXR5LCBzbyB0aGUgcGxheWVyIGNhbiBnbyB1bmRlciB0cmVlcyBhbmQgc3RpbGwgYmUgc2Vlbi5cbiAgICB0aGlzLnNlbGVjdGlvbkluZGljYXRvciA9IG51bGw7XG5cbiAgICB0aGlzLmdyb3VuZFBsYW5lID0gbnVsbDtcbiAgICB0aGlzLnNoYWRpbmdQbGFuZSA9IG51bGw7XG4gICAgdGhpcy5hY3Rpb25QbGFuZSA9IG51bGw7XG4gICAgdGhpcy5mbHVmZlBsYW5lID0gbnVsbDtcbiAgICB0aGlzLmZvd1BsYW5lID0gbnVsbDtcblxuICAgIHRoaXMubWluaUJsb2NrcyA9IHtcbiAgICAgIFwiZGlydFwiOiBbXCJNaW5pYmxvY2tzXCIsIDAsIDVdLFxuICAgICAgXCJkaXJ0Q29hcnNlXCI6IFtcIk1pbmlibG9ja3NcIiwgNiwgMTFdLFxuICAgICAgXCJzYW5kXCI6IFtcIk1pbmlibG9ja3NcIiwgMTIsIDE3XSxcbiAgICAgIFwiZ3JhdmVsXCI6IFtcIk1pbmlibG9ja3NcIiwgMTgsIDIzXSxcbiAgICAgIFwiYnJpY2tzXCI6IFtcIk1pbmlibG9ja3NcIiwgMjQsIDI5XSxcbiAgICAgIFwibG9nQWNhY2lhXCI6IFtcIk1pbmlibG9ja3NcIiwgMzAsIDM1XSxcbiAgICAgIFwibG9nQmlyY2hcIjogW1wiTWluaWJsb2Nrc1wiLCAzNiwgNDFdLFxuICAgICAgXCJsb2dKdW5nbGVcIjogW1wiTWluaWJsb2Nrc1wiLCA0MiwgNDddLFxuICAgICAgXCJsb2dPYWtcIjogW1wiTWluaWJsb2Nrc1wiLCA0OCwgNTNdLFxuICAgICAgXCJsb2dTcHJ1Y2VcIjogW1wiTWluaWJsb2Nrc1wiLCA1NCwgNTldLFxuICAgICAgXCJwbGFua3NBY2FjaWFcIjogW1wiTWluaWJsb2Nrc1wiLCA2MCwgNjVdLFxuICAgICAgXCJwbGFua3NCaXJjaFwiOiBbXCJNaW5pYmxvY2tzXCIsIDY2LCA3MV0sXG4gICAgICBcInBsYW5rc0p1bmdsZVwiOiBbXCJNaW5pYmxvY2tzXCIsIDcyLCA3N10sXG4gICAgICBcInBsYW5rc09ha1wiOiBbXCJNaW5pYmxvY2tzXCIsIDc4LCA4M10sXG4gICAgICBcInBsYW5rc1NwcnVjZVwiOiBbXCJNaW5pYmxvY2tzXCIsIDg0LCA4OV0sXG4gICAgICBcImNvYmJsZXN0b25lXCI6IFtcIk1pbmlibG9ja3NcIiwgOTAsIDk1XSxcbiAgICAgIFwic2FuZHN0b25lXCI6IFtcIk1pbmlibG9ja3NcIiwgOTYsIDEwMV0sXG4gICAgICBcIndvb2xcIjogW1wiTWluaWJsb2Nrc1wiLCAxMDIsIDEwN10sXG4gICAgICBcInJlZHN0b25lRHVzdFwiOiBbXCJNaW5pYmxvY2tzXCIsIDEwOCwgMTEzXSxcbiAgICAgIFwibGFwaXNMYXp1bGlcIjogW1wiTWluaWJsb2Nrc1wiLCAxMTQsIDExOV0sXG4gICAgICBcImluZ290SXJvblwiOiBbXCJNaW5pYmxvY2tzXCIsIDEyMCwgMTI1XSxcbiAgICAgIFwiaW5nb3RHb2xkXCI6IFtcIk1pbmlibG9ja3NcIiwgMTI2LCAxMzFdLFxuICAgICAgXCJlbWVyYWxkXCI6IFtcIk1pbmlibG9ja3NcIiwgMTMyLCAxMzddLFxuICAgICAgXCJkaWFtb25kXCI6IFtcIk1pbmlibG9ja3NcIiwgMTM4LCAxNDNdLFxuICAgICAgXCJjb2FsXCI6IFtcIk1pbmlibG9ja3NcIiwgMTQ0LCAxNDldLFxuICAgICAgXCJidWNrZXRXYXRlclwiOiBbXCJNaW5pYmxvY2tzXCIsIDE1MCwgMTU1XSxcbiAgICAgIFwiYnVja2V0TGF2YVwiOiBbXCJNaW5pYmxvY2tzXCIsIDE1NiwgMTYxXSxcbiAgICAgIFwiZ3VuUG93ZGVyXCI6IFtcIk1pbmlibG9ja3NcIiwgMTYyLCAxNjddLFxuICAgICAgXCJ3aGVhdFwiOiBbXCJNaW5pYmxvY2tzXCIsIDE2OCwgMTczXSxcbiAgICAgIFwicG90YXRvXCI6IFtcIk1pbmlibG9ja3NcIiwgMTc0LCAxNzldLFxuICAgICAgXCJjYXJyb3RzXCI6IFtcIk1pbmlibG9ja3NcIiwgMTgwLCAxODVdLFxuXG4gICAgICBcInNoZWVwXCI6IFtcIk1pbmlibG9ja3NcIiwgMTAyLCAxMDddXG4gICAgfTtcblxuICAgIHRoaXMuYmxvY2tzID0ge1xuICAgICAgXCJiZWRyb2NrXCI6IFtcImJsb2Nrc1wiLCBcIkJlZHJvY2tcIiwgLTEzLCAwXSxcbiAgICAgIFwiYnJpY2tzXCI6IFtcImJsb2Nrc1wiLCBcIkJyaWNrc1wiLCAtMTMsIDBdLFxuICAgICAgXCJvcmVDb2FsXCI6IFtcImJsb2Nrc1wiLCBcIkNvYWxfT3JlXCIsIC0xMywgMF0sXG4gICAgICBcImRpcnRDb2Fyc2VcIjogW1wiYmxvY2tzXCIsIFwiQ29hcnNlX0RpcnRcIiwgLTEzLCAwXSxcbiAgICAgIFwiY29iYmxlc3RvbmVcIjogW1wiYmxvY2tzXCIsIFwiQ29iYmxlc3RvbmVcIiwgLTEzLCAwXSxcbiAgICAgIFwib3JlRGlhbW9uZFwiOiBbXCJibG9ja3NcIiwgXCJEaWFtb25kX09yZVwiLCAtMTMsIDBdLFxuICAgICAgXCJkaXJ0XCI6IFtcImJsb2Nrc1wiLCBcIkRpcnRcIiwgLTEzLCAwXSxcbiAgICAgIFwib3JlRW1lcmFsZFwiOiBbXCJibG9ja3NcIiwgXCJFbWVyYWxkX09yZVwiLCAtMTMsIDBdLFxuICAgICAgXCJmYXJtbGFuZFdldFwiOiBbXCJibG9ja3NcIiwgXCJGYXJtbGFuZF9XZXRcIiwgLTEzLCAwXSxcbiAgICAgIFwiZmxvd2VyRGFuZGVsaW9uXCI6IFtcImJsb2Nrc1wiLCBcIkZsb3dlcl9EYW5kZWxpb25cIiwgLTEzLCAwXSxcbiAgICAgIFwiZmxvd2VyT3hlZXllXCI6IFtcImJsb2Nrc1wiLCBcIkZsb3dlcl9PeGVleWVcIiwgLTEzLCAwXSxcbiAgICAgIFwiZmxvd2VyUm9zZVwiOiBbXCJibG9ja3NcIiwgXCJGbG93ZXJfUm9zZVwiLCAtMTMsIDBdLFxuICAgICAgXCJnbGFzc1wiOiBbXCJibG9ja3NcIiwgXCJHbGFzc1wiLCAtMTMsIDBdLFxuICAgICAgXCJvcmVHb2xkXCI6IFtcImJsb2Nrc1wiLCBcIkdvbGRfT3JlXCIsIC0xMywgMF0sXG4gICAgICBcImdyYXNzXCI6IFtcImJsb2Nrc1wiLCBcIkdyYXNzXCIsIC0xMywgMF0sXG4gICAgICBcImdyYXZlbFwiOiBbXCJibG9ja3NcIiwgXCJHcmF2ZWxcIiwgLTEzLCAwXSxcbiAgICAgIFwib3JlSXJvblwiOiBbXCJibG9ja3NcIiwgXCJJcm9uX09yZVwiLCAtMTMsIDBdLFxuICAgICAgXCJvcmVMYXBpc1wiOiBbXCJibG9ja3NcIiwgXCJMYXBpc19PcmVcIiwgLTEzLCAwXSxcbiAgICAgIFwibGF2YVwiOiBbXCJibG9ja3NcIiwgXCJMYXZhXzBcIiwgLTEzLCAwXSxcbiAgICAgIFwibG9nQWNhY2lhXCI6IFtcImJsb2Nrc1wiLCBcIkxvZ19BY2FjaWFcIiwgLTEzLCAwXSxcbiAgICAgIFwibG9nQmlyY2hcIjogW1wiYmxvY2tzXCIsIFwiTG9nX0JpcmNoXCIsIC0xMywgMF0sXG4gICAgICBcImxvZ0p1bmdsZVwiOiBbXCJibG9ja3NcIiwgXCJMb2dfSnVuZ2xlXCIsIC0xMywgMF0sXG4gICAgICBcImxvZ09ha1wiOiBbXCJibG9ja3NcIiwgXCJMb2dfT2FrXCIsIC0xMywgMF0sXG4gICAgICBcImxvZ1NwcnVjZVwiOiBbXCJibG9ja3NcIiwgXCJMb2dfU3BydWNlXCIsIC0xMywgMF0sXG4gICAgICAvL1wib2JzaWRpYW5cIjogW1wiYmxvY2tzXCIsIFwiT2JzaWRpYW5cIiwgLTEzLCAwXSxcbiAgICAgIFwicGxhbmtzQWNhY2lhXCI6IFtcImJsb2Nrc1wiLCBcIlBsYW5rc19BY2FjaWFcIiwgLTEzLCAwXSxcbiAgICAgIFwicGxhbmtzQmlyY2hcIjogW1wiYmxvY2tzXCIsIFwiUGxhbmtzX0JpcmNoXCIsIC0xMywgMF0sXG4gICAgICBcInBsYW5rc0p1bmdsZVwiOiBbXCJibG9ja3NcIiwgXCJQbGFua3NfSnVuZ2xlXCIsIC0xMywgMF0sXG4gICAgICBcInBsYW5rc09ha1wiOiBbXCJibG9ja3NcIiwgXCJQbGFua3NfT2FrXCIsIC0xMywgMF0sXG4gICAgICBcInBsYW5rc1NwcnVjZVwiOiBbXCJibG9ja3NcIiwgXCJQbGFua3NfU3BydWNlXCIsIC0xMywgMF0sXG4gICAgICBcIm9yZVJlZHN0b25lXCI6IFtcImJsb2Nrc1wiLCBcIlJlZHN0b25lX09yZVwiLCAtMTMsIDBdLFxuICAgICAgXCJzYW5kXCI6IFtcImJsb2Nrc1wiLCBcIlNhbmRcIiwgLTEzLCAwXSxcbiAgICAgIFwic2FuZHN0b25lXCI6IFtcImJsb2Nrc1wiLCBcIlNhbmRzdG9uZVwiLCAtMTMsIDBdLFxuICAgICAgXCJzdG9uZVwiOiBbXCJibG9ja3NcIiwgXCJTdG9uZVwiLCAtMTMsIDBdLFxuICAgICAgXCJ0bnRcIjogW1widG50XCIsIFwiVE5UZXhwbG9zaW9uMFwiLCAtODAsIC01OF0sXG4gICAgICBcIndhdGVyXCI6IFtcImJsb2Nrc1wiLCBcIldhdGVyXzBcIiwgLTEzLCAwXSxcbiAgICAgIFwid29vbFwiOiBbXCJibG9ja3NcIiwgXCJXb29sX1doaXRlXCIsIC0xMywgMF0sXG4gICAgICBcIndvb2xfb3JhbmdlXCI6IFtcImJsb2Nrc1wiLCBcIldvb2xfT3JhbmdlXCIsIC0xMywgMF0sXG5cbiAgICAgIFwibGVhdmVzQWNhY2lhXCI6IFtcImxlYXZlc0FjYWNpYVwiLCBcIkxlYXZlczBcIiwgLTQyLCA4MF0sXG4gICAgICBcImxlYXZlc0JpcmNoXCI6IFtcImxlYXZlc0JpcmNoXCIsIFwiTGVhdmVzMFwiLCAtMTAwLCAtMTBdLFxuICAgICAgXCJsZWF2ZXNKdW5nbGVcIjogW1wibGVhdmVzSnVuZ2xlXCIsIFwiTGVhdmVzMFwiLCAtNjksIDQzXSxcbiAgICAgIFwibGVhdmVzT2FrXCI6IFtcImxlYXZlc09ha1wiLCBcIkxlYXZlczBcIiwgLTEwMCwgMF0sXG4gICAgICBcImxlYXZlc1NwcnVjZVwiOiBbXCJsZWF2ZXNTcHJ1Y2VcIiwgXCJMZWF2ZXMwXCIsIC03NiwgNjBdLFxuXG4gICAgICBcIndhdGVyaW5nXCIgOiBbXCJibG9ja3NcIiwgXCJXYXRlcl8wXCIsIC0xMywgMF0sXG4gICAgICBcImNyb3BXaGVhdFwiOiBbXCJibG9ja3NcIiwgXCJXaGVhdDBcIiwgLTEzLCAwXSxcbiAgICAgIFwidG9yY2hcIjogW1widG9yY2hcIiwgXCJUb3JjaDBcIiwgLTEzLCAwXSxcblxuICAgICAgXCJ0YWxsR3Jhc3NcIjogW1widGFsbEdyYXNzXCIsIFwiXCIsIC0xMywgMF0sXG5cbiAgICAgIFwibGF2YVBvcFwiOiBbXCJsYXZhUG9wXCIsIFwiTGF2YVBvcDAxXCIsIC0xMywgMF0sXG4gICAgICBcImZpcmVcIjogW1wiZmlyZVwiLCBcIlwiLCAtMTEsIDEzNV0sXG4gICAgICBcImJ1YmJsZXNcIjogW1wiYnViYmxlc1wiLCBcIlwiLCAtMTEsIDEzNV0sXG4gICAgICBcImV4cGxvc2lvblwiOiBbXCJleHBsb3Npb25cIiwgXCJcIiwgLTcwLCA2MF0sXG5cbiAgICAgIFwiZG9vclwiOiBbXCJkb29yXCIsIFwiXCIsIC0xMiwgLTE1XSxcblxuICAgICAgXCJyYWlsc0JvdHRvbUxlZnRcIjogICAgICAgICBbXCJibG9ja3NcIiwgXCJSYWlsc19Cb3R0b21MZWZ0XCIsIC0xMywgMF0sXG4gICAgICBcInJhaWxzQm90dG9tUmlnaHRcIjogICAgICAgIFtcImJsb2Nrc1wiLCBcIlJhaWxzX0JvdHRvbVJpZ2h0XCIsIC0xMywgMF0sXG4gICAgICBcInJhaWxzSG9yaXpvbnRhbFwiOiAgICAgICAgIFtcImJsb2Nrc1wiLCBcIlJhaWxzX0hvcml6b250YWxcIiwgLTEzLCAwXSxcbiAgICAgIFwicmFpbHNUb3BMZWZ0XCI6ICAgICAgICAgICAgW1wiYmxvY2tzXCIsIFwiUmFpbHNfVG9wTGVmdFwiLCAtMTMsIDBdLFxuICAgICAgXCJyYWlsc1RvcFJpZ2h0XCI6ICAgICAgICAgICBbXCJibG9ja3NcIiwgXCJSYWlsc19Ub3BSaWdodFwiLCAtMTMsIDBdLFxuICAgICAgXCJyYWlsc1VucG93ZXJlZEhvcml6b250YWxcIjpbXCJibG9ja3NcIiwgXCJSYWlsc19VbnBvd2VyZWRIb3Jpem9udGFsXCIsIC0xMywgMF0sXG4gICAgICBcInJhaWxzVW5wb3dlcmVkVmVydGljYWxcIjogIFtcImJsb2Nrc1wiLCBcIlJhaWxzX1VucG93ZXJlZFZlcnRpY2FsXCIsIC0xMywgMF0sXG4gICAgICBcInJhaWxzVmVydGljYWxcIjogICAgICAgICAgIFtcImJsb2Nrc1wiLCBcIlJhaWxzX1ZlcnRpY2FsXCIsIC0xMywgLTBdLFxuICAgICAgXCJyYWlsc1Bvd2VyZWRIb3Jpem9udGFsXCI6ICBbXCJibG9ja3NcIiwgXCJSYWlsc19Qb3dlcmVkSG9yaXpvbnRhbFwiLCAtMTMsIDBdLFxuICAgICAgXCJyYWlsc1Bvd2VyZWRWZXJ0aWNhbFwiOiAgICBbXCJibG9ja3NcIiwgXCJSYWlsc19Qb3dlcmVkVmVydGljYWxcIiwgLTEzLCAwXSxcbiAgICAgIFwicmFpbHNSZWRzdG9uZVRvcmNoXCI6ICAgICAgW1wiYmxvY2tzXCIsIFwiUmFpbHNfUmVkc3RvbmVUb3JjaFwiLCAtMTIsIDldLFxuICAgIH07XG5cbiAgICB0aGlzLmFjdGlvblBsYW5lQmxvY2tzID0gW107XG4gICAgdGhpcy50b0Rlc3Ryb3kgPSBbXTtcbiAgICB0aGlzLnJlc2V0dGFibGVUd2VlbnMgPSBbXTtcbiAgfVxuXG4gIHlUb0luZGV4KHkpIHtcbiAgICByZXR1cm4gdGhpcy5jb250cm9sbGVyLmxldmVsTW9kZWwueVRvSW5kZXgoeSk7XG4gIH1cblxuICBjcmVhdGUobGV2ZWxNb2RlbCkge1xuICAgIHRoaXMuY3JlYXRlUGxhbmVzKCk7XG4gICAgdGhpcy5yZXNldChsZXZlbE1vZGVsKTtcbiAgfVxuXG4gIHJlc2V0KGxldmVsTW9kZWwpIHtcbiAgICBsZXQgcGxheWVyID0gbGV2ZWxNb2RlbC5wbGF5ZXI7XG5cbiAgICB0aGlzLnJlc2V0dGFibGVUd2VlbnMuZm9yRWFjaCgodHdlZW4pID0+IHtcbiAgICAgIHR3ZWVuLnN0b3AoZmFsc2UpO1xuICAgIH0pO1xuICAgIHRoaXMucmVzZXR0YWJsZVR3ZWVucy5sZW5ndGggPSAwO1xuXG4gICAgdGhpcy5yZXNldFBsYW5lcyhsZXZlbE1vZGVsKTtcbiAgICB0aGlzLnByZXBhcmVQbGF5ZXJTcHJpdGUocGxheWVyLm5hbWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuc3RvcCgpO1xuICAgIHRoaXMudXBkYXRlU2hhZGluZ1BsYW5lKGxldmVsTW9kZWwuc2hhZGluZ1BsYW5lKTtcbiAgICB0aGlzLnVwZGF0ZUZvd1BsYW5lKGxldmVsTW9kZWwuZm93UGxhbmUpO1xuICAgIHRoaXMuc2V0UGxheWVyUG9zaXRpb24ocGxheWVyLnBvc2l0aW9uWzBdLCBwbGF5ZXIucG9zaXRpb25bMV0sIHBsYXllci5pc09uQmxvY2spO1xuICAgIHRoaXMuc2V0U2VsZWN0aW9uSW5kaWNhdG9yUG9zaXRpb24ocGxheWVyLnBvc2l0aW9uWzBdLCBwbGF5ZXIucG9zaXRpb25bMV0pO1xuICAgIHRoaXMuc2VsZWN0aW9uSW5kaWNhdG9yLnZpc2libGUgPSB0cnVlO1xuICAgIHRoaXMucGxheUlkbGVBbmltYXRpb24ocGxheWVyLnBvc2l0aW9uLCBwbGF5ZXIuZmFjaW5nLCBwbGF5ZXIuaXNPbkJsb2NrKTtcblxuICAgIGlmICh0aGlzLmNvbnRyb2xsZXIuZm9sbG93aW5nUGxheWVyKCkpIHtcbiAgICAgIHRoaXMuZ2FtZS53b3JsZC5zZXRCb3VuZHMoMCwgMCwgbGV2ZWxNb2RlbC5wbGFuZVdpZHRoICogNDAsIGxldmVsTW9kZWwucGxhbmVIZWlnaHQgKiA0MCk7XG4gICAgICB0aGlzLmdhbWUuY2FtZXJhLmZvbGxvdyh0aGlzLnBsYXllclNwcml0ZSk7XG4gICAgICB0aGlzLmdhbWUud29ybGQuc2NhbGUueCA9IDE7XG4gICAgICB0aGlzLmdhbWUud29ybGQuc2NhbGUueSA9IDE7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIHZhciBpO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IHRoaXMudG9EZXN0cm95Lmxlbmd0aDsgKytpKSB7XG4gICAgICB0aGlzLnRvRGVzdHJveVtpXS5kZXN0cm95KCk7XG4gICAgfVxuICAgIHRoaXMudG9EZXN0cm95ID0gW107XG5cbiAgICBpZiAodGhpcy5wbGF5ZXJHaG9zdCkge1xuICAgICAgdGhpcy5wbGF5ZXJHaG9zdC5mcmFtZSA9IHRoaXMucGxheWVyU3ByaXRlLmZyYW1lO1xuICAgICAgdGhpcy5wbGF5ZXJHaG9zdC56ID0gMTAwMDtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgdGhpcy5hY3Rpb25QbGFuZS5zb3J0KCdzb3J0T3JkZXInKTtcbiAgICB0aGlzLmZsdWZmUGxhbmUuc29ydCgneicpO1xuICB9XG5cbiAgZ2V0RGlyZWN0aW9uTmFtZShmYWNpbmcpIHtcbiAgICB2YXIgZGlyZWN0aW9uO1xuXG4gICAgc3dpdGNoIChmYWNpbmcpIHtcbiAgICAgIGNhc2UgRmFjaW5nRGlyZWN0aW9uLlVwOlxuICAgICAgICBkaXJlY3Rpb24gPSBcIl91cFwiO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBGYWNpbmdEaXJlY3Rpb24uUmlnaHQ6XG4gICAgICAgIGRpcmVjdGlvbiA9IFwiX3JpZ2h0XCI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEZhY2luZ0RpcmVjdGlvbi5Eb3duOlxuICAgICAgICBkaXJlY3Rpb24gPSBcIl9kb3duXCI7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEZhY2luZ0RpcmVjdGlvbi5MZWZ0OlxuICAgICAgICBkaXJlY3Rpb24gPSBcIl9sZWZ0XCI7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiBkaXJlY3Rpb247XG4gIH1cblxuICB1cGRhdGVQbGF5ZXJEaXJlY3Rpb24ocG9zaXRpb24sIGZhY2luZykge1xuICAgIGxldCBkaXJlY3Rpb24gPSB0aGlzLmdldERpcmVjdGlvbk5hbWUoZmFjaW5nKTtcblxuICAgIHRoaXMuc2V0U2VsZWN0aW9uSW5kaWNhdG9yUG9zaXRpb24ocG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdKTtcbiAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVcIiArIGRpcmVjdGlvbik7XG4gIH1cblxuICBwbGF5UGxheWVyQW5pbWF0aW9uKGFuaW1hdGlvbk5hbWUsIHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaykge1xuICAgIGxldCBkaXJlY3Rpb24gPSB0aGlzLmdldERpcmVjdGlvbk5hbWUoZmFjaW5nKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHBvc2l0aW9uWzFdKSArIDU7XG5cbiAgICBsZXQgYW5pbU5hbWUgPSBhbmltYXRpb25OYW1lICsgZGlyZWN0aW9uO1xuICAgIHJldHVybiB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBhbmltTmFtZSk7XG4gIH1cblxuICBwbGF5SWRsZUFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2spIHtcbiAgICB0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJpZGxlXCIsIHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jayk7XG4gIH1cblxuICBzY2FsZVNob3dXaG9sZVdvcmxkKGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdmFyIFtzY2FsZVgsIHNjYWxlWV0gPSB0aGlzLmNvbnRyb2xsZXIuc2NhbGVGcm9tT3JpZ2luYWwoKTtcbiAgICB2YXIgc2NhbGVUd2VlbiA9IHRoaXMuYWRkUmVzZXR0YWJsZVR3ZWVuKHRoaXMuZ2FtZS53b3JsZC5zY2FsZSkudG8oe1xuICAgICAgeDogMSAvIHNjYWxlWCxcbiAgICAgIHk6IDEgLyBzY2FsZVlcbiAgICB9LCAxMDAwLCBQaGFzZXIuRWFzaW5nLkV4cG9uZW50aWFsLk91dCk7XG5cbiAgICB0aGlzLmdhbWUuY2FtZXJhLnVuZm9sbG93KCk7XG5cbiAgICB2YXIgcG9zaXRpb25Ud2VlbiA9IHRoaXMuYWRkUmVzZXR0YWJsZVR3ZWVuKHRoaXMuZ2FtZS5jYW1lcmEpLnRvKHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwXG4gICAgfSwgMTAwMCwgUGhhc2VyLkVhc2luZy5FeHBvbmVudGlhbC5PdXQpO1xuXG4gICAgc2NhbGVUd2Vlbi5vbkNvbXBsZXRlLmFkZE9uY2UoKCkgPT4ge1xuICAgICAgY29tcGxldGlvbkhhbmRsZXIoKTtcbiAgICB9KTtcblxuICAgIHBvc2l0aW9uVHdlZW4uc3RhcnQoKTtcbiAgICBzY2FsZVR3ZWVuLnN0YXJ0KCk7XG4gIH1cblxuICBwbGF5U3VjY2Vzc0FuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdGhpcy5jb250cm9sbGVyLmRlbGF5QnkoMjUwLCAoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJzdWNjZXNzXCIpO1xuICAgICAgdGhpcy5vbkFuaW1hdGlvbkVuZCh0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJjZWxlYnJhdGVcIiwgcG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrKSwgKCkgPT4ge1xuICAgICAgICBjb21wbGV0aW9uSGFuZGxlcigpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5RmFpbHVyZUFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdGhpcy5jb250cm9sbGVyLmRlbGF5QnkoNTAwLCAoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJmYWlsdXJlXCIpO1xuICAgICAgdGhpcy5vbkFuaW1hdGlvbkVuZCh0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJmYWlsXCIsIHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jayksICgpID0+IHtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyLmRlbGF5QnkoMTQwMCwgY29tcGxldGlvbkhhbmRsZXIpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5QnVtcEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2spIHtcbiAgICB2YXIgYW5pbWF0aW9uID0gdGhpcy5wbGF5UGxheWVyQW5pbWF0aW9uKFwiYnVtcFwiLCBwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2spO1xuICAgIGFuaW1hdGlvbi5vbkNvbXBsZXRlLmFkZCgoKT0+e1xuICAgICAgdGhpcy5wbGF5SWRsZUFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2spO1xuICAgIH0pO1xuICAgIHJldHVybiBhbmltYXRpb247XG4gIH1cblxuICBwbGF5RHJvd25GYWlsdXJlQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICAgIHZhciBzcHJpdGUsXG4gICAgICAgICAgdHdlZW47XG5cbiAgICAgIHRoaXMucGxheVBsYXllckFuaW1hdGlvbihcImZhaWxcIiwgcG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrKTtcbiAgICAgIHRoaXMuY3JlYXRlQmxvY2sodGhpcy5mbHVmZlBsYW5lLCBwb3NpdGlvblswXSwgcG9zaXRpb25bMV0sIFwiYnViYmxlc1wiKTtcblxuICAgICAgc3ByaXRlID0gdGhpcy5mbHVmZlBsYW5lLmNyZWF0ZSgwLCAwLCBcImZpbmlzaE92ZXJsYXlcIik7XG4gICAgICB2YXIgW3NjYWxlWCwgc2NhbGVZXSA9IHRoaXMuY29udHJvbGxlci5zY2FsZUZyb21PcmlnaW5hbCgpO1xuICAgICAgc3ByaXRlLnNjYWxlLnggPSBzY2FsZVg7XG4gICAgICBzcHJpdGUuc2NhbGUueSA9IHNjYWxlWTtcbiAgICAgIHNwcml0ZS5hbHBoYSA9IDA7XG4gICAgICBpZiAodGhpcy5jb250cm9sbGVyLmNhblVzZVRpbnRzKCkpIHtcbiAgICAgICAgc3ByaXRlLnRpbnQgPSAweDMyNGJmZjtcbiAgICAgIH1cblxuICAgICAgdHdlZW4gPSB0aGlzLmFkZFJlc2V0dGFibGVUd2VlbihzcHJpdGUpLnRvKHtcbiAgICAgICAgICBhbHBoYTogMC41LFxuICAgICAgfSwgMjAwLCBQaGFzZXIuRWFzaW5nLkxpbmVhci5Ob25lKTtcblxuICAgICAgdHdlZW4ub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgICB9KTtcblxuICAgICAgdHdlZW4uc3RhcnQoKTtcbiAgfVxuXG4gIHBsYXlCdXJuSW5MYXZhQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB2YXIgc3ByaXRlLFxuICAgICAgICB0d2VlbjtcblxuICAgIHRoaXMucGxheVBsYXllckFuaW1hdGlvbihcImp1bXBVcFwiLCBwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2spO1xuICAgIHRoaXMuY3JlYXRlQmxvY2sodGhpcy5mbHVmZlBsYW5lLCBwb3NpdGlvblswXSwgcG9zaXRpb25bMV0sIFwiZmlyZVwiKTtcblxuICAgIHNwcml0ZSA9IHRoaXMuZmx1ZmZQbGFuZS5jcmVhdGUoMCwgMCwgXCJmaW5pc2hPdmVybGF5XCIpO1xuICAgIHZhciBbc2NhbGVYLCBzY2FsZVldID0gdGhpcy5jb250cm9sbGVyLnNjYWxlRnJvbU9yaWdpbmFsKCk7XG4gICAgc3ByaXRlLnNjYWxlLnggPSBzY2FsZVg7XG4gICAgc3ByaXRlLnNjYWxlLnkgPSBzY2FsZVk7XG4gICAgc3ByaXRlLmFscGhhID0gMDtcbiAgICBpZiAodGhpcy5jb250cm9sbGVyLmNhblVzZVRpbnRzKCkpIHtcbiAgICAgIHNwcml0ZS50aW50ID0gMHhkMTU4MGQ7XG4gICAgfVxuXG4gICAgdHdlZW4gPSB0aGlzLmFkZFJlc2V0dGFibGVUd2VlbihzcHJpdGUpLnRvKHtcbiAgICAgIGFscGhhOiAwLjUsXG4gICAgfSwgMjAwLCBQaGFzZXIuRWFzaW5nLkxpbmVhci5Ob25lKTtcblxuICAgIHR3ZWVuLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfSk7XG5cbiAgICB0d2Vlbi5zdGFydCgpO1xuICB9XG5cbiAgcGxheURlc3Ryb3lUbnRBbmltYXRpb24ocG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrLCB0bnRBcnJheSAsIG5ld1NoYWRpbmdQbGFuZURhdGEsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdmFyIGJsb2NrLFxuICAgICAgICBsYXN0QW5pbWF0aW9uO1xuICAgIGlmICh0bnRBcnJheS5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiZnVzZVwiKTtcbiAgICBmb3IodmFyIHRudCBpbiB0bnRBcnJheSkge1xuICAgICAgICBibG9jayA9IHRoaXMuYWN0aW9uUGxhbmVCbG9ja3NbdGhpcy5jb29yZGluYXRlc1RvSW5kZXgodG50QXJyYXlbdG50XSldO1xuICAgICAgICBsYXN0QW5pbWF0aW9uID0gdGhpcy5wbGF5U2NhbGVkU3BlZWQoYmxvY2suYW5pbWF0aW9ucywgXCJleHBsb2RlXCIpO1xuICAgIH1cblxuICAgIHRoaXMub25BbmltYXRpb25FbmQobGFzdEFuaW1hdGlvbiwgKCkgPT4ge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiZXhwbG9kZVwiKTtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfSk7XG4gIH1cblxuXG4gIHBsYXlDcmVlcGVyRXhwbG9kZUFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB0aGlzLmNvbnRyb2xsZXIuZGVsYXlCeSgxODAsICgpID0+IHtcbiAgICAgIC8vdGhpcy5vbkFuaW1hdGlvbkxvb3BPbmNlKFxuICAgICAgdGhpcy5wbGF5UGxheWVyQW5pbWF0aW9uKFwiYnVtcFwiLCBwb3NpdGlvbiwgZmFjaW5nLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAvL2FkZCBjcmVlcGVyIHdpbmR1cCBzb3VuZFxuICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJmdXNlXCIpO1xuICAgICAgICB0aGlzLnBsYXlFeHBsb2RpbmdDcmVlcGVyQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgaXNPbkJsb2NrLCBjb21wbGV0aW9uSGFuZGxlciwgdGhpcyk7XG5cbiAgICAgICAgdGhpcy5jb250cm9sbGVyLmRlbGF5QnkoMjAwLCAoKT0+e1xuICAgICAgICAgIHRoaXMub25BbmltYXRpb25Mb29wT25jZSh0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJqdW1wVXBcIiwgcG9zaXRpb24sIGZhY2luZywgZmFsc2UpLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnBsYXlJZGxlQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5RXhwbG9kaW5nQ3JlZXBlckFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICBsZXQgZGlyZWN0aW9uID0gdGhpcy5nZXREaXJlY3Rpb25OYW1lKGZhY2luZyk7XG5cbiAgICBsZXQgYmxvY2tJbmRleCA9ICh0aGlzLnlUb0luZGV4KGRlc3Ryb3lQb3NpdGlvblsxXSkpICsgZGVzdHJveVBvc2l0aW9uWzBdO1xuICAgIGxldCBibG9ja1RvRXhwbG9kZSA9IHRoaXMuYWN0aW9uUGxhbmVCbG9ja3NbYmxvY2tJbmRleF07XG5cbiAgICB2YXIgY3JlZXBlckV4cGxvZGVBbmltYXRpb24gPSBibG9ja1RvRXhwbG9kZS5hbmltYXRpb25zLmdldEFuaW1hdGlvbihcImV4cGxvZGVcIik7XG4gICAgY3JlZXBlckV4cGxvZGVBbmltYXRpb24ub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgdmFyIGJvcmRlcmluZ1Bvc2l0aW9ucztcbiAgICAgIGJsb2NrVG9FeHBsb2RlLmtpbGwoKTtcbiAgICAgIHRoaXMucGxheUV4cGxvc2lvbkFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGlzT25CbG9jaywgKCkgPT4ge1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIuZGVsYXlCeSgxMDAsICgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXlGYWlsdXJlQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGZhbHNlLCBjb21wbGV0aW9uSGFuZGxlcik7XG4gICAgICAgIH0pO1xuICAgICAgfSwgZmFsc2UpO1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiZXhwbG9kZVwiKTtcbiAgICAgIHRoaXMucGxheUV4cGxvc2lvbkNsb3VkQW5pbWF0aW9uKGRlc3Ryb3lQb3NpdGlvbik7XG4gICAgfSk7XG5cbiAgICBjcmVlcGVyRXhwbG9kZUFuaW1hdGlvbi5wbGF5KCk7XG4gIH1cblxuICBwbGF5RXhwbG9zaW9uQ2xvdWRBbmltYXRpb24ocG9zaXRpb24pe1xuICAgIHRoaXMuY3JlYXRlQmxvY2sodGhpcy5mbHVmZlBsYW5lLCBwb3NpdGlvblswXSwgcG9zaXRpb25bMV0sIFwiZXhwbG9zaW9uXCIpO1xuICB9XG5cblxuICBjb29yZGluYXRlc1RvSW5kZXgoY29vcmRpbmF0ZXMpIHtcbiAgICByZXR1cm4gKHRoaXMueVRvSW5kZXgoY29vcmRpbmF0ZXNbMV0pKSArIGNvb3JkaW5hdGVzWzBdO1xuICB9XG5cbiAgcGxheU1pbmVjYXJ0VHVybkFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCB0dXJuRGlyZWN0aW9uKSB7XG4gICAgdmFyIGFuaW1hdGlvbiA9IHRoaXMucGxheVBsYXllckFuaW1hdGlvbihcIm1pbmVDYXJ0X3R1cm5cIiArIHR1cm5EaXJlY3Rpb24sIHBvc2l0aW9uLCBGYWNpbmdEaXJlY3Rpb24uRG93biwgZmFsc2UpO1xuICAgIHJldHVybiBhbmltYXRpb247XG4gIH1cblxuICBwbGF5TWluZWNhcnRNb3ZlRm9yd2FyZEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCBuZXh0UG9zaXRpb24sIHNwZWVkKSB7XG4gICAgdmFyIGFuaW1hdGlvbixcbiAgICAgICAgdHdlZW47XG5cbiAgICAvL2lmIHdlIGxvb3AgdGhlIHNmeCB0aGF0IG1pZ2h0IGJlIGJldHRlcj9cbiAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJtaW5lY2FydFwiKTtcbiAgICB0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJtaW5lQ2FydFwiLHBvc2l0aW9uLCBmYWNpbmcsIGZhbHNlKTtcbiAgICB0d2VlbiA9IHRoaXMuYWRkUmVzZXR0YWJsZVR3ZWVuKHRoaXMucGxheWVyU3ByaXRlKS50byh7XG4gICAgICB4OiAoLTE4ICsgNDAgKiBuZXh0UG9zaXRpb25bMF0pLFxuICAgICAgeTogKC0zMiArIDQwICogbmV4dFBvc2l0aW9uWzFdKSxcbiAgICB9LCBzcGVlZCwgUGhhc2VyLkVhc2luZy5MaW5lYXIuTm9uZSk7XG4gICAgdHdlZW4uc3RhcnQoKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KG5leHRQb3NpdGlvblsxXSkgKyA1O1xuXG4gICAgcmV0dXJuIHR3ZWVuO1xuICB9XG5cblxuICBhY3RpdmF0ZVVucG93ZXJlZFJhaWxzKHVucG93ZXJlZFJhaWxzKSB7XG4gICAgZm9yKHZhciByYWlsSW5kZXggPSAwOyByYWlsSW5kZXggPCB1bnBvd2VyZWRSYWlscy5sZW5ndGg7IHJhaWxJbmRleCArPSAyKSB7XG4gICAgICB2YXIgcmFpbCA9IHVucG93ZXJlZFJhaWxzW3JhaWxJbmRleCArIDFdO1xuICAgICAgdmFyIHBvc2l0aW9uID0gdW5wb3dlcmVkUmFpbHNbcmFpbEluZGV4XTtcbiAgICAgIHRoaXMuY3JlYXRlQWN0aW9uUGxhbmVCbG9jayhwb3NpdGlvbiwgcmFpbCk7XG4gICAgfVxuICB9XG5cblxuXG4gIHBsYXlNaW5lY2FydEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCBtaW5lY2FydFRyYWNrLCB1bnBvd2VyZWRSYWlscylcbiAge1xuICAgIHZhciBhbmltYXRpb247XG4gICAgdGhpcy50cmFjayA9IG1pbmVjYXJ0VHJhY2s7XG4gICAgdGhpcy5pID0gMDtcblxuICAgIC8vc3RhcnQgYXQgMywyXG4gICAgdGhpcy5zZXRQbGF5ZXJQb3NpdGlvbigzLDIsIGlzT25CbG9jayk7XG4gICAgcG9zaXRpb24gPSBbMywyXTtcblxuICAgIGFuaW1hdGlvbiA9IHRoaXMucGxheUxldmVsRW5kQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIsIGZhbHNlKTtcblxuICAgIGFuaW1hdGlvbi5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICB0aGlzLmFjdGl2YXRlVW5wb3dlcmVkUmFpbHModW5wb3dlcmVkUmFpbHMpO1xuICAgICAgdGhpcy5wbGF5VHJhY2socG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrLCBjb21wbGV0aW9uSGFuZGxlciwgbWluZWNhcnRUcmFjayk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5VHJhY2socG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrLCBjb21wbGV0aW9uSGFuZGxlciwgbWluZWNhcnRUcmFjaylcbiAge1xuICAgIGlmKHRoaXMuaSA8IHRoaXMudHJhY2subGVuZ3RoKSB7XG4gICAgICB2YXIgZGlyZWN0aW9uLFxuICAgICAgICAgIGFycmF5ZGlyZWN0aW9uID0gdGhpcy50cmFja1t0aGlzLmldWzBdLFxuICAgICAgICAgIG5leHRQb3NpdGlvbiA9IHRoaXMudHJhY2tbdGhpcy5pXVsxXSxcbiAgICAgICAgICBzcGVlZCA9IHRoaXMudHJhY2tbdGhpcy5pXVszXTtcbiAgICAgIGZhY2luZyA9IHRoaXMudHJhY2tbdGhpcy5pXVsyXTtcblxuICAgICAgLy90dXJuXG4gICAgICBpZihhcnJheWRpcmVjdGlvbi5zdWJzdHJpbmcoMCw0KSA9PT0gXCJ0dXJuXCIpIHtcbiAgICAgICAgZGlyZWN0aW9uID0gYXJyYXlkaXJlY3Rpb24uc3Vic3RyaW5nKDUpO1xuICAgICAgICB0aGlzLnBsYXlNaW5lY2FydFR1cm5BbmltYXRpb24ocG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrLCBjb21wbGV0aW9uSGFuZGxlciwgZGlyZWN0aW9uKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wbGF5TWluZWNhcnRNb3ZlRm9yd2FyZEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCBuZXh0UG9zaXRpb24sIHNwZWVkKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IG5leHRQb3NpdGlvbjtcbiAgICAgICAgICAgIHRoaXMucGxheVRyYWNrKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIsIG1pbmVjYXJ0VHJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLnBsYXlNaW5lY2FydE1vdmVGb3J3YXJkQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY29tcGxldGlvbkhhbmRsZXIsIG5leHRQb3NpdGlvbiwgc3BlZWQpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXlUcmFjayhwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCBtaW5lY2FydFRyYWNrKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0aGlzLmkrKztcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgIHRoaXMucGxheVN1Y2Nlc3NBbmltYXRpb24ocG9zaXRpb24sIGZhY2luZywgaXNPbkJsb2NrLCBmdW5jdGlvbigpe30pO1xuICAgICAgY29tcGxldGlvbkhhbmRsZXIoKTtcbiAgICB9XG4gIH1cblxuICBhZGRIb3VzZUJlZChib3R0b21Db29yZGluYXRlcykge1xuICAgIC8vVGVtcG9yYXJ5LCB3aWxsIGJlIHJlcGxhY2VkIGJ5IGJlZCBibG9ja3NcbiAgICB2YXIgYmVkVG9wQ29vcmRpbmF0ZSA9IChib3R0b21Db29yZGluYXRlc1sxXSAtIDEpO1xuICAgIHZhciBzcHJpdGUgPSB0aGlzLmFjdGlvblBsYW5lLmNyZWF0ZSgzOCAqIGJvdHRvbUNvb3JkaW5hdGVzWzBdLCAzNSAqIGJlZFRvcENvb3JkaW5hdGUsIFwiYmVkXCIpO1xuICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KGJvdHRvbUNvb3JkaW5hdGVzWzFdKTtcbiAgfVxuXG4gIGFkZERvb3IoY29vcmRpbmF0ZXMpIHtcbiAgICB2YXIgc3ByaXRlO1xuICAgIGxldCB0b0Rlc3Ryb3kgPSB0aGlzLmFjdGlvblBsYW5lQmxvY2tzW3RoaXMuY29vcmRpbmF0ZXNUb0luZGV4KGNvb3JkaW5hdGVzKV07XG4gICAgdGhpcy5jcmVhdGVBY3Rpb25QbGFuZUJsb2NrKGNvb3JkaW5hdGVzLCBcImRvb3JcIik7XG4gICAgLy9OZWVkIHRvIGdyYWIgdGhlIGNvcnJlY3QgYmxvY2t0eXBlIGZyb20gdGhlIGFjdGlvbiBsYXllclxuICAgIC8vQW5kIHVzZSB0aGF0IHR5cGUgYmxvY2sgdG8gY3JlYXRlIHRoZSBncm91bmQgYmxvY2sgdW5kZXIgdGhlIGRvb3JcbiAgICBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuZ3JvdW5kUGxhbmUsIGNvb3JkaW5hdGVzWzBdLCBjb29yZGluYXRlc1sxXSwgXCJ3b29sX29yYW5nZVwiKTtcbiAgICB0b0Rlc3Ryb3kua2lsbCgpO1xuICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KDYpO1xuICB9XG5cbiAgcGxheVN1Y2Nlc3NIb3VzZUJ1aWx0QW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGlzT25CbG9jaywgY3JlYXRlRmxvb3IsIGhvdXNlT2JqZWN0UG9zaXRpb25zLCBjb21wbGV0aW9uSGFuZGxlciwgdXBkYXRlU2NyZWVuKSB7XG4gICAgLy9mYWRlIHNjcmVlbiB0byB3aGl0ZVxuICAgIC8vQWRkIGhvdXNlIGJsb2Nrc1xuICAgIC8vZmFkZSBvdXQgb2Ygd2hpdGVcbiAgICAvL1BsYXkgc3VjY2VzcyBhbmltYXRpb24gb24gcGxheWVyLlxuICAgIHZhciB0d2VlblRvVyxcbiAgICAgICAgdHdlZW5XVG9DO1xuXG4gICAgdHdlZW5Ub1cgPSB0aGlzLnBsYXlMZXZlbEVuZEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssICgpID0+IHtcbiAgICAgIHRoaXMuY29udHJvbGxlci5kZWxheUJ5KDQwMDAsIGNvbXBsZXRpb25IYW5kbGVyKTtcbiAgICB9LCB0cnVlKTtcbiAgICB0d2VlblRvVy5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJob3VzZVN1Y2Nlc3NcIik7XG4gICAgICAvL0NoYW5nZSBob3VzZSBncm91bmQgdG8gZmxvb3JcbiAgICAgIHZhciB4Q29vcmQ7XG4gICAgICB2YXIgeUNvb3JkO1xuICAgICAgdmFyIHNwcml0ZTtcblxuICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGNyZWF0ZUZsb29yLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHhDb29yZCA9IGNyZWF0ZUZsb29yW2ldWzFdO1xuICAgICAgICB5Q29vcmQgPSBjcmVhdGVGbG9vcltpXVsyXTtcbiAgICAgICAgLyp0aGlzLmdyb3VuZFBsYW5lW3RoaXMuY29vcmRpbmF0ZXNUb0luZGV4KFt4Q29vcmQseUNvb3JkXSldLmtpbGwoKTsqL1xuICAgICAgICBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuZ3JvdW5kUGxhbmUsIHhDb29yZCwgeUNvb3JkLCBcIndvb2xfb3JhbmdlXCIpO1xuICAgICAgICBzcHJpdGUuc29ydE9yZGVyID0gdGhpcy55VG9JbmRleCh5Q29vcmQpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFkZEhvdXNlQmVkKGhvdXNlT2JqZWN0UG9zaXRpb25zWzBdKTtcbiAgICAgIHRoaXMuYWRkRG9vcihob3VzZU9iamVjdFBvc2l0aW9uc1sxXSk7XG4gICAgICB0aGlzLmdyb3VuZFBsYW5lLnNvcnQoJ3NvcnRPcmRlcicpO1xuICAgICAgdXBkYXRlU2NyZWVuKCk7XG4gICAgfSk7XG4gIH1cblxuICAvL1R3ZWVucyBpbiBhbmQgdGhlbiBvdXQgb2Ygd2hpdGUuIHJldHVybnMgdGhlIHR3ZWVuIHRvIHdoaXRlIGZvciBhZGRpbmcgY2FsbGJhY2tzXG4gIHBsYXlMZXZlbEVuZEFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyLCBwbGF5U3VjY2Vzc0FuaW1hdGlvbikge1xuICAgIHZhciBzcHJpdGUsXG4gICAgICAgIHR3ZWVuVG9XLFxuICAgICAgICB0d2VlbldUb0M7XG5cbiAgICBzcHJpdGUgPSB0aGlzLmZsdWZmUGxhbmUuY3JlYXRlKDAsIDAsIFwiZmluaXNoT3ZlcmxheVwiKTtcbiAgICB2YXIgW3NjYWxlWCwgc2NhbGVZXSA9IHRoaXMuY29udHJvbGxlci5zY2FsZUZyb21PcmlnaW5hbCgpO1xuICAgIHNwcml0ZS5zY2FsZS54ID0gc2NhbGVYO1xuICAgIHNwcml0ZS5zY2FsZS55ID0gc2NhbGVZO1xuICAgIHNwcml0ZS5hbHBoYSA9IDA7XG5cbiAgICB0d2VlblRvVyA9IHRoaXMudHdlZW5Ub1doaXRlKHNwcml0ZSk7XG4gICAgdHdlZW5XVG9DID0gdGhpcy50d2VlbkZyb21XaGl0ZVRvQ2xlYXIoc3ByaXRlKTtcblxuICAgIHR3ZWVuVG9XLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgIHRoaXMuc2VsZWN0aW9uSW5kaWNhdG9yLnZpc2libGUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2V0UGxheWVyUG9zaXRpb24ocG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdLCBpc09uQmxvY2spO1xuICAgICAgdHdlZW5XVG9DLnN0YXJ0KCk7XG4gICAgfSk7XG4gICAgaWYocGxheVN1Y2Nlc3NBbmltYXRpb24pXG4gICAge1xuICAgICAgdHdlZW5XVG9DLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgdGhpcy5wbGF5U3VjY2Vzc0FuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBpc09uQmxvY2ssIGNvbXBsZXRpb25IYW5kbGVyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB0d2VlblRvVy5zdGFydCgpO1xuXG4gICAgcmV0dXJuIHR3ZWVuVG9XO1xuICB9XG4gIHR3ZWVuRnJvbVdoaXRlVG9DbGVhcihzcHJpdGUpIHtcbiAgICB2YXIgdHdlZW5XaGl0ZVRvQ2xlYXI7XG5cbiAgICB0d2VlbldoaXRlVG9DbGVhciA9IHRoaXMuYWRkUmVzZXR0YWJsZVR3ZWVuKHNwcml0ZSkudG8oe1xuICAgICAgYWxwaGE6IDAuMCxcbiAgICB9LCA3MDAsIFBoYXNlci5FYXNpbmcuTGluZWFyLk5vbmUpO1xuICAgIHJldHVybiB0d2VlbldoaXRlVG9DbGVhcjtcbiAgfVxuXG4gIHR3ZWVuVG9XaGl0ZShzcHJpdGUpe1xuICAgIHZhciB0d2VlblRvV2hpdGU7XG5cbiAgICB0d2VlblRvV2hpdGUgPSB0aGlzLmFkZFJlc2V0dGFibGVUd2VlbihzcHJpdGUpLnRvKHtcbiAgICAgIGFscGhhOiAxLjAsXG4gICAgfSwgMzAwLCBQaGFzZXIuRWFzaW5nLkxpbmVhci5Ob25lKTtcbiAgICByZXR1cm4gdHdlZW5Ub1doaXRlO1xuICB9XG5cbiAgcGxheUJsb2NrU291bmQoZ3JvdW5kVHlwZSkge1xuICAgIHZhciBvcmVTdHJpbmcgPSBncm91bmRUeXBlLnN1YnN0cmluZygwLCAzKTtcbiAgICBpZihncm91bmRUeXBlID09PSBcInN0b25lXCIgfHwgZ3JvdW5kVHlwZSA9PT0gXCJjb2JibGVzdG9uZVwiIHx8IGdyb3VuZFR5cGUgPT09IFwiYmVkcm9ja1wiIHx8XG4gICAgICAgIG9yZVN0cmluZyA9PT0gXCJvcmVcIiB8fCBncm91bmRUeXBlID09PSBcImJyaWNrc1wiKSB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJzdGVwU3RvbmVcIik7XG4gICAgfVxuICAgIGVsc2UgaWYoZ3JvdW5kVHlwZSA9PT0gXCJncmFzc1wiIHx8IGdyb3VuZFR5cGUgPT09IFwiZGlydFwiIHx8IGdyb3VuZFR5cGUgPT09IFwiZGlydENvYXJzZVwiIHx8XG4gICAgICAgIGdyb3VuZFR5cGUgPT0gXCJ3b29sX29yYW5nZVwiIHx8IGdyb3VuZFR5cGUgPT0gXCJ3b29sXCIpIHtcbiAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcInN0ZXBHcmFzc1wiKTtcbiAgICB9XG4gICAgZWxzZSBpZihncm91bmRUeXBlID09PSBcImdyYXZlbFwiKSB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJzdGVwR3JhdmVsXCIpO1xuICAgIH1cbiAgICBlbHNlIGlmKGdyb3VuZFR5cGUgPT09IFwiZmFybWxhbmRXZXRcIikge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwic3RlcEZhcm1sYW5kXCIpO1xuICAgIH1cbiAgICBlbHNle1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwic3RlcFdvb2RcIik7XG4gICAgfVxuICB9XG5cbiAgcGxheU1vdmVGb3J3YXJkQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIHNob3VsZEp1bXBEb3duLCBpc09uQmxvY2ssIGdyb3VuZFR5cGUsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdmFyIHR3ZWVuLFxuICAgICAgICBvbGRQb3NpdGlvbixcbiAgICAgICAgbmV3UG9zVmVjLFxuICAgICAgICBhbmltTmFtZSxcbiAgICAgICAgeU9mZnNldCA9IC0zMjtcblxuICAgIC8vc3RlcHBpbmcgb24gc3RvbmUgc2Z4XG4gICAgdGhpcy5wbGF5QmxvY2tTb3VuZChncm91bmRUeXBlKTtcblxuICAgIGxldCBkaXJlY3Rpb24gPSB0aGlzLmdldERpcmVjdGlvbk5hbWUoZmFjaW5nKTtcblxuICAgIHRoaXMuc2V0U2VsZWN0aW9uSW5kaWNhdG9yUG9zaXRpb24ocG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdKTtcbiAgICAvL21ha2Ugc3VyZSB0byByZW5kZXIgaGlnaCBmb3Igd2hlbiBtb3ZpbmcgdXAgYWZ0ZXIgcGxhY2luZyBhIGJsb2NrXG4gICAgdmFyIHpPcmRlcllJbmRleCA9IHBvc2l0aW9uWzFdICsgKGZhY2luZyA9PT0gRmFjaW5nRGlyZWN0aW9uLlVwID8gMSA6IDApO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLnNvcnRPcmRlciA9IHRoaXMueVRvSW5kZXgoek9yZGVyWUluZGV4KSArIDU7XG4gICAgb2xkUG9zaXRpb24gPSBbTWF0aC50cnVuYygodGhpcy5wbGF5ZXJTcHJpdGUucG9zaXRpb24ueCArIDE4KS8gNDApLCBNYXRoLmNlaWwoKHRoaXMucGxheWVyU3ByaXRlLnBvc2l0aW9uLnkrIDMyKSAvIDQwKV07XG4gICAgbmV3UG9zVmVjID0gW3Bvc2l0aW9uWzBdIC0gb2xkUG9zaXRpb25bMF0sIHBvc2l0aW9uWzFdIC0gb2xkUG9zaXRpb25bMV1dO1xuXG4gICAgLy9jaGFuZ2Ugb2Zmc2V0IGZvciBtb3Zpbmcgb24gdG9wIG9mIGJsb2Nrc1xuICAgIGlmKGlzT25CbG9jaykge1xuICAgICAgeU9mZnNldCAtPSAyMjtcbiAgICB9XG5cbiAgICBpZiAoIXNob3VsZEp1bXBEb3duKSB7XG4gICAgICBhbmltTmFtZSA9IFwid2Fsa1wiICsgZGlyZWN0aW9uO1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgYW5pbU5hbWUpO1xuICAgICAgdHdlZW4gPSB0aGlzLmFkZFJlc2V0dGFibGVUd2Vlbih0aGlzLnBsYXllclNwcml0ZSkudG8oe1xuICAgICAgICB4OiAoLTE4ICsgNDAgKiBwb3NpdGlvblswXSksXG4gICAgICAgIHk6ICh5T2Zmc2V0ICsgNDAgKiBwb3NpdGlvblsxXSlcbiAgICAgIH0sIDIwMCwgUGhhc2VyLkVhc2luZy5MaW5lYXIuTm9uZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFuaW1OYW1lID0gXCJqdW1wRG93blwiICsgZGlyZWN0aW9uO1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgYW5pbU5hbWUpO1xuICAgICAgdHdlZW4gPSB0aGlzLmFkZFJlc2V0dGFibGVUd2Vlbih0aGlzLnBsYXllclNwcml0ZSkudG8oe1xuICAgICAgICB4OiBbLTE4ICsgNDAgKiBvbGRQb3NpdGlvblswXSwgLTE4ICsgNDAgKiAob2xkUG9zaXRpb25bMF0gKyBuZXdQb3NWZWNbMF0pLCAtMTggKyA0MCAqIHBvc2l0aW9uWzBdXSxcbiAgICAgICAgeTogWy0zMiArIDQwICogb2xkUG9zaXRpb25bMV0sIC0zMiArIDQwICogKG9sZFBvc2l0aW9uWzFdICsgbmV3UG9zVmVjWzFdKSAtIDUwLCAtMzIgKyA0MCAqIHBvc2l0aW9uWzFdXVxuICAgICAgfSwgMzAwLCBQaGFzZXIuRWFzaW5nLkxpbmVhci5Ob25lKS5pbnRlcnBvbGF0aW9uKCh2LGspID0+IHtcbiAgICAgICAgcmV0dXJuIFBoYXNlci5NYXRoLmJlemllckludGVycG9sYXRpb24odixrKTtcbiAgICAgIH0pO1xuXG4gICAgICB0d2Vlbi5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcImZhbGxcIik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0d2Vlbi5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICBjb21wbGV0aW9uSGFuZGxlcigpO1xuICAgIH0pO1xuXG4gICAgdHdlZW4uc3RhcnQoKTtcblxuICAgIHJldHVybiB0d2VlbjtcbiAgfVxuXG4gIHBsYXlQbGF5ZXJKdW1wRG93blZlcnRpY2FsQW5pbWF0aW9uKHBvc2l0aW9uLCBkaXJlY3Rpb24pIHtcbiAgICB2YXIgYW5pbU5hbWUgPSBcImp1bXBEb3duXCIgKyB0aGlzLmdldERpcmVjdGlvbk5hbWUoZGlyZWN0aW9uKTtcbiAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBhbmltTmFtZSk7XG4gICAgdmFyIHR3ZWVuID0gdGhpcy5hZGRSZXNldHRhYmxlVHdlZW4odGhpcy5wbGF5ZXJTcHJpdGUpLnRvKHtcbiAgICAgIHg6IFstMTggKyA0MCAqIHBvc2l0aW9uWzBdLCAtMTggKyA0MCAqIHBvc2l0aW9uWzBdLCAtMTggKyA0MCAqIHBvc2l0aW9uWzBdXSxcbiAgICAgIHk6IFstMzIgKyA0MCAqIHBvc2l0aW9uWzFdLCAtMzIgKyA0MCAqIHBvc2l0aW9uWzFdIC0gNTAsIC0zMiArIDQwICogcG9zaXRpb25bMV1dXG4gICAgfSwgMzAwLCBQaGFzZXIuRWFzaW5nLkxpbmVhci5Ob25lKS5pbnRlcnBvbGF0aW9uKCh2LGspID0+IHtcbiAgICAgIHJldHVybiBQaGFzZXIuTWF0aC5iZXppZXJJbnRlcnBvbGF0aW9uKHYsayk7XG4gICAgfSk7XG4gICAgdHdlZW4ub25Db21wbGV0ZS5hZGRPbmNlKCgpID0+IHtcbiAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcImZhbGxcIik7XG4gICAgfSk7XG4gICAgdHdlZW4uc3RhcnQoKTtcbiAgfVxuXG4gIHBsYXlQbGFjZUJsb2NrQW5pbWF0aW9uKHBvc2l0aW9uLCBmYWNpbmcsIGJsb2NrVHlwZSwgYmxvY2tUeXBlQXRQb3NpdGlvbiwgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB2YXIganVtcEFuaW1OYW1lO1xuICAgIGxldCBibG9ja0luZGV4ID0gdGhpcy55VG9JbmRleChwb3NpdGlvblsxXSkgKyBwb3NpdGlvblswXTtcblxuICAgIGlmIChibG9ja1R5cGUgPT09IFwiY3JvcFdoZWF0XCIgfHwgYmxvY2tUeXBlID09PSBcInRvcmNoXCIgfHwgYmxvY2tUeXBlLnN1YnN0cmluZygwLCA1KSA9PT0gXCJyYWlsc1wiKSB7XG4gICAgICB0aGlzLnNldFNlbGVjdGlvbkluZGljYXRvclBvc2l0aW9uKHBvc2l0aW9uWzBdLCBwb3NpdGlvblsxXSk7XG5cbiAgICAgIHZhciBzaWduYWxEZXRhY2hlciA9IHRoaXMucGxheVBsYXllckFuaW1hdGlvbihcInB1bmNoXCIsIHBvc2l0aW9uLCBmYWNpbmcsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgIHZhciBzcHJpdGU7XG4gICAgICAgIHNpZ25hbERldGFjaGVyLmRldGFjaCgpO1xuICAgICAgICBsZXQgYmxvY2tJbmRleCA9ICh0aGlzLnlUb0luZGV4KHBvc2l0aW9uWzFdKSkgKyBwb3NpdGlvblswXTtcbiAgICAgICAgc3ByaXRlID0gdGhpcy5jcmVhdGVCbG9jayh0aGlzLmFjdGlvblBsYW5lLCBwb3NpdGlvblswXSwgcG9zaXRpb25bMV0sIGJsb2NrVHlwZSk7XG5cbiAgICAgICAgaWYgKHNwcml0ZSkge1xuICAgICAgICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHBvc2l0aW9uWzFdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYWN0aW9uUGxhbmVCbG9ja3NbYmxvY2tJbmRleF0gPSBzcHJpdGU7XG4gICAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwicGxhY2VCbG9ja1wiKTtcblxuICAgICAgbGV0IGRpcmVjdGlvbiA9IHRoaXMuZ2V0RGlyZWN0aW9uTmFtZShmYWNpbmcpO1xuICAgICAgdGhpcy5zZXRTZWxlY3Rpb25JbmRpY2F0b3JQb3NpdGlvbihwb3NpdGlvblswXSwgcG9zaXRpb25bMV0pO1xuXG4gICAgICBqdW1wQW5pbU5hbWUgPSBcImp1bXBVcFwiICsgZGlyZWN0aW9uO1xuXG4gICAgICBpZihibG9ja1R5cGVBdFBvc2l0aW9uICE9PSBcIlwiKSB7XG4gICAgICAgIHRoaXMucGxheUV4cGxvc2lvbkFuaW1hdGlvbihwb3NpdGlvbiwgZmFjaW5nLCBwb3NpdGlvbiwgYmxvY2tUeXBlQXRQb3NpdGlvbiwgKCgpPT57fSksIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywganVtcEFuaW1OYW1lKTtcbiAgICAgIHZhciBwbGFjZW1lbnRUd2VlbiA9IHRoaXMuYWRkUmVzZXR0YWJsZVR3ZWVuKHRoaXMucGxheWVyU3ByaXRlKS50byh7XG4gICAgICAgIHk6ICgtNTUgKyA0MCAqIHBvc2l0aW9uWzFdKVxuICAgICAgfSwgMTI1LCBQaGFzZXIuRWFzaW5nLkN1YmljLkVhc2VPdXQpO1xuXG4gICAgICBwbGFjZW1lbnRUd2Vlbi5vbkNvbXBsZXRlLmFkZE9uY2UoKCkgPT4ge1xuICAgICAgICBwbGFjZW1lbnRUd2VlbiA9IG51bGw7XG5cbiAgICAgICAgaWYgKGJsb2NrVHlwZUF0UG9zaXRpb24gIT09IFwiXCIpIHtcbiAgICAgICAgICB0aGlzLmFjdGlvblBsYW5lQmxvY2tzW2Jsb2NrSW5kZXhdLmtpbGwoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3ByaXRlID0gdGhpcy5jcmVhdGVCbG9jayh0aGlzLmFjdGlvblBsYW5lLCBwb3NpdGlvblswXSwgcG9zaXRpb25bMV0sIGJsb2NrVHlwZSk7XG5cbiAgICAgICAgaWYgKHNwcml0ZSkge1xuICAgICAgICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHBvc2l0aW9uWzFdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYWN0aW9uUGxhbmVCbG9ja3NbYmxvY2tJbmRleF0gPSBzcHJpdGU7XG4gICAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgICB9KTtcbiAgICAgIHBsYWNlbWVudFR3ZWVuLnN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgcGxheVBsYWNlQmxvY2tJbkZyb250QW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGJsb2NrUG9zaXRpb24sIHBsYW5lLCBibG9ja1R5cGUsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdGhpcy5zZXRTZWxlY3Rpb25JbmRpY2F0b3JQb3NpdGlvbihibG9ja1Bvc2l0aW9uWzBdLCBibG9ja1Bvc2l0aW9uWzFdKTtcblxuICAgIHRoaXMucGxheVBsYXllckFuaW1hdGlvbihcInB1bmNoXCIsIHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICBpZiAocGxhbmUgPT09IHRoaXMuY29udHJvbGxlci5sZXZlbE1vZGVsLmFjdGlvblBsYW5lKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlQWN0aW9uUGxhbmVCbG9jayhibG9ja1Bvc2l0aW9uLCBibG9ja1R5cGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcmUtbGF5IGdyb3VuZCB0aWxlcyBiYXNlZCBvbiBtb2RlbFxuICAgICAgICB0aGlzLnJlZnJlc2hHcm91bmRQbGFuZSgpO1xuICAgICAgfVxuICAgICAgY29tcGxldGlvbkhhbmRsZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNyZWF0ZUFjdGlvblBsYW5lQmxvY2socG9zaXRpb24sIGJsb2NrVHlwZSkge1xuICAgIGxldCBibG9ja0luZGV4ID0gKHRoaXMueVRvSW5kZXgocG9zaXRpb25bMV0pKSArIHBvc2l0aW9uWzBdO1xuICAgIHZhciBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuYWN0aW9uUGxhbmUsIHBvc2l0aW9uWzBdLCBwb3NpdGlvblsxXSwgYmxvY2tUeXBlKTtcblxuICAgIGlmIChzcHJpdGUpIHtcbiAgICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHBvc2l0aW9uWzFdKTtcbiAgICB9XG5cbiAgICB0aGlzLmFjdGlvblBsYW5lQmxvY2tzW2Jsb2NrSW5kZXhdID0gc3ByaXRlO1xuICB9XG5cbiAgcGxheVNoZWFyQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBjb21wbGV0aW9uSGFuZGxlcikge1xuICAgIGxldCBibG9ja0luZGV4ID0gdGhpcy55VG9JbmRleChkZXN0cm95UG9zaXRpb25bMV0pICsgZGVzdHJveVBvc2l0aW9uWzBdO1xuICAgIGxldCBibG9ja1RvU2hlYXIgPSB0aGlzLmFjdGlvblBsYW5lQmxvY2tzW2Jsb2NrSW5kZXhdO1xuXG4gICAgYmxvY2tUb1NoZWFyLmFuaW1hdGlvbnMuc3RvcChudWxsLCB0cnVlKTtcbiAgICB0aGlzLm9uQW5pbWF0aW9uTG9vcE9uY2UodGhpcy5wbGF5U2NhbGVkU3BlZWQoYmxvY2tUb1NoZWFyLmFuaW1hdGlvbnMsIFwidXNlZFwiKSwgKCkgPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQoYmxvY2tUb1NoZWFyLmFuaW1hdGlvbnMsIFwiZmFjZVwiKTtcbiAgICB9KTtcblxuICAgIHRoaXMucGxheUV4cGxvc2lvbkFuaW1hdGlvbihwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGJsb2NrVHlwZSwgY29tcGxldGlvbkhhbmRsZXIsIHRydWUpO1xuICB9XG5cbiAgcGxheVNoZWFyU2hlZXBBbmltYXRpb24ocGxheWVyUG9zaXRpb24sIGZhY2luZywgZGVzdHJveVBvc2l0aW9uLCBibG9ja1R5cGUsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgbGV0IGRpcmVjdGlvbiA9IHRoaXMuZ2V0RGlyZWN0aW9uTmFtZShmYWNpbmcpO1xuICAgIHRoaXMuc2V0U2VsZWN0aW9uSW5kaWNhdG9yUG9zaXRpb24oZGVzdHJveVBvc2l0aW9uWzBdLCBkZXN0cm95UG9zaXRpb25bMV0pO1xuXG4gICAgdGhpcy5vbkFuaW1hdGlvbkVuZCh0aGlzLnBsYXlQbGF5ZXJBbmltYXRpb24oXCJwdW5jaFwiLCBwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBmYWxzZSksICgpID0+IHtcbiAgICAgIGxldCBibG9ja0luZGV4ID0gKHRoaXMueVRvSW5kZXgoZGVzdHJveVBvc2l0aW9uWzFdKSkgKyBkZXN0cm95UG9zaXRpb25bMF07XG4gICAgICBsZXQgYmxvY2tUb1NoZWFyID0gdGhpcy5hY3Rpb25QbGFuZUJsb2Nrc1tibG9ja0luZGV4XTtcblxuICAgICAgYmxvY2tUb1NoZWFyLmFuaW1hdGlvbnMuc3RvcChudWxsLCB0cnVlKTtcbiAgICAgIHRoaXMub25BbmltYXRpb25Mb29wT25jZSh0aGlzLnBsYXlTY2FsZWRTcGVlZChibG9ja1RvU2hlYXIuYW5pbWF0aW9ucywgXCJ1c2VkXCIpLCAoKSA9PiB7XG4gICAgICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKGJsb2NrVG9TaGVhci5hbmltYXRpb25zLCBcImZhY2VcIik7XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5wbGF5RXhwbG9zaW9uQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBjb21wbGV0aW9uSGFuZGxlciwgdHJ1ZSk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5RGVzdHJveUJsb2NrQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBuZXdTaGFkaW5nUGxhbmVEYXRhLCBuZXdGb3dQbGFuZURhdGEsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdGhpcy5zZXRTZWxlY3Rpb25JbmRpY2F0b3JQb3NpdGlvbihkZXN0cm95UG9zaXRpb25bMF0sIGRlc3Ryb3lQb3NpdGlvblsxXSk7XG5cbiAgICB2YXIgcGxheWVyQW5pbWF0aW9uID1cbiAgICAgICAgYmxvY2tUeXBlLm1hdGNoKC8ob3JlfHN0b25lfGNsYXl8YnJpY2tzfGJlZHJvY2spLykgPyBcIm1pbmVcIiA6IFwicHVuY2hEZXN0cm95XCI7XG4gICAgdGhpcy5wbGF5UGxheWVyQW5pbWF0aW9uKHBsYXllckFuaW1hdGlvbiwgcGxheWVyUG9zaXRpb24sIGZhY2luZywgZmFsc2UpO1xuICAgIHRoaXMucGxheU1pbmluZ1BhcnRpY2xlc0FuaW1hdGlvbihmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbik7XG4gICAgdGhpcy5wbGF5QmxvY2tEZXN0cm95T3ZlcmxheUFuaW1hdGlvbihwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGJsb2NrVHlwZSwgbmV3U2hhZGluZ1BsYW5lRGF0YSwgbmV3Rm93UGxhbmVEYXRhLCBjb21wbGV0aW9uSGFuZGxlcik7XG4gIH1cblxuXG4gIHBsYXlQdW5jaERlc3Ryb3lBaXJBbmltYXRpb24ocGxheWVyUG9zaXRpb24sIGZhY2luZywgZGVzdHJveVBvc2l0aW9uLCBjb21wbGV0aW9uSGFuZGxlcikge1xuICAgIHRoaXMucGxheVB1bmNoQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgXCJwdW5jaERlc3Ryb3lcIiwgY29tcGxldGlvbkhhbmRsZXIpO1xuICB9XG5cbiAgcGxheVB1bmNoQWlyQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB0aGlzLnBsYXlQdW5jaEFuaW1hdGlvbihwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIFwicHVuY2hcIiwgY29tcGxldGlvbkhhbmRsZXIpO1xuICB9XG5cbiAgcGxheVB1bmNoQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYW5pbWF0aW9uVHlwZSwgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB0aGlzLnNldFNlbGVjdGlvbkluZGljYXRvclBvc2l0aW9uKGRlc3Ryb3lQb3NpdGlvblswXSwgZGVzdHJveVBvc2l0aW9uWzFdKTtcbiAgICB0aGlzLm9uQW5pbWF0aW9uRW5kKHRoaXMucGxheVBsYXllckFuaW1hdGlvbihhbmltYXRpb25UeXBlLCBwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBmYWxzZSksICgpID0+IHtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfSk7XG4gIH1cblxuICBwbGF5QmxvY2tEZXN0cm95T3ZlcmxheUFuaW1hdGlvbihwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBkZXN0cm95UG9zaXRpb24sIGJsb2NrVHlwZSwgbmV3U2hhZGluZ1BsYW5lRGF0YSwgbmV3Rm93UGxhbmVEYXRhLCBjb21wbGV0aW9uSGFuZGxlcikge1xuICAgIGxldCBibG9ja0luZGV4ID0gKHRoaXMueVRvSW5kZXgoZGVzdHJveVBvc2l0aW9uWzFdKSkgKyBkZXN0cm95UG9zaXRpb25bMF07XG4gICAgbGV0IGJsb2NrVG9EZXN0cm95ID0gdGhpcy5hY3Rpb25QbGFuZUJsb2Nrc1tibG9ja0luZGV4XTtcbiAgICBsZXQgZGlyZWN0aW9uID0gdGhpcy5nZXREaXJlY3Rpb25OYW1lKGZhY2luZyk7XG5cbiAgICBsZXQgZGVzdHJveU92ZXJsYXkgPSB0aGlzLmFjdGlvblBsYW5lLmNyZWF0ZSgtMTIgKyA0MCAqIGRlc3Ryb3lQb3NpdGlvblswXSwgLTIyICsgNDAgKiBkZXN0cm95UG9zaXRpb25bMV0sIFwiZGVzdHJveU92ZXJsYXlcIiwgXCJkZXN0cm95MVwiKTtcbiAgICBkZXN0cm95T3ZlcmxheS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KGRlc3Ryb3lQb3NpdGlvblsxXSkgKyAyO1xuICAgIHRoaXMub25BbmltYXRpb25FbmQoZGVzdHJveU92ZXJsYXkuYW5pbWF0aW9ucy5hZGQoXCJkZXN0cm95XCIsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiZGVzdHJveVwiLCAxLCAxMiwgXCJcIiwgMCksIDMwLCBmYWxzZSksICgpID0+XG4gICAge1xuICAgICAgdGhpcy5hY3Rpb25QbGFuZUJsb2Nrc1tibG9ja0luZGV4XSA9IG51bGw7XG5cbiAgICAgIGlmIChibG9ja1RvRGVzdHJveS5oYXNPd25Qcm9wZXJ0eShcIm9uQmxvY2tEZXN0cm95XCIpKSB7XG4gICAgICAgIGJsb2NrVG9EZXN0cm95Lm9uQmxvY2tEZXN0cm95KGJsb2NrVG9EZXN0cm95KTtcbiAgICAgIH1cblxuICAgICAgYmxvY2tUb0Rlc3Ryb3kua2lsbCgpO1xuICAgICAgZGVzdHJveU92ZXJsYXkua2lsbCgpO1xuICAgICAgdGhpcy50b0Rlc3Ryb3kucHVzaChibG9ja1RvRGVzdHJveSk7XG4gICAgICB0aGlzLnRvRGVzdHJveS5wdXNoKGRlc3Ryb3lPdmVybGF5KTtcbiAgICAgIHRoaXMudXBkYXRlU2hhZGluZ1BsYW5lKG5ld1NoYWRpbmdQbGFuZURhdGEpO1xuICAgICAgdGhpcy51cGRhdGVGb3dQbGFuZShuZXdGb3dQbGFuZURhdGEpO1xuXG4gICAgICB0aGlzLnNldFNlbGVjdGlvbkluZGljYXRvclBvc2l0aW9uKHBsYXllclBvc2l0aW9uWzBdLCBwbGF5ZXJQb3NpdGlvblsxXSk7XG5cbiAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheSgnZGlnX3dvb2QxJyk7XG4gICAgICB0aGlzLnBsYXlFeHBsb3Npb25BbmltYXRpb24ocGxheWVyUG9zaXRpb24sIGZhY2luZywgZGVzdHJveVBvc2l0aW9uLCBibG9ja1R5cGUsIGNvbXBsZXRpb25IYW5kbGVyLCB0cnVlKTtcbiAgICB9KTtcblxuICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKGRlc3Ryb3lPdmVybGF5LmFuaW1hdGlvbnMsIFwiZGVzdHJveVwiKTtcbiAgfVxuXG4gIHBsYXlNaW5pbmdQYXJ0aWNsZXNBbmltYXRpb24oZmFjaW5nLCBkZXN0cm95UG9zaXRpb24pIHtcbiAgICBsZXQgbWluaW5nUGFydGljbGVzRGF0YSA9IFtcbiAgICAgIFsyNCwgLTEwMCwgLTgwXSwgICAvLyBsZWZ0XG4gICAgICBbMTIsIC0xMjAsIC04MF0sICAgLy8gYm90dG9tXG4gICAgICBbMCwgLTYwLCAtODBdLCAgIC8vIHJpZ2h0XG4gICAgICBbMzYsIC04MCwgLTYwXSwgICAvLyB0b3BcbiAgICBdO1xuXG4gICAgbGV0IGRpcmVjdGlvbiA9IHRoaXMuZ2V0RGlyZWN0aW9uTmFtZShmYWNpbmcpO1xuICAgIGxldCBtaW5pbmdQYXJ0aWNsZXNJbmRleCA9IChkaXJlY3Rpb24gPT09IFwiX2xlZnRcIiA/IDAgOiBkaXJlY3Rpb24gPT09IFwiX2JvdHRvbVwiID8gMSA6IGRpcmVjdGlvbiA9PT0gXCJfcmlnaHRcIiA/IDIgOiAzKTtcbiAgICBsZXQgbWluaW5nUGFydGljbGVzRmlyc3RGcmFtZSA9IG1pbmluZ1BhcnRpY2xlc0RhdGFbbWluaW5nUGFydGljbGVzSW5kZXhdWzBdO1xuICAgIGxldCBtaW5pbmdQYXJ0aWNsZXNPZmZzZXRYID0gbWluaW5nUGFydGljbGVzRGF0YVttaW5pbmdQYXJ0aWNsZXNJbmRleF1bMV07XG4gICAgbGV0IG1pbmluZ1BhcnRpY2xlc09mZnNldFkgPSBtaW5pbmdQYXJ0aWNsZXNEYXRhW21pbmluZ1BhcnRpY2xlc0luZGV4XVsyXTtcbiAgICBsZXQgbWluaW5nUGFydGljbGVzID0gdGhpcy5hY3Rpb25QbGFuZS5jcmVhdGUobWluaW5nUGFydGljbGVzT2Zmc2V0WCArIDQwICogZGVzdHJveVBvc2l0aW9uWzBdLCBtaW5pbmdQYXJ0aWNsZXNPZmZzZXRZICsgNDAgKiBkZXN0cm95UG9zaXRpb25bMV0sIFwibWluaW5nUGFydGljbGVzXCIsIFwiTWluaW5nUGFydGljbGVzXCIgKyBtaW5pbmdQYXJ0aWNsZXNGaXJzdEZyYW1lKTtcbiAgICBtaW5pbmdQYXJ0aWNsZXMuc29ydE9yZGVyID0gdGhpcy55VG9JbmRleChkZXN0cm95UG9zaXRpb25bMV0pICsgMjtcbiAgICB0aGlzLm9uQW5pbWF0aW9uRW5kKG1pbmluZ1BhcnRpY2xlcy5hbmltYXRpb25zLmFkZChcIm1pbmluZ1BhcnRpY2xlc1wiLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIk1pbmluZ1BhcnRpY2xlc1wiLCBtaW5pbmdQYXJ0aWNsZXNGaXJzdEZyYW1lLCBtaW5pbmdQYXJ0aWNsZXNGaXJzdEZyYW1lICsgMTEsIFwiXCIsIDApLCAzMCwgZmFsc2UpLCAoKSA9PiB7XG4gICAgICBtaW5pbmdQYXJ0aWNsZXMua2lsbCgpO1xuICAgICAgdGhpcy50b0Rlc3Ryb3kucHVzaChtaW5pbmdQYXJ0aWNsZXMpO1xuICAgIH0pO1xuICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKG1pbmluZ1BhcnRpY2xlcy5hbmltYXRpb25zLCBcIm1pbmluZ1BhcnRpY2xlc1wiKTtcbiAgfVxuXG4gIHBsYXlFeHBsb3Npb25BbmltYXRpb24ocGxheWVyUG9zaXRpb24sIGZhY2luZywgZGVzdHJveVBvc2l0aW9uLCBibG9ja1R5cGUsIGNvbXBsZXRpb25IYW5kbGVyLCBwbGFjZUJsb2NrKSB7XG4gICAgdmFyIHNpZ25hbEJpbmRpbmcsXG4gICAgICAgIGV4cGxvZGVBbmltID0gdGhpcy5hY3Rpb25QbGFuZS5jcmVhdGUoLTM2ICsgNDAgKiBkZXN0cm95UG9zaXRpb25bMF0sIC0zMCArIDQwICogZGVzdHJveVBvc2l0aW9uWzFdLCBcImJsb2NrRXhwbG9kZVwiLCBcIkJsb2NrQnJlYWtQYXJ0aWNsZTBcIik7XG5cbiAgICAvL2V4cGxvZGVBbmltLnRpbnQgPSAweDMyNGJmZjtcbiAgICBpZiAodGhpcy5jb250cm9sbGVyLmNhblVzZVRpbnRzKCkpIHtcbiAgICAgIHN3aXRjaCAoYmxvY2tUeXBlKSB7XG4gICAgICAgIGNhc2UgXCJ0cmVlQWNhY2lhXCI6XG4gICAgICAgIGNhc2UgXCJsb2dBY2FjaWFcIjpcbiAgICAgICAgICBleHBsb2RlQW5pbS50aW50ID0gMHg2YzY1NWE7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJ0cmVlQmlyY2hcIjpcbiAgICAgICAgY2FzZSBcImxvZ0JpcmNoXCI6XG4gICAgICAgICAgZXhwbG9kZUFuaW0udGludCA9IDB4ZGFkNmNjO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwidHJlZUp1bmdsZVwiOlxuICAgICAgICBjYXNlIFwibG9nSnVuZ2xlXCI6XG4gICAgICAgICAgZXhwbG9kZUFuaW0udGludCA9IDB4NmE0ZjMxO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwidHJlZU9ha1wiOlxuICAgICAgICBjYXNlIFwibG9nT2FrXCI6XG4gICAgICAgICAgZXhwbG9kZUFuaW0udGludCA9IDB4Njc1MjMxO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwidHJlZVNwcnVjZVwiOlxuICAgICAgICBjYXNlIFwibG9nU3BydWNlXCI6XG4gICAgICAgICAgZXhwbG9kZUFuaW0udGludCA9IDB4NGIzOTIzO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJwbGFua3NBY2FjaWFcIjpcbiAgICAgICAgICBleHBsb2RlQW5pbS50aW50ID0gMHhiYTYzMzc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJwbGFua3NCaXJjaFwiOlxuICAgICAgICAgIGV4cGxvZGVBbmltLnRpbnQgPSAweGQ3Y2I4ZDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInBsYW5rc0p1bmdsZVwiOlxuICAgICAgICAgIGV4cGxvZGVBbmltLnRpbnQgPSAweGI4ODc2NDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInBsYW5rc09ha1wiOlxuICAgICAgICAgIGV4cGxvZGVBbmltLnRpbnQgPSAweGI0OTA1YTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInBsYW5rc1NwcnVjZVwiOlxuICAgICAgICAgIGV4cGxvZGVBbmltLnRpbnQgPSAweDgwNWUzNjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInN0b25lXCI6XG4gICAgICAgIGNhc2UgXCJvcmVDb2FsXCI6XG4gICAgICAgIGNhc2UgXCJvcmVEaWFtb25kXCI6XG4gICAgICAgIGNhc2UgXCJvcmVJcm9uXCI6XG4gICAgICAgIGNhc2UgXCJvcmVHb2xkXCI6XG4gICAgICAgIGNhc2UgXCJvcmVFbWVyYWxkXCI6XG4gICAgICAgIGNhc2UgXCJvcmVSZWRzdG9uZVwiOlxuICAgICAgICAgIGV4cGxvZGVBbmltLnRpbnQgPSAweEM2QzZDNjtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImdyYXNzXCI6XG4gICAgICAgIGNhc2UgXCJjcm9wV2hlYXRcIjpcbiAgICAgICAgICBleHBsb2RlQW5pbS50aW50ID0gMHg1ZDhmMjM7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJkaXJ0XCI6XG4gICAgICAgICAgZXhwbG9kZUFuaW0udGludCA9IDB4OGE1ZTMzO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZXhwbG9kZUFuaW0uc29ydE9yZGVyID0gdGhpcy55VG9JbmRleChkZXN0cm95UG9zaXRpb25bMV0pICsgMjtcbiAgICB0aGlzLm9uQW5pbWF0aW9uRW5kKGV4cGxvZGVBbmltLmFuaW1hdGlvbnMuYWRkKFwiZXhwbG9kZVwiLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkJsb2NrQnJlYWtQYXJ0aWNsZVwiLCAwLCA3LCBcIlwiLCAwKSwgMzAsIGZhbHNlKSwgKCkgPT5cbiAgICB7XG4gICAgICBleHBsb2RlQW5pbS5raWxsKCk7XG4gICAgICB0aGlzLnRvRGVzdHJveS5wdXNoKGV4cGxvZGVBbmltKTtcblxuICAgICAgaWYocGxhY2VCbG9jaylcbiAgICAgIHtcbiAgICAgICAgdGhpcy5wbGF5UGxheWVyQW5pbWF0aW9uKFwiaWRsZVwiLCBwbGF5ZXJQb3NpdGlvbiwgZmFjaW5nLCBmYWxzZSk7XG4gICAgICAgIHRoaXMucGxheUl0ZW1Ecm9wQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBjb21wbGV0aW9uSGFuZGxlcik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQoZXhwbG9kZUFuaW0uYW5pbWF0aW9ucywgXCJleHBsb2RlXCIpO1xuICAgIGlmKCFwbGFjZUJsb2NrKVxuICAgIHtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfVxuICB9XG5cbiAgcGxheUl0ZW1Ecm9wQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBjb21wbGV0aW9uSGFuZGxlcikge1xuICAgIHZhciBzcHJpdGUgPSB0aGlzLmNyZWF0ZU1pbmlCbG9jayhkZXN0cm95UG9zaXRpb25bMF0sIGRlc3Ryb3lQb3NpdGlvblsxXSwgYmxvY2tUeXBlKTtcbiAgICBzcHJpdGUuc29ydE9yZGVyID0gdGhpcy55VG9JbmRleChkZXN0cm95UG9zaXRpb25bMV0pICsgMjtcbiAgICB0aGlzLm9uQW5pbWF0aW9uRW5kKHRoaXMucGxheVNjYWxlZFNwZWVkKHNwcml0ZS5hbmltYXRpb25zLCBcImFuaW1hdGVcIiksICgpID0+IHtcbiAgICAgIHRoaXMucGxheUl0ZW1BY3F1aXJlQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBzcHJpdGUsIGNvbXBsZXRpb25IYW5kbGVyKTtcbiAgICB9KTtcbiAgfVxuXG4gIHBsYXlTY2FsZWRTcGVlZChhbmltYXRpb25NYW5hZ2VyLCBuYW1lKSB7XG4gICAgdmFyIGFuaW1hdGlvbiA9IGFuaW1hdGlvbk1hbmFnZXIuZ2V0QW5pbWF0aW9uKG5hbWUpO1xuICAgIGlmICghYW5pbWF0aW9uLm9yaWdpbmFsRnBzKSB7XG4gICAgICBhbmltYXRpb24ub3JpZ2luYWxGcHMgPSAxMDAwIC8gYW5pbWF0aW9uLmRlbGF5O1xuICAgIH1cbiAgICByZXR1cm4gYW5pbWF0aW9uTWFuYWdlci5wbGF5KG5hbWUsIHRoaXMuY29udHJvbGxlci5vcmlnaW5hbEZwc1RvU2NhbGVkKGFuaW1hdGlvbi5vcmlnaW5hbEZwcykpO1xuICB9XG5cbiAgcGxheUl0ZW1BY3F1aXJlQW5pbWF0aW9uKHBsYXllclBvc2l0aW9uLCBmYWNpbmcsIGRlc3Ryb3lQb3NpdGlvbiwgYmxvY2tUeXBlLCBzcHJpdGUsIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdmFyIHR3ZWVuO1xuXG4gICAgdHdlZW4gPSB0aGlzLmFkZFJlc2V0dGFibGVUd2VlbihzcHJpdGUpLnRvKHtcbiAgICAgIHg6ICgtMTggKyA0MCAqIHBsYXllclBvc2l0aW9uWzBdKSxcbiAgICAgIHk6ICgtMzIgKyA0MCAqIHBsYXllclBvc2l0aW9uWzFdKVxuICAgIH0sIDIwMCwgUGhhc2VyLkVhc2luZy5MaW5lYXIuTm9uZSk7XG5cbiAgICB0d2Vlbi5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJjb2xsZWN0ZWRCbG9ja1wiKTtcbiAgICAgIHNwcml0ZS5raWxsKCk7XG4gICAgICB0aGlzLnRvRGVzdHJveS5wdXNoKHNwcml0ZSk7XG4gICAgICBjb21wbGV0aW9uSGFuZGxlcigpO1xuICAgIH0pO1xuXG4gICAgdHdlZW4uc3RhcnQoKTtcbiAgfVxuXG4gIHNldFBsYXllclBvc2l0aW9uKHgsIHksIGlzT25CbG9jaykge1xuICAgIHRoaXMucGxheWVyU3ByaXRlLnggPSAtMTggKyA0MCAqIHg7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUueSA9IC0zMiArIChpc09uQmxvY2sgPyAtMjMgOiAwKSArIDQwICogeTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHkpICsgNTtcbiAgfVxuXG4gIHNldFNlbGVjdGlvbkluZGljYXRvclBvc2l0aW9uKHgsIHkpIHtcbiAgICB0aGlzLnNlbGVjdGlvbkluZGljYXRvci54ID0gLTM1ICsgMjMgKyA0MCAqIHg7XG4gICAgdGhpcy5zZWxlY3Rpb25JbmRpY2F0b3IueSA9IC01NSArIDQzICsgNDAgKiB5O1xuICB9XG5cbiAgY3JlYXRlUGxhbmVzKCkge1xuICAgIHRoaXMuZ3JvdW5kUGxhbmUgPSB0aGlzLmdhbWUuYWRkLmdyb3VwKCk7XG4gICAgdGhpcy5ncm91bmRQbGFuZS55T2Zmc2V0ID0gLTI7XG4gICAgdGhpcy5zaGFkaW5nUGxhbmUgPSB0aGlzLmdhbWUuYWRkLmdyb3VwKCk7XG4gICAgdGhpcy5zaGFkaW5nUGxhbmUueU9mZnNldCA9IC0yO1xuICAgIHRoaXMuYWN0aW9uUGxhbmUgPSB0aGlzLmdhbWUuYWRkLmdyb3VwKCk7XG4gICAgdGhpcy5hY3Rpb25QbGFuZS55T2Zmc2V0ID0gLTIyO1xuICAgIHRoaXMuZmx1ZmZQbGFuZSA9IHRoaXMuZ2FtZS5hZGQuZ3JvdXAoKTtcbiAgICB0aGlzLmZsdWZmUGxhbmUueU9mZnNldCA9IC0xNjA7XG4gICAgdGhpcy5mb3dQbGFuZSA9IHRoaXMuZ2FtZS5hZGQuZ3JvdXAoKTtcbiAgICB0aGlzLmZvd1BsYW5lLnlPZmZzZXQgPSAwO1xuICB9XG5cbiAgcmVzZXRQbGFuZXMobGV2ZWxEYXRhKSB7XG4gICAgdmFyIHNwcml0ZSxcbiAgICAgICAgeCxcbiAgICAgICAgeSxcbiAgICAgICAgaSxcbiAgICAgICAgYmxvY2tUeXBlLFxuICAgICAgICBmcmFtZUxpc3Q7XG5cbiAgICB0aGlzLmdyb3VuZFBsYW5lLnJlbW92ZUFsbCh0cnVlKTtcbiAgICB0aGlzLmFjdGlvblBsYW5lLnJlbW92ZUFsbCh0cnVlKTtcbiAgICB0aGlzLmZsdWZmUGxhbmUucmVtb3ZlQWxsKHRydWUpO1xuICAgIHRoaXMuc2hhZGluZ1BsYW5lLnJlbW92ZUFsbCh0cnVlKTtcbiAgICB0aGlzLmZvd1BsYW5lLnJlbW92ZUFsbCh0cnVlKTtcblxuICAgIHRoaXMuYmFzZVNoYWRpbmcgPSB0aGlzLmdhbWUuYWRkLmdyb3VwKCk7XG5cbiAgICBmb3IgKHZhciBzaGFkZVggPSAwOyBzaGFkZVggPCB0aGlzLmNvbnRyb2xsZXIubGV2ZWxNb2RlbC5wbGFuZVdpZHRoICogNDA7IHNoYWRlWCArPSA0MDApIHtcbiAgICAgIGZvciAodmFyIHNoYWRlWSA9IDA7IHNoYWRlWSA8IHRoaXMuY29udHJvbGxlci5sZXZlbE1vZGVsLnBsYW5lSGVpZ2h0ICogNDA7IHNoYWRlWSArPSA0MDApIHtcbiAgICAgICAgdGhpcy5iYXNlU2hhZGluZy5jcmVhdGUoc2hhZGVYLCBzaGFkZVksICdzaGFkZUxheWVyJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5yZWZyZXNoR3JvdW5kUGxhbmUoKTtcblxuICAgIHRoaXMuYWN0aW9uUGxhbmVCbG9ja3MgPSBbXTtcbiAgICBmb3IgKHkgPSAwOyB5IDwgdGhpcy5jb250cm9sbGVyLmxldmVsTW9kZWwucGxhbmVIZWlnaHQ7ICsreSkge1xuICAgICAgZm9yICh4ID0gMDsgeCA8IHRoaXMuY29udHJvbGxlci5sZXZlbE1vZGVsLnBsYW5lV2lkdGg7ICsreCkge1xuICAgICAgICBsZXQgYmxvY2tJbmRleCA9ICh0aGlzLnlUb0luZGV4KHkpKSArIHg7XG4gICAgICAgIHNwcml0ZSA9IG51bGw7XG5cbiAgICAgICAgaWYgKCFsZXZlbERhdGEuZ3JvdW5kRGVjb3JhdGlvblBsYW5lW2Jsb2NrSW5kZXhdLmlzRW1wdHkpIHtcbiAgICAgICAgICBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuYWN0aW9uUGxhbmUsIHgsIHksIGxldmVsRGF0YS5ncm91bmREZWNvcmF0aW9uUGxhbmVbYmxvY2tJbmRleF0uYmxvY2tUeXBlKTtcbiAgICAgICAgICBpZiAoc3ByaXRlKSB7XG4gICAgICAgICAgICBzcHJpdGUuc29ydE9yZGVyID0gdGhpcy55VG9JbmRleCh5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzcHJpdGUgPSBudWxsO1xuICAgICAgICBpZiAoIWxldmVsRGF0YS5hY3Rpb25QbGFuZVtibG9ja0luZGV4XS5pc0VtcHR5KSB7XG4gICAgICAgICAgYmxvY2tUeXBlID0gbGV2ZWxEYXRhLmFjdGlvblBsYW5lW2Jsb2NrSW5kZXhdLmJsb2NrVHlwZTtcbiAgICAgICAgICBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuYWN0aW9uUGxhbmUsIHgsIHksIGJsb2NrVHlwZSk7XG4gICAgICAgICAgaWYgKHNwcml0ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgc3ByaXRlLnNvcnRPcmRlciA9IHRoaXMueVRvSW5kZXgoeSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5hY3Rpb25QbGFuZUJsb2Nrcy5wdXNoKHNwcml0ZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh5ID0gMDsgeSA8IHRoaXMuY29udHJvbGxlci5sZXZlbE1vZGVsLnBsYW5lSGVpZ2h0OyArK3kpIHtcbiAgICAgIGZvciAoeCA9IDA7IHggPCB0aGlzLmNvbnRyb2xsZXIubGV2ZWxNb2RlbC5wbGFuZVdpZHRoOyArK3gpIHtcbiAgICAgICAgbGV0IGJsb2NrSW5kZXggPSAodGhpcy55VG9JbmRleCh5KSkgKyB4O1xuICAgICAgICBpZiAoIWxldmVsRGF0YS5mbHVmZlBsYW5lW2Jsb2NrSW5kZXhdLmlzRW1wdHkpIHtcbiAgICAgICAgICBzcHJpdGUgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuZmx1ZmZQbGFuZSwgeCwgeSwgbGV2ZWxEYXRhLmZsdWZmUGxhbmVbYmxvY2tJbmRleF0uYmxvY2tUeXBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJlZnJlc2hHcm91bmRQbGFuZSgpIHtcbiAgICB0aGlzLmdyb3VuZFBsYW5lLnJlbW92ZUFsbCh0cnVlKTtcbiAgICBmb3IgKHZhciB5ID0gMDsgeSA8IHRoaXMuY29udHJvbGxlci5sZXZlbE1vZGVsLnBsYW5lSGVpZ2h0OyArK3kpIHtcbiAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgdGhpcy5jb250cm9sbGVyLmxldmVsTW9kZWwucGxhbmVXaWR0aDsgKyt4KSB7XG4gICAgICAgIGxldCBibG9ja0luZGV4ID0gKHRoaXMueVRvSW5kZXgoeSkpICsgeDtcbiAgICAgICAgdmFyIHNwcml0ZSA9IHRoaXMuY3JlYXRlQmxvY2sodGhpcy5ncm91bmRQbGFuZSwgeCwgeSwgdGhpcy5jb250cm9sbGVyLmxldmVsTW9kZWwuZ3JvdW5kUGxhbmVbYmxvY2tJbmRleF0uYmxvY2tUeXBlKTtcbiAgICAgICAgaWYgKHNwcml0ZSkge1xuICAgICAgICAgIHNwcml0ZS5zb3J0T3JkZXIgPSB0aGlzLnlUb0luZGV4KHkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlU2hhZGluZ1BsYW5lKHNoYWRpbmdEYXRhKSB7XG4gICAgdmFyIGluZGV4LCBzaGFkb3dJdGVtLCBzeCwgc3ksIGF0bGFzO1xuXG4gICAgdGhpcy5zaGFkaW5nUGxhbmUucmVtb3ZlQWxsKCk7XG5cbiAgICB0aGlzLnNoYWRpbmdQbGFuZS5hZGQodGhpcy5iYXNlU2hhZGluZyk7XG4gICAgdGhpcy5zaGFkaW5nUGxhbmUuYWRkKHRoaXMuc2VsZWN0aW9uSW5kaWNhdG9yKTtcblxuICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IHNoYWRpbmdEYXRhLmxlbmd0aDsgKytpbmRleCkge1xuICAgICAgc2hhZG93SXRlbSA9IHNoYWRpbmdEYXRhW2luZGV4XTtcblxuICAgICAgYXRsYXMgPSBcIkFPXCI7XG4gICAgICBzeCA9IDQwICogc2hhZG93SXRlbS54O1xuICAgICAgc3kgPSAtMjIgKyA0MCAqIHNoYWRvd0l0ZW0ueTtcblxuICAgICAgc3dpdGNoIChzaGFkb3dJdGVtLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIkFPZWZmZWN0X0xlZnRcIjpcbiAgICAgICAgICBzeCArPSAyNjtcbiAgICAgICAgICBzeSArPSAyMjtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFwiQU9lZmZlY3RfUmlnaHRcIjpcbiAgICAgICAgICBzeCArPSAwO1xuICAgICAgICAgIHN5ICs9IDIyO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJBT2VmZmVjdF9Cb3R0b21cIjpcbiAgICAgICAgICBzeCArPSAwO1xuICAgICAgICAgIHN5ICs9IDIyO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJBT2VmZmVjdF9Cb3R0b21MZWZ0XCI6XG4gICAgICAgICAgc3ggKz0gMjU7XG4gICAgICAgICAgc3kgKz0gMjI7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcIkFPZWZmZWN0X0JvdHRvbVJpZ2h0XCI6XG4gICAgICAgICAgc3ggKz0gMDtcbiAgICAgICAgICBzeSArPSAyMjtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFwiQU9lZmZlY3RfVG9wXCI6XG4gICAgICAgICAgc3ggKz0gMDtcbiAgICAgICAgICBzeSArPSA0NztcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFwiQU9lZmZlY3RfVG9wTGVmdFwiOlxuICAgICAgICAgIHN4ICs9IDI1O1xuICAgICAgICAgIHN5ICs9IDQ3O1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgXCJBT2VmZmVjdF9Ub3BSaWdodFwiOlxuICAgICAgICAgIHN4ICs9IDA7XG4gICAgICAgICAgc3kgKz0gNDc7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcIlNoYWRvd19QYXJ0c19GYWRlX2Jhc2UucG5nXCI6XG4gICAgICAgICAgYXRsYXMgPSBcImJsb2NrU2hhZG93c1wiO1xuICAgICAgICAgIHN4IC09IDUyO1xuICAgICAgICAgIHN5ICs9IDA7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSBcIlNoYWRvd19QYXJ0c19GYWRlX3RvcC5wbmdcIjpcbiAgICAgICAgICBhdGxhcyA9IFwiYmxvY2tTaGFkb3dzXCI7XG4gICAgICAgICAgc3ggLT0gNTI7XG4gICAgICAgICAgc3kgKz0gMDtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgdGhpcy5zaGFkaW5nUGxhbmUuY3JlYXRlKHN4LCBzeSwgYXRsYXMsIHNoYWRvd0l0ZW0udHlwZSk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlRm93UGxhbmUoZm93RGF0YSkge1xuICAgIHZhciBpbmRleCwgZngsIGZ5LCBhdGxhcztcblxuICAgIHRoaXMuZm93UGxhbmUucmVtb3ZlQWxsKCk7XG5cbiAgICBmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBmb3dEYXRhLmxlbmd0aDsgKytpbmRleCkge1xuICAgICAgbGV0IGZvd0l0ZW0gPSBmb3dEYXRhW2luZGV4XTtcblxuICAgICAgaWYgKGZvd0l0ZW0gIT09IFwiXCIpIHtcbiAgICAgICAgYXRsYXMgPSBcInVuZGVyZ3JvdW5kRm93XCI7XG4gICAgICAgIGZ4ID0gLTQwICsgNDAgKiBmb3dJdGVtLng7XG4gICAgICAgIGZ5ID0gLTQwICsgNDAgKiBmb3dJdGVtLnk7XG5cbiAgICAgICAgc3dpdGNoIChmb3dJdGVtLnR5cGUpIHtcbiAgICAgICAgICBjYXNlIFwiRm9nT2ZXYXJfQ2VudGVyXCI6XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZm93UGxhbmUuY3JlYXRlKGZ4LCBmeSwgYXRsYXMsIGZvd0l0ZW0udHlwZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcGxheVJhbmRvbVBsYXllcklkbGUoZmFjaW5nKSB7XG4gICAgdmFyIGZhY2luZ05hbWUsXG4gICAgICAgIHJhbmQsXG4gICAgICAgIGFuaW1hdGlvbk5hbWU7XG5cbiAgICBmYWNpbmdOYW1lID0gdGhpcy5nZXREaXJlY3Rpb25OYW1lKGZhY2luZyk7XG4gICAgcmFuZCA9IE1hdGgudHJ1bmMoTWF0aC5yYW5kb20oKSAqIDQpICsgMTtcblxuICAgIHN3aXRjaChyYW5kKVxuICAgIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgIGFuaW1hdGlvbk5hbWUgPSBcImlkbGVcIjtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgYW5pbWF0aW9uTmFtZSA9IFwibG9va0xlZnRcIjtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzOlxuICAgICAgYW5pbWF0aW9uTmFtZSA9IFwibG9va1JpZ2h0XCI7XG4gICAgICBicmVhaztcbiAgICAgIGNhc2UgNDpcbiAgICAgIGFuaW1hdGlvbk5hbWUgPSBcImxvb2tBdENhbVwiO1xuICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgIH1cblxuICAgIGFuaW1hdGlvbk5hbWUgKz0gZmFjaW5nTmFtZTtcbiAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBhbmltYXRpb25OYW1lKTtcbiAgfVxuXG4gIGdlbmVyYXRlUGxheWVyQ2VsZWJyYXRlRnJhbWVzKCkge1xuICAgIHZhciBmcmFtZUxpc3QgPSBbXSxcbiAgICAgICAgaTtcblxuICAgIC8vQ3JvdWNoIERvd25cbiAgIC8qIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDI5LCAzMiwgXCJcIiwgMykpO1xuICAgIC8vQ3JvdWNoIERvd25cbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyOSwgMzIsIFwiXCIsIDMpKTtcbiAgICAvL3R1cm4gYW5kIHBhdXNlXG4gICAgZm9yIChpID0gMDsgaSA8IDQ7ICsraSkge1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMDYxXCIpO1xuICAgIH1cbiAgICBmb3IgKGkgPSAwOyBpIDwgMjsgKytpKSB7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8xNDlcIik7XG4gICAgfVxuICAgICAgICAvL0Nyb3VjaCBVcFxuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDE0OSwgMTUyLCBcIlwiLCAzKSk7XG4gICAgLy9Dcm91Y2ggVXBcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAxNDksIDE1MiwgXCJcIiwgMykpOyovXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vQWx0ZXJuYXRpdmUgQW5pbWF0aW9uLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgLy9GYWNlIERvd25cbiAgICAgZm9yIChpID0gMDsgaSA8IDY7ICsraSkge1xuICAgICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDAxXCIpO1xuICAgIH1cbiAgICAvL0Nyb3VjaCBMZWZ0XG4gICAgLy9mcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyMDksIDIxMiwgXCJcIiwgMykpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjA5XCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjA5XCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjExXCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjExXCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjExXCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjExXCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjA5XCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjA5XCIpO1xuICAgIGZyYW1lTGlzdCA9IGZyYW1lTGlzdC5jb25jYXQoXCJQbGF5ZXJfMjA5XCIpO1xuICAgIC8vQ3JvdWNoIExlZnRcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIxMVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIxMVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIxMVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIxMVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIwOVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIwOVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzIwOVwiKTtcbiAgICAvL0Nyb3VjaCBSaWdodFxuICAgIC8vZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgODksIDkyLCBcIlwiLCAzKSk7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wODlcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wODlcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wOTFcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wOTFcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wOTFcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wOTFcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wODlcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wODlcIik7XG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChcIlBsYXllcl8wODlcIik7XG4gICAgLy9Dcm91Y2ggUmlnaHRcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA5MVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA5MVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA5MVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA5MVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA4OVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA4OVwiKTtcbiAgICBmcmFtZUxpc3QgPSBmcmFtZUxpc3QuY29uY2F0KFwiUGxheWVyXzA4OVwiKTtcbiAgICAvL0ZhY2UgRG93biAoZm9yIHBhdXNlKVxuICAgICBmb3IgKGkgPSAwOyBpIDwgMzsgKytpKSB7XG4gICAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wMDFcIik7XG4gICAgfVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgICAvL0p1bXAgc3VjY2Vzc1xuICAgIC8qZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjg1LCAyOTYsIFwiXCIsIDMpKTtcbiAgICAvL2Zyb2xpY2sgY2VsZWJyYXRlXG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMzcsIDQ0LCBcIlwiLCAzKSk7Ki9cbiAgICAvL2xvb2sgYXQgY2FtXG4gICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjYzLCAyNjIsIFwiXCIsIDMpKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XG4gICAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8yNjJcIik7XG4gICAgfVxuICAgIHJldHVybiBmcmFtZUxpc3Q7XG4gIH1cblxuICBnZW5lcmF0ZUZyYW1lc1dpdGhFbmREZWxheShmcmFtZU5hbWUsIHN0YXJ0RnJhbWUsIGVuZEZyYW1lLCBlbmRGcmFtZUZ1bGxOYW1lLCBidWZmZXIsIGZyYW1lRGVsYXkpIHtcbiAgICB2YXIgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoZnJhbWVOYW1lLCBzdGFydEZyYW1lLCBlbmRGcmFtZSwgXCJcIiwgYnVmZmVyKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZyYW1lRGVsYXk7ICsraSkge1xuICAgICAgZnJhbWVMaXN0LnB1c2goZW5kRnJhbWVGdWxsTmFtZSk7XG4gICAgfVxuICAgIHJldHVybiBmcmFtZUxpc3Q7XG4gIH1cblxuICBwcmVwYXJlUGxheWVyU3ByaXRlKHBsYXllck5hbWUpIHtcbiAgICB2YXIgZnJhbWVMaXN0LFxuICAgICAgICBnZW5GcmFtZXMsXG4gICAgICAgIGksXG4gICAgICAgIHNpbmdsZVB1bmNoLFxuICAgICAgICBqdW1wQ2VsZWJyYXRlRnJhbWVzLFxuICAgICAgICBpZGxlRnJhbWVSYXRlID0gMTA7XG5cbiAgICBsZXQgZnJhbWVSYXRlID0gMjA7XG5cbiAgICB0aGlzLnBsYXllclNwcml0ZSA9IHRoaXMuYWN0aW9uUGxhbmUuY3JlYXRlKDAsIDAsIGBwbGF5ZXIke3BsYXllck5hbWV9YCwgJ1BsYXllcl8xMjEnKTtcbiAgICBpZiAodGhpcy5jb250cm9sbGVyLmZvbGxvd2luZ1BsYXllcigpKSB7XG4gICAgICB0aGlzLmdhbWUuY2FtZXJhLmZvbGxvdyh0aGlzLnBsYXllclNwcml0ZSk7XG4gICAgfVxuICAgIHRoaXMucGxheWVyR2hvc3QgPSB0aGlzLmZsdWZmUGxhbmUuY3JlYXRlKDAsIDAsIGBwbGF5ZXIke3BsYXllck5hbWV9YCwgJ1BsYXllcl8xMjEnKTtcbiAgICB0aGlzLnBsYXllckdob3N0LnBhcmVudCA9IHRoaXMucGxheWVyU3ByaXRlO1xuICAgIHRoaXMucGxheWVyR2hvc3QuYWxwaGEgPSAwLjI7XG5cbiAgICB0aGlzLnNlbGVjdGlvbkluZGljYXRvciA9IHRoaXMuc2hhZGluZ1BsYW5lLmNyZWF0ZSgyNCwgNDQsICdzZWxlY3Rpb25JbmRpY2F0b3InKTtcblxuICAgIGp1bXBDZWxlYnJhdGVGcmFtZXMgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjg1LCAyOTYsIFwiXCIsIDMpO1xuXG4gICAgZnJhbWVMaXN0ID0gW107XG5cbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wMDFcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDAzXCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzAwMVwiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wMDdcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDA5XCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzAwN1wiKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XG4gICAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wMDFcIik7XG4gICAgfVxuXG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2lkbGVfZG93bicsIGZyYW1lTGlzdCwgZnJhbWVSYXRlIC8gMywgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5UmFuZG9tUGxheWVySWRsZShGYWNpbmdEaXJlY3Rpb24uRG93bik7XG4gICAgfSk7XG4gICAgZnJhbWVMaXN0ID0gdGhpcy5nZW5lcmF0ZUZyYW1lc1dpdGhFbmREZWxheShcIlBsYXllcl9cIiwgNiwgNSwgXCJQbGF5ZXJfMDA1XCIsIDMsIDUpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzAwNlwiKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbG9va0xlZnRfZG93bicsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfZG93blwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCAxMiwgMTEsIFwiUGxheWVyXzAxMVwiLCAzLCA1KTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wMTJcIik7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2xvb2tSaWdodF9kb3duJywgZnJhbWVMaXN0LCBpZGxlRnJhbWVSYXRlLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVQYXVzZV9kb3duXCIpO1xuICAgIH0pO1xuICAgIGZyYW1lTGlzdCA9IHRoaXMuZ2VuZXJhdGVGcmFtZXNXaXRoRW5kRGVsYXkoXCJQbGF5ZXJfXCIsIDI2MywgMjYyLCBcIlBsYXllcl8yNjJcIiwgMywgNSk7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMjYzXCIpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdsb29rQXRDYW1fZG93bicsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfZG93blwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgMTM7ICsraSkge1xuICAgICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDAxXCIpO1xuICAgIH1cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnaWRsZVBhdXNlX2Rvd24nLCBmcmFtZUxpc3QsIGZyYW1lUmF0ZSAvIDMsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKT0+IHtcbiAgICAgIHRoaXMucGxheVJhbmRvbVBsYXllcklkbGUoRmFjaW5nRGlyZWN0aW9uLkRvd24pO1xuICAgIH0pO1xuXG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ3dhbGtfZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAxMywgZnJhbWVSYXRlLCBcIlwiLCAzKSwgZnJhbWVSYXRlLCB0cnVlKTtcbiAgICBzaW5nbGVQdW5jaCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyMSwgMjQsIFwiXCIsIDMpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdwdW5jaF9kb3duJywgc2luZ2xlUHVuY2gsIGZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcInB1bmNoXCIpO1xuICAgIH0pO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdwdW5jaERlc3Ryb3lfZG93bicsIHNpbmdsZVB1bmNoLmNvbmNhdChzaW5nbGVQdW5jaCkuY29uY2F0KHNpbmdsZVB1bmNoKSwgZnJhbWVSYXRlLCBmYWxzZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2h1cnRfZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyNSwgMjgsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdjcm91Y2hfZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyOSwgMzIsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdqdW1wVXBfZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAzMywgMzYsIFwiXCIsIDMpLCBmcmFtZVJhdGUgLyAyLCB0cnVlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnZmFpbF9kb3duJywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDQ1LCA0OCwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdjZWxlYnJhdGVfZG93bicsIHRoaXMuZ2VuZXJhdGVQbGF5ZXJDZWxlYnJhdGVGcmFtZXMoKSwgZnJhbWVSYXRlIC8gMiwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdidW1wX2Rvd24nLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgNDksIDU0LCBcIlwiLCAzKSwgZnJhbWVSYXRlLCBmYWxzZSkub25TdGFydC5hZGQoKCkgPT4ge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiYnVtcFwiKTtcbiAgICB9KTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnanVtcERvd25fZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCA1NSwgNjAsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lX2Rvd24nLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjQxLCAyNDQsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lQ2FydF9kb3duJywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJNaW5lY2FydF9cIiwgNSwgNSwgXCJcIiwgMiksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lQ2FydF90dXJubGVmdF9kb3duJywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJNaW5lY2FydF9cIiwgNiwgNiwgXCJcIiwgMiksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lQ2FydF90dXJucmlnaHRfZG93bicsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiTWluZWNhcnRfXCIsIDEyLCAxMiwgXCJcIiwgMiksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuXG4gICAgZnJhbWVMaXN0ID0gW107XG5cbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wNjFcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDYzXCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzA2MVwiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wNjdcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDY5XCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzA2N1wiKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgNTsgKytpKSB7XG4gICAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wNjFcIik7XG4gICAgfVxuXG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2lkbGVfcmlnaHQnLCBmcmFtZUxpc3QsIGZyYW1lUmF0ZSAvIDMsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKT0+IHtcbiAgICAgIHRoaXMucGxheVJhbmRvbVBsYXllcklkbGUoRmFjaW5nRGlyZWN0aW9uLlJpZ2h0KTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCA2NiwgNjUsIFwiUGxheWVyXzA2NVwiLCAzLCA1KTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wNjZcIik7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2xvb2tMZWZ0X3JpZ2h0JywgZnJhbWVMaXN0LCBpZGxlRnJhbWVSYXRlLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVQYXVzZV9yaWdodFwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCA3MiwgNzEsIFwiUGxheWVyXzA3MVwiLCAzLCA1KTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8wNzJcIik7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2xvb2tSaWdodF9yaWdodCcsZnJhbWVMaXN0LCBpZGxlRnJhbWVSYXRlLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVQYXVzZV9yaWdodFwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCAyNzAsIDI2OSwgXCJQbGF5ZXJfMjY5XCIsIDMsIDUpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzI3MFwiKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbG9va0F0Q2FtX3JpZ2h0JywgZnJhbWVMaXN0LCBpZGxlRnJhbWVSYXRlLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVQYXVzZV9yaWdodFwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgMTM7ICsraSkge1xuICAgICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMDYxXCIpO1xuICAgIH1cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnaWRsZVBhdXNlX3JpZ2h0JywgZnJhbWVMaXN0LCBmcmFtZVJhdGUgLyAzLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlSYW5kb21QbGF5ZXJJZGxlKEZhY2luZ0RpcmVjdGlvbi5SaWdodCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnd2Fsa19yaWdodCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCA3MywgODAsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHNpbmdsZVB1bmNoID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDgxLCA4NCwgXCJcIiwgMyk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ3B1bmNoX3JpZ2h0Jywgc2luZ2xlUHVuY2gsIGZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcInB1bmNoXCIpO1xuICAgIH0pO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdwdW5jaERlc3Ryb3lfcmlnaHQnLCBzaW5nbGVQdW5jaC5jb25jYXQoc2luZ2xlUHVuY2gpLmNvbmNhdChzaW5nbGVQdW5jaCksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdodXJ0X3JpZ2h0JywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDg1LCA4OCwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2Nyb3VjaF9yaWdodCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCA4OSwgOTIsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdqdW1wVXBfcmlnaHQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgOTMsIDk2LCBcIlwiLCAzKSwgZnJhbWVSYXRlIC8gMiwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2ZhaWxfcmlnaHQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTA1LCAxMDgsIFwiXCIsIDMpLCBmcmFtZVJhdGUgLyAyLCBmYWxzZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2NlbGVicmF0ZV9yaWdodCcsIHRoaXMuZ2VuZXJhdGVQbGF5ZXJDZWxlYnJhdGVGcmFtZXMoKSwgZnJhbWVSYXRlIC8gMiwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdidW1wX3JpZ2h0JywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDEwOSwgMTE0LCBcIlwiLCAzKSwgZnJhbWVSYXRlLCBmYWxzZSkub25TdGFydC5hZGQoKCkgPT4ge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiYnVtcFwiKTtcbiAgICB9KTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnanVtcERvd25fcmlnaHQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTE1LCAxMjAsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lX3JpZ2h0JywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDI0NSwgMjQ4LCBcIlwiLCAzKSwgZnJhbWVSYXRlLCB0cnVlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbWluZUNhcnRfcmlnaHQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIk1pbmVjYXJ0X1wiLCA3LCA3LCBcIlwiLCAyKSwgZnJhbWVSYXRlLCBmYWxzZSk7XG5cbiAgICBmcmFtZUxpc3QgPSBbXTtcblxuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzE4MVwiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8xODNcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTgxXCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzE4N1wiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8xODlcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTg3XCIpO1xuICAgIGZvciAoaSA9IDA7IGkgPCA1OyArK2kpIHtcbiAgICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzE4MVwiKTtcbiAgICB9XG5cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnaWRsZV9sZWZ0JywgZnJhbWVMaXN0LCBmcmFtZVJhdGUgLyAzLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlSYW5kb21QbGF5ZXJJZGxlKEZhY2luZ0RpcmVjdGlvbi5MZWZ0KTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCAxODYsIDE4NSwgXCJQbGF5ZXJfMTg1XCIsIDMsIDUpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzE4NlwiKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbG9va0xlZnRfbGVmdCcsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZCh0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVQYXVzZV9sZWZ0XCIpO1xuICAgIH0pO1xuICAgIGZyYW1lTGlzdCA9IHRoaXMuZ2VuZXJhdGVGcmFtZXNXaXRoRW5kRGVsYXkoXCJQbGF5ZXJfXCIsIDE5MiwgMTkxLCBcIlBsYXllcl8xOTFcIiwgMywgNSk7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTkyXCIpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdsb29rUmlnaHRfbGVmdCcsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfbGVmdFwiKTtcbiAgICB9KTtcbiAgICBmcmFtZUxpc3QgPSB0aGlzLmdlbmVyYXRlRnJhbWVzV2l0aEVuZERlbGF5KFwiUGxheWVyX1wiLCAyODQsIDI4MywgXCJQbGF5ZXJfMjgzXCIsIDMsIDUpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzI4NFwiKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbG9va0F0Q2FtX2xlZnQnLCBmcmFtZUxpc3QsIGlkbGVGcmFtZVJhdGUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKT0+IHtcbiAgICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMsIFwiaWRsZVBhdXNlX2xlZnRcIik7XG4gICAgfSk7XG4gICAgZnJhbWVMaXN0ID0gW107XG4gICAgZm9yIChpID0gMDsgaSA8IDEzOyArK2kpIHtcbiAgICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzE4MVwiKTtcbiAgICB9XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2lkbGVQYXVzZV9sZWZ0JywgZnJhbWVMaXN0LCBmcmFtZVJhdGUgLyAzLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlSYW5kb21QbGF5ZXJJZGxlKEZhY2luZ0RpcmVjdGlvbi5MZWZ0KTtcbiAgICB9KTtcblxuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCd3YWxrX2xlZnQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTkzLCAyMDAsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHNpbmdsZVB1bmNoID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDIwMSwgMjA0LCBcIlwiLCAzKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgncHVuY2hfbGVmdCcsIHNpbmdsZVB1bmNoLCBmcmFtZVJhdGUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJwdW5jaFwiKTtcbiAgICB9KTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgncHVuY2hEZXN0cm95X2xlZnQnLCBzaW5nbGVQdW5jaC5jb25jYXQoc2luZ2xlUHVuY2gpLmNvbmNhdChzaW5nbGVQdW5jaCksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdodXJ0X2xlZnQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjA1LCAyMDgsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdjcm91Y2hfbGVmdCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyMDksIDIxMiwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2p1bXBVcF9sZWZ0JywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDIxMywgMjE2LCBcIlwiLCAzKSwgZnJhbWVSYXRlIC8gMiwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2ZhaWxfbGVmdCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyMjUsIDIyOCwgXCJcIiwgMyksIGZyYW1lUmF0ZSAvIDIsIGZhbHNlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnY2VsZWJyYXRlX2xlZnQnLCB0aGlzLmdlbmVyYXRlUGxheWVyQ2VsZWJyYXRlRnJhbWVzKCksIGZyYW1lUmF0ZSAvIDIsIGZhbHNlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnYnVtcF9sZWZ0JywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDIyOSwgMjM0LCBcIlwiLCAzKSwgZnJhbWVSYXRlLCBmYWxzZSkub25TdGFydC5hZGQoKCkgPT4ge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwiYnVtcFwiKTtcbiAgICB9KTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnanVtcERvd25fbGVmdCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyMzUsIDI0MCwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ21pbmVfbGVmdCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAyNTMsIDI1NiwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ21pbmVDYXJ0X2xlZnQnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIk1pbmVjYXJ0X1wiLCAxMSwgMTEsIFwiXCIsIDIpLCBmcmFtZVJhdGUsIGZhbHNlKTtcblxuICAgIGZyYW1lTGlzdCA9IFtdO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzEyMVwiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8xMjNcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTIxXCIpO1xuICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzEyN1wiKTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8xMjlcIik7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTI3XCIpO1xuICAgIGZvciAoaSA9IDA7IGkgPCA1OyArK2kpIHtcbiAgICAgIGZyYW1lTGlzdC5wdXNoKFwiUGxheWVyXzEyMVwiKTtcbiAgICB9XG5cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnaWRsZV91cCcsIGZyYW1lTGlzdCwgZnJhbWVSYXRlIC8gMywgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5UmFuZG9tUGxheWVySWRsZShGYWNpbmdEaXJlY3Rpb24uVXApO1xuICAgIH0pO1xuICAgIGZyYW1lTGlzdCA9IHRoaXMuZ2VuZXJhdGVGcmFtZXNXaXRoRW5kRGVsYXkoXCJQbGF5ZXJfXCIsIDEyNiwgMTI1LCBcIlBsYXllcl8xMjVcIiwgMywgNSk7XG4gICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTI2XCIpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdsb29rTGVmdF91cCcsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfdXBcIik7XG4gICAgfSk7XG4gICAgZnJhbWVMaXN0ID0gdGhpcy5nZW5lcmF0ZUZyYW1lc1dpdGhFbmREZWxheShcIlBsYXllcl9cIiwgMTMyLCAxMzEsIFwiUGxheWVyXzEzMVwiLCAzLCA1KTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8xMzJcIik7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2xvb2tSaWdodF91cCcsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfdXBcIik7XG4gICAgfSk7XG4gICAgZnJhbWVMaXN0ID0gdGhpcy5nZW5lcmF0ZUZyYW1lc1dpdGhFbmREZWxheShcIlBsYXllcl9cIiwgMjc3LCAyNzYsIFwiUGxheWVyXzI3NlwiLCAzLCA1KTtcbiAgICBmcmFtZUxpc3QucHVzaChcIlBsYXllcl8yNzdcIik7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2xvb2tBdENhbV91cCcsIGZyYW1lTGlzdCwgaWRsZUZyYW1lUmF0ZSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpPT4ge1xuICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQodGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlUGF1c2VfdXBcIik7XG4gICAgfSk7XG5cbiAgICBmcmFtZUxpc3QgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgMTM7ICsraSkge1xuICAgICAgZnJhbWVMaXN0LnB1c2goXCJQbGF5ZXJfMTIxXCIpO1xuICAgIH1cbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnaWRsZVBhdXNlX3VwJywgZnJhbWVMaXN0LCBmcmFtZVJhdGUgLyAzLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCk9PiB7XG4gICAgICB0aGlzLnBsYXlSYW5kb21QbGF5ZXJJZGxlKEZhY2luZ0RpcmVjdGlvbi5VcCk7XG4gICAgfSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ3dhbGtfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTMzLCAxNDAsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHNpbmdsZVB1bmNoID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJQbGF5ZXJfXCIsIDE0MSwgMTQ0LCBcIlwiLCAzKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgncHVuY2hfdXAnLCBzaW5nbGVQdW5jaCwgZnJhbWVSYXRlLCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgdGhpcy5hdWRpb1BsYXllci5wbGF5KFwicHVuY2hcIik7XG4gICAgfSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ3B1bmNoRGVzdHJveV91cCcsIHNpbmdsZVB1bmNoLmNvbmNhdChzaW5nbGVQdW5jaCkuY29uY2F0KHNpbmdsZVB1bmNoKSwgZnJhbWVSYXRlLCBmYWxzZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2h1cnRfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTQ1LCAxNDgsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdjcm91Y2hfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTQ5LCAxNTIsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdqdW1wVXBfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTUzLCAxNTYsIFwiXCIsIDMpLCBmcmFtZVJhdGUgLyAyLCB0cnVlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnZmFpbF91cCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAxNjUsIDE2OCwgXCJcIiwgMyksIGZyYW1lUmF0ZSAvIDIsIGZhbHNlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnY2VsZWJyYXRlX3VwJywgdGhpcy5nZW5lcmF0ZVBsYXllckNlbGVicmF0ZUZyYW1lcygpLCBmcmFtZVJhdGUgLyAyLCBmYWxzZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ2J1bXBfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMTY5LCAxNzQsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIGZhbHNlKS5vblN0YXJ0LmFkZCgoKSA9PiB7XG4gICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJidW1wXCIpO1xuICAgIH0pO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdqdW1wRG93bl91cCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiUGxheWVyX1wiLCAxNzUsIDE4MCwgXCJcIiwgMyksIGZyYW1lUmF0ZSwgdHJ1ZSk7XG4gICAgdGhpcy5wbGF5ZXJTcHJpdGUuYW5pbWF0aW9ucy5hZGQoJ21pbmVfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlBsYXllcl9cIiwgMjQ5LCAyNTIsIFwiXCIsIDMpLCBmcmFtZVJhdGUsIHRydWUpO1xuICAgIHRoaXMucGxheWVyU3ByaXRlLmFuaW1hdGlvbnMuYWRkKCdtaW5lQ2FydF91cCcsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiTWluZWNhcnRfXCIsIDksIDksIFwiXCIsIDIpLCBmcmFtZVJhdGUsIGZhbHNlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbWluZUNhcnRfdHVybmxlZnRfdXAnLCBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIk1pbmVjYXJ0X1wiLCAxMCwgMTAsIFwiXCIsIDIpLCBmcmFtZVJhdGUsIGZhbHNlKTtcbiAgICB0aGlzLnBsYXllclNwcml0ZS5hbmltYXRpb25zLmFkZCgnbWluZUNhcnRfdHVybnJpZ2h0X3VwJywgUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJNaW5lY2FydF9cIiwgOCwgOCwgXCJcIiwgMiksIGZyYW1lUmF0ZSwgZmFsc2UpO1xuICB9XG5cbiAgY3JlYXRlTWluaUJsb2NrKHgsIHksIGJsb2NrVHlwZSkge1xuICAgIHZhciBmcmFtZSA9IFwiXCIsXG4gICAgICAgIHNwcml0ZSA9IG51bGwsXG4gICAgICAgIGZyYW1lTGlzdCxcbiAgICAgICAgaSwgbGVuO1xuXG4gICAgc3dpdGNoIChibG9ja1R5cGUpIHtcbiAgICAgIGNhc2UgXCJ0cmVlQWNhY2lhXCI6XG4gICAgICBjYXNlIFwidHJlZUJpcmNoXCI6XG4gICAgICBjYXNlIFwidHJlZUp1bmdsZVwiOlxuICAgICAgY2FzZSBcInRyZWVPYWtcIjpcbiAgICAgIGNhc2UgXCJ0cmVlU3BydWNlXCI6XG4gICAgICAgIGZyYW1lID0gXCJsb2dcIiArIGJsb2NrVHlwZS5zdWJzdHJpbmcoNCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInN0b25lXCI6XG4gICAgICAgIGZyYW1lID0gXCJjb2JibGVzdG9uZVwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvcmVDb2FsXCI6XG4gICAgICAgIGZyYW1lID0gXCJjb2FsXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm9yZURpYW1vbmRcIjpcbiAgICAgICAgZnJhbWUgPSBcImRpYW1vbmRcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwib3JlSXJvblwiOlxuICAgICAgICBmcmFtZSA9IFwiaW5nb3RJcm9uXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIm9yZUxhcGlzXCI6XG4gICAgICAgIGZyYW1lID0gXCJsYXBpc0xhenVsaVwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvcmVHb2xkXCI6XG4gICAgICAgIGZyYW1lID0gXCJpbmdvdEdvbGRcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwib3JlRW1lcmFsZFwiOlxuICAgICAgICBmcmFtZSA9IFwiZW1lcmFsZFwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJvcmVSZWRzdG9uZVwiOlxuICAgICAgICBmcmFtZSA9IFwicmVkc3RvbmVEdXN0XCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcImdyYXNzXCI6XG4gICAgICAgIGZyYW1lID0gXCJkaXJ0XCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcIndvb2xfb3JhbmdlXCI6XG4gICAgICAgIGZyYW1lID0gXCJ3b29sXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBcInRudFwiOlxuICAgICAgICBmcmFtZSA9IFwiZ3VuUG93ZGVyXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgZnJhbWUgPSBibG9ja1R5cGU7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGxldCBhdGxhcyA9IFwibWluaUJsb2Nrc1wiO1xuICAgIGxldCBmcmFtZVByZWZpeCA9IHRoaXMubWluaUJsb2Nrc1tmcmFtZV1bMF07XG4gICAgbGV0IGZyYW1lU3RhcnQgPSB0aGlzLm1pbmlCbG9ja3NbZnJhbWVdWzFdO1xuICAgIGxldCBmcmFtZUVuZCA9IHRoaXMubWluaUJsb2Nrc1tmcmFtZV1bMl07XG4gICAgbGV0IHhPZmZzZXQgPSAtMTA7XG4gICAgbGV0IHlPZmZzZXQgPSAwO1xuXG4gICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoZnJhbWVQcmVmaXgsIGZyYW1lU3RhcnQsIGZyYW1lRW5kLCBcIlwiLCAzKTtcblxuICAgIHNwcml0ZSA9IHRoaXMuYWN0aW9uUGxhbmUuY3JlYXRlKHhPZmZzZXQgKyA0MCAqIHgsIHlPZmZzZXQgKyB0aGlzLmFjdGlvblBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBcIlwiKTtcbiAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJhbmltYXRlXCIsIGZyYW1lTGlzdCwgMTAsIGZhbHNlKTtcbiAgICByZXR1cm4gc3ByaXRlO1xuICB9XG5cbiAgcGxheUFuaW1hdGlvbldpdGhPZmZzZXQoc3ByaXRlLCBhbmltYXRpb25OYW1lLCBhbmltYXRpb25GcmFtZVRvdGFsLCBzdGFydEZyYW1lKXtcbiAgICB2YXIgcmFuZCA9IE1hdGgudHJ1bmMoTWF0aC5yYW5kb20oKSAqIGFuaW1hdGlvbkZyYW1lVG90YWwpICsgc3RhcnRGcmFtZTtcbiAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChzcHJpdGUuYW5pbWF0aW9ucywgYW5pbWF0aW9uTmFtZSkuc2V0RnJhbWUocmFuZCwgdHJ1ZSk7XG4gIH1cblxuICBwbGF5UmFuZG9tU2hlZXBBbmltYXRpb24oc3ByaXRlKSB7XG4gICAgdmFyIHJhbmQgPSBNYXRoLnRydW5jKE1hdGgucmFuZG9tKCkgKiAyMCArIDEpO1xuXG4gICAgc3dpdGNoKHJhbmQpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgIGNhc2UgMjpcbiAgICAgIGNhc2UgMzpcbiAgICAgIGNhc2UgNDpcbiAgICAgIGNhc2UgNTpcbiAgICAgIGNhc2UgNjpcbiAgICAgIC8vZWF0IGdyYXNzXG4gICAgICBzcHJpdGUucGxheShcImlkbGVcIik7XG4gICAgICBicmVhaztcbiAgICAgIGNhc2UgNzpcbiAgICAgIGNhc2UgODpcbiAgICAgIGNhc2UgOTpcbiAgICAgIGNhc2UgMTA6XG4gICAgICAvL2xvb2sgbGVmdFxuICAgICAgc3ByaXRlLnBsYXkoXCJsb29rTGVmdFwiKTtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAxMTpcbiAgICAgIGNhc2UgMTI6XG4gICAgICBjYXNlIDEzOlxuICAgICAgY2FzZSAxNDpcbiAgICAgIC8vbG9vayByaWdodFxuICAgICAgc3ByaXRlLnBsYXkoXCJsb29rUmlnaHRcIik7XG4gICAgICBicmVhaztcbiAgICAgIGNhc2UgMTU6XG4gICAgICBjYXNlIDE2OlxuICAgICAgY2FzZSAxNzpcbiAgICAgIC8vY2FtXG4gICAgICBzcHJpdGUucGxheShcImxvb2tBdENhbVwiKTtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAxODpcbiAgICAgIGNhc2UgMTk6XG4gICAgICAvL2tpY2tcbiAgICAgIHNwcml0ZS5wbGF5KFwia2lja1wiKTtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyMDpcbiAgICAgIC8vaWRsZVBhdXNlXG4gICAgICBzcHJpdGUucGxheShcImlkbGVQYXVzZVwiKTtcbiAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICB9XG4gIH1cblxuICBwbGF5UmFuZG9tQ3JlZXBlckFuaW1hdGlvbihzcHJpdGUpIHtcbiAgICB2YXIgcmFuZCA9IE1hdGgudHJ1bmModGhpcy55VG9JbmRleChNYXRoLnJhbmRvbSgpKSArIDEpO1xuXG4gICAgc3dpdGNoKHJhbmQpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgIGNhc2UgMjpcbiAgICAgIGNhc2UgMzpcbiAgICAgIC8vbG9vayBsZWZ0XG4gICAgICBzcHJpdGUucGxheShcImxvb2tMZWZ0XCIpO1xuICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDQ6XG4gICAgICBjYXNlIDU6XG4gICAgICBjYXNlIDY6XG4gICAgICAvL2xvb2sgcmlnaHRcbiAgICAgIHNwcml0ZS5wbGF5KFwibG9va1JpZ2h0XCIpO1xuICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDc6XG4gICAgICBjYXNlIDg6XG4gICAgICAvL2xvb2sgYXQgY2FtXG4gICAgICBzcHJpdGUucGxheShcImxvb2tBdENhbVwiKTtcbiAgICAgIGJyZWFrO1xuICAgICAgY2FzZSA5OlxuICAgICAgY2FzZSAxMDpcbiAgICAgIC8vc2h1ZmZsZSBmZWV0XG4gICAgICBzcHJpdGUucGxheShcImlkbGVcIik7XG4gICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgfVxuICB9XG5cbiAgY3JlYXRlQmxvY2socGxhbmUsIHgsIHksIGJsb2NrVHlwZSkge1xuICAgIHZhciBpLFxuICAgICAgICBzcHJpdGUgPSBudWxsLFxuICAgICAgICBmcmFtZUxpc3QsXG4gICAgICAgIGF0bGFzLFxuICAgICAgICBmcmFtZSxcbiAgICAgICAgeE9mZnNldCxcbiAgICAgICAgeU9mZnNldCxcbiAgICAgICAgc3RpbGxGcmFtZXM7XG5cbiAgICBzd2l0Y2ggKGJsb2NrVHlwZSkge1xuICAgICAgY2FzZSBcInRyZWVBY2FjaWFcIjpcbiAgICAgIGNhc2UgXCJ0cmVlQmlyY2hcIjpcbiAgICAgIGNhc2UgXCJ0cmVlSnVuZ2xlXCI6XG4gICAgICBjYXNlIFwidHJlZU9ha1wiOlxuICAgICAgY2FzZSBcInRyZWVTcHJ1Y2VcIjpcbiAgICAgICAgc3ByaXRlID0gdGhpcy5jcmVhdGVCbG9jayhwbGFuZSwgeCwgeSwgXCJsb2dcIiArIGJsb2NrVHlwZS5zdWJzdHJpbmcoNCkpO1xuICAgICAgICBzcHJpdGUuZmx1ZmYgPSB0aGlzLmNyZWF0ZUJsb2NrKHRoaXMuZmx1ZmZQbGFuZSwgeCwgeSwgXCJsZWF2ZXNcIiArIGJsb2NrVHlwZS5zdWJzdHJpbmcoNCkpO1xuXG4gICAgICAgIHNwcml0ZS5vbkJsb2NrRGVzdHJveSA9IChsb2dTcHJpdGUpID0+IHtcbiAgICAgICAgICBsb2dTcHJpdGUuZmx1ZmYuYW5pbWF0aW9ucy5hZGQoXCJkZXNwYXduXCIsIFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiTGVhdmVzXCIsIDAsIDYsIFwiXCIsIDApLCAxMCwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudG9EZXN0cm95LnB1c2gobG9nU3ByaXRlLmZsdWZmKTtcbiAgICAgICAgICAgIGxvZ1Nwcml0ZS5mbHVmZi5raWxsKCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChsb2dTcHJpdGUuZmx1ZmYuYW5pbWF0aW9ucywgXCJkZXNwYXduXCIpO1xuICAgICAgICB9O1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInNoZWVwXCI6XG4gICAgICAgIGxldCBzRnJhbWVzID0gMTA7XG4gICAgICAgIC8vIEZhY2luZyBMZWZ0OiBFYXQgR3Jhc3M6IDE5OS0yMTZcbiAgICAgICAgc3ByaXRlID0gcGxhbmUuY3JlYXRlKC0yMiArIDQwICogeCwgLTEyICsgNDAgKiB5LCBcInNoZWVwXCIsIFwiU2hlZXBfMTk5XCIpO1xuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlNoZWVwX1wiLCAxOTksIDIxNSwgXCJcIiwgMCk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBzRnJhbWVzOyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzIxNVwiKTtcbiAgICAgICAgfVxuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJpZGxlXCIsIGZyYW1lTGlzdCwgMTUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgc3ByaXRlLnBsYXkoXCJpZGxlUGF1c2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vTG9vayBSaWdodFxuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlNoZWVwX1wiLCAxODQsIDE4NiwgXCJcIiwgMCk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBzRnJhbWVzOyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzE4NlwiKTtcbiAgICAgICAgfVxuICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzE4OFwiKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwibG9va1JpZ2h0XCIsIGZyYW1lTGlzdCwgMTUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgc3ByaXRlLnBsYXkoXCJpZGxlUGF1c2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vTG9vayBMZWZ0XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiU2hlZXBfXCIsIDE5MywgMTk1LCBcIlwiLCAwKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNGcmFtZXM7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiU2hlZXBfMTk1XCIpO1xuICAgICAgICB9XG4gICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiU2hlZXBfMTk3XCIpO1xuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJsb29rTGVmdFwiLCBmcmFtZUxpc3QsIDE1LCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIHNwcml0ZS5wbGF5KFwiaWRsZVBhdXNlXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvL0tpY2tcbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJTaGVlcF9cIiwgMjE3LCAyMzMsIFwiXCIsIDApO1xuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJraWNrXCIsIGZyYW1lTGlzdCwgMTUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgc3ByaXRlLnBsYXkoXCJpZGxlUGF1c2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vTG9vayBBdCBDYW1lcmFcbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJTaGVlcF9cIiwgNDg0LCA0ODUsIFwiXCIsIDApO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc0ZyYW1lczsgKytpKSB7XG4gICAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJTaGVlcF80ODVcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJTaGVlcF80ODZcIik7XG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcImxvb2tBdENhbVwiLCBmcmFtZUxpc3QsIDE1LCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIHNwcml0ZS5wbGF5KFwiaWRsZVBhdXNlXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmcmFtZUxpc3QgPSBbXTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDE1OyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzIxNVwiKTtcbiAgICAgICAgfVxuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJpZGxlUGF1c2VcIiwgZnJhbWVMaXN0LCAxNSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXlSYW5kb21TaGVlcEFuaW1hdGlvbihzcHJpdGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBUT0RPKGJqb3JkYW4vZ2FhbGxlbikgLSB1cGRhdGUgb25jZSB1cGRhdGVkIFNoZWVwLmpzb25cbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJTaGVlcF9cIiwgNDkwLCA0OTEsIFwiXCIsIDApO1xuICAgICAgICBzdGlsbEZyYW1lcyA9IE1hdGgudHJ1bmMoTWF0aC5yYW5kb20oKSAqIDMpICsgMztcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHN0aWxsRnJhbWVzOyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzQ5MVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9uQW5pbWF0aW9uU3RhcnQoc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiZmFjZVwiLCBmcmFtZUxpc3QsIDIsIHRydWUpLCAoKT0+e1xuICAgICAgICAgIHRoaXMuYXVkaW9QbGF5ZXIucGxheShcInNoZWVwQmFhXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIlNoZWVwX1wiLCA0MzksIDQ1NSwgXCJcIiwgMCk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCAzOyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIlNoZWVwXzQ1NVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcInVzZWRcIiwgZnJhbWVMaXN0LCAxNSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMucGxheUFuaW1hdGlvbldpdGhPZmZzZXQoc3ByaXRlLFwiaWRsZVwiLDE3LCAxOTkpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImNyZWVwZXJcIjpcbiAgICAgICAgc3ByaXRlID0gcGxhbmUuY3JlYXRlKC02ICsgNDAgKiB4LCAwICsgcGxhbmUueU9mZnNldCArIDQwICogeSwgXCJjcmVlcGVyXCIsIFwiQ3JlZXBlcl8wNTNcIik7XG5cbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJDcmVlcGVyX1wiLCAzNywgNTEsIFwiXCIsIDMpO1xuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJleHBsb2RlXCIsIGZyYW1lTGlzdCwgMTAsIGZhbHNlKTtcblxuICAgICAgICAvL0xvb2sgTGVmdFxuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkNyZWVwZXJfXCIsIDQsIDcsIFwiXCIsIDMpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTU7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMDdcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJDcmVlcGVyXzAwOFwiKTtcbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJDcmVlcGVyXzAwOVwiKTtcbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJDcmVlcGVyXzAxMFwiKTtcbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJDcmVlcGVyXzAxMVwiKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwibG9va0xlZnRcIiwgZnJhbWVMaXN0LCAxNSwgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgICBzcHJpdGUucGxheShcImlkbGVQYXVzZVwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9Mb29rIFJpZ2h0XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiQ3JlZXBlcl9cIiwgMTYsIDE5LCBcIlwiLCAzKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IDE1OyArK2kpIHtcbiAgICAgICAgICBmcmFtZUxpc3QucHVzaChcIkNyZWVwZXJfMDE5XCIpO1xuICAgICAgICB9XG4gICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMjBcIik7XG4gICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMjFcIik7XG4gICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMjJcIik7XG4gICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMjNcIik7XG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcImxvb2tSaWdodFwiLCBmcmFtZUxpc3QsIDE1LCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIHNwcml0ZS5wbGF5KFwiaWRsZVBhdXNlXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvL0xvb2sgQXQgQ2FtXG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiQ3JlZXBlcl9cIiwgMjQ0LCAyNDUsIFwiXCIsIDMpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTU7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8yNDVcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJDcmVlcGVyXzI0NlwiKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwibG9va0F0Q2FtXCIsIGZyYW1lTGlzdCwgMTUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgc3ByaXRlLnBsYXkoXCJpZGxlUGF1c2VcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGZyYW1lTGlzdCA9IFtdO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgMTU7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMDRcIik7XG4gICAgICAgIH1cbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVBhdXNlXCIsIGZyYW1lTGlzdCwgMTUsIGZhbHNlKS5vbkNvbXBsZXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5wbGF5UmFuZG9tQ3JlZXBlckFuaW1hdGlvbihzcHJpdGUpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkNyZWVwZXJfXCIsIDUzLCA1OSwgXCJcIiwgMyk7XG4gICAgICAgIHN0aWxsRnJhbWVzID0gTWF0aC50cnVuYyh0aGlzLnlUb0luZGV4KE1hdGgucmFuZG9tKCkpKSArIDIwO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc3RpbGxGcmFtZXM7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiQ3JlZXBlcl8wMDRcIik7XG4gICAgICAgIH1cbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVwiLCBmcmFtZUxpc3QsIDE1LCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIHNwcml0ZS5wbGF5KFwiaWRsZVBhdXNlXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wbGF5QW5pbWF0aW9uV2l0aE9mZnNldChzcHJpdGUsIFwiaWRsZVwiLCA4LCA1Mik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiY3JvcFdoZWF0XCI6XG4gICAgICAgIGF0bGFzID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVswXTtcbiAgICAgICAgZnJhbWUgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzFdO1xuICAgICAgICB4T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsyXTtcbiAgICAgICAgeU9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bM107XG4gICAgICAgIHNwcml0ZSA9IHBsYW5lLmNyZWF0ZSh4T2Zmc2V0ICsgNDAgKiB4LCB5T2Zmc2V0ICsgcGxhbmUueU9mZnNldCArIDQwICogeSwgYXRsYXMsIGZyYW1lKTtcbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJXaGVhdFwiLCAwLCAyLCBcIlwiLCAwKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVwiLCBmcmFtZUxpc3QsIDAuNCwgZmFsc2UpO1xuICAgICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChzcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlXCIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInRvcmNoXCI6XG4gICAgICAgIGF0bGFzID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVswXTtcbiAgICAgICAgZnJhbWUgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzFdO1xuICAgICAgICB4T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsyXTtcbiAgICAgICAgeU9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bM107XG4gICAgICAgIHNwcml0ZSA9IHBsYW5lLmNyZWF0ZSh4T2Zmc2V0ICsgNDAgKiB4LCB5T2Zmc2V0ICsgcGxhbmUueU9mZnNldCArIDQwICogeSwgYXRsYXMsIGZyYW1lKTtcbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJUb3JjaFwiLCAwLCAyMywgXCJcIiwgMCk7XG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcImlkbGVcIiwgZnJhbWVMaXN0LCAxNSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKHNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVcIik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwid2F0ZXJcIjpcbiAgICAgICAgYXRsYXMgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzBdO1xuICAgICAgICBmcmFtZSA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMV07XG4gICAgICAgIHhPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzJdO1xuICAgICAgICB5T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVszXTtcbiAgICAgICAgc3ByaXRlID0gcGxhbmUuY3JlYXRlKHhPZmZzZXQgKyA0MCAqIHgsIHlPZmZzZXQgKyBwbGFuZS55T2Zmc2V0ICsgNDAgKiB5LCBhdGxhcywgZnJhbWUpO1xuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIldhdGVyX1wiLCAwLCA1LCBcIlwiLCAwKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVwiLCBmcmFtZUxpc3QsIDUsIHRydWUpO1xuICAgICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChzcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlXCIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgLy9mb3IgcGxhY2luZyB3ZXRsYW5kIGZvciBjcm9wcyBpbiBmcmVlIHBsYXlcbiAgICAgIGNhc2UgXCJ3YXRlcmluZ1wiOlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIHNwcml0ZS5raWxsKCk7XG4gICAgICAgIHRoaXMudG9EZXN0cm95LnB1c2goc3ByaXRlKTtcbiAgICAgICAgdGhpcy5jcmVhdGVCbG9jayh0aGlzLmdyb3VuZFBsYW5lLCB4LCB5LCBcImZhcm1sYW5kV2V0XCIpO1xuICAgICAgICB0aGlzLnJlZnJlc2hHcm91bmRQbGFuZSgpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImxhdmFcIjpcbiAgICAgICAgYXRsYXMgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzBdO1xuICAgICAgICBmcmFtZSA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMV07XG4gICAgICAgIHhPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzJdO1xuICAgICAgICB5T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVszXTtcbiAgICAgICAgc3ByaXRlID0gcGxhbmUuY3JlYXRlKHhPZmZzZXQgKyA0MCAqIHgsIHlPZmZzZXQgKyBwbGFuZS55T2Zmc2V0ICsgNDAgKiB5LCBhdGxhcywgZnJhbWUpO1xuICAgICAgICBmcmFtZUxpc3QgPSBQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkxhdmFfXCIsIDAsIDUsIFwiXCIsIDApO1xuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJpZGxlXCIsIGZyYW1lTGlzdCwgNSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMucGxheVNjYWxlZFNwZWVkKHNwcml0ZS5hbmltYXRpb25zLCBcImlkbGVcIik7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwibGF2YVBvcFwiOlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiTGF2YVBvcFwiLCAxLCA3LCBcIlwiLCAyKTtcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgNDsgKytpKSB7XG4gICAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJMYXZhUG9wMDdcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkxhdmFQb3BcIiwgOCwgMTMsIFwiXCIsIDIpKTtcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgMzsgKytpKSB7XG4gICAgICAgICAgZnJhbWVMaXN0LnB1c2goXCJMYXZhUG9wMTNcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChQaGFzZXIuQW5pbWF0aW9uLmdlbmVyYXRlRnJhbWVOYW1lcyhcIkxhdmFQb3BcIiwgMTQsIDMwLCBcIlwiLCAyKSk7XG4gICAgICAgIGZvcihpID0gMDsgaSA8IDg7ICsraSkge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiTGF2YVBvcDAxXCIpO1xuICAgICAgICB9XG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcImlkbGVcIiwgZnJhbWVMaXN0LCA1LCB0cnVlKTtcbiAgICAgICAgdGhpcy5wbGF5QW5pbWF0aW9uV2l0aE9mZnNldChzcHJpdGUsIFwiaWRsZVwiLCAyOSwgMSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIFwiZmlyZVwiOlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiRmlyZVwiLCAwLCAxNCwgXCJcIiwgMik7XG4gICAgICAgIHNwcml0ZS5hbmltYXRpb25zLmFkZChcImlkbGVcIiwgZnJhbWVMaXN0LCA1LCB0cnVlKTtcbiAgICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQoc3ByaXRlLmFuaW1hdGlvbnMsIFwiaWRsZVwiKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJidWJibGVzXCI6XG4gICAgICAgIGF0bGFzID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVswXTtcbiAgICAgICAgZnJhbWUgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzFdO1xuICAgICAgICB4T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsyXTtcbiAgICAgICAgeU9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bM107XG4gICAgICAgIHNwcml0ZSA9IHBsYW5lLmNyZWF0ZSh4T2Zmc2V0ICsgNDAgKiB4LCB5T2Zmc2V0ICsgcGxhbmUueU9mZnNldCArIDQwICogeSwgYXRsYXMsIGZyYW1lKTtcbiAgICAgICAgZnJhbWVMaXN0ID0gUGhhc2VyLkFuaW1hdGlvbi5nZW5lcmF0ZUZyYW1lTmFtZXMoXCJCdWJibGVzXCIsIDAsIDE0LCBcIlwiLCAyKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVwiLCBmcmFtZUxpc3QsIDUsIHRydWUpO1xuICAgICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChzcHJpdGUuYW5pbWF0aW9ucywgXCJpZGxlXCIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcImV4cGxvc2lvblwiOlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiRXhwbG9zaW9uXCIsIDAsIDE2LCBcIlwiLCAxKTtcbiAgICAgICAgc3ByaXRlLmFuaW1hdGlvbnMuYWRkKFwiaWRsZVwiLCBmcmFtZUxpc3QsIDE1LCBmYWxzZSkub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMudG9EZXN0cm95LnB1c2goc3ByaXRlKTtcbiAgICAgICAgICBzcHJpdGUua2lsbCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wbGF5U2NhbGVkU3BlZWQoc3ByaXRlLmFuaW1hdGlvbnMsIFwiaWRsZVwiKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgXCJkb29yXCI6XG4gICAgICAgIGF0bGFzID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVswXTtcbiAgICAgICAgZnJhbWUgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzFdO1xuICAgICAgICB4T2Zmc2V0ID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsyXTtcbiAgICAgICAgeU9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bM107XG4gICAgICAgIHNwcml0ZSA9IHBsYW5lLmNyZWF0ZSh4T2Zmc2V0ICsgNDAgKiB4LCB5T2Zmc2V0ICsgcGxhbmUueU9mZnNldCArIDQwICogeSwgYXRsYXMsIGZyYW1lKTtcblxuICAgICAgICBmcmFtZUxpc3QgPSBbXTtcbiAgICAgICAgbGV0IGFuaW1hdGlvbkZyYW1lcyA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiRG9vclwiLCAwLCAzLCBcIlwiLCAxKTtcbiAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8IDU7ICsrailcbiAgICAgICAge1xuICAgICAgICAgIGZyYW1lTGlzdC5wdXNoKFwiRG9vcjBcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnJhbWVMaXN0ID0gZnJhbWVMaXN0LmNvbmNhdChhbmltYXRpb25GcmFtZXMpO1xuXG4gICAgICAgIHZhciBhbmltYXRpb24gPSBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJvcGVuXCIsIGZyYW1lTGlzdCwgNSwgZmFsc2UpO1xuICAgICAgICBhbmltYXRpb24uZW5hYmxlVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgLy9wbGF5IHdoZW4gdGhlIGRvb3Igc3RhcnRzIG9wZW5pbmdcbiAgICAgICAgYW5pbWF0aW9uLm9uVXBkYXRlLmFkZCgoKSA9PiB7XG4gICAgICAgICAgaWYoYW5pbWF0aW9uLmZyYW1lID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmF1ZGlvUGxheWVyLnBsYXkoXCJkb29yT3BlblwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnBsYXlTY2FsZWRTcGVlZChzcHJpdGUuYW5pbWF0aW9ucywgXCJvcGVuXCIpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBcInRudFwiOlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIGZyYW1lTGlzdCA9IFBoYXNlci5BbmltYXRpb24uZ2VuZXJhdGVGcmFtZU5hbWVzKFwiVE5UZXhwbG9zaW9uXCIsIDAsIDgsIFwiXCIsIDApO1xuICAgICAgICBzcHJpdGUuYW5pbWF0aW9ucy5hZGQoXCJleHBsb2RlXCIsIGZyYW1lTGlzdCwgNywgZmFsc2UpLm9uQ29tcGxldGUuYWRkKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXlFeHBsb3Npb25DbG91ZEFuaW1hdGlvbihbeCx5XSk7XG4gICAgICAgICAgc3ByaXRlLmtpbGwoKTtcbiAgICAgICAgICB0aGlzLnRvRGVzdHJveS5wdXNoKHNwcml0ZSk7XG4gICAgICAgICAgdGhpcy5hY3Rpb25QbGFuZUJsb2Nrc1t0aGlzLmNvb3JkaW5hdGVzVG9JbmRleChbeCx5XSldID0gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBhdGxhcyA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMF07XG4gICAgICAgIGZyYW1lID0gdGhpcy5ibG9ja3NbYmxvY2tUeXBlXVsxXTtcbiAgICAgICAgeE9mZnNldCA9IHRoaXMuYmxvY2tzW2Jsb2NrVHlwZV1bMl07XG4gICAgICAgIHlPZmZzZXQgPSB0aGlzLmJsb2Nrc1tibG9ja1R5cGVdWzNdO1xuICAgICAgICBzcHJpdGUgPSBwbGFuZS5jcmVhdGUoeE9mZnNldCArIDQwICogeCwgeU9mZnNldCArIHBsYW5lLnlPZmZzZXQgKyA0MCAqIHksIGF0bGFzLCBmcmFtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiBzcHJpdGU7XG4gIH1cblxuICBvbkFuaW1hdGlvbkVuZChhbmltYXRpb24sIGNvbXBsZXRpb25IYW5kbGVyKSB7XG4gICAgdmFyIHNpZ25hbEJpbmRpbmcgPSBhbmltYXRpb24ub25Db21wbGV0ZS5hZGQoKCkgPT4ge1xuICAgICAgc2lnbmFsQmluZGluZy5kZXRhY2goKTtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfSk7XG4gIH1cblxuICBvbkFuaW1hdGlvblN0YXJ0KGFuaW1hdGlvbiwgY29tcGxldGlvbkhhbmRsZXIpIHtcbiAgICB2YXIgc2lnbmFsQmluZGluZyA9IGFuaW1hdGlvbi5vblN0YXJ0LmFkZCgoKSA9PiB7XG4gICAgICBzaWduYWxCaW5kaW5nLmRldGFjaCgpO1xuICAgICAgY29tcGxldGlvbkhhbmRsZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uQW5pbWF0aW9uTG9vcE9uY2UoYW5pbWF0aW9uLCBjb21wbGV0aW9uSGFuZGxlcikge1xuICAgIHZhciBzaWduYWxCaW5kaW5nID0gYW5pbWF0aW9uLm9uTG9vcC5hZGQoKCkgPT4ge1xuICAgICAgc2lnbmFsQmluZGluZy5kZXRhY2goKTtcbiAgICAgIGNvbXBsZXRpb25IYW5kbGVyKCk7XG4gICAgfSk7XG4gIH1cblxuICBhZGRSZXNldHRhYmxlVHdlZW4oc3ByaXRlKSB7XG4gICAgdmFyIHR3ZWVuID0gdGhpcy5nYW1lLmFkZC50d2VlbihzcHJpdGUpO1xuICAgIHRoaXMucmVzZXR0YWJsZVR3ZWVucy5wdXNoKHR3ZWVuKTtcbiAgICByZXR1cm4gdHdlZW47XG4gIH1cblxufVxuIl19","deps":{"./FacingDirection.js":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelView.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/game/LevelMVC/LevelView.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/houseLevels.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/houseLevels.js","source":"/*jshint multistr: true */\n/* global $ */\n\n\"use strict\";\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  houseA: {\n    groundPlane: [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n    verificationFunction: (function (verificationAPI) {\n      return verificationAPI.solutionMapMatchesResultMap(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'any', 'any', 'any', 'any', '', '', '', '', '', '', 'any', '', '', 'any', '', '', '', '', '', '', 'any', '', '', 'any', '', '', '', '', '', '', 'any', 'any', 'any', 'any', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']);\n    }).toString(),\n    blocksToStore: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'houseRightC', '', '', '', '', '', '', '', '', '', 'houseRightB', '', '', '', '', '', '', 'houseLeftA', '', '', 'houseRightA', '', '', '', '', '', '', 'houseBottomA', 'houseBottomB', 'houseBottomC', 'houseBottomD', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\n\n    houseBottomRight: [5, 5]\n  },\n  houseB: {\n    \"groundPlane\": [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n    \"groundDecorationPlane\": [\"\", \"\", \"\", \"\", \"\", \"tallGrasstallGrass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    \"actionPlane\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"houseBottomA\", \"houseBottomB\", \"houseBottomC\", \"houseBottomD\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    \"verificationFunction\": \"function (verificationAPI) {\\r\\n      return verificationAPI.solutionMapMatchesResultMap(\\r\\n            [\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"\\r\\n            ]);\\r\\n}\",\n    \"startBlocks\": \"<xml><block type=\\\"when_run\\\" deletable=\\\"false\\\" movable=\\\"false\\\"><next><block type=\\\"controls_repeat_dropdown\\\"><title name=\\\"TIMES\\\" config=\\\"2-10\\\">2</title><statement name=\\\"DO\\\"><block type=\\\"craft_moveForward\\\"><next><block type=\\\"craft_placeBlock\\\"><title name=\\\"TYPE\\\">planksBirch</title></block></next></block></statement><next><block type=\\\"craft_turn\\\"><title name=\\\"DIR\\\">left</title><next><block type=\\\"craft_moveForward\\\"><next><block type=\\\"craft_placeBlock\\\"><title name=\\\"TYPE\\\">planksBirch</title><next><block type=\\\"craft_turn\\\"><title name=\\\"DIR\\\">right</title></block></next></block></next></block></next></block></next></block></next></block></xml>\",\n\n    blocksToStore: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'houseRightC', '', '', '', '', '', '', '', '', '', 'houseRightB', '', '', '', '', '', '', 'houseLeftA', '', '', 'houseRightA', '', '', '', '', '', '', 'houseBottomA', 'houseBottomB', 'houseBottomC', 'houseBottomD', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\n\n    houseBottomRight: [5, 5]\n  },\n  houseC: {\n    groundPlane: [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"dirtCoarse\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n    verificationFunction: \"function (verificationAPI) {\\r\\n      return verificationAPI.solutionMapMatchesResultMap(\\r\\n            [\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"any\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\",\\r\\n              \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\", \\\"\\\"\\r\\n            ]);\\r\\n}\",\n    startBlocks: \"<xml><block type=\\\"when_run\\\" deletable=\\\"false\\\" movable=\\\"false\\\"><next><block type=\\\"controls_repeat_dropdown\\\"><title name=\\\"TIMES\\\" config=\\\"2-10\\\">6</title><statement name=\\\"DO\\\"><block type=\\\"craft_moveForward\\\"><next><block type=\\\"craft_placeBlock\\\"><title name=\\\"TYPE\\\">planksBirch</title></block></next></block></statement></block></next></block></xml>\",\n    blocksToStore: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'houseRightC', '', '', '', '', '', '', '', '', '', 'houseRightB', '', '', '', '', '', '', 'houseLeftA', '', '', 'houseRightA', '', '', '', '', '', '', 'houseBottomA', 'houseBottomB', 'houseBottomC', 'houseBottomD', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\n    actionPlane: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'houseBottomA', 'houseBottomB', 'houseBottomC', 'houseBottomD', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\n    playerStartPosition: [3, 7],\n\n    houseBottomRight: [5, 6]\n  }\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/houseLevels.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/houseLevels.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levelbuilderOverrides.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levelbuilderOverrides.js","source":"/*jshint multistr: true */\n/* global $ */\n\n/**\n * @file Mapping to inject more properties into levelbuilder levels.\n * Keyed by \"puzzle_number\", which is the order of a given level in its script.\n */\n\n\"use strict\";\n\nvar utils = require('../utils');\n\nmodule.exports = {\n  1: {\n    appSpecificFailError: \"You need to use commands to walk to the sheep.\",\n    tooFewBlocksMsg: \"Try using more commands to walk to the sheep.\",\n    songs: ['vignette4-intro']\n  },\n  2: {\n    appSpecificFailError: \"To chop down a tree, walk to its trunk and use the \\\"destroy block\\\" command.\",\n    tooFewBlocksMsg: \"Try using more commands to chop down the tree. Walk to its trunk and use the \\\"destroy block\\\" command.\",\n    songs: ['vignette5-shortpiano']\n  },\n  3: {\n    appSpecificFailError: \"To gather wool from both sheep, walk to each one and use the \\\"shear\\\" command. Remember to use turn commands to reach the sheep.\",\n    tooFewBlocksMsg: \"Try using more commands to gather wool from both sheep. Walk to each one and use the \\\"shear\\\" command.\",\n    songs: ['vignette2-quiet', 'vignette5-shortpiano', 'vignette4-intro']\n  },\n  4: {\n    appSpecificFailError: \"You must use the \\\"destroy block\\\" command on each of the three tree trunks.\",\n    tooFewBlocksMsg: \"You must use the \\\"destroy block\\\" command on each of the three tree trunks.\",\n    songs: ['vignette3', 'vignette2-quiet', 'vignette5-shortpiano', 'vignette4-intro'],\n    songDelay: 4000\n  },\n  5: {\n    appSpecificFailError: \"Place your blocks on the dirt outline to build a wall. The pink \\\"repeat\\\" command will run commands placed inside it, like \\\"place block\\\" and \\\"move forward\\\".\",\n    tooFewBlocksMsg: \"Place your blocks on the dirt outline to build a wall. The pink \\\"repeat\\\" command will run commands placed inside it, like \\\"place block\\\" and \\\"move forward\\\".\",\n    songs: ['vignette7-funky-chirps-short', 'vignette2-quiet', 'vignette4-intro', 'vignette3']\n  },\n  6: {\n    appSpecificFailError: \"Place blocks on the dirt outline of the house to complete the puzzle.\",\n    tooFewBlocksMsg: \"Place blocks on the dirt outline of the house to complete the puzzle.\",\n    songs: ['vignette1', 'vignette2-quiet', 'vignette4-intro', 'vignette3'],\n    songDelay: 4000\n  },\n  7: {\n    appSpecificFailError: \"Use the \\\"plant\\\" command to place crops on each patch of dark tilled soil.\",\n    tooFewBlocksMsg: \"Use the \\\"plant\\\" command to place crops on each patch of dark tilled soil.\",\n    songs: ['vignette2-quiet', 'vignette7-funky-chirps-short', 'vignette4-intro', 'vignette1', 'vignette3']\n  },\n  8: {\n    appSpecificFailError: \"If you touch a creeper it will explode. Sneak around them and enter your house.\",\n    tooFewBlocksMsg: \"If you touch a creeper it will explode. Sneak around them and enter your house.\",\n    songs: ['vignette5-shortpiano', 'vignette2-quiet', 'vignette1', 'vignette4-intro', 'vignette3']\n  },\n  9: {\n    appSpecificFailError: \"Don't forget to place at least 2 torches to light your way AND mine at least 2 coal.\",\n    tooFewBlocksMsg: \"Don't forget to place at least 2 torches to light your way AND mine at least 2 coal.\",\n    songs: ['vignette3', 'vignette5-shortpiano', 'vignette7-funky-chirps-short', 'vignette2-quiet', 'vignette4-intro', 'vignette1']\n\n  },\n  10: {\n    appSpecificFailError: \"Cover up the lava to walk across, then mine two of the iron blocks on the other side.\",\n    tooFewBlocksMsg: \"Cover up the lava to walk across, then mine two of the iron blocks on the other side.\",\n    songs: ['vignette4-intro', 'vignette3', 'vignette5-shortpiano', 'vignette2-quiet', 'vignette7-funky-chirps-short']\n  },\n  11: {\n    appSpecificFailError: \"Make sure to place cobblestone ahead if there is lava ahead. This will let you safely mine this row of resources.\",\n    tooFewBlocksMsg: \"Make sure to place cobblestone ahead if there is lava ahead. This will let you safely mine this row of resources.\",\n    songs: ['vignette7-funky-chirps-short', 'vignette3', 'vignette2-quiet']\n  },\n  12: {\n    appSpecificFailError: \"Be sure to mine 3 redstone blocks. This combines what you learned from building your house and using \\\"if\\\" statements to avoid falling in lava.\",\n    tooFewBlocksMsg: \"Be sure to mine 3 redstone blocks. This combines what you learned from building your house and using \\\"if\\\" statements to avoid falling in lava.\",\n    songs: ['vignette5-shortpiano', 'vignette2-quiet', 'vignette4-intro', 'vignette1']\n  },\n  13: {\n    appSpecificFailError: \"Place \\\"rail\\\" along the dirt path leading from your door to the edge of the map.\",\n    tooFewBlocksMsg: \"Place \\\"rail\\\" along the dirt path leading from your door to the edge of the map.\",\n    songs: ['vignette1', 'vignette3', 'vignette2-quiet', 'vignette4-intro']\n  },\n  14: {\n    songs: ['vignette8-free-play', 'vignette3', 'vignette2-quiet', 'vignette4-intro', 'vignette1']\n  }\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levelbuilderOverrides.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/levelbuilderOverrides.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levels.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levels.js","source":"/*jshint multistr: true */\n/* global $ */\n\n'use strict';\n\nvar tb = require('../block_utils').createToolbox;\nvar utils = require('../utils');\n\nvar category = function category(name, blocks) {\n  return '<category id=\"' + name + '\" name=\"' + name + '\">' + blocks + '</category>';\n};\n\nvar moveForwardBlock = '<block type=\"craft_moveForward\"></block>';\n\nfunction craftBlock(type) {\n  return block(\"craft_\" + type);\n}\n\nfunction block(type) {\n  return '<block type=\"' + type + '\"></block>';\n}\n\nvar repeatDropdown = '<block type=\"controls_repeat_dropdown\">' + '  <title name=\"TIMES\" config=\"3-10\">???</title>' + '</block>';\n\nvar turnLeftBlock = '<block type=\"craft_turn\">' + '  <title name=\"DIR\">left</title>' + '</block>';\n\nvar turnRightBlock = '<block type=\"craft_turn\">' + '<title name=\"DIR\">right</title>' + '</block>';\n\nmodule.exports = {\n  'playground': {\n    'requiredBlocks': [],\n    'freePlay': true,\n    'toolbox': tb(craftBlock('moveForward') + craftBlock('turnRight') + craftBlock('turnLeft') + craftBlock('destroyBlock') + craftBlock('placeBlock') + block('controls_repeat') + repeatDropdown + craftBlock('whileBlockAhead')),\n    'startBlocks': '<block type=\"when_run\" deletable=\"false\" x=\"20\" y=\"20\"></block>',\n\n    groundPlane: [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"coarseDirt\", \"coarseDirt\", \"coarseDirt\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n\n    groundDecorationPlanetallGrass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\n    actionPlane: [\"grass\", \"grass\", \"\", \"\", \"\", \"\", \"\", \"\", \"grass\", \"grass\", \"\", \"grass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"grass\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\"],\n\n    fluffPlane: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\"]\n  },\n  '1': {\n    'requiredBlocks': [],\n    'freePlay': true,\n    'toolbox': tb(craftBlock('moveForward') + craftBlock('turnRight') + craftBlock('turnLeft')),\n    'startBlocks': '<block type=\"when_run\" deletable=\"false\" x=\"20\" y=\"20\"></block>',\n\n    playerStartPosition: [3, 4],\n\n    groundPlane: [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"coarseDirt\", \"coarseDirt\", \"coarseDirt\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n\n    groundDecorationPlanetallGrass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\n    actionPlane: [\"grass\", \"grass\", \"\", \"\", \"\", \"\", \"\", \"\", \"grass\", \"grass\", \"\", \"grass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"grass\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"logOak\", \"\", \"\", \"\"],\n\n    fluffPlane: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"leavesOak\", \"\", \"\", \"\"],\n\n    verificationFunction: function verificationFunction(verificationAPI) {\n      return verificationAPI.isPlayerNextTo(\"logOak\");\n    }\n\n  },\n  '2': {\n    'requiredBlocks': [],\n    'freePlay': true,\n    'toolbox': tb(craftBlock('moveForward') + craftBlock('turnRight') + craftBlock('turnLeft') + craftBlock('destroyBlock') + craftBlock('placeBlock') + block('controls_repeat') + repeatDropdown + craftBlock('whileBlockAhead')),\n    'startBlocks': '<block type=\"when_run\" deletable=\"false\" x=\"20\" y=\"20\"></block>',\n\n    groundPlane: [\"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"planksOak\", \"planksOak\", \"planksOak\", \"planksOak\", \"grass\", \"grass\", \"grass\", \"coarseDirt\", \"coarseDirt\", \"coarseDirt\", \"planksOak\", \"planksOak\", \"planksOak\", \"planksOak\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"planksOak\", \"planksOak\", \"planksOak\", \"planksOak\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"planksOak\", \"planksOak\", \"planksOak\", \"planksOak\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\", \"grass\"],\n\n    groundDecorationPlane: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"tallGrass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"tallGrass\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n\n    actionPlanen\n    fluffPlanen  },\n  'custom': {\n    'requiredBlocks': [],\n    'freePlay': false,\n    'toolbox': tb(moveForwardBlock + turnLeftBlock + turnRightBlock)\n  }\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"../utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","../block_utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levels.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/levels.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/locale.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/locale.js","source":"\"use strict\";\n\nmodule.exports = window.blockly.craft_locale;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L2xvY2FsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMiLCJmaWxlIjoiYnVpbGQvanMvY3JhZnQvbG9jYWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB3aW5kb3cuYmxvY2tseS5jcmFmdF9sb2NhbGU7XG4iXX0=","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/locale.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/locale.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/main.js":{"entry":true,"expose":false,"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/main.js","id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/main.js","order":0,"source":"(function (global){\n'use strict';\n\nvar appMain = require('../appMain');\nwindow.Craft = require('./craft');\nif (typeof global !== 'undefined') {\n  global.Craft = window.Craft;\n}\nvar blocks = require('./blocks');\nvar levels = require('./levels');\nvar skins = require('./skins');\n\nwindow.craftMain = function (options) {\n  options.skinsModule = skins;\n\n  options.blocksModule = blocks;\n  options.maxVisualizationWidth = 600;\n  var appWidth = 434;\n  var appHeight = 477;\n  options.nativeVizWidth = appWidth;\n  options.vizAspectRatio = appWidth / appHeight;\n\n  appMain(window.Craft, levels, options);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2xDLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO0FBQ2pDLFFBQU0sQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztDQUM3QjtBQUNELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNqQyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDakMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDOztBQUUvQixNQUFNLENBQUMsU0FBUyxHQUFHLFVBQVMsT0FBTyxFQUFFO0FBQ25DLFNBQU8sQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDOztBQUU1QixTQUFPLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQztBQUM5QixTQUFPLENBQUMscUJBQXFCLEdBQUcsR0FBRyxDQUFDO0FBQ3BDLE1BQUksUUFBUSxHQUFHLEdBQUcsQ0FBQztBQUNuQixNQUFJLFNBQVMsR0FBRyxHQUFHLENBQUM7QUFDcEIsU0FBTyxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUM7QUFDbEMsU0FBTyxDQUFDLGNBQWMsR0FBRyxRQUFRLEdBQUcsU0FBUyxDQUFDOztBQUU5QyxTQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7Q0FDeEMsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcE1haW4gPSByZXF1aXJlKCcuLi9hcHBNYWluJyk7XG53aW5kb3cuQ3JhZnQgPSByZXF1aXJlKCcuL2NyYWZ0Jyk7XG5pZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgZ2xvYmFsLkNyYWZ0ID0gd2luZG93LkNyYWZ0O1xufVxudmFyIGJsb2NrcyA9IHJlcXVpcmUoJy4vYmxvY2tzJyk7XG52YXIgbGV2ZWxzID0gcmVxdWlyZSgnLi9sZXZlbHMnKTtcbnZhciBza2lucyA9IHJlcXVpcmUoJy4vc2tpbnMnKTtcblxud2luZG93LmNyYWZ0TWFpbiA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgb3B0aW9ucy5za2luc01vZHVsZSA9IHNraW5zO1xuXG4gIG9wdGlvbnMuYmxvY2tzTW9kdWxlID0gYmxvY2tzO1xuICBvcHRpb25zLm1heFZpc3VhbGl6YXRpb25XaWR0aCA9IDYwMDtcbiAgdmFyIGFwcFdpZHRoID0gNDM0O1xuICB2YXIgYXBwSGVpZ2h0ID0gNDc3O1xuICBvcHRpb25zLm5hdGl2ZVZpeldpZHRoID0gYXBwV2lkdGg7XG4gIG9wdGlvbnMudml6QXNwZWN0UmF0aW8gPSBhcHBXaWR0aCAvIGFwcEhlaWdodDtcblxuICBhcHBNYWluKHdpbmRvdy5DcmFmdCwgbGV2ZWxzLCBvcHRpb25zKTtcbn07XG4iXX0=","deps":{"./blocks":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/blocks.js","./skins":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/skins.js","./levels":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levels.js","./craft":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/craft.js","../appMain":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/appMain.js"},"sourceRoot":"file://localhost","sourceFile":"build/js/craft/main.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/skins.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/skins.js","source":"'use strict';\n\nvar skinsBase = require('../skins');\n\nvar CONFIGS = {\n  craft: {}\n};\n\nexports.load = function (assetUrl, id) {\n  var skin = skinsBase.load(assetUrl, id);\n  return skin;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2NyYWZ0L3NraW5zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUVwQyxJQUFJLE9BQU8sR0FBRztBQUNaLE9BQUssRUFBRSxFQUNOO0NBQ0YsQ0FBQzs7QUFFRixPQUFPLENBQUMsSUFBSSxHQUFHLFVBQVMsUUFBUSxFQUFFLEVBQUUsRUFBRTtBQUNwQyxNQUFJLElBQUksR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUN4QyxTQUFPLElBQUksQ0FBQztDQUNiLENBQUMiLCJmaWxlIjoiYnVpbGQvanMvY3JhZnQvc2tpbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2tpbnNCYXNlID0gcmVxdWlyZSgnLi4vc2tpbnMnKTtcblxudmFyIENPTkZJR1MgPSB7XG4gIGNyYWZ0OiB7XG4gIH1cbn07XG5cbmV4cG9ydHMubG9hZCA9IGZ1bmN0aW9uKGFzc2V0VXJsLCBpZCkge1xuICB2YXIgc2tpbiA9IHNraW5zQmFzZS5sb2FkKGFzc2V0VXJsLCBpZCk7XG4gIHJldHVybiBza2luO1xufTtcbiJdfQ==","deps":{"../skins":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/skins.js","sourceRoot":"file://localhost","sourceFile":"build/js/craft/skins.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/visualization.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/visualization.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div id=\"minecraft-frame\">\\n  <div id=\"phaser-game\">\\n  </div>\\n</div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/visualization.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/craft/visualization.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","source":"'use strict';\n\nexports.addReadyListener = function (callback) {\n  if (document.readyState === \"complete\") {\n    setTimeout(callback, 1);\n  } else {\n    window.addEventListener('load', callback, false);\n  }\n};\n\nexports.getTouchEventName = function (eventName) {\n  var isIE11Touch = window.navigator.pointerEnabled;\n  var isIE10Touch = window.navigator.msPointerEnabled;\n  var isStandardTouch = ('ontouchend' in document.documentElement);\n\n  var key;\n  if (isIE11Touch) {\n    key = \"ie11\";\n  } else if (isIE10Touch) {\n    key = \"ie10\";\n  } else if (isStandardTouch) {\n    key = \"standard\";\n  }\n  if (key && TOUCH_MAP[eventName]) {\n    return TOUCH_MAP[eventName][key];\n  }\n};\n\nvar addEvent = function addEvent(element, eventName, handler) {\n  // Scope bound event map to this addEvent call - we only provide for unbinding\n  // what we bind right here.\n  var boundEvents = {};\n\n  var bindEvent = function bindEvent(type, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    boundEvents[type] = { name: eventName, handler: handler };\n  };\n\n  var unbindEvent = function unbindEvent(type) {\n    var eventInfo = boundEvents[type];\n    if (eventInfo) {\n      element.removeEventListener(eventInfo.name, eventInfo.handler);\n      delete boundEvents[type];\n    }\n  };\n\n  // Add click handler\n  bindEvent('click', eventName, handler);\n\n  // Optionally add touch handler\n  var touchEvent = exports.getTouchEventName(eventName);\n  if (touchEvent) {\n    bindEvent('touch', touchEvent, function (e) {\n      // Stop mouse events and suppress default event handler to prevent\n      // unintentional double-clicking\n      e.preventDefault();\n      unbindEvent('click');\n      handler.call(this, e);\n    });\n  }\n\n  // Return function that unbinds all handlers\n  return function () {\n    unbindEvent('click');\n    unbindEvent('touch');\n  };\n};\n\nexports.addMouseDownTouchEvent = function (element, handler) {\n  return addEvent(element, 'mousedown', handler);\n};\n\nexports.addMouseUpTouchEvent = function (element, handler) {\n  return addEvent(element, 'mouseup', handler);\n};\n\nexports.addMouseMoveTouchEvent = function (element, handler) {\n  return addEvent(element, 'mousemove', handler);\n};\n\nexports.addClickTouchEvent = function (element, handler) {\n  return addEvent(element, 'click', handler);\n};\n\n// A map from standard touch events to various aliases.\nvar TOUCH_MAP = {\n  //  Incomplete list, add as needed.\n  click: {\n    standard: 'touchstart',\n    ie10: 'MSPointerDown',\n    ie11: 'pointerdown'\n  },\n  mousedown: {\n    standard: 'touchstart',\n    ie10: 'MSPointerDown',\n    ie11: 'pointerdown'\n  },\n  mouseup: {\n    standard: 'touchend',\n    ie10: 'MSPointerUp',\n    ie11: 'pointerup'\n  },\n  mousemove: {\n    standard: 'touchmove',\n    ie10: 'MSPointerMove',\n    ie11: 'pointermove'\n  }\n};\n\nexports.isMobile = function () {\n  var reg = /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile/;\n  return reg.test(window.navigator.userAgent);\n};\n\nexports.isWindowsTouch = function () {\n  var reg = /MSIE.*Touch/;\n  return reg.test(window.navigator.userAgent);\n};\n\nexports.isAndroid = function () {\n  var reg = /Android/;\n  return reg.test(window.navigator.userAgent);\n};\n\nexports.isIOS = function () {\n  var reg = /iP(hone|od|ad)/;\n  return reg.test(window.navigator.userAgent);\n};\n//# sourceMappingURL=data:application/json;base64,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QUFTLENBQUMsU0FBUyxDQUFDLENBQUM7Q0FDN0MsQ0FBQzs7QUFFRixPQUFPLENBQUMsY0FBYyxHQUFHLFlBQVc7QUFDbEMsTUFBSSxHQUFHLEdBQUcsYUFBYSxDQUFDO0FBQ3hCLFNBQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQzdDLENBQUM7O0FBRUYsT0FBTyxDQUFDLFNBQVMsR0FBRyxZQUFXO0FBQzdCLE1BQUksR0FBRyxHQUFHLFNBQVMsQ0FBQztBQUNwQixTQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUM3QyxDQUFDOztBQUVGLE9BQU8sQ0FBQyxLQUFLLEdBQUcsWUFBVztBQUN6QixNQUFJLEdBQUcsR0FBRyxnQkFBZ0IsQ0FBQztBQUMzQixTQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUM3QyxDQUFDIiwiZmlsZSI6ImJ1aWxkL2pzL2RvbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuYWRkUmVhZHlMaXN0ZW5lciA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIpIHtcbiAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCAxKTtcbiAgfSBlbHNlIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGNhbGxiYWNrLCBmYWxzZSk7XG4gIH1cbn07XG5cbmV4cG9ydHMuZ2V0VG91Y2hFdmVudE5hbWUgPSBmdW5jdGlvbihldmVudE5hbWUpIHtcbiAgdmFyIGlzSUUxMVRvdWNoID0gd2luZG93Lm5hdmlnYXRvci5wb2ludGVyRW5hYmxlZDtcbiAgdmFyIGlzSUUxMFRvdWNoID0gd2luZG93Lm5hdmlnYXRvci5tc1BvaW50ZXJFbmFibGVkO1xuICB2YXIgaXNTdGFuZGFyZFRvdWNoID0gJ29udG91Y2hlbmQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuICB2YXIga2V5O1xuICBpZiAoaXNJRTExVG91Y2gpIHtcbiAgICBrZXkgPSBcImllMTFcIjtcbiAgfSBlbHNlIGlmIChpc0lFMTBUb3VjaCkge1xuICAgIGtleSA9IFwiaWUxMFwiO1xuICB9IGVsc2UgaWYgKGlzU3RhbmRhcmRUb3VjaCkge1xuICAgIGtleSA9IFwic3RhbmRhcmRcIjtcbiAgfVxuICBpZiAoa2V5ICYmIFRPVUNIX01BUFtldmVudE5hbWVdKSB7XG4gICAgcmV0dXJuIFRPVUNIX01BUFtldmVudE5hbWVdW2tleV07XG4gIH1cbn07XG5cbnZhciBhZGRFdmVudCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlcikge1xuICAvLyBTY29wZSBib3VuZCBldmVudCBtYXAgdG8gdGhpcyBhZGRFdmVudCBjYWxsIC0gd2Ugb25seSBwcm92aWRlIGZvciB1bmJpbmRpbmdcbiAgLy8gd2hhdCB3ZSBiaW5kIHJpZ2h0IGhlcmUuXG4gIHZhciBib3VuZEV2ZW50cyA9IHt9O1xuXG4gIHZhciBiaW5kRXZlbnQgPSBmdW5jdGlvbiAodHlwZSwgZXZlbnROYW1lLCBoYW5kbGVyKSB7XG4gICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlciwgZmFsc2UpO1xuICAgIGJvdW5kRXZlbnRzW3R5cGVdID0geyBuYW1lOiBldmVudE5hbWUsIGhhbmRsZXI6IGhhbmRsZXIgfTtcbiAgfTtcblxuICB2YXIgdW5iaW5kRXZlbnQgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgIHZhciBldmVudEluZm8gPSBib3VuZEV2ZW50c1t0eXBlXTtcbiAgICBpZiAoZXZlbnRJbmZvKSB7XG4gICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRJbmZvLm5hbWUsIGV2ZW50SW5mby5oYW5kbGVyKTtcbiAgICAgIGRlbGV0ZSBib3VuZEV2ZW50c1t0eXBlXTtcbiAgICB9XG4gIH07XG5cbiAgLy8gQWRkIGNsaWNrIGhhbmRsZXJcbiAgYmluZEV2ZW50KCdjbGljaycsIGV2ZW50TmFtZSwgaGFuZGxlcik7XG5cbiAgLy8gT3B0aW9uYWxseSBhZGQgdG91Y2ggaGFuZGxlclxuICB2YXIgdG91Y2hFdmVudCA9IGV4cG9ydHMuZ2V0VG91Y2hFdmVudE5hbWUoZXZlbnROYW1lKTtcbiAgaWYgKHRvdWNoRXZlbnQpIHtcbiAgICBiaW5kRXZlbnQoJ3RvdWNoJywgdG91Y2hFdmVudCwgZnVuY3Rpb24oZSkge1xuICAgICAgLy8gU3RvcCBtb3VzZSBldmVudHMgYW5kIHN1cHByZXNzIGRlZmF1bHQgZXZlbnQgaGFuZGxlciB0byBwcmV2ZW50XG4gICAgICAvLyB1bmludGVudGlvbmFsIGRvdWJsZS1jbGlja2luZ1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdW5iaW5kRXZlbnQoJ2NsaWNrJyk7XG4gICAgICBoYW5kbGVyLmNhbGwodGhpcywgZSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBSZXR1cm4gZnVuY3Rpb24gdGhhdCB1bmJpbmRzIGFsbCBoYW5kbGVyc1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHVuYmluZEV2ZW50KCdjbGljaycpO1xuICAgIHVuYmluZEV2ZW50KCd0b3VjaCcpO1xuICB9O1xufTtcblxuZXhwb3J0cy5hZGRNb3VzZURvd25Ub3VjaEV2ZW50ID0gZnVuY3Rpb24oZWxlbWVudCwgaGFuZGxlcikge1xuICByZXR1cm4gYWRkRXZlbnQoZWxlbWVudCwgJ21vdXNlZG93bicsIGhhbmRsZXIpO1xufTtcblxuZXhwb3J0cy5hZGRNb3VzZVVwVG91Y2hFdmVudCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGhhbmRsZXIpIHtcbiAgcmV0dXJuIGFkZEV2ZW50KGVsZW1lbnQsICdtb3VzZXVwJywgaGFuZGxlcik7XG59O1xuXG5leHBvcnRzLmFkZE1vdXNlTW92ZVRvdWNoRXZlbnQgPSBmdW5jdGlvbihlbGVtZW50LCBoYW5kbGVyKSB7XG4gIHJldHVybiBhZGRFdmVudChlbGVtZW50LCAnbW91c2Vtb3ZlJywgaGFuZGxlcik7XG59O1xuXG5leHBvcnRzLmFkZENsaWNrVG91Y2hFdmVudCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGhhbmRsZXIpIHtcbiAgcmV0dXJuIGFkZEV2ZW50KGVsZW1lbnQsICdjbGljaycsIGhhbmRsZXIpO1xufTtcblxuLy8gQSBtYXAgZnJvbSBzdGFuZGFyZCB0b3VjaCBldmVudHMgdG8gdmFyaW91cyBhbGlhc2VzLlxudmFyIFRPVUNIX01BUCA9IHtcbiAgLy8gIEluY29tcGxldGUgbGlzdCwgYWRkIGFzIG5lZWRlZC5cbiAgY2xpY2s6IHtcbiAgICBzdGFuZGFyZDogJ3RvdWNoc3RhcnQnLFxuICAgIGllMTA6ICdNU1BvaW50ZXJEb3duJyxcbiAgICBpZTExOiAncG9pbnRlcmRvd24nXG4gIH0sXG4gIG1vdXNlZG93bjoge1xuICAgIHN0YW5kYXJkOiAndG91Y2hzdGFydCcsXG4gICAgaWUxMDogJ01TUG9pbnRlckRvd24nLFxuICAgIGllMTE6ICdwb2ludGVyZG93bidcbiAgfSxcbiAgbW91c2V1cDoge1xuICAgIHN0YW5kYXJkOiAndG91Y2hlbmQnLFxuICAgIGllMTA6ICdNU1BvaW50ZXJVcCcsXG4gICAgaWUxMTogJ3BvaW50ZXJ1cCdcbiAgfSxcbiAgbW91c2Vtb3ZlOiB7XG4gICAgc3RhbmRhcmQ6ICd0b3VjaG1vdmUnLFxuICAgIGllMTA6ICdNU1BvaW50ZXJNb3ZlJyxcbiAgICBpZTExOiAncG9pbnRlcm1vdmUnXG4gIH1cbn07XG5cbmV4cG9ydHMuaXNNb2JpbGUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHJlZyA9IC9Nb2JpbGV8aVAoaG9uZXxvZHxhZCl8QW5kcm9pZHxCbGFja0JlcnJ5fElFTW9iaWxlLztcbiAgcmV0dXJuIHJlZy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtcbn07XG5cbmV4cG9ydHMuaXNXaW5kb3dzVG91Y2ggPSBmdW5jdGlvbigpIHtcbiAgdmFyIHJlZyA9IC9NU0lFLipUb3VjaC87XG4gIHJldHVybiByZWcudGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG59O1xuXG5leHBvcnRzLmlzQW5kcm9pZCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcmVnID0gL0FuZHJvaWQvO1xuICByZXR1cm4gcmVnLnRlc3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpO1xufTtcblxuZXhwb3J0cy5pc0lPUyA9IGZ1bmN0aW9uKCkge1xuICB2YXIgcmVnID0gL2lQKGhvbmV8b2R8YWQpLztcbiAgcmV0dXJuIHJlZy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtcbn07XG4iXX0=","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","sourceRoot":"file://localhost","sourceFile":"build/js/dom.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","source":"'use strict';\n\nvar utils = require('./utils');\nvar _ = utils.getLodash();\n\n/**\n * @name DropletBlock\n * @description Definition of a block to be used in Droplet\n * @property {String} func identifying the function this block runs\n * @property {Object} parent object within which this function is defined as a property, keyed by the func name\n * @property {String} category category within which to place the block\n * @property {String} type type of the block (e.g. value)\n * @property {string[]} paletteParams\n * @property {string[]} params\n * @property {Object.<number, funciton>} dropdown\n * @property {bool} dontMarshal\n * @property {bool} noAutocomplete\n */\n\n/**\n * @name DropletConfig\n * @description Configuration information for Droplet\n * @property {DropletBlock[]} blocks list of blocks\n * @property {Object} categories configuration of categories within which to place blocks\n */\n\nvar COLOR_PINK = '#F57AC6';\nvar COLOR_PURPLE = '#BB77C7';\nvar COLOR_GREEN = '#68D995';\nvar COLOR_LIGHT_GREEN = '#D3E965';\nvar COLOR_WHITE = '#FFFFFF';\nvar COLOR_BLUE = '#64B5F6';\nvar COLOR_ORANGE = '#FFB74D';\n\nexports.randomNumber = function (min, max) {\n  if (typeof max === 'undefined') {\n    // If only one parameter is specified, use it as the max with zero as min:\n    max = min;\n    min = 0;\n  }\n  // Use double-tilde to ensure we are dealing with integers:\n  return Math.floor(Math.random() * (~ ~max - ~ ~min + 1)) + ~ ~min;\n};\n\nexports.getTime = function () {\n  return new Date().getTime();\n};\n\n/**\n * Use native window.prompt to ask for a value, but continue prompting until we\n * get a numerical value.\n * @returns {number} User value, converted to a number\n */\nexports.promptNum = function (text) {\n  var val;\n  do {\n    val = parseInt(window.prompt(text), 10);\n  } while (isNaN(val));\n  return val;\n};\n\n/**\n * @type {DropletBlock[]}\n */\nexports.dropletGlobalConfigBlocks = [{ func: 'getTime', parent: exports, category: 'Control', type: 'value' }, { func: 'randomNumber', parent: exports, category: 'Math', type: 'value' }, { func: 'prompt', parent: window, category: 'Variables', type: 'value' }, { func: 'promptNum', parent: exports, category: 'Variables', type: 'value' }];\n\n/**\n * @type {DropletBlock[]}\n */\nexports.dropletBuiltinConfigBlocks = [{ func: 'Math.round', category: 'Math', type: 'value' }, { func: 'Math.abs', category: 'Math', type: 'value' }, { func: 'Math.max', category: 'Math', type: 'value' }, { func: 'Math.min', category: 'Math', type: 'value' }, { func: 'Math.random', category: 'Math', type: 'value' }];\n\n/**\n * @type {DropletConfig|*}}\n */\nvar standardConfig = {};\n\nstandardConfig.blocks = [\n// Control\n{ func: 'forLoop_i_0_4', block: 'for (var i = 0; i < 4; i++) {\\n  __;\\n}', category: 'Control' }, { func: 'whileBlock', block: 'while (__) {\\n  __;\\n}', category: 'Control' }, { func: 'ifBlock', block: 'if (__) {\\n  __;\\n}', category: 'Control' }, { func: 'ifElseBlock', block: 'if (__) {\\n  __;\\n} else {\\n  __;\\n}', category: 'Control' }, { func: 'getTime', block: 'getTime()', category: 'Control', type: 'value' },\n\n// Math\n{ func: 'addOperator', block: '__ + __', category: 'Math' }, { func: 'subtractOperator', block: '__ - __', category: 'Math' }, { func: 'multiplyOperator', block: '__ * __', category: 'Math' }, { func: 'divideOperator', block: '__ / __', category: 'Math' }, { func: 'equalityOperator', block: '__ == __', category: 'Math' }, { func: 'inequalityOperator', block: '__ != __', category: 'Math' }, { func: 'greaterThanOperator', block: '__ > __', category: 'Math' }, { func: 'greaterThanOrEqualOperator', block: '__ >= __', category: 'Math' }, { func: 'lessThanOperator', block: '__ < __', category: 'Math' }, { func: 'lessThanOrEqualOperator', block: '__ <= __', category: 'Math' }, { func: 'andOperator', block: '__ && __', category: 'Math' }, { func: 'orOperator', block: '__ || __', category: 'Math' }, { func: 'notOperator', block: '!__', category: 'Math' },\n// randomNumber_max has been deprecated\n// {func: 'randomNumber_max', block: 'randomNumber(__)', category: 'Math' },\n{ func: 'randomNumber_min_max', block: 'randomNumber(__, __)', category: 'Math' }, { func: 'mathRound', block: 'Math.round(__)', category: 'Math' }, { func: 'mathAbs', block: 'Math.abs(__)', category: 'Math' }, { func: 'mathMax', block: 'Math.max(__)', category: 'Math' }, { func: 'mathMin', block: 'Math.min(__)', category: 'Math' }, { func: 'mathRandom', block: 'Math.random()', category: 'Math' },\n\n// Variables\n{ func: 'declareAssign_x', block: 'var x = __;', category: 'Variables' }, { func: 'declareNoAssign_x', block: 'var x;', category: 'Variables' }, { func: 'assign_x', block: 'x = __;', category: 'Variables' }, { func: 'declareAssign_x_array_1_4', block: 'var x = [1, 2, 3, 4];', category: 'Variables' }, { func: 'declareAssign_x_prompt', block: 'var x = prompt(\"Enter a value\");', category: 'Variables' }, { func: 'declareAssign_x_promptNum', block: 'var x = promptNum(\"Enter a value\");', category: 'Variables' },\n\n// Functions\n{ func: 'functionParams_none', block: 'function myFunction() {\\n  __;\\n}', category: 'Functions' }, { func: 'functionParams_n', block: 'function myFunction(n) {\\n  __;\\n}', category: 'Functions' }, { func: 'callMyFunction', block: 'myFunction()', category: 'Functions' }, { func: 'callMyFunction_n', block: 'myFunction(n)', category: 'Functions' }, { func: 'return', block: 'return __;', category: 'Functions' }];\n\nstandardConfig.categories = {\n  Control: {\n    color: 'blue',\n    rgb: COLOR_BLUE,\n    blocks: []\n  },\n  Math: {\n    color: 'orange',\n    rgb: COLOR_ORANGE,\n    blocks: []\n  },\n  Variables: {\n    color: 'purple',\n    rgb: COLOR_PURPLE,\n    blocks: []\n  },\n  Functions: {\n    color: 'green',\n    rgb: COLOR_GREEN,\n    blocks: []\n  },\n  // create blank category in case level builders want to move all blocks here\n  // (which will cause the palette header to disappear)\n  '': { 'blocks': [] }\n};\n\n/**\n * @param codeFunctions\n * @param {DropletConfig} dropletConfig\n * @param {DropletConfig} otherConfig optionally used to supply a standardConfig\n *  object which is not app specific. It will be used first, then overriden\n *  by the primary dropletConfig if there is overlap between the two.\n * @param paletteOnly boolean: ignore blocks not in codeFunctions palette\n * @returns {Array}\n */\nfunction mergeFunctionsWithConfig(codeFunctions, dropletConfig, otherConfig, paletteOnly) {\n  if (!codeFunctions || !dropletConfig || !dropletConfig.blocks) {\n    return [];\n  }\n\n  var merged = [];\n\n  var blockSets = [dropletConfig.blocks];\n  if (otherConfig) {\n    blockSets.splice(0, 0, otherConfig.blocks);\n  }\n\n  // codeFunctions is an object with named key/value pairs\n  //  key is a block name from dropletBlocks or standardBlocks\n  //  value is an object that can be used to override block defaults\n  for (var s = 0; s < blockSets.length; s++) {\n    var set = blockSets[s];\n    for (var i = 0; i < set.length; i++) {\n      var block = set[i];\n      if (!paletteOnly || block.func in codeFunctions) {\n        // We found this particular block, now override the defaults with extend\n        merged.push($.extend({}, block, codeFunctions[block.func]));\n      }\n    }\n  }\n\n  return merged;\n}\n\n/**\n * Return a new categories object with the categories from dropletConfig (app\n * specific configuration) merged with the ones in standardConfig (global\n * configuration). App configuration takes precendence\n */\nfunction mergeCategoriesWithConfig(dropletConfig) {\n  // Clone our merged categories so that as we mutate it, we're not mutating\n  // our original config\n  var dropletCategories = dropletConfig && dropletConfig.categories;\n  // We include dropletCategories twice so that (a) it's ordering of categories\n  // gets preference and (b) it's value override anything in standardConfig\n  return _.cloneDeep($.extend({}, dropletCategories, standardConfig.categories, dropletCategories));\n}\n\n/**\n * Generate code aliases in Javascript based on some level data.\n * @param {DropletConfig} dropletConfig\n * @param {String} parentObjName string reference to object upon which func is\n *  a property\n * @returns {String} code\n */\nexports.generateCodeAliases = function (dropletConfig, parentObjName) {\n  var code = '';\n  var aliasFunctions = dropletConfig.blocks;\n\n  // Insert aliases from aliasFunctions into code\n  for (var i = 0; i < aliasFunctions.length; i++) {\n    var cf = aliasFunctions[i];\n    code += \"var \" + cf.func + \" = function() { \";\n    if (cf.idArgNone) {\n      code += \"return \" + parentObjName + \".\" + cf.func + \".apply(\" + parentObjName + \", arguments); };\\n\";\n    } else {\n      code += \"var newArgs = \" + (cf.idArgLast ? \"arguments.concat(['']);\" : \"[''].concat(arguments);\") + \" return \" + parentObjName + \".\" + cf.func + \".apply(\" + parentObjName + \", newArgs); };\\n\";\n    }\n  }\n  return code;\n};\n\nfunction buildFunctionPrototype(prefix, params) {\n  var proto = prefix + \"(\";\n  if (params) {\n    for (var i = 0; i < params.length; i++) {\n      if (i !== 0) {\n        proto += \", \";\n      }\n      proto += params[i];\n    }\n  }\n  return proto + \")\";\n}\n\n/**\n * Generate a palette for the droplet editor based on some level data.\n * @param {object} codeFunctions The set of functions we want to use for this level\n * @param {object} dropletConfig\n * @param {function} dropletConfig.getBlocks\n * @param {object} dropletConfig.categories\n */\nexports.generateDropletPalette = function (codeFunctions, dropletConfig) {\n  var mergedCategories = mergeCategoriesWithConfig(dropletConfig);\n  var mergedFunctions = mergeFunctionsWithConfig(codeFunctions, dropletConfig, standardConfig, true);\n\n  for (var i = 0; i < mergedFunctions.length; i++) {\n    var funcInfo = mergedFunctions[i];\n    var block = funcInfo.block;\n    var expansion = funcInfo.expansion;\n    if (!block) {\n      var prefix = funcInfo.blockPrefix || funcInfo.func;\n      var paletteParams = funcInfo.paletteParams || funcInfo.params;\n      block = buildFunctionPrototype(prefix, paletteParams);\n      if (paletteParams) {\n        // If paletteParams were specified and used for the 'block', then use\n        // the regular params for the 'expansion' which appears when the block\n        // is dragged out of the palette:\n        expansion = buildFunctionPrototype(prefix, funcInfo.params);\n      }\n    }\n\n    /**\n     * Here we set the title attribute to the function shortname,\n     * this is later used as a key for function documentation and tooltips\n     */\n    var blockPair = {\n      block: block,\n      expansion: expansion,\n      title: funcInfo.func\n    };\n    mergedCategories[funcInfo.category].blocks.push(blockPair);\n  }\n\n  // Convert to droplet's expected palette format:\n  var addedPalette = [];\n  for (var category in mergedCategories) {\n    if (mergedCategories[category].blocks.length > 0) {\n      mergedCategories[category].name = category;\n      addedPalette.push(mergedCategories[category]);\n    }\n  }\n\n  return addedPalette;\n};\n\nfunction populateCompleterApisFromConfigBlocks(opts, apis, configBlocks) {\n  for (var i = 0; i < configBlocks.length; i++) {\n    var block = configBlocks[i];\n    if (!block.noAutocomplete) {\n      // Use score value of 100 to ensure that our APIs are not replaced by\n      // other completers that are suggesting the same name\n      var newApi = {\n        name: 'api',\n        value: block.func,\n        score: 100,\n        meta: block.category\n      };\n      if (opts.autocompleteFunctionsWithParens) {\n        newApi.completer = {\n          insertMatch: _.bind(function (editor) {\n            // Remove the filterText that was already typed (ace's built-in\n            // insertMatch would normally do this automatically)\n            if (editor.completer.completions.filterText) {\n              var ranges = editor.selection.getAllRanges();\n              for (var i = 0, range; !!(range = ranges[i]); i++) {\n                range.start.column -= editor.completer.completions.filterText.length;\n                editor.session.remove(range);\n              }\n            }\n            // Insert the function name plus parentheses and semicolon:\n            editor.execCommand(\"insertstring\", this.func + '();');\n            if (this.params) {\n              // Move the selection back so parameters can be entered:\n              var curRange = editor.selection.getRange();\n              curRange.start.column -= 2;\n              curRange.end.column -= 2;\n              editor.selection.setSelectionRange(curRange);\n            }\n          }, block)\n        };\n      }\n      apis.push(newApi);\n    }\n  }\n}\n\n/**\n * Generate an Ace editor completer for a set of APIs based on some level data.\n *\n * If functionFilter is non-null, use it to filter the dropletConfig\n * APIs to be set in autocomplete and create no other autocomplete entries\n */\nexports.generateAceApiCompleter = function (functionFilter, dropletConfig) {\n  var apis = [];\n  var opts = {};\n  // If autocompleteFunctionsWithParens is set, we will append \"();\" after functions\n  opts.autocompleteFunctionsWithParens = dropletConfig.autocompleteFunctionsWithParens;\n\n  if (functionFilter) {\n    var mergedBlocks = mergeFunctionsWithConfig(functionFilter, dropletConfig, null, true);\n    populateCompleterApisFromConfigBlocks(opts, apis, mergedBlocks);\n  } else {\n    populateCompleterApisFromConfigBlocks(opts, apis, exports.dropletGlobalConfigBlocks);\n    populateCompleterApisFromConfigBlocks(opts, apis, exports.dropletBuiltinConfigBlocks);\n    populateCompleterApisFromConfigBlocks(opts, apis, dropletConfig.blocks);\n  }\n\n  return {\n    getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n      if (prefix.length === 0) {\n        callback(null, []);\n        return;\n      }\n      callback(null, apis);\n    }\n  };\n};\n\n/**\n * Given a droplet config, create a mode option functions object\n * @param {object} config\n * @param {object[]} config.blocks\n * @param {object[]} config.categories\n */\nfunction getModeOptionFunctionsFromConfig(config) {\n  var mergedCategories = mergeCategoriesWithConfig(config);\n\n  var modeOptionFunctions = {};\n\n  for (var i = 0; i < config.blocks.length; i++) {\n    var newFunc = {};\n\n    if (config.blocks[i].type === 'value') {\n      newFunc.value = true;\n    } else if (config.blocks[i].type === 'either') {\n      newFunc.value = true;\n      newFunc.command = true;\n    }\n\n    var category = mergedCategories[config.blocks[i].category];\n    if (category) {\n      newFunc.color = category.rgb || category.color;\n    }\n\n    newFunc.dropdown = config.blocks[i].dropdown;\n\n    var modeOptionName = config.blocks[i].modeOptionName || config.blocks[i].func;\n    newFunc.title = modeOptionName;\n\n    modeOptionFunctions[modeOptionName] = newFunc;\n  }\n  return modeOptionFunctions;\n}\n\n/**\n * Generate modeOptions for the droplet editor based on some level data.\n */\nexports.generateDropletModeOptions = function (config) {\n  var modeOptions = {\n    functions: {},\n    categories: {\n      arithmetic: { color: COLOR_ORANGE },\n      logic: { color: COLOR_ORANGE },\n      conditionals: { color: COLOR_BLUE },\n      loops: {\n        color: COLOR_BLUE,\n        beginner: config.level.beginnerMode || false\n      },\n      functions: { color: COLOR_GREEN },\n      returns: { color: COLOR_BLUE },\n      comments: { color: COLOR_WHITE },\n      containers: { color: COLOR_PURPLE },\n      value: { color: COLOR_PURPLE },\n      command: { color: COLOR_GREEN },\n      assignments: { color: COLOR_PURPLE }\n      // errors: { },\n    },\n    lockZeroParamFunctions: config.level.lockZeroParamFunctions\n  };\n\n  $.extend(modeOptions.functions, getModeOptionFunctionsFromConfig({ blocks: exports.dropletGlobalConfigBlocks }), getModeOptionFunctionsFromConfig({ blocks: exports.dropletBuiltinConfigBlocks }), getModeOptionFunctionsFromConfig(config.dropletConfig));\n\n  return modeOptions;\n};\n\n/**\n * Returns a set of all blocks\n * @param {DropletConfig|null} dropletConfig custom configuration, may be null\n * @param {codeFunctions|null} codeFunctions with block overrides, may be null\n * @param paletteOnly boolean: ignore blocks not in codeFunctions palette\n * @returns {DropletBlock[]} a list of all available Droplet blocks,\n *      including the given config's blocks\n */\nexports.getAllAvailableDropletBlocks = function (dropletConfig, codeFunctions, paletteOnly) {\n  var hasConfiguredBlocks = dropletConfig && dropletConfig.blocks;\n  var configuredBlocks = hasConfiguredBlocks ? dropletConfig.blocks : [];\n  if (codeFunctions && hasConfiguredBlocks) {\n    configuredBlocks = mergeFunctionsWithConfig(codeFunctions, dropletConfig, null, paletteOnly);\n  }\n  return exports.dropletGlobalConfigBlocks.concat(exports.dropletBuiltinConfigBlocks).concat(standardConfig.blocks).concat(configuredBlocks);\n};\n\nexports.__TestInterface = {\n  mergeCategoriesWithConfig: mergeCategoriesWithConfig\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js","sourceRoot":"file://localhost","sourceFile":"build/js/dropletUtils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedback.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedback.js","source":"/* global trackEvent */\n\n// NOTE: These must be kept in sync with activity_hint.rb in dashboard.\n'use strict';\n\nvar HINT_REQUEST_PLACEMENT = {\n  NONE: 0, // This value must not be changed.\n  LEFT: 1, // Hint request button is on left.\n  RIGHT: 2 // Hint request button is on right.\n};\n\n/**\n * Bag of utility functions related to building and displaying feedback\n * to students.\n * @class\n * @param {StudioApp} studioApp A studioApp instance used to pull\n *   configuration and perform operations.\n */\nvar FeedbackUtils = function FeedbackUtils(studioApp) {\n  this.studioApp_ = studioApp;\n};\nmodule.exports = FeedbackUtils;\n\n// Globals used in this file:\n//   Blockly\n\nvar trophy = require('./templates/trophy.html.ejs');\nvar utils = require('./utils');\nvar _ = utils.getLodash();\nvar codegen = require('./codegen');\nvar msg = require('./locale');\nvar dom = require('./dom');\nvar xml = require('./xml');\nvar FeedbackBlocks = require('./feedbackBlocks');\nvar constants = require('./constants');\nvar TestResults = constants.TestResults;\nvar KeyCodes = constants.KeyCodes;\n\n/**\n * @typedef {Object} TestableBlock\n * @property {string|function} test - A test whether the block is\n *           present, either:\n *           - A string, in which case the string is searched for in\n *             the generated code.\n *           - A single-argument function is called on each user-added\n *             block individually.  If any call returns true, the block\n *             is deemed present.  \"User-added\" blocks are ones that are\n *             neither disabled or undeletable.\n * @property {string} type - The type of block to be produced for\n *           display to the user if the test failed.\n * @property {Object} [titles] - A dictionary, where, for each\n *           KEY-VALUE pair, this is added to the block definition:\n *           <title name=\"KEY\">VALUE</title>.\n * @property {Object} [value] - A dictionary, where, for each\n *           KEY-VALUE pair, this is added to the block definition:\n *           <value name=\"KEY\">VALUE</value>\n * @property {string} [extra] - A string that should be blacked\n *           between the \"block\" start and end tags.\n */\n\n/**\n * @param {Object} options\n * @param {!TestableBlock[]} requiredBlocks The blocks that are required to be used in\n *   the solution to this level.\n * @param {number} maxRequiredBlocksToFlag The number of required blocks to\n *   give hints about at any one time.  Set this to Infinity to show all.\n * @param {!TestableBlock[]} recommendedBlocks The blocks that are recommended to be used in\n *   the solution to this level.\n * @param {number} maxRecommendedBlocksToFlag The number of recommended blocks to\n *   give hints about at any one time.  Set this to Infinity to show all.\n */\nFeedbackUtils.prototype.displayFeedback = function (options, requiredBlocks, maxRequiredBlocksToFlag, recommendedBlocks, maxRecommendedBlocksToFlag) {\n\n  options.level = options.level || {};\n  options.numTrophies = this.numTrophiesEarned_(options);\n\n  // Tracking event for level newly completed\n  if (options.response && options.response.new_level_completed) {\n    trackEvent('Puzzle', 'Completed', options.response.level_path, options.response.level_attempts);\n  }\n\n  var hadShareFailure = options.response && options.response.share_failure;\n  var showingSharing = options.showingSharing && !hadShareFailure;\n\n  var canContinue = this.canContinueToNextLevel(options.feedbackType);\n  var displayShowCode = this.studioApp_.enableShowCode && this.studioApp_.enableShowLinesCount && canContinue && !showingSharing;\n  var feedback = document.createElement('div');\n  var sharingDiv = canContinue && showingSharing ? this.createSharingDiv(options) : null;\n  var showCode = displayShowCode ? this.getShowCodeElement_(options) : null;\n  var shareFailureDiv = hadShareFailure ? this.getShareFailure_(options) : null;\n  if (hadShareFailure) {\n    trackEvent('Share', 'Failure', options.response.share_failure.type);\n  }\n  var feedbackBlocks;\n  if (this.studioApp_.isUsingBlockly()) {\n    feedbackBlocks = new FeedbackBlocks(options, this.getMissingBlocks_(requiredBlocks, maxRequiredBlocksToFlag), this.getMissingBlocks_(recommendedBlocks, maxRecommendedBlocksToFlag), this.studioApp_);\n  }\n  // feedbackMessage must be initialized after feedbackBlocks\n  // because FeedbackBlocks can mutate options.response.hint.\n  var feedbackMessage = this.getFeedbackMessage_(options);\n\n  if (feedbackMessage) {\n    feedback.appendChild(feedbackMessage);\n  }\n  if (options.numTrophies) {\n    // Tracking event for new trophy earned\n    if (options.numTrophies > 0) {\n      for (var i = 0; i < options.numTrophies; i++) {\n        var concept_name = options.response.trophy_updates[i][0];\n        var trophy_name = options.response.trophy_updates[i][1];\n        trackEvent('Trophy', concept_name, trophy_name);\n      }\n    }\n    var trophies = this.getTrophiesElement_(options);\n    feedback.appendChild(trophies);\n  }\n  if (feedbackBlocks && feedbackBlocks.div) {\n    if (feedbackMessage && this.useSpecialFeedbackDesign_(options)) {\n      // put the blocks iframe inside the feedbackMessage for this special case:\n      feedbackMessage.appendChild(feedbackBlocks.div);\n    } else {\n      feedback.appendChild(feedbackBlocks.div);\n    }\n  }\n  if (sharingDiv) {\n    feedback.appendChild(sharingDiv);\n  }\n  if (showingSharing) {\n    var shareCodeSpacer = document.createElement('div');\n    shareCodeSpacer.className = \"share-code-spacer\";\n    feedback.appendChild(shareCodeSpacer);\n  }\n  if (shareFailureDiv) {\n    feedback.appendChild(shareFailureDiv);\n  }\n  if (showCode) {\n    feedback.appendChild(showCode);\n  }\n  if (options.level.isK1) {\n    feedback.className += \" k1\";\n  }\n  if (options.appDiv) {\n    feedback.appendChild(options.appDiv);\n  }\n\n  feedback.className += canContinue ? \" win-feedback\" : \" failure-feedback\";\n\n  feedback.appendChild(this.getFeedbackButtons_({\n    feedbackType: options.feedbackType,\n    tryAgainText: options.tryAgainText,\n    keepPlayingText: options.keepPlayingText,\n    continueText: options.continueText,\n    showPreviousButton: options.level.showPreviousLevelButton,\n    isK1: options.level.isK1,\n    freePlay: options.level.freePlay\n  }));\n\n  var againButton = feedback.querySelector('#again-button');\n  var hintRequestButton = feedback.querySelector('#hint-request-button');\n  var previousLevelButton = feedback.querySelector('#back-button');\n  var continueButton = feedback.querySelector('#continue-button');\n\n  var onlyContinue = continueButton && !againButton && !previousLevelButton;\n\n  var onHidden = onlyContinue ? options.onContinue : null;\n  var icon;\n  if (!options.hideIcon) {\n    icon = canContinue ? this.studioApp_.winIcon : this.studioApp_.failureIcon;\n  }\n  var defaultBtnSelector = onlyContinue ? '#continue-button' : '#again-button';\n\n  var feedbackDialog = this.createModalDialog({\n    Dialog: options.Dialog,\n    contentDiv: feedback,\n    icon: icon,\n    defaultBtnSelector: defaultBtnSelector,\n    onHidden: onHidden,\n    id: 'feedback-dialog'\n  });\n\n  // Update the background color if it is set to be in special design.\n  if (this.useSpecialFeedbackDesign_(options)) {\n    if (options.response.design == \"white_background\") {\n      document.getElementById('feedback-dialog').className += \" white-background\";\n      document.getElementById('feedback-content').className += \" light-yellow-background\";\n    }\n  }\n\n  if (againButton) {\n    dom.addClickTouchEvent(againButton, function () {\n      feedbackDialog.hide();\n    });\n  }\n\n  if (previousLevelButton) {\n    dom.addClickTouchEvent(previousLevelButton, function () {\n      feedbackDialog.hide();\n      options.backToPreviousLevel();\n    });\n  }\n\n  // If there is a hint request button, hide the hint that would ordinarily\n  // be shown (including any feedback blocks), and add code to restore the\n  // hint if the button gets pressed.\n  if (hintRequestButton) {\n\n    var alreadySeen = options.response && options.response.hint_view_requests && options.response.hint_view_requests.some(function (request) {\n      var requestMatchesFeedback = request.feedback_type === options.feedbackType;\n      if (feedbackBlocks && feedbackBlocks.xml) {\n        requestMatchesFeedback = requestMatchesFeedback && request.feedback_xml === feedbackBlocks.xml;\n      }\n      return requestMatchesFeedback;\n    });\n\n    if (alreadySeen) {\n      // Remove \"Show hint\" button.  Making it invisible isn't enough,\n      // because it will still take up space.\n      hintRequestButton.parentNode.removeChild(hintRequestButton);\n    } else {\n\n      // Generate a generic feedback message to display when we show the\n      // feedback block\n      var genericFeedback = this.getFeedbackMessage_({ message: msg.tryBlocksBelowFeedback() });\n\n      // If there are feedback blocks, temporarily remove them.\n      // Get pointers to the parent and next sibling so we can re-insert\n      // the feedback blocks into the correct location if needed.\n      var feedbackBlocksParent = null;\n      var feedbackBlocksNextSib = null;\n      if (feedbackBlocks && feedbackBlocks.div) {\n        feedbackBlocksParent = feedbackBlocks.div.parentNode;\n        feedbackBlocksNextSib = feedbackBlocks.div.nextSibling;\n        feedbackBlocksParent.removeChild(feedbackBlocks.div);\n      }\n\n      // If the user requests the hint...\n      dom.addClickTouchEvent(hintRequestButton, function () {\n\n        // Swap out the specific feedback message with a generic one.\n        var parentNode = feedbackMessage.parentNode;\n        parentNode.replaceChild(genericFeedback, feedbackMessage);\n\n        // Remove \"Show hint\" button.  Making it invisible isn't enough,\n        // because it will still take up space.\n        hintRequestButton.parentNode.removeChild(hintRequestButton);\n\n        // Restore feedback blocks, if present.\n        if (feedbackBlocks && feedbackBlocks.div && feedbackBlocksParent) {\n          feedbackBlocksParent.insertBefore(feedbackBlocks.div, feedbackBlocksNextSib);\n          feedbackBlocks.show();\n        }\n\n        // Report hint request to server.\n        if (options.response.hint_view_request_url) {\n          $.ajax({\n            url: options.response.hint_view_request_url,\n            type: 'POST',\n            data: {\n              script_id: options.response.script_id,\n              level_id: options.response.level_id,\n              feedback_type: options.feedbackType,\n              feedback_xml: feedbackBlocks ? feedbackBlocks.xml : undefined\n            }\n          });\n        }\n      });\n    }\n  }\n\n  if (continueButton) {\n\n    if (options.response && options.response.puzzle_rating_url) {\n      feedback.appendChild(this.buildPuzzleRatingButtons_());\n    }\n\n    dom.addClickTouchEvent(continueButton, function () {\n      feedbackDialog.hide();\n\n      // Submit Puzzle Rating\n      var selectedRating = feedback.querySelector('.puzzle-rating-btn.enabled');\n      if (options.response && options.response.puzzle_rating_url && selectedRating) {\n        $.ajax({\n          url: options.response.puzzle_rating_url,\n          type: 'POST',\n          data: {\n            script_id: options.response.script_id,\n            level_id: options.response.level_id,\n            level_source_id: options.response.level_source_id,\n            rating: selectedRating.getAttribute('data-value')\n          }\n        });\n      }\n      // onContinue will fire already if there was only a continue button\n      if (!onlyContinue) {\n        options.onContinue();\n      }\n    });\n  }\n\n  // set up the Save To Gallery button if necessary\n  var saveToGalleryButton = feedback.querySelector('#save-to-gallery-button');\n  if (saveToGalleryButton && options.response && options.response.save_to_gallery_url) {\n    dom.addClickTouchEvent(saveToGalleryButton, function () {\n      $.post(options.response.save_to_gallery_url, function () {\n        $('#save-to-gallery-button').prop('disabled', true).text(\"Saved!\");\n      });\n    });\n  }\n\n  function createHiddenPrintWindow(src) {\n    var iframe = $('<iframe id=\"print_frame\" style=\"display: none\"></iframe>'); // Created a hidden iframe with just the desired image as its contents\n    iframe.appendTo(\"body\");\n    iframe[0].contentWindow.document.write(\"<img src='\" + src + \"'/>\");\n    iframe[0].contentWindow.document.write(\"<script>if (document.execCommand('print', false, null)) {  } else { window.print();  } </script>\");\n    $(\"#print_frame\").remove(); // Remove the iframe when the print dialogue has been launched\n  }\n\n  var printButton = feedback.querySelector('#print-button');\n  if (printButton) {\n    dom.addClickTouchEvent(printButton, function () {\n      createHiddenPrintWindow(options.feedbackImage);\n    });\n  }\n\n  feedbackDialog.show({\n    backdrop: options.app === 'flappy' ? 'static' : true\n  });\n\n  if (feedbackBlocks && feedbackBlocks.div) {\n    feedbackBlocks.show();\n  }\n};\n\n/**\n * Counts the number of blocks used.  Blocks are only counted if they are\n * not disabled, are deletable.\n * @return {number} Number of blocks used.\n */\nFeedbackUtils.prototype.getNumBlocksUsed = function () {\n  var i;\n  if (this.studioApp_.editCode) {\n    var codeLines = 0;\n    // quick and dirty method to count non-blank lines that don't start with //\n    var lines = this.getGeneratedCodeString_().split(\"\\n\");\n    for (i = 0; i < lines.length; i++) {\n      if (lines[i].length > 1 && (lines[i][0] != '/' || lines[i][1] != '/')) {\n        codeLines++;\n      }\n    }\n    return codeLines;\n  }\n  return this.getUserBlocks_().length;\n};\n\n/**\n * Counts the total number of blocks. Blocks are only counted if they are\n * not disabled.\n * @return {number} Total number of blocks.\n */\nFeedbackUtils.prototype.getNumCountableBlocks = function () {\n  var i;\n  if (this.studioApp_.editCode) {\n    var codeLines = 0;\n    // quick and dirty method to count non-blank lines that don't start with //\n    var lines = this.getGeneratedCodeString_().split(\"\\n\");\n    for (i = 0; i < lines.length; i++) {\n      if (lines[i].length > 1 && (lines[i][0] != '/' || lines[i][1] != '/')) {\n        codeLines++;\n      }\n    }\n    return codeLines;\n  }\n  return this.getCountableBlocks_().length;\n};\n\nFeedbackUtils.prototype.buildPuzzleRatingButtons_ = function () {\n  var buttonContainer = document.createElement('div');\n  buttonContainer.id = 'puzzleRatingButtons';\n  buttonContainer.innerHTML = require('./templates/puzzleRating.html.ejs')();\n\n  var buttons = buttonContainer.querySelectorAll('.puzzle-rating-btn');\n  var buttonClickHandler = function buttonClickHandler() {\n    for (var i = 0, button; button = buttons[i]; i++) {\n      if (button != this) {\n        $(button).removeClass('enabled');\n      }\n    }\n    $(this).toggleClass('enabled');\n  };\n  for (var i = 0, button; button = buttons[i]; i++) {\n    dom.addClickTouchEvent(button, buttonClickHandler);\n  }\n\n  return buttonContainer;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.getFeedbackButtons_ = function (options) {\n  var buttons = document.createElement('div');\n  buttons.id = 'feedbackButtons';\n\n  var tryAgainText = '';\n  if (options.feedbackType !== TestResults.ALL_PASS) {\n    tryAgainText = utils.valueOr(options.tryAgainText, msg.tryAgain());\n  }\n  if (options.keepPlayingText) {\n    tryAgainText = options.keepPlayingText;\n  }\n\n  buttons.innerHTML = require('./templates/buttons.html.ejs')({\n    data: {\n      previousLevel: !this.canContinueToNextLevel(options.feedbackType) && options.showPreviousButton,\n      tryAgain: tryAgainText,\n      continueText: options.continueText || msg['continue'](),\n      nextLevel: this.canContinueToNextLevel(options.feedbackType),\n      shouldPromptForHint: this.shouldPromptForHint(options.feedbackType),\n      isK1: options.isK1,\n      assetUrl: this.studioApp_.assetUrl,\n      freePlay: options.freePlay\n    }\n  });\n\n  return buttons;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.getShareFailure_ = function (options) {\n  var shareFailure = options.response.share_failure;\n  var shareFailureDiv = document.createElement('div');\n  shareFailureDiv.innerHTML = require('./templates/shareFailure.html.ejs')({ shareFailure: shareFailure });\n  return shareFailureDiv;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.useSpecialFeedbackDesign_ = function (options) {\n  return options.response && options.response.design && options.response.hint;\n};\n\n// This returns a document element with the appropriate feedback message.\n// The message will be one of the following, from highest to lowest precedence:\n// 0. Failure override message specified on level (options.level.failureMessageOverride)\n// 1. Message passed in by caller (options.message).\n// 2. Message from dashboard database (options.response.hint).\n// 3. Header message due to dashboard text check fail (options.response.share_failure).\n// 4. Level-specific message (e.g., options.level.emptyBlocksErrorMsg) for\n//    specific result type (e.g., TestResults.EMPTY_BLOCK_FAIL).\n// 5. System-wide message (e.g., msg.emptyBlocksErrorMsg()) for specific\n//    result type (e.g., TestResults.EMPTY_BLOCK_FAIL).\nFeedbackUtils.prototype.getFeedbackMessage_ = function (options) {\n  var feedback = document.createElement('p');\n  feedback.className = 'congrats';\n  var message;\n\n  // If a message was explicitly passed in, use that.\n  if (options.feedbackType !== TestResults.ALL_PASS && options.level && options.level.failureMessageOverride) {\n    message = options.level.failureMessageOverride;\n  } else if (options.message) {\n    message = options.message;\n  } else if (options.response && options.response.share_failure) {\n    message = msg.shareFailure();\n  } else if (options.response && options.response.hint) {\n    // Otherwise, if there's a dashboard database hint, use that.\n    message = options.response.hint;\n  } else {\n    // Otherwise, the message will depend on the test result.\n    switch (options.feedbackType) {\n      case TestResults.RUNTIME_ERROR_FAIL:\n        message = msg.runtimeErrorMsg({ lineNumber: options.executionError.lineNumber });\n        break;\n      case TestResults.SYNTAX_ERROR_FAIL:\n        message = msg.syntaxErrorMsg({ lineNumber: options.executionError.lineNumber });\n        break;\n      case TestResults.EMPTY_BLOCK_FAIL:\n        message = options.level.emptyBlocksErrorMsg || msg.emptyBlocksErrorMsg();\n        break;\n      case TestResults.EMPTY_FUNCTION_BLOCK_FAIL:\n        if (options.level.emptyFunctionBlocksErrorMsg) {\n          message = options.level.emptyFunctionBlocksErrorMsg;\n        } else if (Blockly.useContractEditor || Blockly.useModalFunctionEditor) {\n          message = msg.errorEmptyFunctionBlockModal();\n        } else {\n          message = msg.emptyFunctionBlocksErrorMsg();\n        }\n        break;\n      case TestResults.TOO_FEW_BLOCKS_FAIL:\n        message = options.level.tooFewBlocksMsg || msg.tooFewBlocksMsg();\n        break;\n      case TestResults.LEVEL_INCOMPLETE_FAIL:\n        message = options.level.levelIncompleteError || msg.levelIncompleteError();\n        break;\n      case TestResults.EXTRA_TOP_BLOCKS_FAIL:\n        var hasWhenRun = Blockly.mainBlockSpace.getTopBlocks().some(function (block) {\n          return block.type === 'when_run' && block.isUserVisible();\n        });\n\n        var defaultMessage = hasWhenRun ? msg.extraTopBlocksWhenRun() : msg.extraTopBlocks();\n        message = options.level.extraTopBlocks || defaultMessage;\n        break;\n      case TestResults.APP_SPECIFIC_FAIL:\n        message = options.level.appSpecificFailError;\n        break;\n      case TestResults.UNUSED_PARAM:\n        message = msg.errorUnusedParam();\n        break;\n      case TestResults.UNUSED_FUNCTION:\n        message = msg.errorUnusedFunction();\n        break;\n      case TestResults.PARAM_INPUT_UNATTACHED:\n        message = msg.errorParamInputUnattached();\n        break;\n      case TestResults.INCOMPLETE_BLOCK_IN_FUNCTION:\n        message = msg.errorIncompleteBlockInFunction();\n        break;\n      case TestResults.QUESTION_MARKS_IN_NUMBER_FIELD:\n        message = msg.errorQuestionMarksInNumberField();\n        break;\n      case TestResults.TOO_MANY_BLOCKS_FAIL:\n        // Allow apps to override the \"too many blocks\" failure message\n        // Passed as a msg function to allow the parameters to be passed in.\n        var messageFunction = options.appStrings && options.appStrings.tooManyBlocksFailMsgFunction || msg.numBlocksNeeded;\n        message = messageFunction({\n          numBlocks: this.studioApp_.IDEAL_BLOCK_NUM,\n          puzzleNumber: options.level.puzzle_number || 0\n        });\n        break;\n      case TestResults.APP_SPECIFIC_ACCEPTABLE_FAIL:\n        message = options.level.appSpecificAcceptableFailError;\n        break;\n      case TestResults.EDIT_BLOCKS:\n        message = options.level.edit_blocks_success;\n        break;\n      case TestResults.MISSING_BLOCK_UNFINISHED:\n      /* fallthrough */\n      case TestResults.MISSING_BLOCK_FINISHED:\n        message = options.level.missingRequiredBlocksErrorMsg || msg.missingRequiredBlocksErrorMsg();\n        break;\n      case TestResults.MISSING_RECOMMENDED_BLOCK_UNFINISHED:\n        message = msg.missingRecommendedBlocksErrorMsg();\n        break;\n      case TestResults.MISSING_RECOMMENDED_BLOCK_FINISHED:\n        var numEnabledBlocks = this.getNumCountableBlocks();\n        if (this.studioApp_.IDEAL_BLOCK_NUM && numEnabledBlocks > this.studioApp_.IDEAL_BLOCK_NUM) {\n          message = msg.numBlocksNeeded({\n            numBlocks: this.studioApp_.IDEAL_BLOCK_NUM,\n            puzzleNumber: options.level.puzzle_number || 0\n          });\n        } else {\n          message = msg.completedWithoutRecommendedBlock({\n            puzzleNumber: options.level.puzzle_number || 0\n          });\n        }\n        break;\n      case TestResults.NESTED_FOR_SAME_VARIABLE:\n        message = msg.nestedForSameVariable();\n        break;\n\n      // Success.\n      case TestResults.ALL_PASS:\n      case TestResults.FREE_PLAY:\n        var finalLevel = options.response && options.response.message == \"no more levels\";\n        var stageCompleted = null;\n        if (options.response && options.response.stage_changing) {\n          stageCompleted = options.response.stage_changing.previous.name;\n        }\n        var msgParams = {\n          numTrophies: options.numTrophies,\n          stageNumber: 0, // TODO: remove once localized strings have been fixed\n          stageName: stageCompleted,\n          puzzleNumber: options.level.puzzle_number || 0\n        };\n        if (options.feedbackType === TestResults.FREE_PLAY && !options.level.disableSharing) {\n          message = options.appStrings.reinfFeedbackMsg;\n        } else if (options.numTrophies > 0) {\n          message = finalLevel ? msg.finalStageTrophies(msgParams) : stageCompleted ? msg.nextStageTrophies(msgParams) : msg.nextLevelTrophies(msgParams);\n        } else {\n          var nextLevelMsg = options.appStrings && options.appStrings.nextLevelMsg || msg.nextLevel(msgParams);\n          message = finalLevel ? msg.finalStage(msgParams) : stageCompleted ? msg.nextStage(msgParams) : nextLevelMsg;\n        }\n        break;\n    }\n  }\n\n  $(feedback).text(message);\n\n  // Update the feedback box design, if the hint message came from server.\n  if (this.useSpecialFeedbackDesign_(options)) {\n    // Setup a new div\n    var feedbackDiv = document.createElement('div');\n    feedbackDiv.className = 'feedback-callout';\n    feedbackDiv.id = 'feedback-content';\n\n    // Insert an image\n    var imageDiv = document.createElement('img');\n    imageDiv.className = \"hint-image\";\n    imageDiv.src = this.studioApp_.assetUrl('media/lightbulb_for_' + options.response.design + '.png');\n    feedbackDiv.appendChild(imageDiv);\n    // Add new text\n    var hintHeader = document.createElement('p');\n    $(hintHeader).text(msg.hintHeader());\n    feedbackDiv.appendChild(hintHeader);\n    hintHeader.className = 'hint-header';\n    // Append the original text\n    feedbackDiv.appendChild(feedback);\n    return feedbackDiv;\n  }\n  return feedback;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.createSharingDiv = function (options) {\n  if (!options.response || !options.response.level_source) {\n    // don't even try if our caller didn't give us something that can be shared\n    // options.response.level_source is the url that we are sharing\n    return null;\n  }\n\n  if (this.studioApp_.disableSocialShare) {\n    // Clear out our urls so that we don't display any of our social share links\n    options.twitterUrl = undefined;\n    options.facebookUrl = undefined;\n    options.sendToPhone = false;\n  } else {\n\n    // set up the twitter share url\n    var twitterUrl = \"https://twitter.com/intent/tweet?url=\" + options.response.level_source;\n\n    if (options.twitter && options.twitter.text !== undefined) {\n      twitterUrl += \"&text=\" + encodeURI(options.twitter.text);\n    } else {\n      twitterUrl += \"&text=\" + encodeURI(msg.defaultTwitterText() + \" @codeorg\");\n    }\n\n    if (options.twitter && options.twitter.hashtag !== undefined) {\n      twitterUrl += \"&hashtags=\" + options.twitter.hashtag;\n    } else {\n      twitterUrl += \"&hashtags=\" + 'HourOfCode';\n    }\n\n    if (options.twitter && options.twitter.related !== undefined) {\n      twitterUrl += \"&related=\" + options.twitter.related;\n    } else {\n      twitterUrl += \"&related=codeorg\";\n    }\n\n    options.twitterUrl = twitterUrl;\n\n    // set up the facebook share url\n    var facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + options.response.level_source;\n    options.facebookUrl = facebookUrl;\n  }\n\n  options.assetUrl = this.studioApp_.assetUrl;\n\n  var sharingDiv = document.createElement('div');\n  sharingDiv.setAttribute('style', 'display:inline-block');\n  sharingDiv.innerHTML = require('./templates/sharing.html.ejs')({\n    options: options\n  });\n\n  var sharingInput = sharingDiv.querySelector('#sharing-input');\n  if (sharingInput) {\n    dom.addClickTouchEvent(sharingInput, function () {\n      sharingInput.focus();\n      sharingInput.select();\n    });\n  }\n\n  var sharingShapeways = sharingDiv.querySelector('#sharing-shapeways');\n  if (sharingShapeways) {\n    dom.addClickTouchEvent(sharingShapeways, function () {\n      $('#send-to-phone').hide();\n      $('#shapeways-message').show();\n    });\n  }\n\n  //  SMS-to-phone feature\n  var sharingPhone = sharingDiv.querySelector('#sharing-phone');\n  if (sharingPhone && options.sendToPhone) {\n    dom.addClickTouchEvent(sharingPhone, function () {\n      var sendToPhone = sharingDiv.querySelector('#send-to-phone');\n      if ($(sendToPhone).is(':hidden')) {\n        $('#shapeways-message').hide();\n        sendToPhone.setAttribute('style', 'display:inline-block');\n        var phone = $(sharingDiv.querySelector(\"#phone\"));\n        var submitted = false;\n        var submitButton = sharingDiv.querySelector('#phone-submit');\n        submitButton.disabled = true;\n        phone.mask('(000) 000-0000', {\n          onComplete: function onComplete() {\n            if (!submitted) {\n              submitButton.disabled = false;\n            }\n          },\n          onChange: function onChange() {\n            submitButton.disabled = true;\n          }\n        });\n        phone.focus();\n        dom.addClickTouchEvent(submitButton, function () {\n          var phone = $(sharingDiv.querySelector(\"#phone\"));\n          var params = jQuery.param({\n            level_source: options.response.level_source_id,\n            phone: phone.val()\n          });\n          $(submitButton).val(\"Sending..\");\n          phone.prop('readonly', true);\n          submitButton.disabled = true;\n          submitted = true;\n          jQuery.post(options.response.phone_share_url, params).done(function (response) {\n            $(submitButton).text(\"Sent!\");\n            trackEvent(\"SendToPhone\", \"success\");\n          }).fail(function (xhr) {\n            $(submitButton).text(\"Error!\");\n            trackEvent(\"SendToPhone\", \"error\");\n          });\n        });\n      }\n    });\n  }\n\n  return sharingDiv;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.numTrophiesEarned_ = function (options) {\n  if (options.response && options.response.trophy_updates) {\n    return options.response.trophy_updates.length;\n  } else {\n    return 0;\n  }\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.getTrophiesElement_ = function (options) {\n  var html = \"\";\n  for (var i = 0; i < options.numTrophies; i++) {\n    html += trophy({\n      img_url: options.response.trophy_updates[i][2],\n      concept_name: options.response.trophy_updates[i][0]\n    });\n  }\n  var trophies = document.createElement('div');\n  trophies.innerHTML = html;\n  return trophies;\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.getShowCodeElement_ = function (options) {\n  var showCodeDiv = document.createElement('div');\n  showCodeDiv.setAttribute('id', 'show-code');\n\n  var numLinesWritten = this.getNumBlocksUsed();\n  var shouldShowTotalLines = options.response && options.response.total_lines && options.response.total_lines !== numLinesWritten;\n  var totalNumLinesWritten = shouldShowTotalLines ? options.response.total_lines : 0;\n\n  showCodeDiv.innerHTML = require('./templates/showCode.html.ejs')({\n    numLinesWritten: numLinesWritten,\n    totalNumLinesWritten: totalNumLinesWritten\n  });\n\n  var showCodeButton = showCodeDiv.querySelector('#show-code-button');\n  showCodeButton.addEventListener('click', _.bind(function () {\n    showCodeDiv.appendChild(this.getGeneratedCodeElement_());\n    showCodeButton.style.display = 'none';\n  }, this));\n\n  return showCodeDiv;\n};\n\n/**\n * Determines whether the user can proceed to the next level, based on the level feedback\n * @param {number} feedbackType A constant property of TestResults,\n *     typically produced by StudioApp.getTestResults().\n */\nFeedbackUtils.prototype.canContinueToNextLevel = function (feedbackType) {\n  return feedbackType === TestResults.ALL_PASS || feedbackType === TestResults.TOO_MANY_BLOCKS_FAIL || feedbackType === TestResults.APP_SPECIFIC_ACCEPTABLE_FAIL || feedbackType === TestResults.MISSING_RECOMMENDED_BLOCK_FINISHED || feedbackType === TestResults.FREE_PLAY;\n};\n\n/**\n * Determines whether we should prompt the user to show the given\n * feedback, rather than showing it to them automatically. Currently\n * only used for missing block feedback; may expand in the future\n * @param {number} feedbackType A constant property of TestResults,\n *     typically produced by StudioApp.getTestResults().\n */\nFeedbackUtils.prototype.shouldPromptForHint = function (feedbackType) {\n  return feedbackType === TestResults.MISSING_BLOCK_UNFINISHED || feedbackType === TestResults.MISSING_BLOCK_FINISHED || feedbackType === TestResults.MISSING_RECOMMENDED_BLOCK_FINISHED || feedbackType === TestResults.MISSING_RECOMMENDED_BLOCK_UNFINISHED;\n};\n\n/**\n * Retrieve a string containing the user's generated Javascript code.\n */\nFeedbackUtils.prototype.getGeneratedCodeString_ = function () {\n  if (this.studioApp_.editCode) {\n    return this.studioApp_.editor ? this.studioApp_.editor.getValue() : '';\n  } else {\n    return codegen.workspaceCode(Blockly);\n  }\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.getGeneratedCodeElement_ = function () {\n  var codeInfoMsgParams = {\n    berkeleyLink: \"<a href='http://bjc.berkeley.edu/' target='_blank'>Berkeley</a>\",\n    harvardLink: \"<a href='https://cs50.harvard.edu/' target='_blank'>Harvard</a>\"\n  };\n\n  var infoMessage = this.studioApp_.editCode ? \"\" : msg.generatedCodeInfo(codeInfoMsgParams);\n  var code = this.getGeneratedCodeString_();\n\n  var codeDiv = document.createElement('div');\n  codeDiv.innerHTML = require('./templates/code.html.ejs')({\n    message: infoMessage,\n    code: code\n  });\n\n  return codeDiv;\n};\n\n/**\n * Display the 'Show Code' modal dialog.\n */\nFeedbackUtils.prototype.showGeneratedCode = function (Dialog) {\n  var codeDiv = this.getGeneratedCodeElement_();\n\n  var buttons = document.createElement('div');\n  buttons.innerHTML = require('./templates/buttons.html.ejs')({\n    data: {\n      ok: true\n    }\n  });\n  codeDiv.appendChild(buttons);\n\n  var dialog = this.createModalDialog({\n    Dialog: Dialog,\n    contentDiv: codeDiv,\n    icon: this.studioApp_.icon,\n    defaultBtnSelector: '#ok-button'\n  });\n\n  var okayButton = buttons.querySelector('#ok-button');\n  if (okayButton) {\n    dom.addClickTouchEvent(okayButton, function () {\n      dialog.hide();\n    });\n  }\n\n  dialog.show();\n};\n\n/**\n * Display the \"Clear Puzzle\" confirmation dialog.  Takes a parameter to hide\n * the icon.  Calls `callback` if the user confirms they want to clear the puzzle.\n */\nFeedbackUtils.prototype.showClearPuzzleConfirmation = function (Dialog, hideIcon, callback) {\n  this.showSimpleDialog(Dialog, {\n    headerText: msg.clearPuzzleConfirmHeader(),\n    bodyText: msg.clearPuzzleConfirm(),\n    confirmText: msg.clearPuzzle(),\n    cancelText: msg.dialogCancel(),\n    onConfirm: callback,\n    onCancel: null,\n    hideIcon: hideIcon\n  });\n};\n\n/**\n * Shows a simple dialog that has a header, body, continue button, and cancel\n * button\n * @param {object} options Configurable options.\n * @param {string} headerText Text for header portion\n * @param {string} bodyText Text for body portion\n * @param {string} cancelText Text for cancel button\n * @param {string} confirmText Text for confirm button\n * @param {boolean} hideIcon Whether to hide the icon\n * @param {function} [onConfirm] Function to be called after clicking confirm\n * @param {function} [onCancel] Function to be called after clicking cancel\n */\nFeedbackUtils.prototype.showSimpleDialog = function (Dialog, options) {\n  var contentDiv = document.createElement('div');\n  contentDiv.innerHTML = '';\n  if (options.headerText) {\n    contentDiv.innerHTML += '<p class=\"dialog-title\">' + options.headerText + '</p>';\n  }\n  if (options.bodyText) {\n    contentDiv.innerHTML += '<p>' + options.bodyText + '</p>';\n  }\n\n  var buttons = document.createElement('div');\n  buttons.innerHTML = require('./templates/buttons.html.ejs')({\n    data: {\n      confirmText: options.confirmText,\n      cancelText: options.cancelText,\n      cancelButtonClass: options.cancelButtonClass\n    }\n  });\n  contentDiv.appendChild(buttons);\n\n  var dialog = this.createModalDialog({\n    Dialog: Dialog,\n    contentDiv: contentDiv,\n    icon: options.hideIcon ? null : this.studioApp_.icon,\n    defaultBtnSelector: '#again-button'\n  });\n\n  var cancelButton = buttons.querySelector('#again-button');\n  if (cancelButton) {\n    dom.addClickTouchEvent(cancelButton, function () {\n      if (options.onCancel) {\n        options.onCancel();\n      }\n      dialog.hide();\n    });\n  }\n\n  var confirmButton = buttons.querySelector('#confirm-button');\n  if (confirmButton) {\n    dom.addClickTouchEvent(confirmButton, function () {\n      if (options.onConfirm) {\n        options.onConfirm();\n      }\n      dialog.hide();\n    });\n  }\n\n  dialog.show();\n};\n\n/**\n *\n */\nFeedbackUtils.prototype.showToggleBlocksError = function (Dialog) {\n  var contentDiv = document.createElement('div');\n  contentDiv.innerHTML = msg.toggleBlocksErrorMsg();\n\n  var buttons = document.createElement('div');\n  buttons.innerHTML = require('./templates/buttons.html.ejs')({\n    data: {\n      ok: true\n    }\n  });\n  contentDiv.appendChild(buttons);\n\n  var dialog = this.createModalDialog({\n    Dialog: Dialog,\n    contentDiv: contentDiv,\n    icon: this.studioApp_.icon,\n    defaultBtnSelector: '#ok-button'\n  });\n\n  var okayButton = buttons.querySelector('#ok-button');\n  if (okayButton) {\n    dom.addClickTouchEvent(okayButton, function () {\n      dialog.hide();\n    });\n  }\n\n  dialog.show();\n};\n\n/**\n * Get an empty container block, if any are present.\n * @return {Blockly.Block} an empty container block, or null if none exist.\n */\nFeedbackUtils.prototype.getEmptyContainerBlock_ = function () {\n  var blocks = Blockly.mainBlockSpace.getAllBlocks();\n  return Blockly.findEmptyContainerBlock(blocks);\n};\n\n/**\n * Check for empty container blocks, and return an appropriate failure\n * code if any are found.\n * @return {TestResults} ALL_PASS if no empty blocks are present, or\n *   EMPTY_BLOCK_FAIL or EMPTY_FUNCTION_BLOCK_FAIL if empty blocks\n *   are found.\n */\nFeedbackUtils.prototype.checkForEmptyContainerBlockFailure_ = function () {\n  var emptyBlock = this.getEmptyContainerBlock_();\n  if (!emptyBlock) {\n    return TestResults.ALL_PASS;\n  }\n\n  var type = emptyBlock.type;\n  if (type === 'procedures_defnoreturn' || type === 'procedures_defreturn') {\n    return TestResults.EMPTY_FUNCTION_BLOCK_FAIL;\n  }\n\n  // Block is assumed to be \"if\" or \"repeat\" if we reach here.\n  // This is where to add checks if you want a different TestResult\n  // for \"controls_for_counter\" blocks, for example.\n  return TestResults.EMPTY_BLOCK_FAIL;\n};\n\n/**\n * Throws errors with descriptive messages when example call or result blocks\n * don't exist or have unfilled functional inputs.\n * @param {Blockly.Block} callBlock\n * @param {Blockly.Block} resultBlock\n */\nFeedbackUtils.prototype.throwOnInvalidExampleBlocks = function (callBlock, resultBlock) {\n  if (!callBlock) {\n    throw new Error('Invalid Call Block');\n  }\n\n  if (!resultBlock) {\n    throw new Error('Invalid Result Block');\n  }\n\n  if (resultBlock.hasUnfilledFunctionalInput()) {\n    throw new Error('Result has unfilled inputs');\n  }\n\n  if (callBlock.hasUnfilledFunctionalInput()) {\n    throw new Error('Call has unfilled inputs');\n  }\n};\n\n/**\n * Check whether the user code has all the given blocks\n * @param {!TestableBlock[]} blocks\n * @return {boolean} true if all blocks are present, false otherwise.\n */\nFeedbackUtils.prototype.hasAllBlocks_ = function (blocks) {\n  // It's okay (maybe faster) to pass 1 for maxBlocksToFlag, since in the end\n  // we want to check that there are zero blocks missing.\n  var maxBlocksToFlag = 1;\n  return this.getMissingBlocks_(blocks, maxBlocksToFlag).blocksToDisplay.length === 0;\n};\n\n/**\n * Get blocks that the user intends in the program. These are the blocks\n * that are used when checking for required and recommended blocks and\n * when determining lines of code written.\n * @return {Array<Object>} The blocks.\n */\nFeedbackUtils.prototype.getUserBlocks_ = function () {\n  var allBlocks = Blockly.mainBlockSpace.getAllBlocks();\n  var blocks = allBlocks.filter(function (block) {\n    return !block.disabled && block.isEditable() && block.type !== 'when_run';\n  });\n  return blocks;\n};\n\n/**\n * Get countable blocks in the program, namely any that are not disabled.\n * These are used when determined the number of blocks relative to the ideal\n * block count.\n * @return {Array<Object>} The blocks.\n */\nFeedbackUtils.prototype.getCountableBlocks_ = function () {\n  var allBlocks = Blockly.mainBlockSpace.getAllBlocks();\n  var blocks = allBlocks.filter(function (block) {\n    return !block.disabled;\n  });\n  return blocks;\n};\n\n/**\n * Check to see if the user's code contains the given blocks for a level.\n * @param {!TestableBlock[]} blocks\n * @param {number} maxBlocksToFlag The maximum number of blocks to\n *   return. We most often only care about a single block at a time\n * @return {{blocksToDisplay:!Array, message:?string}} 'missingBlocks' is an\n *   array of array of strings where each array of strings is a set of blocks\n *   that at least one of them should be used. Each block is represented as the\n *   prefix of an id in the corresponding template.soy. 'message' is an\n *   optional message to override the default error text.\n */\nFeedbackUtils.prototype.getMissingBlocks_ = function (blocks, maxBlocksToFlag) {\n  var missingBlocks = [];\n  var customMessage = null;\n  var code = null; // JavaScript code, which is initialized lazily.\n  if (blocks && blocks.length) {\n    var userBlocks = this.getUserBlocks_();\n    // For each list of blocks\n    // Keep track of the number of the missing block lists. It should not be\n    // bigger than the maxBlocksToFlag param.\n    var missingBlockNum = 0;\n    for (var i = 0; i < blocks.length && missingBlockNum < maxBlocksToFlag; i++) {\n      var block = blocks[i];\n      // For each of the test\n      // If at least one of the tests succeeded, we consider the block\n      // is used\n      var usedBlock = false;\n      for (var testId = 0; testId < block.length; testId++) {\n        var test = block[testId].test;\n        if (typeof test === 'string') {\n          code = code || Blockly.Generator.blockSpaceToCode('JavaScript');\n          if (code.indexOf(test) !== -1) {\n            // Succeeded, moving to the next list of tests\n            usedBlock = true;\n            break;\n          }\n        } else if (typeof test === 'function') {\n          if (userBlocks.some(test)) {\n            // Succeeded, moving to the next list of tests\n            usedBlock = true;\n            break;\n          } else {\n            customMessage = block[testId].message || customMessage;\n          }\n        } else {\n          throw new Error('Bad test: ' + test);\n        }\n      }\n      if (!usedBlock) {\n        missingBlockNum++;\n        missingBlocks = missingBlocks.concat(blocks[i][0]);\n      }\n    }\n  }\n  return {\n    blocksToDisplay: missingBlocks,\n    message: customMessage\n  };\n};\n\n/**\n * Do we have any floating blocks not attached to an event block or function block?\n */\nFeedbackUtils.prototype.hasExtraTopBlocks = function () {\n  if (this.studioApp_.editCode) {\n    return false;\n  }\n  var topBlocks = Blockly.mainBlockSpace.getTopBlocks();\n  for (var i = 0; i < topBlocks.length; i++) {\n    // ignore disabled top blocks. we have a level turtle:2_7 that depends on\n    // having disabled top level blocks\n    if (topBlocks[i].disabled) {\n      continue;\n    }\n    // Ignore top blocks which are functional definitions.\n    if (topBlocks[i].type === 'functional_definition') {\n      continue;\n    }\n    // None of our top level blocks should have a previous or output connection\n    // (they should only have a next)\n    if (topBlocks[i].previousConnection || topBlocks[i].outputConnection) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Runs the tests and returns results.\n * @param {boolean} levelComplete Did the user successfully complete the level?\n * @param {!TestableBlock[]} requiredBlocks The blocks that are required\n *   to be used in the solution to this level.\n * @param {!TestableBlock[]} recommendedBlocks The blocks that are\n *   recommended to be used in the solution to this level.\n * @param {boolean} shouldCheckForEmptyBlocks Whether empty blocks should cause\n *   a test fail result.\n * @param {Object} options\n * @return {number} The appropriate property of TestResults.\n */\nFeedbackUtils.prototype.getTestResults = function (levelComplete, requiredBlocks, recommendedBlocks, shouldCheckForEmptyBlocks, options) {\n  options = options || {};\n  if (this.studioApp_.editCode) {\n    if (levelComplete) {\n      return this.studioApp_.TestResults.ALL_PASS;\n    } else if (options.executionError && options.executionError.err instanceof SyntaxError) {\n      return this.studioApp_.TestResults.SYNTAX_ERROR_FAIL;\n    } else if (options.executionError) {\n      return this.studioApp_.TestResults.RUNTIME_ERROR_FAIL;\n    } else {\n      return this.studioApp_.TestResults.TOO_FEW_BLOCKS_FAIL;\n    }\n  }\n  if (shouldCheckForEmptyBlocks) {\n    var emptyBlockFailure = this.checkForEmptyContainerBlockFailure_();\n    if (emptyBlockFailure !== TestResults.ALL_PASS) {\n      return emptyBlockFailure;\n    }\n  }\n  if (!options.allowTopBlocks && this.hasExtraTopBlocks()) {\n    return TestResults.EXTRA_TOP_BLOCKS_FAIL;\n  }\n  if (this.studioApp_.hasDuplicateVariablesInForLoops()) {\n    return TestResults.NESTED_FOR_SAME_VARIABLE;\n  }\n  if (Blockly.useContractEditor || Blockly.useModalFunctionEditor) {\n    if (this.hasUnusedParam_()) {\n      return TestResults.UNUSED_PARAM;\n    }\n    if (this.hasUnusedFunction_()) {\n      return TestResults.UNUSED_FUNCTION;\n    }\n    if (this.hasParamInputUnattached_()) {\n      return TestResults.PARAM_INPUT_UNATTACHED;\n    }\n    if (this.hasIncompleteBlockInFunction_()) {\n      return TestResults.INCOMPLETE_BLOCK_IN_FUNCTION;\n    }\n  }\n  if (this.hasQuestionMarksInNumberField()) {\n    return TestResults.QUESTION_MARKS_IN_NUMBER_FIELD;\n  }\n  if (!this.hasAllBlocks_(requiredBlocks)) {\n    return levelComplete ? TestResults.MISSING_BLOCK_FINISHED : TestResults.MISSING_BLOCK_UNFINISHED;\n  }\n  if (!this.hasAllBlocks_(recommendedBlocks)) {\n    return levelComplete ? TestResults.MISSING_RECOMMENDED_BLOCK_FINISHED : TestResults.MISSING_RECOMMENDED_BLOCK_UNFINISHED;\n  }\n  var numEnabledBlocks = this.getNumCountableBlocks();\n  if (!levelComplete) {\n    if (this.studioApp_.IDEAL_BLOCK_NUM && this.studioApp_.IDEAL_BLOCK_NUM !== Infinity && numEnabledBlocks < this.studioApp_.IDEAL_BLOCK_NUM) {\n      return TestResults.TOO_FEW_BLOCKS_FAIL;\n    }\n    return TestResults.LEVEL_INCOMPLETE_FAIL;\n  }\n  if (this.studioApp_.IDEAL_BLOCK_NUM && numEnabledBlocks > this.studioApp_.IDEAL_BLOCK_NUM) {\n    return TestResults.TOO_MANY_BLOCKS_FAIL;\n  } else {\n    return TestResults.ALL_PASS;\n  }\n};\n\n/**\n * Show a modal dialog without an icon.\n * @param {Object} options\n * @param {Dialog} options.Dialog\n * @param {string} options.icon\n * @param {HTMLElement} options.contentDiv\n * @param {string} options.defaultBtnSelector\n * @param {boolean} options.scrollContent\n * @param {boolean} options.scrollableSelector\n * @param {function} options.onHidden\n * @param {string} options.id\n * @param {HTMLElement} options.header\n */\nFeedbackUtils.prototype.createModalDialog = function (options) {\n  var modalBody = document.createElement('div');\n  if (options.icon) {\n    var imageDiv;\n    imageDiv = document.createElement('img');\n    imageDiv.className = \"modal-image\";\n    imageDiv.src = options.icon;\n    modalBody.appendChild(imageDiv);\n  } else {\n    options.contentDiv.className += ' no-modal-icon';\n  }\n  options.contentDiv.className += ' modal-content';\n  modalBody.appendChild(options.contentDiv);\n\n  var btn = options.contentDiv.querySelector(options.defaultBtnSelector);\n  var keydownHandler = function keydownHandler(e) {\n    if (e.keyCode == KeyCodes.ENTER || e.keyCode == KeyCodes.SPACE) {\n      // Simulate a 'click':\n      var event = new MouseEvent('click', {\n        'view': window,\n        'bubbles': true,\n        'cancelable': true\n      });\n      btn.dispatchEvent(event);\n\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  };\n\n  var scrollableSelector = options.scrollableSelector || '.modal-content';\n  var elementToScroll = options.scrollContent ? scrollableSelector : null;\n  return new options.Dialog({\n    body: modalBody,\n    onHidden: options.onHidden,\n    onKeydown: btn ? keydownHandler : undefined,\n    autoResizeScrollableElement: elementToScroll,\n    id: options.id,\n    header: options.header\n  });\n};\n\n/**\n * Check for '???' instead of a value in block fields.\n */\nFeedbackUtils.prototype.hasQuestionMarksInNumberField = function () {\n  return Blockly.mainBlockSpace.getAllBlocks().some(function (block) {\n    return block.getTitles().some(function (title) {\n      return title.value_ === '???' || title.text_ === '???';\n    });\n  });\n};\n\n/**\n * Ensure that all procedure definitions actually use the parameters they define\n * inside the procedure.\n */\nFeedbackUtils.prototype.hasUnusedParam_ = function () {\n  var self = this;\n  return Blockly.mainBlockSpace.getAllBlocks().some(function (userBlock) {\n    var params = userBlock.parameterNames_;\n    // Only search procedure definitions\n    return params && params.some(function (paramName) {\n      // Unused param if there's no parameters_get descendant with the same name\n      return !self.hasMatchingDescendant_(userBlock, function (block) {\n        return (block.type === 'parameters_get' || block.type === 'functional_parameters_get' || block.type === 'variables_get') && block.getTitleValue('VAR') === paramName;\n      });\n    });\n  });\n};\n\n/**\n * Ensure that all procedure calls have each parameter input connected.\n */\nFeedbackUtils.prototype.hasParamInputUnattached_ = function () {\n  return Blockly.mainBlockSpace.getAllBlocks().some(function (userBlock) {\n    // Only check procedure_call* blocks\n    if (!/^procedures_call/.test(userBlock.type)) {\n      return false;\n    }\n    return userBlock.inputList.filter(function (input) {\n      return (/^ARG/.test(input.name)\n      );\n    }).some(function (argInput) {\n      // Unattached param input if any ARG* connection target is null\n      return !argInput.connection.targetConnection;\n    });\n  });\n};\n\n/**\n * Ensure that all user-declared procedures have associated call blocks.\n */\nFeedbackUtils.prototype.hasUnusedFunction_ = function () {\n  var userDefs = [];\n  var callBlocks = {};\n  Blockly.mainBlockSpace.getAllBlocks().forEach(function (block) {\n    var name = block.getTitleValue('NAME');\n    if (/^procedures_def/.test(block.type) && block.userCreated) {\n      userDefs.push(name);\n    } else if (/^procedures_call/.test(block.type)) {\n      callBlocks[name] = true;\n    }\n  });\n  // Unused function if some user def doesn't have a matching call\n  return userDefs.some(function (name) {\n    return !callBlocks[name];\n  });\n};\n\n/**\n * Ensure there are no incomplete blocks inside any function definitions.\n */\nFeedbackUtils.prototype.hasIncompleteBlockInFunction_ = function () {\n  var self = this;\n  return Blockly.mainBlockSpace.getAllBlocks().some(function (userBlock) {\n    // Only search procedure definitions\n    if (!userBlock.parameterNames_) {\n      return false;\n    }\n    return self.hasMatchingDescendant_(userBlock, function (block) {\n      // Incomplete block if any input connection target is null\n      return block.inputList.some(function (input) {\n        return input.type === Blockly.INPUT_VALUE && !input.connection.targetConnection;\n      });\n    });\n  });\n};\n\n/**\n * Returns true if any descendant (inclusive) of the given node matches the\n * given filter.\n */\nFeedbackUtils.prototype.hasMatchingDescendant_ = function (node, filter) {\n  if (filter(node)) {\n    return true;\n  }\n  var self = this;\n  return node.childBlocks_.some(function (child) {\n    return self.hasMatchingDescendant_(child, filter);\n  });\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./templates/buttons.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs","./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","./codegen":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js","./locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","./dom":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js","./xml":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","./constants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js","./templates/trophy.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/trophy.html.ejs","./templates/puzzleRating.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/puzzleRating.html.ejs","./templates/shareFailure.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/shareFailure.html.ejs","./templates/sharing.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/sharing.html.ejs","./templates/showCode.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/showCode.html.ejs","./templates/code.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/code.html.ejs","./feedbackBlocks":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedbackBlocks.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedback.js","sourceRoot":"file://localhost","sourceFile":"build/js/feedback.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedbackBlocks.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedbackBlocks.js","source":"'use strict';\n\nvar constants = require('./constants');\nvar readonly = require('./templates/readonly.html.ejs');\n\nvar TestResults = constants.TestResults;\n\n// TODO (br-pair): can we not pass in the studioApp\nvar FeedbackBlocks = function FeedbackBlocks(options, missingRequiredBlocks, missingRecommendedBlocks, studioApp) {\n  // Check whether blocks are embedded in the hint returned from dashboard.\n  // See below comment for format.\n  var embeddedBlocks = options.response && options.response.hint && options.response.hint.indexOf(\"[{\") !== 0;\n  if (!embeddedBlocks && options.feedbackType !== TestResults.MISSING_BLOCK_UNFINISHED && options.feedbackType !== TestResults.MISSING_BLOCK_FINISHED && options.feedbackType !== TestResults.MISSING_RECOMMENDED_BLOCK_UNFINISHED && options.feedbackType !== TestResults.MISSING_RECOMMENDED_BLOCK_FINISHED) {\n    return;\n  }\n\n  var blocksToDisplay = [];\n  if (embeddedBlocks) {\n    // Hint should be of the form: SOME TEXT [{..}, {..}, ..] IGNORED.\n    // Example: 'Try the following block: [{\"type\": \"maze_moveForward\"}]'\n    // Note that double quotes are required by the JSON parser.\n    var parts = options.response.hint.match(/(.*)(\\[.*\\])/);\n    if (!parts) {\n      return;\n    }\n    options.response.hint = parts[1].trim(); // Remove blocks from hint.\n    try {\n      blocksToDisplay = JSON.parse(parts[2]);\n    } catch (err) {\n      // The blocks could not be parsed.  Ignore them.\n      return;\n    }\n  } else if (missingRequiredBlocks.blocksToDisplay.length) {\n    handleMissingBlocks(missingRequiredBlocks);\n  } else {\n    handleMissingBlocks(missingRecommendedBlocks);\n  }\n\n  function handleMissingBlocks(blocks) {\n    blocksToDisplay = blocks.blocksToDisplay;\n    if (blocks.message) {\n      options.message = blocks.message;\n    }\n  }\n\n  if (blocksToDisplay.length === 0) {\n    return;\n  }\n\n  this.xml = this.generateXMLForBlocks_(blocksToDisplay);\n\n  this.div = document.createElement('div');\n  this.html = readonly({\n    app: options.app,\n    assetUrl: studioApp.assetUrl,\n    options: {\n      readonly: true,\n      locale: studioApp.LOCALE,\n      localeDirection: studioApp.localeDirection(),\n      baseUrl: studioApp.BASE_URL,\n      cacheBust: studioApp.CACHE_BUST,\n      skinId: options.skin,\n      level: options.level,\n      blocks: this.xml\n    }\n  });\n  this.iframe = document.createElement('iframe');\n  this.iframe.setAttribute('id', 'feedbackBlocks');\n  this.iframe.setAttribute('allowtransparency', 'true');\n  this.div.appendChild(this.iframe);\n};\n\nmodule.exports = FeedbackBlocks;\n\nFeedbackBlocks.prototype.show = function () {\n  var iframe = document.getElementById('feedbackBlocks');\n  if (iframe) {\n    var doc = iframe.contentDocument || iframe.contentWindow.document;\n    doc.open();\n    doc.write(this.html);\n    doc.close();\n  }\n};\n\n/**\n * Creates the XML for blocks to be displayed in a read-only frame.\n * @param {Array} blocks An array of blocks to display (with optional args).\n * @return {string} The generated string of XML.\n */\nFeedbackBlocks.prototype.generateXMLForBlocks_ = function (blocks) {\n  var blockXMLStrings = [];\n  var blockX = 10; // Prevent left output plugs from being cut off.\n  var blockY = 0;\n  var blockXPadding = 200;\n  var blockYPadding = 120;\n  var blocksPerLine = 2;\n  var k, name;\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n    if (block.blockDisplayXML) {\n      blockXMLStrings.push(block.blockDisplayXML);\n      continue;\n    }\n    blockXMLStrings.push('<block', ' type=\"', block.type, '\" x=\"', blockX.toString(), '\" y=\"', blockY, '\">');\n    if (block.titles) {\n      var titleNames = Object.keys(block.titles);\n      for (k = 0; k < titleNames.length; k++) {\n        name = titleNames[k];\n        blockXMLStrings.push('<title name=\"', name, '\">', block.titles[name], '</title>');\n      }\n    }\n    if (block.values) {\n      var valueNames = Object.keys(block.values);\n      for (k = 0; k < valueNames.length; k++) {\n        name = valueNames[k];\n        blockXMLStrings.push('<value name=\"', name, '\">', block.values[name], '</value>');\n      }\n    }\n    if (block.extra) {\n      blockXMLStrings.push(block.extra);\n    }\n    blockXMLStrings.push('</block>');\n    if ((i + 1) % blocksPerLine === 0) {\n      blockY += blockYPadding;\n      blockX = 0;\n    } else {\n      blockX += blockXPadding;\n    }\n  }\n  return blockXMLStrings.join('');\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./constants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js","./templates/readonly.html.ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/readonly.html.ejs"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedbackBlocks.js","sourceRoot":"file://localhost","sourceFile":"build/js/feedbackBlocks.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/hammer.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/hammer.js","source":"/*! Hammer.JS - v1.1.3 - 2014-05-22\n * http://eightmedia.github.io/hammer.js\n *\n * Copyright (c) 2014 Jorik Tangelder <j.tangelder@gmail.com>;\n * Licensed under the MIT license */\n\n'use strict';\n\n(function (window, undefined) {\n    'use strict';\n\n    /**\n     * @main\n     * @module hammer\n     *\n     * @class Hammer\n     * @static\n     */\n\n    /**\n     * Hammer, use this to create instances\n     * ````\n     * var hammertime = new Hammer(myElement);\n     * ````\n     *\n     * @method Hammer\n     * @param {HTMLElement} element\n     * @param {Object} [options={}]\n     * @return {Hammer.Instance}\n     */\n    var Hammer = function Hammer(element, options) {\n        return new Hammer.Instance(element, options || {});\n    };\n\n    /**\n     * version, as defined in package.json\n     * the value will be set at each build\n     * @property VERSION\n     * @final\n     * @type {String}\n     */\n    Hammer.VERSION = '1.1.3';\n\n    /**\n     * default settings.\n     * more settings are defined per gesture at `/gestures`. Each gesture can be disabled/enabled\n     * by setting it's name (like `swipe`) to false.\n     * You can set the defaults for all instances by changing this object before creating an instance.\n     * @example\n     * ````\n     *  Hammer.defaults.drag = false;\n     *  Hammer.defaults.behavior.touchAction = 'pan-y';\n     *  delete Hammer.defaults.behavior.userSelect;\n     * ````\n     * @property defaults\n     * @type {Object}\n     */\n    Hammer.defaults = {\n        /**\n         * this setting object adds styles and attributes to the element to prevent the browser from doing\n         * its native behavior. The css properties are auto prefixed for the browsers when needed.\n         * @property defaults.behavior\n         * @type {Object}\n         */\n        behavior: {\n            /**\n             * Disables text selection to improve the dragging gesture. When the value is `none` it also sets\n             * `onselectstart=false` for IE on the element. Mainly for desktop browsers.\n             * @property defaults.behavior.userSelect\n             * @type {String}\n             * @default 'none'\n             */\n            userSelect: 'none',\n\n            /**\n             * Specifies whether and how a given region can be manipulated by the user (for instance, by panning or zooming).\n             * Used by Chrome 35> and IE10>. By default this makes the element blocking any touch event.\n             * @property defaults.behavior.touchAction\n             * @type {String}\n             * @default: 'pan-y'\n             */\n            touchAction: 'pan-y',\n\n            /**\n             * Disables the default callout shown when you touch and hold a touch target.\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\n             * a callout containing information about the link. This property allows you to disable that callout.\n             * @property defaults.behavior.touchCallout\n             * @type {String}\n             * @default 'none'\n             */\n            touchCallout: 'none',\n\n            /**\n             * Specifies whether zooming is enabled. Used by IE10>\n             * @property defaults.behavior.contentZooming\n             * @type {String}\n             * @default 'none'\n             */\n            contentZooming: 'none',\n\n            /**\n             * Specifies that an entire element should be draggable instead of its contents.\n             * Mainly for desktop browsers.\n             * @property defaults.behavior.userDrag\n             * @type {String}\n             * @default 'none'\n             */\n            userDrag: 'none',\n\n            /**\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\n             * clickable element in Safari on iPhone. This property obeys the alpha value, if specified.\n             *\n             * If you don't specify an alpha value, Safari on iPhone applies a default alpha value\n             * to the color. To disable tap highlighting, set the alpha value to 0 (invisible).\n             * If you set the alpha value to 1.0 (opaque), the element is not visible when tapped.\n             * @property defaults.behavior.tapHighlightColor\n             * @type {String}\n             * @default 'rgba(0,0,0,0)'\n             */\n            tapHighlightColor: 'rgba(0,0,0,0)'\n        }\n    };\n\n    /**\n     * hammer document where the base events are added at\n     * @property DOCUMENT\n     * @type {HTMLElement}\n     * @default window.document\n     */\n    Hammer.DOCUMENT = document;\n\n    /**\n     * detect support for pointer events\n     * @property HAS_POINTEREVENTS\n     * @type {Boolean}\n     */\n    Hammer.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;\n\n    /**\n     * detect support for touch events\n     * @property HAS_TOUCHEVENTS\n     * @type {Boolean}\n     */\n    Hammer.HAS_TOUCHEVENTS = 'ontouchstart' in window;\n\n    /**\n     * detect mobile browsers\n     * @property IS_MOBILE\n     * @type {Boolean}\n     */\n    Hammer.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);\n\n    /**\n     * detect if we want to support mouseevents at all\n     * @property NO_MOUSEEVENTS\n     * @type {Boolean}\n     */\n    Hammer.NO_MOUSEEVENTS = Hammer.HAS_TOUCHEVENTS && Hammer.IS_MOBILE || Hammer.HAS_POINTEREVENTS;\n\n    /**\n     * interval in which Hammer recalculates current velocity/direction/angle in ms\n     * @property CALCULATE_INTERVAL\n     * @type {Number}\n     * @default 25\n     */\n    Hammer.CALCULATE_INTERVAL = 25;\n\n    /**\n     * eventtypes per touchevent (start, move, end) are filled by `Event.determineEventTypes` on `setup`\n     * the object contains the DOM event names per type (`EVENT_START`, `EVENT_MOVE`, `EVENT_END`)\n     * @property EVENT_TYPES\n     * @private\n     * @writeOnce\n     * @type {Object}\n     */\n    var EVENT_TYPES = {};\n\n    /**\n     * direction strings, for safe comparisons\n     * @property DIRECTION_DOWN|LEFT|UP|RIGHT\n     * @final\n     * @type {String}\n     * @default 'down' 'left' 'up' 'right'\n     */\n    var DIRECTION_DOWN = Hammer.DIRECTION_DOWN = 'down';\n    var DIRECTION_LEFT = Hammer.DIRECTION_LEFT = 'left';\n    var DIRECTION_UP = Hammer.DIRECTION_UP = 'up';\n    var DIRECTION_RIGHT = Hammer.DIRECTION_RIGHT = 'right';\n\n    /**\n     * pointertype strings, for safe comparisons\n     * @property POINTER_MOUSE|TOUCH|PEN\n     * @final\n     * @type {String}\n     * @default 'mouse' 'touch' 'pen'\n     */\n    var POINTER_MOUSE = Hammer.POINTER_MOUSE = 'mouse';\n    var POINTER_TOUCH = Hammer.POINTER_TOUCH = 'touch';\n    var POINTER_PEN = Hammer.POINTER_PEN = 'pen';\n\n    /**\n     * eventtypes\n     * @property EVENT_START|MOVE|END|RELEASE|TOUCH\n     * @final\n     * @type {String}\n     * @default 'start' 'change' 'move' 'end' 'release' 'touch'\n     */\n    var EVENT_START = Hammer.EVENT_START = 'start';\n    var EVENT_MOVE = Hammer.EVENT_MOVE = 'move';\n    var EVENT_END = Hammer.EVENT_END = 'end';\n    var EVENT_RELEASE = Hammer.EVENT_RELEASE = 'release';\n    var EVENT_TOUCH = Hammer.EVENT_TOUCH = 'touch';\n\n    /**\n     * if the window events are set...\n     * @property READY\n     * @writeOnce\n     * @type {Boolean}\n     * @default false\n     */\n    Hammer.READY = false;\n\n    /**\n     * plugins namespace\n     * @property plugins\n     * @type {Object}\n     */\n    Hammer.plugins = Hammer.plugins || {};\n\n    /**\n     * gestures namespace\n     * see `/gestures` for the definitions\n     * @property gestures\n     * @type {Object}\n     */\n    Hammer.gestures = Hammer.gestures || {};\n\n    /**\n     * setup events to detect gestures on the document\n     * this function is called when creating an new instance\n     * @private\n     */\n    function setup() {\n        if (Hammer.READY) {\n            return;\n        }\n\n        // find what eventtypes we add listeners to\n        Event.determineEventTypes();\n\n        // Register all gestures inside Hammer.gestures\n        Utils.each(Hammer.gestures, function (gesture) {\n            Detection.register(gesture);\n        });\n\n        // Add touch events on the document\n        Event.onTouch(Hammer.DOCUMENT, EVENT_MOVE, Detection.detect);\n        Event.onTouch(Hammer.DOCUMENT, EVENT_END, Detection.detect);\n\n        // Hammer is ready...!\n        Hammer.READY = true;\n    }\n\n    /**\n     * @module hammer\n     *\n     * @class Utils\n     * @static\n     */\n    var Utils = Hammer.utils = {\n        /**\n         * extend method, could also be used for cloning when `dest` is an empty object.\n         * changes the dest object\n         * @method extend\n         * @param {Object} dest\n         * @param {Object} src\n         * @param {Boolean} [merge=false]  do a merge\n         * @return {Object} dest\n         */\n        extend: function extend(dest, src, merge) {\n            for (var key in src) {\n                if (!src.hasOwnProperty(key) || dest[key] !== undefined && merge) {\n                    continue;\n                }\n                dest[key] = src[key];\n            }\n            return dest;\n        },\n\n        /**\n         * simple addEventListener wrapper\n         * @method on\n         * @param {HTMLElement} element\n         * @param {String} type\n         * @param {Function} handler\n         */\n        on: function on(element, type, handler) {\n            element.addEventListener(type, handler, false);\n        },\n\n        /**\n         * simple removeEventListener wrapper\n         * @method off\n         * @param {HTMLElement} element\n         * @param {String} type\n         * @param {Function} handler\n         */\n        off: function off(element, type, handler) {\n            element.removeEventListener(type, handler, false);\n        },\n\n        /**\n         * forEach over arrays and objects\n         * @method each\n         * @param {Object|Array} obj\n         * @param {Function} iterator\n         * @param {any} iterator.item\n         * @param {Number} iterator.index\n         * @param {Object|Array} iterator.obj the source object\n         * @param {Object} context value to use as `this` in the iterator\n         */\n        each: function each(obj, iterator, context) {\n            var i, len;\n\n            // native forEach on arrays\n            if ('forEach' in obj) {\n                obj.forEach(iterator, context);\n                // arrays\n            } else if (obj.length !== undefined) {\n                    for (i = 0, len = obj.length; i < len; i++) {\n                        if (iterator.call(context, obj[i], i, obj) === false) {\n                            return;\n                        }\n                    }\n                    // objects\n                } else {\n                        for (i in obj) {\n                            if (obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj) === false) {\n                                return;\n                            }\n                        }\n                    }\n        },\n\n        /**\n         * find if a string contains the string using indexOf\n         * @method inStr\n         * @param {String} src\n         * @param {String} find\n         * @return {Boolean} found\n         */\n        inStr: function inStr(src, find) {\n            return src.indexOf(find) > -1;\n        },\n\n        /**\n         * find if a array contains the object using indexOf or a simple polyfill\n         * @method inArray\n         * @param {String} src\n         * @param {String} find\n         * @return {Boolean|Number} false when not found, or the index\n         */\n        inArray: function inArray(src, find) {\n            if (src.indexOf) {\n                var index = src.indexOf(find);\n                return index === -1 ? false : index;\n            } else {\n                for (var i = 0, len = src.length; i < len; i++) {\n                    if (src[i] === find) {\n                        return i;\n                    }\n                }\n                return false;\n            }\n        },\n\n        /**\n         * convert an array-like object (`arguments`, `touchlist`) to an array\n         * @method toArray\n         * @param {Object} obj\n         * @return {Array}\n         */\n        toArray: function toArray(obj) {\n            return Array.prototype.slice.call(obj, 0);\n        },\n\n        /**\n         * find if a node is in the given parent\n         * @method hasParent\n         * @param {HTMLElement} node\n         * @param {HTMLElement} parent\n         * @return {Boolean} found\n         */\n        hasParent: function hasParent(node, parent) {\n            while (node) {\n                if (node == parent) {\n                    return true;\n                }\n                node = node.parentNode;\n            }\n            return false;\n        },\n\n        /**\n         * get the center of all the touches\n         * @method getCenter\n         * @param {Array} touches\n         * @return {Object} center contains `pageX`, `pageY`, `clientX` and `clientY` properties\n         */\n        getCenter: function getCenter(touches) {\n            var pageX = [],\n                pageY = [],\n                clientX = [],\n                clientY = [],\n                min = Math.min,\n                max = Math.max;\n\n            // no need to loop when only one touch\n            if (touches.length === 1) {\n                return {\n                    pageX: touches[0].pageX,\n                    pageY: touches[0].pageY,\n                    clientX: touches[0].clientX,\n                    clientY: touches[0].clientY\n                };\n            }\n\n            Utils.each(touches, function (touch) {\n                pageX.push(touch.pageX);\n                pageY.push(touch.pageY);\n                clientX.push(touch.clientX);\n                clientY.push(touch.clientY);\n            });\n\n            return {\n                pageX: (min.apply(Math, pageX) + max.apply(Math, pageX)) / 2,\n                pageY: (min.apply(Math, pageY) + max.apply(Math, pageY)) / 2,\n                clientX: (min.apply(Math, clientX) + max.apply(Math, clientX)) / 2,\n                clientY: (min.apply(Math, clientY) + max.apply(Math, clientY)) / 2\n            };\n        },\n\n        /**\n         * calculate the velocity between two points. unit is in px per ms.\n         * @method getVelocity\n         * @param {Number} deltaTime\n         * @param {Number} deltaX\n         * @param {Number} deltaY\n         * @return {Object} velocity `x` and `y`\n         */\n        getVelocity: function getVelocity(deltaTime, deltaX, deltaY) {\n            return {\n                x: Math.abs(deltaX / deltaTime) || 0,\n                y: Math.abs(deltaY / deltaTime) || 0\n            };\n        },\n\n        /**\n         * calculate the angle between two coordinates\n         * @method getAngle\n         * @param {Touch} touch1\n         * @param {Touch} touch2\n         * @return {Number} angle\n         */\n        getAngle: function getAngle(touch1, touch2) {\n            var x = touch2.clientX - touch1.clientX,\n                y = touch2.clientY - touch1.clientY;\n\n            return Math.atan2(y, x) * 180 / Math.PI;\n        },\n\n        /**\n         * do a small comparision to get the direction between two touches.\n         * @method getDirection\n         * @param {Touch} touch1\n         * @param {Touch} touch2\n         * @return {String} direction matches `DIRECTION_LEFT|RIGHT|UP|DOWN`\n         */\n        getDirection: function getDirection(touch1, touch2) {\n            var x = Math.abs(touch1.clientX - touch2.clientX),\n                y = Math.abs(touch1.clientY - touch2.clientY);\n\n            if (x >= y) {\n                return touch1.clientX - touch2.clientX > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n            }\n            return touch1.clientY - touch2.clientY > 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        },\n\n        /**\n         * calculate the distance between two touches\n         * @method getDistance\n         * @param {Touch}touch1\n         * @param {Touch} touch2\n         * @return {Number} distance\n         */\n        getDistance: function getDistance(touch1, touch2) {\n            var x = touch2.clientX - touch1.clientX,\n                y = touch2.clientY - touch1.clientY;\n\n            return Math.sqrt(x * x + y * y);\n        },\n\n        /**\n         * calculate the scale factor between two touchLists\n         * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n         * @method getScale\n         * @param {Array} start array of touches\n         * @param {Array} end array of touches\n         * @return {Number} scale\n         */\n        getScale: function getScale(start, end) {\n            // need two fingers...\n            if (start.length >= 2 && end.length >= 2) {\n                return this.getDistance(end[0], end[1]) / this.getDistance(start[0], start[1]);\n            }\n            return 1;\n        },\n\n        /**\n         * calculate the rotation degrees between two touchLists\n         * @method getRotation\n         * @param {Array} start array of touches\n         * @param {Array} end array of touches\n         * @return {Number} rotation\n         */\n        getRotation: function getRotation(start, end) {\n            // need two fingers\n            if (start.length >= 2 && end.length >= 2) {\n                return this.getAngle(end[1], end[0]) - this.getAngle(start[1], start[0]);\n            }\n            return 0;\n        },\n\n        /**\n         * find out if the direction is vertical   *\n         * @method isVertical\n         * @param {String} direction matches `DIRECTION_UP|DOWN`\n         * @return {Boolean} is_vertical\n         */\n        isVertical: function isVertical(direction) {\n            return direction == DIRECTION_UP || direction == DIRECTION_DOWN;\n        },\n\n        /**\n         * set css properties with their prefixes\n         * @param {HTMLElement} element\n         * @param {String} prop\n         * @param {String} value\n         * @param {Boolean} [toggle=true]\n         * @return {Boolean}\n         */\n        setPrefixedCss: function setPrefixedCss(element, prop, value, toggle) {\n            var prefixes = ['', 'Webkit', 'Moz', 'O', 'ms'];\n            prop = Utils.toCamelCase(prop);\n\n            for (var i = 0; i < prefixes.length; i++) {\n                var p = prop;\n                // prefixes\n                if (prefixes[i]) {\n                    p = prefixes[i] + p.slice(0, 1).toUpperCase() + p.slice(1);\n                }\n\n                // test the style\n                if (p in element.style) {\n                    element.style[p] = (toggle == null || toggle) && value || '';\n                    break;\n                }\n            }\n        },\n\n        /**\n         * toggle browser default behavior by setting css properties.\n         * `userSelect='none'` also sets `element.onselectstart` to false\n         * `userDrag='none'` also sets `element.ondragstart` to false\n         *\n         * @method toggleBehavior\n         * @param {HtmlElement} element\n         * @param {Object} props\n         * @param {Boolean} [toggle=true]\n         */\n        toggleBehavior: function toggleBehavior(element, props, toggle) {\n            if (!props || !element || !element.style) {\n                return;\n            }\n\n            // set the css properties\n            Utils.each(props, function (value, prop) {\n                Utils.setPrefixedCss(element, prop, value, toggle);\n            });\n\n            var falseFn = toggle && function () {\n                return false;\n            };\n\n            // also the disable onselectstart\n            if (props.userSelect == 'none') {\n                element.onselectstart = falseFn;\n            }\n            // and disable ondragstart\n            if (props.userDrag == 'none') {\n                element.ondragstart = falseFn;\n            }\n        },\n\n        /**\n         * convert a string with underscores to camelCase\n         * so prevent_default becomes preventDefault\n         * @param {String} str\n         * @return {String} camelCaseStr\n         */\n        toCamelCase: function toCamelCase(str) {\n            return str.replace(/[_-]([a-z])/g, function (s) {\n                return s[1].toUpperCase();\n            });\n        }\n    };\n\n    /**\n     * @module hammer\n     */\n    /**\n     * @class Event\n     * @static\n     */\n    var Event = Hammer.event = {\n        /**\n         * when touch events have been fired, this is true\n         * this is used to stop mouse events\n         * @property prevent_mouseevents\n         * @private\n         * @type {Boolean}\n         */\n        preventMouseEvents: false,\n\n        /**\n         * if EVENT_START has been fired\n         * @property started\n         * @private\n         * @type {Boolean}\n         */\n        started: false,\n\n        /**\n         * when the mouse is hold down, this is true\n         * @property should_detect\n         * @private\n         * @type {Boolean}\n         */\n        shouldDetect: false,\n\n        /**\n         * simple event binder with a hook and support for multiple types\n         * @method on\n         * @param {HTMLElement} element\n         * @param {String} type\n         * @param {Function} handler\n         * @param {Function} [hook]\n         * @param {Object} hook.type\n         */\n        on: function on(element, type, handler, hook) {\n            var types = type.split(' ');\n            Utils.each(types, function (type) {\n                Utils.on(element, type, handler);\n                hook && hook(type);\n            });\n        },\n\n        /**\n         * simple event unbinder with a hook and support for multiple types\n         * @method off\n         * @param {HTMLElement} element\n         * @param {String} type\n         * @param {Function} handler\n         * @param {Function} [hook]\n         * @param {Object} hook.type\n         */\n        off: function off(element, type, handler, hook) {\n            var types = type.split(' ');\n            Utils.each(types, function (type) {\n                Utils.off(element, type, handler);\n                hook && hook(type);\n            });\n        },\n\n        /**\n         * the core touch event handler.\n         * this finds out if we should to detect gestures\n         * @method onTouch\n         * @param {HTMLElement} element\n         * @param {String} eventType matches `EVENT_START|MOVE|END`\n         * @param {Function} handler\n         * @return onTouchHandler {Function} the core event handler\n         */\n        onTouch: function onTouch(element, eventType, handler) {\n            var self = this;\n\n            var onTouchHandler = function onTouchHandler(ev) {\n                var srcType = ev.type.toLowerCase(),\n                    isPointer = Hammer.HAS_POINTEREVENTS,\n                    isMouse = Utils.inStr(srcType, 'mouse'),\n                    triggerType;\n\n                // if we are in a mouseevent, but there has been a touchevent triggered in this session\n                // we want to do nothing. simply break out of the event.\n                if (isMouse && self.preventMouseEvents) {\n                    return;\n\n                    // mousebutton must be down\n                } else if (isMouse && eventType == EVENT_START && ev.button === 0) {\n                        self.preventMouseEvents = false;\n                        self.shouldDetect = true;\n                    } else if (isPointer && eventType == EVENT_START) {\n                        self.shouldDetect = ev.buttons === 1 || PointerEvent.matchType(POINTER_TOUCH, ev);\n                        // just a valid start event, but no mouse\n                    } else if (!isMouse && eventType == EVENT_START) {\n                            self.preventMouseEvents = true;\n                            self.shouldDetect = true;\n                        }\n\n                // update the pointer event before entering the detection\n                if (isPointer && eventType != EVENT_END) {\n                    PointerEvent.updatePointer(eventType, ev);\n                }\n\n                // we are in a touch/down state, so allowed detection of gestures\n                if (self.shouldDetect) {\n                    triggerType = self.doDetect.call(self, ev, eventType, element, handler);\n                }\n\n                // ...and we are done with the detection\n                // so reset everything to start each detection totally fresh\n                if (triggerType == EVENT_END) {\n                    self.preventMouseEvents = false;\n                    self.shouldDetect = false;\n                    PointerEvent.reset();\n                    // update the pointerevent object after the detection\n                }\n\n                if (isPointer && eventType == EVENT_END) {\n                    PointerEvent.updatePointer(eventType, ev);\n                }\n            };\n\n            this.on(element, EVENT_TYPES[eventType], onTouchHandler);\n            return onTouchHandler;\n        },\n\n        /**\n         * the core detection method\n         * this finds out what hammer-touch-events to trigger\n         * @method doDetect\n         * @param {Object} ev\n         * @param {String} eventType matches `EVENT_START|MOVE|END`\n         * @param {HTMLElement} element\n         * @param {Function} handler\n         * @return {String} triggerType matches `EVENT_START|MOVE|END`\n         */\n        doDetect: function doDetect(ev, eventType, element, handler) {\n            var touchList = this.getTouchList(ev, eventType);\n            var touchListLength = touchList.length;\n            var triggerType = eventType;\n            var triggerChange = touchList.trigger; // used by fakeMultitouch plugin\n            var changedLength = touchListLength;\n\n            // at each touchstart-like event we want also want to trigger a TOUCH event...\n            if (eventType == EVENT_START) {\n                triggerChange = EVENT_TOUCH;\n                // ...the same for a touchend-like event\n            } else if (eventType == EVENT_END) {\n                    triggerChange = EVENT_RELEASE;\n\n                    // keep track of how many touches have been removed\n                    changedLength = touchList.length - (ev.changedTouches ? ev.changedTouches.length : 1);\n                }\n\n            // after there are still touches on the screen,\n            // we just want to trigger a MOVE event. so change the START or END to a MOVE\n            // but only after detection has been started, the first time we actualy want a START\n            if (changedLength > 0 && this.started) {\n                triggerType = EVENT_MOVE;\n            }\n\n            // detection has been started, we keep track of this, see above\n            this.started = true;\n\n            // generate some event data, some basic information\n            var evData = this.collectEventData(element, triggerType, touchList, ev);\n\n            // trigger the triggerType event before the change (TOUCH, RELEASE) events\n            // but the END event should be at last\n            if (eventType != EVENT_END) {\n                handler.call(Detection, evData);\n            }\n\n            // trigger a change (TOUCH, RELEASE) event, this means the length of the touches changed\n            if (triggerChange) {\n                evData.changedLength = changedLength;\n                evData.eventType = triggerChange;\n\n                handler.call(Detection, evData);\n\n                evData.eventType = triggerType;\n                delete evData.changedLength;\n            }\n\n            // trigger the END event\n            if (triggerType == EVENT_END) {\n                handler.call(Detection, evData);\n\n                // ...and we are done with the detection\n                // so reset everything to start each detection totally fresh\n                this.started = false;\n            }\n\n            return triggerType;\n        },\n\n        /**\n         * we have different events for each device/browser\n         * determine what we need and set them in the EVENT_TYPES constant\n         * the `onTouch` method is bind to these properties.\n         * @method determineEventTypes\n         * @return {Object} events\n         */\n        determineEventTypes: function determineEventTypes() {\n            var types;\n            if (Hammer.HAS_POINTEREVENTS) {\n                if (window.PointerEvent) {\n                    types = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];\n                } else {\n                    types = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];\n                }\n            } else if (Hammer.NO_MOUSEEVENTS) {\n                types = ['touchstart', 'touchmove', 'touchend touchcancel'];\n            } else {\n                types = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];\n            }\n\n            EVENT_TYPES[EVENT_START] = types[0];\n            EVENT_TYPES[EVENT_MOVE] = types[1];\n            EVENT_TYPES[EVENT_END] = types[2];\n            return EVENT_TYPES;\n        },\n\n        /**\n         * create touchList depending on the event\n         * @method getTouchList\n         * @param {Object} ev\n         * @param {String} eventType\n         * @return {Array} touches\n         */\n        getTouchList: function getTouchList(ev, eventType) {\n            // get the fake pointerEvent touchlist\n            if (Hammer.HAS_POINTEREVENTS) {\n                return PointerEvent.getTouchList();\n            }\n\n            // get the touchlist\n            if (ev.touches) {\n                if (eventType == EVENT_MOVE) {\n                    return ev.touches;\n                }\n\n                var identifiers = [];\n                var concat = [].concat(Utils.toArray(ev.touches), Utils.toArray(ev.changedTouches));\n                var touchList = [];\n\n                Utils.each(concat, function (touch) {\n                    if (Utils.inArray(identifiers, touch.identifier) === false) {\n                        touchList.push(touch);\n                    }\n                    identifiers.push(touch.identifier);\n                });\n\n                return touchList;\n            }\n\n            // make fake touchList from mouse position\n            ev.identifier = 1;\n            return [ev];\n        },\n\n        /**\n         * collect basic event data\n         * @method collectEventData\n         * @param {HTMLElement} element\n         * @param {String} eventType matches `EVENT_START|MOVE|END`\n         * @param {Array} touches\n         * @param {Object} ev\n         * @return {Object} ev\n         */\n        collectEventData: function collectEventData(element, eventType, touches, ev) {\n            // find out pointerType\n            var pointerType = POINTER_TOUCH;\n            if (Utils.inStr(ev.type, 'mouse') || PointerEvent.matchType(POINTER_MOUSE, ev)) {\n                pointerType = POINTER_MOUSE;\n            } else if (PointerEvent.matchType(POINTER_PEN, ev)) {\n                pointerType = POINTER_PEN;\n            }\n\n            return {\n                center: Utils.getCenter(touches),\n                timeStamp: Date.now(),\n                target: ev.target,\n                touches: touches,\n                eventType: eventType,\n                pointerType: pointerType,\n                srcEvent: ev,\n\n                /**\n                 * prevent the browser default actions\n                 * mostly used to disable scrolling of the browser\n                 */\n                preventDefault: function preventDefault() {\n                    var srcEvent = this.srcEvent;\n                    srcEvent.preventManipulation && srcEvent.preventManipulation();\n                    srcEvent.preventDefault && srcEvent.preventDefault();\n                },\n\n                /**\n                 * stop bubbling the event up to its parents\n                 */\n                stopPropagation: function stopPropagation() {\n                    this.srcEvent.stopPropagation();\n                },\n\n                /**\n                 * immediately stop gesture detection\n                 * might be useful after a swipe was detected\n                 * @return {*}\n                 */\n                stopDetect: function stopDetect() {\n                    return Detection.stopDetect();\n                }\n            };\n        }\n    };\n\n    /**\n     * @module hammer\n     *\n     * @class PointerEvent\n     * @static\n     */\n    var PointerEvent = Hammer.PointerEvent = {\n        /**\n         * holds all pointers, by `identifier`\n         * @property pointers\n         * @type {Object}\n         */\n        pointers: {},\n\n        /**\n         * get the pointers as an array\n         * @method getTouchList\n         * @return {Array} touchlist\n         */\n        getTouchList: function getTouchList() {\n            var touchlist = [];\n            // we can use forEach since pointerEvents only is in IE10\n            Utils.each(this.pointers, function (pointer) {\n                touchlist.push(pointer);\n            });\n\n            return touchlist;\n        },\n\n        /**\n         * update the position of a pointer\n         * @method updatePointer\n         * @param {String} eventType matches `EVENT_START|MOVE|END`\n         * @param {Object} pointerEvent\n         */\n        updatePointer: function updatePointer(eventType, pointerEvent) {\n            if (eventType == EVENT_END) {\n                delete this.pointers[pointerEvent.pointerId];\n            } else {\n                pointerEvent.identifier = pointerEvent.pointerId;\n                this.pointers[pointerEvent.pointerId] = pointerEvent;\n            }\n        },\n\n        /**\n         * check if ev matches pointertype\n         * @method matchType\n         * @param {String} pointerType matches `POINTER_MOUSE|TOUCH|PEN`\n         * @param {PointerEvent} ev\n         */\n        matchType: function matchType(pointerType, ev) {\n            if (!ev.pointerType) {\n                return false;\n            }\n\n            var pt = ev.pointerType,\n                types = {};\n\n            types[POINTER_MOUSE] = pt === (ev.MSPOINTER_TYPE_MOUSE || POINTER_MOUSE);\n            types[POINTER_TOUCH] = pt === (ev.MSPOINTER_TYPE_TOUCH || POINTER_TOUCH);\n            types[POINTER_PEN] = pt === (ev.MSPOINTER_TYPE_PEN || POINTER_PEN);\n            return types[pointerType];\n        },\n\n        /**\n         * reset the stored pointers\n         * @method reset\n         */\n        reset: function resetList() {\n            this.pointers = {};\n        }\n    };\n\n    /**\n     * @module hammer\n     *\n     * @class Detection\n     * @static\n     */\n    var Detection = Hammer.detection = {\n        // contains all registred Hammer.gestures in the correct order\n        gestures: [],\n\n        // data of the current Hammer.gesture detection session\n        current: null,\n\n        // the previous Hammer.gesture session data\n        // is a full clone of the previous gesture.current object\n        previous: null,\n\n        // when this becomes true, no gestures are fired\n        stopped: false,\n\n        /**\n         * start Hammer.gesture detection\n         * @method startDetect\n         * @param {Hammer.Instance} inst\n         * @param {Object} eventData\n         */\n        startDetect: function startDetect(inst, eventData) {\n            // already busy with a Hammer.gesture detection on an element\n            if (this.current) {\n                return;\n            }\n\n            this.stopped = false;\n\n            // holds current session\n            this.current = {\n                inst: inst, // reference to HammerInstance we're working for\n                startEvent: Utils.extend({}, eventData), // start eventData for distances, timing etc\n                lastEvent: false, // last eventData\n                lastCalcEvent: false, // last eventData for calculations.\n                futureCalcEvent: false, // last eventData for calculations.\n                lastCalcData: {}, // last lastCalcData\n                name: '' // current gesture we're in/detected, can be 'tap', 'hold' etc\n            };\n\n            this.detect(eventData);\n        },\n\n        /**\n         * Hammer.gesture detection\n         * @method detect\n         * @param {Object} eventData\n         * @return {any}\n         */\n        detect: function detect(eventData) {\n            if (!this.current || this.stopped) {\n                return;\n            }\n\n            // extend event data with calculations about scale, distance etc\n            eventData = this.extendEventData(eventData);\n\n            // hammer instance and instance options\n            var inst = this.current.inst,\n                instOptions = inst.options;\n\n            // call Hammer.gesture handlers\n            Utils.each(this.gestures, function triggerGesture(gesture) {\n                // only when the instance options have enabled this gesture\n                if (!this.stopped && inst.enabled && instOptions[gesture.name]) {\n                    gesture.handler.call(gesture, eventData, inst);\n                }\n            }, this);\n\n            // store as previous event event\n            if (this.current) {\n                this.current.lastEvent = eventData;\n            }\n\n            if (eventData.eventType == EVENT_END) {\n                this.stopDetect();\n            }\n\n            return eventData;\n        },\n\n        /**\n         * clear the Hammer.gesture vars\n         * this is called on endDetect, but can also be used when a final Hammer.gesture has been detected\n         * to stop other Hammer.gestures from being fired\n         * @method stopDetect\n         */\n        stopDetect: function stopDetect() {\n            // clone current data to the store as the previous gesture\n            // used for the double tap gesture, since this is an other gesture detect session\n            this.previous = Utils.extend({}, this.current);\n\n            // reset the current\n            this.current = null;\n            this.stopped = true;\n        },\n\n        /**\n         * calculate velocity, angle and direction\n         * @method getVelocityData\n         * @param {Object} ev\n         * @param {Object} center\n         * @param {Number} deltaTime\n         * @param {Number} deltaX\n         * @param {Number} deltaY\n         */\n        getCalculatedData: function getCalculatedData(ev, center, deltaTime, deltaX, deltaY) {\n            var cur = this.current,\n                recalc = false,\n                calcEv = cur.lastCalcEvent,\n                calcData = cur.lastCalcData;\n\n            if (calcEv && ev.timeStamp - calcEv.timeStamp > Hammer.CALCULATE_INTERVAL) {\n                center = calcEv.center;\n                deltaTime = ev.timeStamp - calcEv.timeStamp;\n                deltaX = ev.center.clientX - calcEv.center.clientX;\n                deltaY = ev.center.clientY - calcEv.center.clientY;\n                recalc = true;\n            }\n\n            if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\n                cur.futureCalcEvent = ev;\n            }\n\n            if (!cur.lastCalcEvent || recalc) {\n                calcData.velocity = Utils.getVelocity(deltaTime, deltaX, deltaY);\n                calcData.angle = Utils.getAngle(center, ev.center);\n                calcData.direction = Utils.getDirection(center, ev.center);\n\n                cur.lastCalcEvent = cur.futureCalcEvent || ev;\n                cur.futureCalcEvent = ev;\n            }\n\n            ev.velocityX = calcData.velocity.x;\n            ev.velocityY = calcData.velocity.y;\n            ev.interimAngle = calcData.angle;\n            ev.interimDirection = calcData.direction;\n        },\n\n        /**\n         * extend eventData for Hammer.gestures\n         * @method extendEventData\n         * @param {Object} ev\n         * @return {Object} ev\n         */\n        extendEventData: function extendEventData(ev) {\n            var cur = this.current,\n                startEv = cur.startEvent,\n                lastEv = cur.lastEvent || startEv;\n\n            // update the start touchlist to calculate the scale/rotation\n            if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\n                startEv.touches = [];\n                Utils.each(ev.touches, function (touch) {\n                    startEv.touches.push({\n                        clientX: touch.clientX,\n                        clientY: touch.clientY\n                    });\n                });\n            }\n\n            var deltaTime = ev.timeStamp - startEv.timeStamp,\n                deltaX = ev.center.clientX - startEv.center.clientX,\n                deltaY = ev.center.clientY - startEv.center.clientY;\n\n            this.getCalculatedData(ev, lastEv.center, deltaTime, deltaX, deltaY);\n\n            Utils.extend(ev, {\n                startEvent: startEv,\n\n                deltaTime: deltaTime,\n                deltaX: deltaX,\n                deltaY: deltaY,\n\n                distance: Utils.getDistance(startEv.center, ev.center),\n                angle: Utils.getAngle(startEv.center, ev.center),\n                direction: Utils.getDirection(startEv.center, ev.center),\n                scale: Utils.getScale(startEv.touches, ev.touches),\n                rotation: Utils.getRotation(startEv.touches, ev.touches)\n            });\n\n            return ev;\n        },\n\n        /**\n         * register new gesture\n         * @method register\n         * @param {Object} gesture object, see `gestures/` for documentation\n         * @return {Array} gestures\n         */\n        register: function register(gesture) {\n            // add an enable gesture options if there is no given\n            var options = gesture.defaults || {};\n            if (options[gesture.name] === undefined) {\n                options[gesture.name] = true;\n            }\n\n            // extend Hammer default options with the Hammer.gesture options\n            Utils.extend(Hammer.defaults, options, true);\n\n            // set its index\n            gesture.index = gesture.index || 1000;\n\n            // add Hammer.gesture to the list\n            this.gestures.push(gesture);\n\n            // sort the list by index\n            this.gestures.sort(function (a, b) {\n                if (a.index < b.index) {\n                    return -1;\n                }\n                if (a.index > b.index) {\n                    return 1;\n                }\n                return 0;\n            });\n\n            return this.gestures;\n        }\n    };\n\n    /**\n     * @module hammer\n     */\n\n    /**\n     * create new hammer instance\n     * all methods should return the instance itself, so it is chainable.\n     *\n     * @class Instance\n     * @constructor\n     * @param {HTMLElement} element\n     * @param {Object} [options={}] options are merged with `Hammer.defaults`\n     * @return {Hammer.Instance}\n     */\n    Hammer.Instance = function (element, options) {\n        var self = this;\n\n        // setup HammerJS window events and register all gestures\n        // this also sets up the default options\n        setup();\n\n        /**\n         * @property element\n         * @type {HTMLElement}\n         */\n        this.element = element;\n\n        /**\n         * @property enabled\n         * @type {Boolean}\n         * @protected\n         */\n        this.enabled = true;\n\n        /**\n         * options, merged with the defaults\n         * options with an _ are converted to camelCase\n         * @property options\n         * @type {Object}\n         */\n        Utils.each(options, function (value, name) {\n            delete options[name];\n            options[Utils.toCamelCase(name)] = value;\n        });\n\n        this.options = Utils.extend(Utils.extend({}, Hammer.defaults), options || {});\n\n        // add some css to the element to prevent the browser from doing its native behavoir\n        if (this.options.behavior) {\n            Utils.toggleBehavior(this.element, this.options.behavior, true);\n        }\n\n        /**\n         * event start handler on the element to start the detection\n         * @property eventStartHandler\n         * @type {Object}\n         */\n        this.eventStartHandler = Event.onTouch(element, EVENT_START, function (ev) {\n            if (self.enabled && ev.eventType == EVENT_START) {\n                Detection.startDetect(self, ev);\n            } else if (ev.eventType == EVENT_TOUCH) {\n                Detection.detect(ev);\n            }\n        });\n\n        /**\n         * keep a list of user event handlers which needs to be removed when calling 'dispose'\n         * @property eventHandlers\n         * @type {Array}\n         */\n        this.eventHandlers = [];\n    };\n\n    Hammer.Instance.prototype = {\n        /**\n         * bind events to the instance\n         * @method on\n         * @chainable\n         * @param {String} gestures multiple gestures by splitting with a space\n         * @param {Function} handler\n         * @param {Object} handler.ev event object\n         */\n        on: function onEvent(gestures, handler) {\n            var self = this;\n            Event.on(self.element, gestures, handler, function (type) {\n                self.eventHandlers.push({ gesture: type, handler: handler });\n            });\n            return self;\n        },\n\n        /**\n         * unbind events to the instance\n         * @method off\n         * @chainable\n         * @param {String} gestures\n         * @param {Function} handler\n         */\n        off: function offEvent(gestures, handler) {\n            var self = this;\n\n            Event.off(self.element, gestures, handler, function (type) {\n                var index = Utils.inArray({ gesture: type, handler: handler });\n                if (index !== false) {\n                    self.eventHandlers.splice(index, 1);\n                }\n            });\n            return self;\n        },\n\n        /**\n         * trigger gesture event\n         * @method trigger\n         * @chainable\n         * @param {String} gesture\n         * @param {Object} [eventData]\n         */\n        trigger: function triggerEvent(gesture, eventData) {\n            // optional\n            if (!eventData) {\n                eventData = {};\n            }\n\n            // create DOM event\n            var event = Hammer.DOCUMENT.createEvent('Event');\n            event.initEvent(gesture, true, true);\n            event.gesture = eventData;\n\n            // trigger on the target if it is in the instance element,\n            // this is for event delegation tricks\n            var element = this.element;\n            if (Utils.hasParent(eventData.target, element)) {\n                element = eventData.target;\n            }\n\n            element.dispatchEvent(event);\n            return this;\n        },\n\n        /**\n         * enable of disable hammer.js detection\n         * @method enable\n         * @chainable\n         * @param {Boolean} state\n         */\n        enable: function enable(state) {\n            this.enabled = state;\n            return this;\n        },\n\n        /**\n         * dispose this hammer instance\n         * @method dispose\n         * @return {Null}\n         */\n        dispose: function dispose() {\n            var i, eh;\n\n            // undo all changes made by stop_browser_behavior\n            Utils.toggleBehavior(this.element, this.options.behavior, false);\n\n            // unbind all custom event handlers\n            for (i = -1; eh = this.eventHandlers[++i];) {\n                Utils.off(this.element, eh.gesture, eh.handler);\n            }\n\n            this.eventHandlers = [];\n\n            // unbind the start event listener\n            Event.off(this.element, EVENT_TYPES[EVENT_START], this.eventStartHandler);\n\n            return null;\n        }\n    };\n\n    /**\n     * @module gestures\n     */\n    /**\n     * Move with x fingers (default 1) around on the page.\n     * Preventing the default browser behavior is a good way to improve feel and working.\n     * ````\n     *  hammertime.on(\"drag\", function(ev) {\n     *    console.log(ev);\n     *    ev.gesture.preventDefault();\n     *  });\n     * ````\n     *\n     * @class Drag\n     * @static\n     */\n    /**\n     * @event drag\n     * @param {Object} ev\n     */\n    /**\n     * @event dragstart\n     * @param {Object} ev\n     */\n    /**\n     * @event dragend\n     * @param {Object} ev\n     */\n    /**\n     * @event drapleft\n     * @param {Object} ev\n     */\n    /**\n     * @event dragright\n     * @param {Object} ev\n     */\n    /**\n     * @event dragup\n     * @param {Object} ev\n     */\n    /**\n     * @event dragdown\n     * @param {Object} ev\n     */\n\n    /**\n     * @param {String} name\n     */\n    (function (name) {\n        var triggered = false;\n\n        function dragGesture(ev, inst) {\n            var cur = Detection.current;\n\n            // max touches\n            if (inst.options.dragMaxTouches > 0 && ev.touches.length > inst.options.dragMaxTouches) {\n                return;\n            }\n\n            switch (ev.eventType) {\n                case EVENT_START:\n                    triggered = false;\n                    break;\n\n                case EVENT_MOVE:\n                    // when the distance we moved is too small we skip this gesture\n                    // or we can be already in dragging\n                    if (ev.distance < inst.options.dragMinDistance && cur.name != name) {\n                        return;\n                    }\n\n                    var startCenter = cur.startEvent.center;\n\n                    // we are dragging!\n                    if (cur.name != name) {\n                        cur.name = name;\n                        if (inst.options.dragDistanceCorrection && ev.distance > 0) {\n                            // When a drag is triggered, set the event center to dragMinDistance pixels from the original event center.\n                            // Without this correction, the dragged distance would jumpstart at dragMinDistance pixels instead of at 0.\n                            // It might be useful to save the original start point somewhere\n                            var factor = Math.abs(inst.options.dragMinDistance / ev.distance);\n                            startCenter.pageX += ev.deltaX * factor;\n                            startCenter.pageY += ev.deltaY * factor;\n                            startCenter.clientX += ev.deltaX * factor;\n                            startCenter.clientY += ev.deltaY * factor;\n\n                            // recalculate event data using new start point\n                            ev = Detection.extendEventData(ev);\n                        }\n                    }\n\n                    // lock drag to axis?\n                    if (cur.lastEvent.dragLockToAxis || inst.options.dragLockToAxis && inst.options.dragLockMinDistance <= ev.distance) {\n                        ev.dragLockToAxis = true;\n                    }\n\n                    // keep direction on the axis that the drag gesture started on\n                    var lastDirection = cur.lastEvent.direction;\n                    if (ev.dragLockToAxis && lastDirection !== ev.direction) {\n                        if (Utils.isVertical(lastDirection)) {\n                            ev.direction = ev.deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n                        } else {\n                            ev.direction = ev.deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                        }\n                    }\n\n                    // first time, trigger dragstart event\n                    if (!triggered) {\n                        inst.trigger(name + 'start', ev);\n                        triggered = true;\n                    }\n\n                    // trigger events\n                    inst.trigger(name, ev);\n                    inst.trigger(name + ev.direction, ev);\n\n                    var isVertical = Utils.isVertical(ev.direction);\n\n                    // block the browser events\n                    if (inst.options.dragBlockVertical && isVertical || inst.options.dragBlockHorizontal && !isVertical) {\n                        ev.preventDefault();\n                    }\n                    break;\n\n                case EVENT_RELEASE:\n                    if (triggered && ev.changedLength <= inst.options.dragMaxTouches) {\n                        inst.trigger(name + 'end', ev);\n                        triggered = false;\n                    }\n                    break;\n\n                case EVENT_END:\n                    triggered = false;\n                    break;\n            }\n        }\n\n        Hammer.gestures.Drag = {\n            name: name,\n            index: 50,\n            handler: dragGesture,\n            defaults: {\n                /**\n                 * minimal movement that have to be made before the drag event gets triggered\n                 * @property dragMinDistance\n                 * @type {Number}\n                 * @default 10\n                 */\n                dragMinDistance: 10,\n\n                /**\n                 * Set dragDistanceCorrection to true to make the starting point of the drag\n                 * be calculated from where the drag was triggered, not from where the touch started.\n                 * Useful to avoid a jerk-starting drag, which can make fine-adjustments\n                 * through dragging difficult, and be visually unappealing.\n                 * @property dragDistanceCorrection\n                 * @type {Boolean}\n                 * @default true\n                 */\n                dragDistanceCorrection: true,\n\n                /**\n                 * set 0 for unlimited, but this can conflict with transform\n                 * @property dragMaxTouches\n                 * @type {Number}\n                 * @default 1\n                 */\n                dragMaxTouches: 1,\n\n                /**\n                 * prevent default browser behavior when dragging occurs\n                 * be careful with it, it makes the element a blocking element\n                 * when you are using the drag gesture, it is a good practice to set this true\n                 * @property dragBlockHorizontal\n                 * @type {Boolean}\n                 * @default false\n                 */\n                dragBlockHorizontal: false,\n\n                /**\n                 * same as `dragBlockHorizontal`, but for vertical movement\n                 * @property dragBlockVertical\n                 * @type {Boolean}\n                 * @default false\n                 */\n                dragBlockVertical: false,\n\n                /**\n                 * dragLockToAxis keeps the drag gesture on the axis that it started on,\n                 * It disallows vertical directions if the initial direction was horizontal, and vice versa.\n                 * @property dragLockToAxis\n                 * @type {Boolean}\n                 * @default false\n                 */\n                dragLockToAxis: false,\n\n                /**\n                 * drag lock only kicks in when distance > dragLockMinDistance\n                 * This way, locking occurs only when the distance has become large enough to reliably determine the direction\n                 * @property dragLockMinDistance\n                 * @type {Number}\n                 * @default 25\n                 */\n                dragLockMinDistance: 25\n            }\n        };\n    })('drag');\n\n    /**\n     * @module gestures\n     */\n    /**\n     * trigger a simple gesture event, so you can do anything in your handler.\n     * only usable if you know what your doing...\n     *\n     * @class Gesture\n     * @static\n     */\n    /**\n     * @event gesture\n     * @param {Object} ev\n     */\n    Hammer.gestures.Gesture = {\n        name: 'gesture',\n        index: 1337,\n        handler: function releaseGesture(ev, inst) {\n            inst.trigger(this.name, ev);\n        }\n    };\n\n    /**\n     * @module gestures\n     */\n    /**\n     * Touch stays at the same place for x time\n     *\n     * @class Hold\n     * @static\n     */\n    /**\n     * @event hold\n     * @param {Object} ev\n     */\n\n    /**\n     * @param {String} name\n     */\n    (function (name) {\n        var timer;\n\n        function holdGesture(ev, inst) {\n            var options = inst.options,\n                current = Detection.current;\n\n            switch (ev.eventType) {\n                case EVENT_START:\n                    clearTimeout(timer);\n\n                    // set the gesture so we can check in the timeout if it still is\n                    current.name = name;\n\n                    // set timer and if after the timeout it still is hold,\n                    // we trigger the hold event\n                    timer = setTimeout(function () {\n                        if (current && current.name == name) {\n                            inst.trigger(name, ev);\n                        }\n                    }, options.holdTimeout);\n                    break;\n\n                case EVENT_MOVE:\n                    if (ev.distance > options.holdThreshold) {\n                        clearTimeout(timer);\n                    }\n                    break;\n\n                case EVENT_RELEASE:\n                    clearTimeout(timer);\n                    break;\n            }\n        }\n\n        Hammer.gestures.Hold = {\n            name: name,\n            index: 10,\n            defaults: {\n                /**\n                 * @property holdTimeout\n                 * @type {Number}\n                 * @default 500\n                 */\n                holdTimeout: 500,\n\n                /**\n                 * movement allowed while holding\n                 * @property holdThreshold\n                 * @type {Number}\n                 * @default 2\n                 */\n                holdThreshold: 2\n            },\n            handler: holdGesture\n        };\n    })('hold');\n\n    /**\n     * @module gestures\n     */\n    /**\n     * when a touch is being released from the page\n     *\n     * @class Release\n     * @static\n     */\n    /**\n     * @event release\n     * @param {Object} ev\n     */\n    Hammer.gestures.Release = {\n        name: 'release',\n        index: Infinity,\n        handler: function releaseGesture(ev, inst) {\n            if (ev.eventType == EVENT_RELEASE) {\n                inst.trigger(this.name, ev);\n            }\n        }\n    };\n\n    /**\n     * @module gestures\n     */\n    /**\n     * triggers swipe events when the end velocity is above the threshold\n     * for best usage, set `preventDefault` (on the drag gesture) to `true`\n     * ````\n     *  hammertime.on(\"dragleft swipeleft\", function(ev) {\n     *    console.log(ev);\n     *    ev.gesture.preventDefault();\n     *  });\n     * ````\n     *\n     * @class Swipe\n     * @static\n     */\n    /**\n     * @event swipe\n     * @param {Object} ev\n     */\n    /**\n     * @event swipeleft\n     * @param {Object} ev\n     */\n    /**\n     * @event swiperight\n     * @param {Object} ev\n     */\n    /**\n     * @event swipeup\n     * @param {Object} ev\n     */\n    /**\n     * @event swipedown\n     * @param {Object} ev\n     */\n    Hammer.gestures.Swipe = {\n        name: 'swipe',\n        index: 40,\n        defaults: {\n            /**\n             * @property swipeMinTouches\n             * @type {Number}\n             * @default 1\n             */\n            swipeMinTouches: 1,\n\n            /**\n             * @property swipeMaxTouches\n             * @type {Number}\n             * @default 1\n             */\n            swipeMaxTouches: 1,\n\n            /**\n             * horizontal swipe velocity\n             * @property swipeVelocityX\n             * @type {Number}\n             * @default 0.6\n             */\n            swipeVelocityX: 0.6,\n\n            /**\n             * vertical swipe velocity\n             * @property swipeVelocityY\n             * @type {Number}\n             * @default 0.6\n             */\n            swipeVelocityY: 0.6\n        },\n\n        handler: function swipeGesture(ev, inst) {\n            if (ev.eventType == EVENT_RELEASE) {\n                var touches = ev.touches.length,\n                    options = inst.options;\n\n                // max touches\n                if (touches < options.swipeMinTouches || touches > options.swipeMaxTouches) {\n                    return;\n                }\n\n                // when the distance we moved is too small we skip this gesture\n                // or we can be already in dragging\n                if (ev.velocityX > options.swipeVelocityX || ev.velocityY > options.swipeVelocityY) {\n                    // trigger swipe events\n                    inst.trigger(this.name, ev);\n                    inst.trigger(this.name + ev.direction, ev);\n                }\n            }\n        }\n    };\n\n    /**\n     * @module gestures\n     */\n    /**\n     * Single tap and a double tap on a place\n     *\n     * @class Tap\n     * @static\n     */\n    /**\n     * @event tap\n     * @param {Object} ev\n     */\n    /**\n     * @event doubletap\n     * @param {Object} ev\n     */\n\n    /**\n     * @param {String} name\n     */\n    (function (name) {\n        var hasMoved = false;\n\n        function tapGesture(ev, inst) {\n            var options = inst.options,\n                current = Detection.current,\n                prev = Detection.previous,\n                sincePrev,\n                didDoubleTap;\n\n            switch (ev.eventType) {\n                case EVENT_START:\n                    hasMoved = false;\n                    break;\n\n                case EVENT_MOVE:\n                    hasMoved = hasMoved || ev.distance > options.tapMaxDistance;\n                    break;\n\n                case EVENT_END:\n                    if (!Utils.inStr(ev.srcEvent.type, 'cancel') && ev.deltaTime < options.tapMaxTime && !hasMoved) {\n                        // previous gesture, for the double tap since these are two different gesture detections\n                        sincePrev = prev && prev.lastEvent && ev.timeStamp - prev.lastEvent.timeStamp;\n                        didDoubleTap = false;\n\n                        // check if double tap\n                        if (prev && prev.name == name && (sincePrev && sincePrev < options.doubleTapInterval) && ev.distance < options.doubleTapDistance) {\n                            inst.trigger('doubletap', ev);\n                            didDoubleTap = true;\n                        }\n\n                        // do a single tap\n                        if (!didDoubleTap || options.tapAlways) {\n                            current.name = name;\n                            inst.trigger(current.name, ev);\n                        }\n                    }\n                    break;\n            }\n        }\n\n        Hammer.gestures.Tap = {\n            name: name,\n            index: 100,\n            handler: tapGesture,\n            defaults: {\n                /**\n                 * max time of a tap, this is for the slow tappers\n                 * @property tapMaxTime\n                 * @type {Number}\n                 * @default 250\n                 */\n                tapMaxTime: 250,\n\n                /**\n                 * max distance of movement of a tap, this is for the slow tappers\n                 * @property tapMaxDistance\n                 * @type {Number}\n                 * @default 10\n                 */\n                tapMaxDistance: 10,\n\n                /**\n                 * always trigger the `tap` event, even while double-tapping\n                 * @property tapAlways\n                 * @type {Boolean}\n                 * @default true\n                 */\n                tapAlways: true,\n\n                /**\n                 * max distance between two taps\n                 * @property doubleTapDistance\n                 * @type {Number}\n                 * @default 20\n                 */\n                doubleTapDistance: 20,\n\n                /**\n                 * max time between two taps\n                 * @property doubleTapInterval\n                 * @type {Number}\n                 * @default 300\n                 */\n                doubleTapInterval: 300\n            }\n        };\n    })('tap');\n\n    /**\n     * @module gestures\n     */\n    /**\n     * when a touch is being touched at the page\n     *\n     * @class Touch\n     * @static\n     */\n    /**\n     * @event touch\n     * @param {Object} ev\n     */\n    Hammer.gestures.Touch = {\n        name: 'touch',\n        index: -Infinity,\n        defaults: {\n            /**\n             * call preventDefault at touchstart, and makes the element blocking by disabling the scrolling of the page,\n             * but it improves gestures like transforming and dragging.\n             * be careful with using this, it can be very annoying for users to be stuck on the page\n             * @property preventDefault\n             * @type {Boolean}\n             * @default false\n             */\n            preventDefault: false,\n\n            /**\n             * disable mouse events, so only touch (or pen!) input triggers events\n             * @property preventMouse\n             * @type {Boolean}\n             * @default false\n             */\n            preventMouse: false\n        },\n        handler: function touchGesture(ev, inst) {\n            if (inst.options.preventMouse && ev.pointerType == POINTER_MOUSE) {\n                ev.stopDetect();\n                return;\n            }\n\n            if (inst.options.preventDefault) {\n                ev.preventDefault();\n            }\n\n            if (ev.eventType == EVENT_TOUCH) {\n                inst.trigger('touch', ev);\n            }\n        }\n    };\n\n    /**\n     * @module gestures\n     */\n    /**\n     * User want to scale or rotate with 2 fingers\n     * Preventing the default browser behavior is a good way to improve feel and working. This can be done with the\n     * `preventDefault` option.\n     *\n     * @class Transform\n     * @static\n     */\n    /**\n     * @event transform\n     * @param {Object} ev\n     */\n    /**\n     * @event transformstart\n     * @param {Object} ev\n     */\n    /**\n     * @event transformend\n     * @param {Object} ev\n     */\n    /**\n     * @event pinchin\n     * @param {Object} ev\n     */\n    /**\n     * @event pinchout\n     * @param {Object} ev\n     */\n    /**\n     * @event rotate\n     * @param {Object} ev\n     */\n\n    /**\n     * @param {String} name\n     */\n    (function (name) {\n        var triggered = false;\n\n        function transformGesture(ev, inst) {\n            switch (ev.eventType) {\n                case EVENT_START:\n                    triggered = false;\n                    break;\n\n                case EVENT_MOVE:\n                    // at least multitouch\n                    if (ev.touches.length < 2) {\n                        return;\n                    }\n\n                    var scaleThreshold = Math.abs(1 - ev.scale);\n                    var rotationThreshold = Math.abs(ev.rotation);\n\n                    // when the distance we moved is too small we skip this gesture\n                    // or we can be already in dragging\n                    if (scaleThreshold < inst.options.transformMinScale && rotationThreshold < inst.options.transformMinRotation) {\n                        return;\n                    }\n\n                    // we are transforming!\n                    Detection.current.name = name;\n\n                    // first time, trigger dragstart event\n                    if (!triggered) {\n                        inst.trigger(name + 'start', ev);\n                        triggered = true;\n                    }\n\n                    inst.trigger(name, ev); // basic transform event\n\n                    // trigger rotate event\n                    if (rotationThreshold > inst.options.transformMinRotation) {\n                        inst.trigger('rotate', ev);\n                    }\n\n                    // trigger pinch event\n                    if (scaleThreshold > inst.options.transformMinScale) {\n                        inst.trigger('pinch', ev);\n                        inst.trigger('pinch' + (ev.scale < 1 ? 'in' : 'out'), ev);\n                    }\n                    break;\n\n                case EVENT_RELEASE:\n                    if (triggered && ev.changedLength < 2) {\n                        inst.trigger(name + 'end', ev);\n                        triggered = false;\n                    }\n                    break;\n            }\n        }\n\n        Hammer.gestures.Transform = {\n            name: name,\n            index: 45,\n            defaults: {\n                /**\n                 * minimal scale factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1\n                 * @property transformMinScale\n                 * @type {Number}\n                 * @default 0.01\n                 */\n                transformMinScale: 0.01,\n\n                /**\n                 * rotation in degrees\n                 * @property transformMinRotation\n                 * @type {Number}\n                 * @default 1\n                 */\n                transformMinRotation: 1\n            },\n\n            handler: transformGesture\n        };\n    })('transform');\n\n    /**\n     * @module hammer\n     */\n\n    // AMD export\n    if (typeof define == 'function' && define.amd) {\n        define(function () {\n            return Hammer;\n        });\n        // commonjs export\n    } else if (typeof module !== 'undefined' && module.exports) {\n            module.exports = Hammer;\n            // browser export\n        } else {\n                window.Hammer = Hammer;\n            }\n})(window);\n//# sourceMappingURL=data:application/json;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/hammer.js","sourceRoot":"file://localhost","sourceFile":"build/js/hammer.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","source":"// base locale\n\n\"use strict\";\n\nmodule.exports = window.blockly.common_locale;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL2xvY2FsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsTUFBTSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyIsImZpbGUiOiJidWlsZC9qcy9sb2NhbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBiYXNlIGxvY2FsZVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdpbmRvdy5ibG9ja2x5LmNvbW1vbl9sb2NhbGU7XG4iXX0=","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","sourceRoot":"file://localhost","sourceFile":"build/js/locale.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/lodash.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/lodash.js","source":"(function (global){\n/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash include=\"debounce,reject,map,value,range,without,sample,create,flatten,isEmpty,wrap,size,bind,contains,last,clone,cloneDeep,isEqual,find,sortBy,throttle,uniq\" --output src/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n'use strict';\n\n;(function () {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [],\n      objectPool = [];\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date() + '';\n\n  /** Used as the size when optimizations are enabled for large arrays */\n  var largeArraySize = 75;\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to fix the JScript [[DontEnum]] bug */\n  var shadowedProps = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      errorClass = '[object Error]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used as an internal `_.debounce` options object */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used as the data object for `iteratorTemplate` */\n  var iteratorData = {\n    'args': '',\n    'array': null,\n    'bottom': '',\n    'firstArg': '',\n    'init': '',\n    'keys': null,\n    'loop': '',\n    'shadowedProps': null,\n    'support': null,\n    'top': '',\n    'useHas': false\n  };\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used as a reference to the global object */\n  var root = objectTypes[typeof window] && window || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * An implementation of `_.contains` for cache objects that mimics the return\n   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n   *\n   * @private\n   * @param {Object} cache The cache object to inspect.\n   * @param {*} value The value to search for.\n   * @returns {number} Returns `0` if `value` is found, else `-1`.\n   */\n  function cacheIndexOf(cache, value) {\n    var type = typeof value;\n    cache = cache.cache;\n\n    if (type == 'boolean' || value == null) {\n      return cache[value] ? 0 : -1;\n    }\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value;\n    cache = (cache = cache[type]) && cache[key];\n\n    return type == 'object' ? cache && baseIndexOf(cache, value) > -1 ? 0 : -1 : cache ? 0 : -1;\n  }\n\n  /**\n   * Adds a given value to the corresponding cache object.\n   *\n   * @private\n   * @param {*} value The value to add to the cache.\n   */\n  function cachePush(value) {\n    var cache = this.cache,\n        type = typeof value;\n\n    if (type == 'boolean' || value == null) {\n      cache[value] = true;\n    } else {\n      if (type != 'number' && type != 'string') {\n        type = 'object';\n      }\n      var key = type == 'number' ? value : keyPrefix + value,\n          typeCache = cache[type] || (cache[type] = {});\n\n      if (type == 'object') {\n        (typeCache[key] || (typeCache[key] = [])).push(value);\n      } else {\n        typeCache[key] = true;\n      }\n    }\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria,\n        index = -1,\n        length = ac.length;\n\n    while (++index < length) {\n      var value = ac[index],\n          other = bc[index];\n\n      if (value !== other) {\n        if (value > other || typeof value == 'undefined') {\n          return 1;\n        }\n        if (value < other || typeof other == 'undefined') {\n          return -1;\n        }\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to return the same value for\n    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See http://code.google.com/p/v8/issues/detail?id=90\n    return a.index - b.index;\n  }\n\n  /**\n   * Creates a cache object to optimize linear searches of large arrays.\n   *\n   * @private\n   * @param {Array} [array=[]] The array to search.\n   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n   */\n  function createCache(array) {\n    var index = -1,\n        length = array.length,\n        first = array[0],\n        mid = array[length / 2 | 0],\n        last = array[length - 1];\n\n    if (first && typeof first == 'object' && mid && typeof mid == 'object' && last && typeof last == 'object') {\n      return false;\n    }\n    var cache = getObject();\n    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n    var result = getObject();\n    result.array = array;\n    result.cache = cache;\n    result.push = cachePush;\n\n    while (++index < length) {\n      result.push(array[index]);\n    }\n    return result;\n  }\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  /**\n   * Gets an object from the object pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Object} The object from the pool.\n   */\n  function getObject() {\n    return objectPool.pop() || {\n      'array': null,\n      'cache': null,\n      'criteria': null,\n      'false': false,\n      'index': 0,\n      'null': false,\n      'number': null,\n      'object': null,\n      'push': null,\n      'string': null,\n      'true': false,\n      'undefined': false,\n      'value': null\n    };\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  /**\n   * Releases the given object back to the object pool.\n   *\n   * @private\n   * @param {Object} [object] The object to release.\n   */\n  function releaseObject(object) {\n    var cache = object.cache;\n    if (cache) {\n      releaseObject(cache);\n    }\n    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n    if (objectPool.length < maxPoolSize) {\n      objectPool.push(object);\n    }\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Used for native method references */\n  var errorProto = Error.prototype,\n      objectProto = Object.prototype,\n      stringProto = String.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' + String(toString).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/toString| for [^\\]]+/g, '.*?') + '$');\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      floor = Math.floor,\n      fnToString = Function.prototype.toString,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      push = arrayRef.push,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\n      unshift = arrayRef.unshift;\n\n  /** Used to set meta data on functions */\n  var defineProperty = (function () {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch (e) {}\n    return result;\n  })();\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[funcClass] = Function;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to avoid iterating non-enumerable properties in IE < 9 */\n  var nonEnumProps = {};\n  nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[boolClass] = nonEnumProps[stringClass] = { 'constructor': true, 'toString': true, 'valueOf': true };\n  nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = { 'constructor': true, 'toString': true };\n  nonEnumProps[objectClass] = { 'constructor': true };\n\n  (function () {\n    var length = shadowedProps.length;\n    while (length--) {\n      var key = shadowedProps[length];\n      for (var className in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {\n          nonEnumProps[className][key] = false;\n        }\n      }\n    }\n  })();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n   * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n   * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n   * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n   * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n   * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n   * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n   * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n   * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n   * and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n    return value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__') ? value : new lodashWrapper(value);\n  }\n\n  /**\n   * A fast path for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @param {boolean} chainAll A flag to enable chaining for all methods\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodashWrapper(value, chainAll) {\n    this.__chain__ = !!chainAll;\n    this.__wrapped__ = value;\n  }\n  // ensure `new lodashWrapper` is an instance of `lodash`\n  lodashWrapper.prototype = lodash.prototype;\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = lodash.support = {};\n\n  (function () {\n    var ctor = function ctor() {\n      this.x = 1;\n    },\n        object = { '0': 1, 'length': 1 },\n        props = [];\n\n    ctor.prototype = { 'valueOf': 1, 'y': 1 };\n    for (var key in new ctor()) {\n      props.push(key);\n    }\n    for (key in arguments) {}\n\n    /**\n     * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsClass = toString.call(arguments) == argsClass;\n\n    /**\n     * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);\n\n    /**\n     * Detect if `name` or `message` properties of `Error.prototype` are\n     * enumerable by default. (IE < 9, Safari < 5.1)\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');\n\n    /**\n     * Detect if `prototype` properties are enumerable by default.\n     *\n     * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n     * (if the prototype or a property on the prototype has been set)\n     * incorrectly sets a function's `prototype` property [[Enumerable]]\n     * value to `true`.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');\n\n    /**\n     * Detect if functions can be decompiled by `Function#toString`\n     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcDecomp = !isNative(root.WinRTError) && reThis.test(function () {\n      return this;\n    });\n\n    /**\n     * Detect if `Function#name` is supported (all but IE).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.funcNames = typeof Function.name == 'string';\n\n    /**\n     * Detect if `arguments` object indexes are non-enumerable\n     * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumArgs = key != 0;\n\n    /**\n     * Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n     *\n     * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n     * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.nonEnumShadows = !/valueOf/.test(props);\n\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n\n    /**\n     * Detect lack of support for accessing string characters by index.\n     *\n     * IE < 8 can't access characters by index and IE 8 can only access\n     * characters by index on string literals.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.unindexedChars = 'x'[0] + Object('x')[0] != 'xx';\n\n    /**\n     * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n     * and that the JS engine errors when attempting to coerce an object to\n     * a string without a `toString` function.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    try {\n      support.nodeClass = !(toString.call(document) == objectClass && !({ 'toString': 0 } + ''));\n    } catch (e) {\n      support.nodeClass = true;\n    }\n  })(1);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Object} data The data object used to populate the text.\n   * @returns {string} Returns the interpolated text.\n   */\n  var iteratorTemplate = function iteratorTemplate(obj) {\n\n    var __p = 'var index, iterable = ' + obj.firstArg + ', result = ' + obj.init + ';\\nif (!iterable) return result;\\n' + obj.top + ';';\n    if (obj.array) {\n      __p += '\\nvar length = iterable.length; index = -1;\\nif (' + obj.array + ') {  ';\n      if (support.unindexedChars) {\n        __p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';\n      }\n      __p += '\\n  while (++index < length) {\\n    ' + obj.loop + ';\\n  }\\n}\\nelse {  ';\n    } else if (support.nonEnumArgs) {\n      __p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' + obj.loop + ';\\n    }\\n  } else {  ';\n    }\n\n    if (support.enumPrototypes) {\n      __p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';\n    }\n\n    if (support.enumErrorProps) {\n      __p += '\\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n  ';\n    }\n\n    var conditions = [];if (support.enumPrototypes) {\n      conditions.push('!(skipProto && index == \"prototype\")');\n    }if (support.enumErrorProps) {\n      conditions.push('!(skipErrorProps && (index == \"message\" || index == \"name\"))');\n    }\n\n    if (obj.useHas && obj.keys) {\n      __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n      length = ownProps ? ownProps.length : 0;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n';\n      if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n      __p += obj.loop + ';    ';\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n      __p += '\\n  }  ';\n    } else {\n      __p += '\\n  for (index in iterable) {\\n';\n      if (obj.useHas) {\n        conditions.push(\"hasOwnProperty.call(iterable, index)\");\n      }if (conditions.length) {\n        __p += '    if (' + conditions.join(' && ') + ') {\\n  ';\n      }\n      __p += obj.loop + ';    ';\n      if (conditions.length) {\n        __p += '\\n    }';\n      }\n      __p += '\\n  }    ';\n      if (support.nonEnumShadows) {\n        __p += '\\n\\n  if (iterable !== objectProto) {\\n    var ctor = iterable.constructor,\\n        isProto = iterable === (ctor && ctor.prototype),\\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n        nonEnum = nonEnumProps[className];\\n      ';\n        for (k = 0; k < 7; k++) {\n          __p += '\\n    index = \\'' + obj.shadowedProps[k] + '\\';\\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';\n          if (!obj.useHas) {\n            __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';\n          }\n          __p += ') {\\n      ' + obj.loop + ';\\n    }      ';\n        }\n        __p += '\\n  }    ';\n      }\n    }\n\n    if (obj.array || support.nonEnumArgs) {\n      __p += '\\n}';\n    }\n    __p += obj.bottom + ';\\nreturn result';\n\n    return __p;\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.clone` without argument juggling or support\n   * for `thisArg` binding.\n   *\n   * @private\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Array} [stackA=[]] Tracks traversed source objects.\n   * @param {Array} [stackB=[]] Associates clones with source counterparts.\n   * @returns {*} Returns the cloned value.\n   */\n  function baseClone(value, isDeep, callback, stackA, stackB) {\n    if (callback) {\n      var result = callback(value);\n      if (typeof result != 'undefined') {\n        return result;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(value);\n    if (isObj) {\n      var className = toString.call(value);\n      if (!cloneableClasses[className] || !support.nodeClass && isNode(value)) {\n        return value;\n      }\n      var ctor = ctorByClass[className];\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          return new ctor(+value);\n\n        case numberClass:\n        case stringClass:\n          return new ctor(value);\n\n        case regexpClass:\n          result = ctor(value.source, reFlags.exec(value));\n          result.lastIndex = value.lastIndex;\n          return result;\n      }\n    } else {\n      return value;\n    }\n    var isArr = isArray(value);\n    if (isDeep) {\n      // check for circular references and return corresponding clone\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      result = isArr ? ctor(value.length) : {};\n    } else {\n      result = isArr ? slice(value) : assign({}, value);\n    }\n    // add array properties assigned by `RegExp#exec`\n    if (isArr) {\n      if (hasOwnProperty.call(value, 'index')) {\n        result.index = value.index;\n      }\n      if (hasOwnProperty.call(value, 'input')) {\n        result.input = value.input;\n      }\n    }\n    // exit for shallow clone\n    if (!isDeep) {\n      return result;\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? baseEach : forOwn)(value, function (objValue, key) {\n      result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n    });\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = (function () {\n      function Object() {}\n      return function (prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object();\n          Object.prototype = null;\n        }\n        return result || root.Object();\n      };\n    })();\n  }\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || bindData !== true && bindData[1] & 1) {\n      return func;\n    }\n    switch (argCount) {\n      case 1:\n        return function (value) {\n          return func.call(thisArg, value);\n        };\n      case 2:\n        return function (a, b) {\n          return func.call(thisArg, a, b);\n        };\n      case 3:\n        return function (value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n    }\n    return bind(func, thisArg);\n  }\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, isCurryBound ? bitmask : bitmask & ~3, args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  /**\n   * The base implementation of `_.difference` that accepts a single array\n   * of values to exclude.\n   *\n   * @private\n   * @param {Array} array The array to process.\n   * @param {Array} [values] The array of values to exclude.\n   * @returns {Array} Returns a new array of filtered values.\n   */\n  function baseDifference(array, values) {\n    var index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        isLarge = length >= largeArraySize && indexOf === baseIndexOf,\n        result = [];\n\n    if (isLarge) {\n      var cache = createCache(values);\n      if (cache) {\n        indexOf = cacheIndexOf;\n        values = cache;\n      } else {\n        isLarge = false;\n      }\n    }\n    while (++index < length) {\n      var value = array[index];\n      if (indexOf(values, value) < 0) {\n        result.push(value);\n      }\n    }\n    if (isLarge) {\n      releaseObject(values);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` without support for callback\n   * shorthands or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n   * @param {number} [fromIndex=0] The index to start from.\n   * @returns {Array} Returns a new flattened array.\n   */\n  function baseFlatten(array, isShallow, isStrict, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (value && typeof value == 'object' && typeof value.length == 'number' && (isArray(value) || isArguments(value))) {\n        // recursively flatten arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          value = baseFlatten(value, isShallow, isStrict);\n        }\n        var valIndex = -1,\n            valLength = value.length,\n            resIndex = result.length;\n\n        result.length += valLength;\n        while (++valIndex < valLength) {\n          result[resIndex++] = value[valIndex];\n        }\n      } else if (!isStrict) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n   * that allows partial \"_.where\" style comparisons.\n   *\n   * @private\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n   * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n   * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(_x, _x2, _x3, _x4, _x5, _x6) {\n    var _again = true;\n\n    _function: while (_again) {\n      var a = _x,\n          b = _x2,\n          callback = _x3,\n          isWhere = _x4,\n          stackA = _x5,\n          stackB = _x6;\n      result = type = otherType = className = otherClass = isArr = aWrapped = bWrapped = ctorA = ctorB = initedStack = length = size = index = value = undefined;\n      _again = false;\n\n      // used to indicate that when comparing objects, `a` has at least the properties of `b`\n      if (callback) {\n        var result = callback(a, b);\n        if (typeof result != 'undefined') {\n          return !!result;\n        }\n      }\n      // exit early for identical values\n      if (a === b) {\n        // treat `+0` vs. `-0` as not equal\n        return a !== 0 || 1 / a == 1 / b;\n      }\n      var type = typeof a,\n          otherType = typeof b;\n\n      // exit early for unlike primitive values\n      if (a === a && !(a && objectTypes[type]) && !(b && objectTypes[otherType])) {\n        return false;\n      }\n      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n      // http://es5.github.io/#x15.3.4.4\n      if (a == null || b == null) {\n        return a === b;\n      }\n      // compare [[Class]] names\n      var className = toString.call(a),\n          otherClass = toString.call(b);\n\n      if (className == argsClass) {\n        className = objectClass;\n      }\n      if (otherClass == argsClass) {\n        otherClass = objectClass;\n      }\n      if (className != otherClass) {\n        return false;\n      }\n      switch (className) {\n        case boolClass:\n        case dateClass:\n          // coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n          return +a == +b;\n\n        case numberClass:\n          // treat `NaN` vs. `NaN` as equal\n          return a != +a ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : a == 0 ? 1 / a == 1 / b : a == +b;\n\n        case regexpClass:\n        case stringClass:\n          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n          // treat string primitives and their corresponding object instances as equal\n          return a == String(b);\n      }\n      var isArr = className == arrayClass;\n      if (!isArr) {\n        // unwrap any `lodash` wrapped values\n        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n            bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n        if (aWrapped || bWrapped) {\n          _x = aWrapped ? a.__wrapped__ : a;\n          _x2 = bWrapped ? b.__wrapped__ : b;\n          _x3 = callback;\n          _x4 = isWhere;\n          _x5 = stackA;\n          _x6 = stackB;\n          _again = true;\n          continue _function;\n        }\n        // exit for functions and DOM nodes\n        if (className != objectClass || !support.nodeClass && (isNode(a) || isNode(b))) {\n          return false;\n        }\n        // in older versions of Opera, `arguments` objects have `Array` constructors\n        var ctorA = !support.argsObject && isArguments(a) ? Object : a.constructor,\n            ctorB = !support.argsObject && isArguments(b) ? Object : b.constructor;\n\n        // non `Object` object instances with different constructors are not equal\n        if (ctorA != ctorB && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) && ('constructor' in a && 'constructor' in b)) {\n          return false;\n        }\n      }\n      // assume cyclic structures are equal\n      // the algorithm for detecting cyclic structures is adapted from ES 5.1\n      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n      var initedStack = !stackA;\n      stackA || (stackA = getArray());\n      stackB || (stackB = getArray());\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == a) {\n          return stackB[length] == b;\n        }\n      }\n      var size = 0;\n      result = true;\n\n      // add `a` and `b` to the stack of traversed objects\n      stackA.push(a);\n      stackB.push(b);\n\n      // recursively compare objects and arrays (susceptible to call stack limits)\n      if (isArr) {\n        // compare lengths to determine if a deep comparison is necessary\n        length = a.length;\n        size = b.length;\n        result = size == length;\n\n        if (result || isWhere) {\n          // deep compare the contents, ignoring non-numeric properties\n          while (size--) {\n            var index = length,\n                value = b[size];\n\n            if (isWhere) {\n              while (index--) {\n                if (result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB)) {\n                  break;\n                }\n              }\n            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        }\n      } else {\n        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n        // which, in this case, is more costly\n        forIn(b, function (value, key, b) {\n          if (hasOwnProperty.call(b, key)) {\n            // count the number of properties.\n            size++;\n            // deep compare each property value.\n            return result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB);\n          }\n        });\n\n        if (result && !isWhere) {\n          // ensure both objects have the same number of properties\n          forIn(a, function (value, key, a) {\n            if (hasOwnProperty.call(a, key)) {\n              // `size` will be `-1` if `a` has more properties than `b`\n              return result = --size > -1;\n            }\n          });\n        }\n      }\n      stackA.pop();\n      stackB.pop();\n\n      if (initedStack) {\n        releaseArray(stackA);\n        releaseArray(stackB);\n      }\n      return result;\n    }\n  }\n\n  /**\n   * The base implementation of `_.random` without argument juggling or support\n   * for returning floating-point numbers.\n   *\n   * @private\n   * @param {number} min The minimum possible value.\n   * @param {number} max The maximum possible value.\n   * @returns {number} Returns a random number.\n   */\n  function baseRandom(min, max) {\n    return min + floor(nativeRandom() * (max - min + 1));\n  }\n\n  /**\n   * The base implementation of `_.uniq` without support for callback shorthands\n   * or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to process.\n   * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n   * @param {Function} [callback] The function called per iteration.\n   * @returns {Array} Returns a duplicate-value-free array.\n   */\n  function baseUniq(array, isSorted, callback) {\n    var index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        result = [];\n\n    var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,\n        seen = callback || isLarge ? getArray() : result;\n\n    if (isLarge) {\n      var cache = createCache(seen);\n      indexOf = cacheIndexOf;\n      seen = cache;\n    }\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isSorted ? !index || seen[seen.length - 1] !== computed : indexOf(seen, computed) < 0) {\n        if (callback || isLarge) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    if (isLarge) {\n      releaseArray(seen.array);\n      releaseObject(seen);\n    } else if (callback) {\n      releaseArray(seen);\n    }\n    return result;\n  }\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(_x7, _x8, _x9, _x10, _x11, _x12) {\n    var _arguments2 = arguments;\n    var _again2 = true;\n\n    _function2: while (_again2) {\n      var func = _x7,\n          bitmask = _x8,\n          partialArgs = _x9,\n          partialRightArgs = _x10,\n          thisArg = _x11,\n          arity = _x12;\n      isBind = isBindKey = isCurry = isCurryBound = isPartial = isPartialRight = bindData = creater = undefined;\n      _again2 = false;\n\n      var isBind = bitmask & 1,\n          isBindKey = bitmask & 2,\n          isCurry = bitmask & 4,\n          isCurryBound = bitmask & 8,\n          isPartial = bitmask & 16,\n          isPartialRight = bitmask & 32;\n\n      if (!isBindKey && !isFunction(func)) {\n        throw new TypeError();\n      }\n      if (isPartial && !partialArgs.length) {\n        bitmask &= ~16;\n        isPartial = partialArgs = false;\n      }\n      if (isPartialRight && !partialRightArgs.length) {\n        bitmask &= ~32;\n        isPartialRight = partialRightArgs = false;\n      }\n      var bindData = func && func.__bindData__;\n      if (bindData && bindData !== true) {\n        // clone `bindData`\n        bindData = slice(bindData);\n        if (bindData[2]) {\n          bindData[2] = slice(bindData[2]);\n        }\n        if (bindData[3]) {\n          bindData[3] = slice(bindData[3]);\n        }\n        // set `thisBinding` is not previously bound\n        if (isBind && !(bindData[1] & 1)) {\n          bindData[4] = thisArg;\n        }\n        // set if previously bound but not currently (subsequent curried functions)\n        if (!isBind && bindData[1] & 1) {\n          bitmask |= 8;\n        }\n        // set curried arity if not yet set\n        if (isCurry && !(bindData[1] & 4)) {\n          bindData[5] = arity;\n        }\n        // append partial left arguments\n        if (isPartial) {\n          push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n        }\n        // append partial right arguments\n        if (isPartialRight) {\n          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n        }\n        // merge flags\n        bindData[1] |= bitmask;\n        _arguments2 = bindData;\n        _x7 = _arguments2[0];\n        _x8 = _arguments2[1];\n        _x9 = _arguments2[2];\n        _x10 = _arguments2[3];\n        _x11 = _arguments2[4];\n        _x12 = _arguments2[5];\n        _again2 = true;\n        continue _function2;\n      }\n      // fast path for `_.bind`\n      var creater = bitmask == 1 || bitmask === 17 ? baseBind : baseCreateWrapper;\n      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n    }\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {...Object} [options] The compile options object(s).\n   * @param {string} [options.array] Code to determine if the iterable is an array or array-like.\n   * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.\n   * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.\n   * @param {string} [options.args] A comma separated string of iteration function arguments.\n   * @param {string} [options.top] Code to execute before the iteration branches.\n   * @param {string} [options.loop] Code to execute in the object loop.\n   * @param {string} [options.bottom] Code to execute after the iteration branches.\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    // data properties\n    iteratorData.shadowedProps = shadowedProps;\n\n    // iterator options\n    iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';\n    iteratorData.init = 'iterable';\n    iteratorData.useHas = true;\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        iteratorData[key] = object[key];\n      }\n    }\n    var args = iteratorData.args;\n    iteratorData.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function('baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' + 'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' + 'objectTypes, nonEnumProps, stringClass, stringProto, toString', 'return function(' + args + ') {\\n' + iteratorTemplate(iteratorData) + '\\n}');\n\n    // return the compiled function\n    return factory(baseCreateCallback, errorClass, errorProto, hasOwnProperty, indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto, objectTypes, nonEnumProps, stringClass, stringProto, toString);\n  }\n\n  /**\n   * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n   * customized, this method returns the custom method, otherwise it returns\n   * the `baseIndexOf` function.\n   *\n   * @private\n   * @returns {Function} Returns the \"indexOf\" function.\n   */\n  function getIndexOf() {\n    var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function (func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == argsClass || false;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (!support.argsClass) {\n    isArguments = function (value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;\n    };\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function (value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' && toString.call(value) == arrayClass || false;\n  };\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = createIterator({\n    'args': 'object',\n    'init': '[]',\n    'top': 'if (!(objectTypes[typeof object])) return result',\n    'loop': 'result.push(index)'\n  });\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function (object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    if (support.enumPrototypes && typeof object == 'function' || support.nonEnumArgs && object.length && isArguments(object)) {\n      return shimKeys(object);\n    }\n    return nativeKeys(object);\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)\",\n    'array': \"typeof length == 'number'\",\n    'keys': keys,\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top': 'var args = arguments,\\n' + '    argsIndex = 0,\\n' + \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" + 'while (++argsIndex < argsLength) {\\n' + '  iterable = args[argsIndex];\\n' + '  if (iterable && objectTypes[typeof iterable]) {',\n    'keys': keys,\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'array': false\n  };\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the callback for each\n   * element in the collection. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   */\n  var baseEach = createIterator(eachIteratorOptions);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top': defaultsIteratorOptions.top.replace(';', ';\\n' + \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" + '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' + \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" + '  callback = args[--argsLength];\\n' + '}'),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [isDeep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var shallow = _.clone(characters);\n   * shallow[0] === characters[0];\n   * // => true\n   *\n   * var deep = _.clone(characters, true);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, isDeep, callback, thisArg) {\n    // allows working with \"Collections\" methods without using their `index`\n    // and `collection` arguments for `isDeep` and `callback`\n    if (typeof isDeep != 'boolean' && isDeep != null) {\n      thisArg = callback;\n      callback = isDeep;\n      isDeep = false;\n    }\n    return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n\n  /**\n   * Creates a deep clone of `value`. If a callback is provided it will be\n   * executed to produce the cloned values. If the callback returns `undefined`\n   * cloning will be handled by the method instead. The callback is bound to\n   * `thisArg` and invoked with one argument; (value).\n   *\n   * Note: This method is loosely based on the structured clone algorithm. Functions\n   * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n   * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n   * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the deep cloned value.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * var deep = _.cloneDeep(characters);\n   * deep[0] === characters[0];\n   * // => false\n   *\n   * var view = {\n   *   'label': 'docs',\n   *   'node': element\n   * };\n   *\n   * var clone = _.cloneDeep(view, function(value) {\n   *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n   * });\n   *\n   * clone.node == view.node;\n   * // => false\n   */\n  function cloneDeep(value, callback, thisArg) {\n    return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n  }\n\n  /**\n   * Creates an object that inherits from the given `prototype` object. If a\n   * `properties` object is provided its own enumerable properties are assigned\n   * to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties ? assign(result, properties) : result;\n  }\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Creates a sorted array of property names of all enumerable properties,\n   * own and inherited, of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function (value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if (className == arrayClass || className == stringClass || (support.argsClass ? className == argsClass : isArguments(value)) || className == objectClass && typeof length == 'number' && isFunction(value.splice)) {\n      return !length;\n    }\n    forOwn(value, function () {\n      return result = false;\n    });\n    return result;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If a callback is provided it will be executed\n   * to compare values. If the callback returns `undefined` comparisons will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * var copy = { 'name': 'fred' };\n   *\n   * object == copy;\n   * // => false\n   *\n   * _.isEqual(object, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */\n  function isEqual(a, b, callback, thisArg) {\n    return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function (value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3] (property order is not guaranteed across environments)\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if a given value is present in a collection using strict equality\n   * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n   * offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {*} target The value to check for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n   * // => true\n   *\n   * _.contains('pebbles', 'eb');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        indexOf = getIndexOf(),\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (isArray(collection)) {\n      result = indexOf(collection, target, fromIndex) > -1;\n    } else if (typeof length == 'number') {\n      result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n    } else {\n      baseEach(collection, function (value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Iterates over elements of a collection, returning an array of all elements\n   * the callback returns truey for. The callback is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36, 'blocked': false },\n   *   { 'name': 'fred',   'age': 40, 'blocked': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(characters, 'blocked');\n   * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(characters, { 'age': 36 });\n   * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = lodash.createCallback(callback, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      }\n    } else {\n      baseEach(collection, function (value, index, collection) {\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Iterates over elements of a collection, returning the first element that\n   * the callback returns truey for. The callback is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect, findWhere\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the found element, else `undefined`.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'age': 36, 'blocked': false },\n   *   { 'name': 'fred',    'age': 40, 'blocked': true },\n   *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n   * ];\n   *\n   * _.find(characters, function(chr) {\n   *   return chr.age < 40;\n   * });\n   * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n   *\n   * // using \"_.where\" callback shorthand\n   * _.find(characters, { 'age': 1 });\n   * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.find(characters, 'blocked');\n   * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n   */\n  function find(collection, callback, thisArg) {\n    callback = lodash.createCallback(callback, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          return value;\n        }\n      }\n    } else {\n      var result;\n      baseEach(collection, function (value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return false;\n        }\n      });\n      return result;\n    }\n  }\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * Note: As with other \"Collections\" methods, objects with a `length` property\n   * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n   * may be used for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      baseEach(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /**\n   * Creates an array of values by running each element in the collection\n   * through the callback. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (property order is not guaranteed across environments)\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(characters, 'name');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = lodash.createCallback(callback, thisArg, 3);\n    if (isArray(collection)) {\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      baseEach(collection, function (value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.filter` this method returns the elements of a\n   * collection that the callback does **not** return truey for.\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that failed the callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36, 'blocked': false },\n   *   { 'name': 'fred',   'age': 40, 'blocked': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(characters, 'blocked');\n   * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(characters, { 'age': 36 });\n   * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = lodash.createCallback(callback, thisArg, 3);\n    return filter(collection, function (value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Retrieves a random element or `n` random elements from a collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to sample.\n   * @param {number} [n] The number of elements to sample.\n   * @param- {Object} [guard] Allows working with functions like `_.map`\n   *  without using their `index` arguments as `n`.\n   * @returns {Array} Returns the random sample(s) of `collection`.\n   * @example\n   *\n   * _.sample([1, 2, 3, 4]);\n   * // => 2\n   *\n   * _.sample([1, 2, 3, 4], 2);\n   * // => [3, 1]\n   */\n  function sample(collection, n, guard) {\n    if (collection && typeof collection.length != 'number') {\n      collection = values(collection);\n    } else if (support.unindexedChars && isString(collection)) {\n      collection = collection.split('');\n    }\n    if (n == null || guard) {\n      return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n    }\n    var result = shuffle(collection);\n    result.length = nativeMin(nativeMax(0, n), result.length);\n    return result;\n  }\n\n  /**\n   * Creates an array of shuffled values, using a version of the Fisher-Yates\n   * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function (value) {\n      var rand = baseRandom(0, ++index);\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection through the callback. This method\n   * performs a stable sort, that is, it will preserve the original sort order\n   * of equal elements. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an array of property names is provided for `callback` the collection\n   * will be sorted by each property value.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Array|Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'age': 36 },\n   *   { 'name': 'fred',    'age': 40 },\n   *   { 'name': 'barney',  'age': 26 },\n   *   { 'name': 'fred',    'age': 30 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(_.sortBy(characters, 'age'), _.values);\n   * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n   *\n   * // sorting by multiple properties\n   * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n   * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n   */\n  function sortBy(collection, callback, thisArg) {\n    var index = -1,\n        isArr = isArray(callback),\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    if (!isArr) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n    }\n    forEach(collection, function (value, key, collection) {\n      var object = result[++index] = getObject();\n      if (isArr) {\n        object.criteria = map(callback, function (key) {\n          return value[key];\n        });\n      } else {\n        (object.criteria = getArray())[0] = callback(value, key, collection);\n      }\n      object.index = index;\n      object.value = value;\n    });\n\n    length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      var object = result[length];\n      result[length] = object.value;\n      if (!isArr) {\n        releaseArray(object.criteria);\n      }\n      releaseObject(object);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n   * is truey, the array will only be flattened a single level. If a callback\n   * is provided each element of the array is passed through the callback before\n   * flattening. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n   *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.flatten(characters, 'pets');\n   * // => ['hoppy', 'baby puss', 'dino']\n   */\n  function flatten(array, isShallow, callback, thisArg) {\n    // juggle arguments\n    if (typeof isShallow != 'boolean' && isShallow != null) {\n      thisArg = callback;\n      callback = typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array ? null : isShallow;\n      isShallow = false;\n    }\n    if (callback != null) {\n      array = map(array, callback, thisArg);\n    }\n    return baseFlatten(array, isShallow);\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the array is already sorted\n   * providing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n   *  to perform a binary search on a sorted array.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    if (typeof fromIndex == 'number') {\n      var length = array ? array.length : 0;\n      fromIndex = fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0;\n    } else if (fromIndex) {\n      var index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    return baseIndexOf(array, value, fromIndex);\n  }\n\n  /**\n   * Gets the last element or last `n` elements of an array. If a callback is\n   * provided elements at the end of the array are returned as long as the\n   * callback returns truey. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n   *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n   *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.pluck(_.last(characters, 'blocked'), 'name');\n   * // => ['fred', 'pebbles']\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(characters, { 'employer': 'na' });\n   * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n   */\n  function last(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = lodash.createCallback(callback, thisArg, 3);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = callback;\n      if (n == null || thisArg) {\n        return array ? array[length - 1] : undefined;\n      }\n    }\n    return slice(array, nativeMax(0, length - n));\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`. If `start` is less than `stop` a\n   * zero-length range is created unless a negative `step` is specified.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {number} [start=0] The start of the range.\n   * @param {number} end The end of the range.\n   * @param {number} [step=1] The value to increment or decrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(4);\n   * // => [0, 1, 2, 3]\n   *\n   * _.range(1, 5);\n   * // => [1, 2, 3, 4]\n   *\n   * _.range(0, 20, 5);\n   * // => [0, 5, 10, 15]\n   *\n   * _.range(0, -4, -1);\n   * // => [0, -1, -2, -3]\n   *\n   * _.range(1, 4, 0);\n   * // => [1, 1, 1]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step = typeof step == 'number' ? step : +step || 1;\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n    // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / (step || 1))),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which a value\n   * should be inserted into a given sorted array in order to maintain the sort\n   * order of the array. If a callback is provided it will be executed for\n   * `value` and each element of `array` to compute their sort ranking. The\n   * callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to evaluate.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {number} Returns the index at which `value` should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better inlining in Firefox\n    callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;\n    value = callback(value);\n\n    while (low < high) {\n      var mid = low + high >>> 1;\n      callback(array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Creates a duplicate-value-free version of an array using strict equality\n   * for comparisons, i.e. `===`. If the array is sorted, providing\n   * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n   * each element of `array` is passed through the callback before uniqueness\n   * is computed. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n   * // => ['A', 'b', 'C']\n   *\n   * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2.5, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    // juggle arguments\n    if (typeof isSorted != 'boolean' && isSorted != null) {\n      thisArg = callback;\n      callback = typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array ? null : isSorted;\n      isSorted = false;\n    }\n    if (callback != null) {\n      callback = lodash.createCallback(callback, thisArg, 3);\n    }\n    return baseUniq(array, isSorted, callback);\n  }\n\n  /**\n   * Creates an array excluding all provided values using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {...*} [value] The values to exclude.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    return baseDifference(array, slice(arguments, 1));\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2 ? createWrapper(func, 17, slice(arguments, 2), null, thisArg) : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked.\n   * Provide an options object to indicate that `func` should be invoked on\n   * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n   * to the debounced function will return the result of the last `func` call.\n   *\n   * Note: If `leading` and `trailing` options are `true` `func` will be called\n   * on the trailing edge of the timeout only if the the debounced function is\n   * invoked more than once during the `wait` timeout.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {number} wait The number of milliseconds to delay.\n   * @param {Object} [options] The options object.\n   * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n   * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n   * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * // avoid costly calculations while the window size is in flux\n   * var lazyLayout = _.debounce(calculateLayout, 150);\n   * jQuery(window).on('resize', lazyLayout);\n   *\n   * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n   * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n   *   'leading': true,\n   *   'trailing': false\n   * });\n   *\n   * // ensure `batchLog` is executed once after 1 second of debounced calls\n   * var source = new EventSource('/stream');\n   * source.addEventListener('message', _.debounce(batchLog, 250, {\n   *   'maxWait': 1000\n   * }, false);\n   */\n  function debounce(func, wait, options) {\n    var args,\n        maxTimeoutId,\n        result,\n        stamp,\n        thisArg,\n        timeoutId,\n        trailingCall,\n        lastCalled = 0,\n        maxWait = false,\n        trailing = true;\n\n    if (!isFunction(func)) {\n      throw new TypeError();\n    }\n    wait = nativeMax(0, wait) || 0;\n    if (options === true) {\n      var leading = true;\n      trailing = false;\n    } else if (isObject(options)) {\n      leading = options.leading;\n      maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n      trailing = 'trailing' in options ? options.trailing : trailing;\n    }\n    var delayed = function delayed() {\n      var remaining = wait - (now() - stamp);\n      if (remaining <= 0) {\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        var isCalled = trailingCall;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      } else {\n        timeoutId = setTimeout(delayed, remaining);\n      }\n    };\n\n    var maxDelayed = function maxDelayed() {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      maxTimeoutId = timeoutId = trailingCall = undefined;\n      if (trailing || maxWait !== wait) {\n        lastCalled = now();\n        result = func.apply(thisArg, args);\n        if (!timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n      }\n    };\n\n    return function () {\n      args = arguments;\n      stamp = now();\n      thisArg = this;\n      trailingCall = trailing && (timeoutId || !leading);\n\n      if (maxWait === false) {\n        var leadingCall = leading && !timeoutId;\n      } else {\n        if (!maxTimeoutId && !leading) {\n          lastCalled = stamp;\n        }\n        var remaining = maxWait - (stamp - lastCalled),\n            isCalled = remaining <= 0;\n\n        if (isCalled) {\n          if (maxTimeoutId) {\n            maxTimeoutId = clearTimeout(maxTimeoutId);\n          }\n          lastCalled = stamp;\n          result = func.apply(thisArg, args);\n        } else if (!maxTimeoutId) {\n          maxTimeoutId = setTimeout(maxDelayed, remaining);\n        }\n      }\n      if (isCalled && timeoutId) {\n        timeoutId = clearTimeout(timeoutId);\n      } else if (!timeoutId && wait !== maxWait) {\n        timeoutId = setTimeout(delayed, wait);\n      }\n      if (leadingCall) {\n        isCalled = true;\n        result = func.apply(thisArg, args);\n      }\n      if (isCalled && !timeoutId && !maxTimeoutId) {\n        args = thisArg = null;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func` function\n   * at most once per every `wait` milliseconds. Provide an options object to\n   * indicate that `func` should be invoked on the leading and/or trailing edge\n   * of the `wait` timeout. Subsequent calls to the throttled function will\n   * return the result of the last `func` call.\n   *\n   * Note: If `leading` and `trailing` options are `true` `func` will be called\n   * on the trailing edge of the timeout only if the the throttled function is\n   * invoked more than once during the `wait` timeout.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {number} wait The number of milliseconds to throttle executions to.\n   * @param {Object} [options] The options object.\n   * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n   * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * // avoid excessively updating the position while scrolling\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   *\n   * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n   * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n   *   'trailing': false\n   * }));\n   */\n  function throttle(func, wait, options) {\n    var leading = true,\n        trailing = true;\n\n    if (!isFunction(func)) {\n      throw new TypeError();\n    }\n    if (options === false) {\n      leading = false;\n    } else if (isObject(options)) {\n      leading = 'leading' in options ? options.leading : leading;\n      trailing = 'trailing' in options ? options.trailing : trailing;\n    }\n    debounceOptions.leading = leading;\n    debounceOptions.maxWait = wait;\n    debounceOptions.trailing = trailing;\n\n    return debounce(func, wait, debounceOptions);\n  }\n\n  /**\n   * Creates a function that provides `value` to the wrapper function as its\n   * first argument. Additional arguments provided to the function are appended\n   * to those provided to the wrapper function. The wrapper is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {*} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var p = _.wrap(_.escape, function(func, text) {\n   *   return '<p>' + func(text) + '</p>';\n   * });\n   *\n   * p('Fred, Wilma, & Pebbles');\n   * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n   */\n  function wrap(value, wrapper) {\n    return createWrapper(wrapper, 16, [value]);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name the created callback will return the property value for a given element.\n   * If `func` is an object the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // wrap to create custom callback shorthands\n   * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n   *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n   *   return !match ? func(callback, thisArg) : function(object) {\n   *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n   *   };\n   * });\n   *\n   * _.filter(characters, 'age__gt38');\n   * // => [{ 'name': 'fred', 'age': 40 }]\n   */\n  function createCallback(func, thisArg, argCount) {\n    var type = typeof func;\n    if (func == null || type == 'function') {\n      return baseCreateCallback(func, thisArg, argCount);\n    }\n    // handle \"_.pluck\" style callback shorthands\n    if (type != 'object') {\n      return property(func);\n    }\n    var props = keys(func),\n        key = props[0],\n        a = func[key];\n\n    // handle \"_.where\" style callback shorthands\n    if (props.length == 1 && a === a && !isObject(a)) {\n      // fast path the common case of providing an object with a single\n\n      return function (object) {\n        var b = object[key];\n        return a === b && (a !== 0 || 1 / a == 1 / b);\n      };\n    }\n    return function (object) {\n      var length = props.length,\n          result = false;\n\n      while (length--) {\n        if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n          break;\n        }\n      }\n      return result;\n    };\n  }\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds function properties of a source object to the destination object.\n   * If `object` is a function methods will be added to its prototype as well.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Function|Object} [object=lodash] object The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options] The options object.\n   * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n   * @example\n   *\n   * function capitalize(string) {\n   *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   * }\n   *\n   * _.mixin({ 'capitalize': capitalize });\n   * _.capitalize('fred');\n   * // => 'Fred'\n   *\n   * _('fred').capitalize().value();\n   * // => 'Fred'\n   *\n   * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n   * _('fred').capitalize();\n   * // => 'Fred'\n   */\n  function mixin(object, source, options) {\n    var chain = true,\n        methodNames = source && functions(source);\n\n    if (!source || !options && !methodNames.length) {\n      if (options == null) {\n        options = source;\n      }\n      ctor = lodashWrapper;\n      source = object;\n      object = lodash;\n      methodNames = functions(source);\n    }\n    if (options === false) {\n      chain = false;\n    } else if (isObject(options) && 'chain' in options) {\n      chain = options.chain;\n    }\n    var ctor = object,\n        isFunc = isFunction(ctor);\n\n    forEach(methodNames, function (methodName) {\n      var func = object[methodName] = source[methodName];\n      if (isFunc) {\n        ctor.prototype[methodName] = function () {\n          var chainAll = this.__chain__,\n              value = this.__wrapped__,\n              args = [value];\n\n          push.apply(args, arguments);\n          var result = func.apply(object, args);\n          if (chain || chainAll) {\n            if (value === result && isObject(result)) {\n              return this;\n            }\n            result = new ctor(result);\n            result.__chain__ = chainAll;\n          }\n          return result;\n        };\n      }\n    });\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {}\n  // no operation performed\n\n  /**\n   * Gets the number of milliseconds that have elapsed since the Unix epoch\n   * (1 January 1970 00:00:00 UTC).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var stamp = _.now();\n   * _.defer(function() { console.log(_.now() - stamp); });\n   * // => logs the number of milliseconds it took for the deferred function to be called\n   */\n  var now = isNative(now = Date.now) && now || function () {\n    return new Date().getTime();\n  };\n\n  /**\n   * Creates a \"_.pluck\" style function, which returns the `key` value of a\n   * given object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} key The name of the property to retrieve.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'fred',   'age': 40 },\n   *   { 'name': 'barney', 'age': 36 }\n   * ];\n   *\n   * var getName = _.property('name');\n   *\n   * _.map(characters, getName);\n   * // => ['barney', 'fred']\n   *\n   * _.sortBy(characters, getName);\n   * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n   */\n  function property(key) {\n    return function (object) {\n      return object[key];\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object that wraps the given value with explicit\n   * method chaining enabled.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the wrapper object.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'age': 36 },\n   *   { 'name': 'fred',    'age': 40 },\n   *   { 'name': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _.chain(characters)\n   *     .sortBy('age')\n   *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n   *     .first()\n   *     .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    value = new lodashWrapper(value);\n    value.__chain__ = true;\n    return value;\n  }\n\n  /**\n   * Enables explicit method chaining on the wrapper object.\n   *\n   * @name chain\n   * @memberOf _\n   * @category Chaining\n   * @returns {*} Returns the wrapper object.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // without explicit chaining\n   * _(characters).first();\n   * // => { 'name': 'barney', 'age': 36 }\n   *\n   * // with explicit chaining\n   * _(characters).chain()\n   *   .first()\n   *   .pick('age')\n   *   .value();\n   * // => { 'age': 36 }\n   */\n  function wrapperChain() {\n    this.__chain__ = true;\n    return this;\n  }\n\n  /**\n   * Produces the `toString` result of the wrapped value.\n   *\n   * @name toString\n   * @memberOf _\n   * @category Chaining\n   * @returns {string} Returns the string result.\n   * @example\n   *\n   * _([1, 2, 3]).toString();\n   * // => '1,2,3'\n   */\n  function wrapperToString() {\n    return String(this.__wrapped__);\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {*} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */\n  function wrapperValueOf() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  lodash.assign = assign;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.create = create;\n  lodash.createCallback = createCallback;\n  lodash.debounce = debounce;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.functions = functions;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.property = property;\n  lodash.range = range;\n  lodash.reject = reject;\n  lodash.shuffle = shuffle;\n  lodash.sortBy = sortBy;\n  lodash.throttle = throttle;\n  lodash.uniq = uniq;\n  lodash.values = values;\n  lodash.without = without;\n  lodash.wrap = wrap;\n\n  // add aliases\n  lodash.collect = map;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  lodash.methods = functions;\n  lodash.select = filter;\n  lodash.unique = uniq;\n\n  // add functions to `lodash.prototype`\n  mixin(lodash);\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.cloneDeep = cloneDeep;\n  lodash.contains = contains;\n  lodash.find = find;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFunction = isFunction;\n  lodash.isObject = isObject;\n  lodash.isString = isString;\n  lodash.mixin = mixin;\n  lodash.noop = noop;\n  lodash.now = now;\n  lodash.size = size;\n  lodash.sortedIndex = sortedIndex;\n\n  lodash.detect = find;\n  lodash.findWhere = find;\n  lodash.include = contains;\n\n  mixin((function () {\n    var source = {};\n    forOwn(lodash, function (func, methodName) {\n      if (!lodash.prototype[methodName]) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  })(), false);\n\n  /*--------------------------------------------------------------------------*/\n\n  lodash.last = last;\n  lodash.sample = sample;\n\n  forOwn(lodash, function (func, methodName) {\n    var callbackable = methodName !== 'sample';\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName] = function (n, guard) {\n        var chainAll = this.__chain__,\n            result = func(this.__wrapped__, n, guard);\n\n        return !chainAll && (n == null || guard && !(callbackable && typeof n == 'function')) ? result : new lodashWrapper(result, chainAll);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n  lodash.VERSION = '2.4.1';\n\n  // add \"Chaining\" functions to the wrapper\n  lodash.prototype.chain = wrapperChain;\n  lodash.prototype.toString = wrapperToString;\n  lodash.prototype.value = wrapperValueOf;\n  lodash.prototype.valueOf = wrapperValueOf;\n\n  // add `Array` functions that return unwrapped values\n  baseEach(['join', 'pop', 'shift'], function (methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function () {\n      var chainAll = this.__chain__,\n          result = func.apply(this.__wrapped__, arguments);\n\n      return chainAll ? new lodashWrapper(result, chainAll) : result;\n    };\n  });\n\n  // add `Array` functions that return the existing wrapped value\n  baseEach(['push', 'reverse', 'sort', 'unshift'], function (methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function () {\n      func.apply(this.__wrapped__, arguments);\n      return this;\n    };\n  });\n\n  // add `Array` functions that return new wrapped values\n  baseEach(['concat', 'slice', 'splice'], function (methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function () {\n      return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n    };\n  });\n\n  // avoid array-like object bugs with `Array#shift` and `Array#splice`\n  // in IE < 9, Firefox < 10, Narwhal, and RingoJS\n  if (!support.spliceObjects) {\n    baseEach(['pop', 'shift', 'splice'], function (methodName) {\n      var func = arrayRef[methodName],\n          isSplice = methodName == 'splice';\n\n      lodash.prototype[methodName] = function () {\n        var chainAll = this.__chain__,\n            value = this.__wrapped__,\n            result = func.apply(value, arguments);\n\n        if (value.length === 0) {\n          delete value[0];\n        }\n        return chainAll || isSplice ? new lodashWrapper(result, chainAll) : result;\n      };\n    });\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash is loaded with a RequireJS shim config.\n    // See http://requirejs.org/docs/api.html#config-shim\n    root._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define(function () {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n      // in Node.js or RingoJS\n      if (moduleExports) {\n        (freeModule.exports = lodash)._ = lodash;\n      }\n      // in Narwhal or Rhino -require\n      else {\n          freeExports._ = lodash;\n        }\n    } else {\n      // in a browser or Rhino\n      root._ = lodash;\n    }\n}).call(undefined);\n// property containing a primitive value\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/lodash.js","sourceRoot":"file://localhost","sourceFile":"build/js/lodash.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/required_block_utils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/required_block_utils.js","source":"/* global Text */\n\n'use strict';\n\nvar xml = require('./xml');\nvar blockUtils = require('./block_utils');\nvar utils = require('./utils');\nvar msg = require('./locale');\nvar _ = utils.getLodash();\n\n/**\n * Create the textual XML for a math_number block.\n * @param {number|string} number The numeric amount, expressed as a\n *     number or string.  Non-numeric strings may also be specified,\n *     such as '???'.\n * @return {string} The textual representation of a math_number block.\n */\nexports.makeMathNumber = function (number) {\n  return '<block type=\"math_number\"><title name=\"NUM\">' + number + '</title></block>';\n};\n\n/**\n * Generate a required blocks dictionary for a simple block that does not\n * have any parameters or values.\n * @param {string} block_type The block type.\n * @return {Object} A required blocks dictionary able to check for and\n *     generate the specified block.\n */\nexports.simpleBlock = function (block_type) {\n  return { test: function test(block) {\n      return block.type == block_type;\n    },\n    type: block_type };\n};\n\n/**\n * Generate a required blocks dictionary for a repeat loop.  This does not\n * test for the specified repeat count but includes it in the suggested block.\n * @param {number|string} count The suggested repeat count.\n * @return {Object} A required blocks dictionary able to check for and\n *     generate the specified block.\n */\nexports.repeat = function (count) {\n  // This checks for a controls_repeat block rather than looking for 'for',\n  // since the latter may be generated by Turtle 2's draw_a_square.\n  return { test: function test(block) {\n      return block.type == 'controls_repeat';\n    },\n    type: 'controls_repeat', titles: { 'TIMES': count } };\n};\n\n/**\n * Generate a required blocks dictionary for a simple repeat loop.  This does not\n * test for the specified repeat count but includes it in the suggested block.\n * @param {number|string} count The suggested repeat count.\n * @return {Object} A required blocks dictionary able to check for and\n *     generate the specified block.\n */\nexports.repeatSimpleBlock = function (count) {\n  return { test: function test(block) {\n      return block.type == 'controls_repeat_simplified';\n    },\n    type: 'controls_repeat_simplified', titles: { 'TIMES': count } };\n};\n\n/**\n * Returns an array of required blocks by comparing a list of blocks with\n * a list of app specific block tests (defined in <app>/requiredBlocks.js)\n */\nexports.makeTestsFromBuilderRequiredBlocks = function (customRequiredBlocks) {\n  var blocksXml = xml.parseElement(customRequiredBlocks);\n\n  var requiredBlocksTests = [];\n  Array.prototype.forEach.call(blocksXml.childNodes, function (childNode) {\n    // Only look at element nodes\n    if (childNode.nodeType !== 1) {\n      return;\n    }\n    switch (childNode.getAttribute('type')) {\n      case 'pick_one':\n        requiredBlocksTests.push(testsFromPickOne(childNode));\n        break;\n      case 'procedures_defnoreturn':\n      case 'procedures_defreturn':\n        requiredBlocksTests.push(testsFromProcedure(childNode));\n        break;\n      case 'functional_definition':\n        break;\n      case 'functional_call':\n        requiredBlocksTests.push(testsFromFunctionalCall(childNode, blocksXml));\n        break;\n      default:\n        requiredBlocksTests.push([testFromBlock(childNode)]);\n    }\n  });\n\n  return requiredBlocksTests;\n};\n\n/**\n * Given xml for a single block generates a block test\n */\nfunction testFromBlock(node) {\n  return {\n    test: function test(userBlock) {\n      // Encode userBlock while ignoring child statements\n      var userElement = Blockly.Xml.blockToDom(userBlock, true);\n      return elementsEquivalent(node, userElement);\n    },\n    blockDisplayXML: xml.serialize(node)\n  };\n}\n\n/**\n * Given xml for a pick_one block, generates a test that checks that at least\n * one of the child blocks is used.  If none are used, the first option will be\n * displayed as feedback\n */\nfunction testsFromPickOne(node) {\n  var tests = [];\n  // child of pick_one is a statement block.  we want first child of that\n  var statement = node.getElementsByTagName('statement')[0];\n  var block = statement.getElementsByTagName('block')[0];\n  var next;\n  do {\n    // if we have a next block, we want to generate our test without that\n    next = block.getElementsByTagName('next')[0];\n    if (next) {\n      block.removeChild(next);\n    }\n    tests.push(testFromBlock(block));\n    if (next) {\n      block = next.getElementsByTagName('block')[0];\n    }\n  } while (next);\n  return tests;\n}\n\n/**\n * Given xml for a procedure block, generates tests that check for required\n * number of params not declared\n */\nfunction testsFromProcedure(node) {\n  var paramCount = node.querySelectorAll('mutation > arg').length;\n  var emptyBlock = node.cloneNode(true);\n  emptyBlock.removeChild(emptyBlock.lastChild);\n  return [{\n    // Ensure that all required blocks match a block with the same number of\n    // params. There's no guarantee users will name their function the same as\n    // the required block, so only match on number of params.\n    test: function test(userBlock) {\n      if (userBlock.type === node.getAttribute('type')) {\n        return paramCount === userBlock.parameterNames_.length;\n      }\n      // Block isn't the same type, return false to keep searching.\n      return false;\n    },\n    message: msg.errorRequiredParamsMissing(),\n    blockDisplayXML: '<xml></xml>'\n  }];\n}\n\nfunction testsFromFunctionalCall(node, blocksXml) {\n  var name = node.querySelector('mutation').getAttribute('name');\n  var argElements = node.querySelectorAll('arg');\n  var types = [];\n  for (var i = 0; i < argElements.length; i++) {\n    types.push(argElements[i].getAttribute('type'));\n  }\n\n  var definition = _.find(blocksXml.childNodes, function (sibling) {\n    if (sibling.getAttribute('type') !== 'functional_definition') {\n      return false;\n    }\n    var nameElement = sibling.querySelector('title[name=\"NAME\"]');\n    if (!nameElement) {\n      return false;\n    }\n    return nameElement.textContent === name;\n  });\n\n  if (!definition) {\n    throw new Error('No matching definition for functional_call');\n  }\n\n  return [{\n    test: function test(userBlock) {\n      if (userBlock.type !== 'functional_call' || userBlock.getCallName() !== name) {\n        return false;\n      }\n      var userTypes = userBlock.getParamTypes();\n      return _.isEqual(userTypes, types);\n    },\n    blockDisplayXML: xml.serialize(definition) + xml.serialize(node)\n  }];\n}\n\n/**\n * Checks two DOM elements to see whether or not they are equivalent\n * We consider them equivalent if they have the same tagName, attributes,\n * and children\n */\nfunction elementsEquivalent(expected, given) {\n  if (!(expected instanceof Element && given instanceof Element)) {\n    // if we expect ???, allow match with anything\n    if (expected instanceof Text && expected.textContent === '???') {\n      return true;\n    }\n    return expected.isEqualNode(given);\n  }\n  // Not fully clear to me why, but blockToDom seems to return us an element\n  // with a tagName in all caps\n  if (expected.tagName.toLowerCase() !== given.tagName.toLowerCase()) {\n    return false;\n  }\n\n  if (!attributesEquivalent(expected, given)) {\n    return false;\n  }\n\n  if (!childrenEquivalent(expected, given)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * A list of attributes we want to ignore when comparing attributes, and a\n * function for easily determining whether an attribute is in the list.\n */\nvar ignorableAttributes = ['deletable', 'movable', 'editable', 'inline', 'uservisible', 'usercreated', 'id'];\n\nignorableAttributes.contains = function (attr) {\n  return ignorableAttributes.indexOf(attr.name) !== -1;\n};\n\n/**\n * Checks whether the attributes for two different elements are equivalent\n */\nfunction attributesEquivalent(expected, given) {\n  var attributes1 = _.reject(expected.attributes, ignorableAttributes.contains);\n  var attributes2 = _.reject(given.attributes, ignorableAttributes.contains);\n  if (attributes1.length !== attributes2.length) {\n    return false;\n  }\n  for (var i = 0; i < attributes1.length; i++) {\n    var attr1 = attributes1[i];\n    var attr2 = attributes2[i];\n    if (attr1.name !== attr2.name) {\n      return false;\n    }\n    if (attr1.value !== attr2.value) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks whether the children of two different elements are equivalent\n */\nfunction childrenEquivalent(expected, given) {\n  var children1 = expected.childNodes;\n  var children2 = given.childNodes;\n  if (children1.length !== children2.length) {\n    return false;\n  }\n  for (var i = 0; i < children1.length; i++) {\n    if (!elementsEquivalent(children1[i], children2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Checks if two blocks are \"equivalent\"\n * Currently means their type and all of their titles match exactly\n * @param blockA\n * @param blockB\n */\nexports.blocksMatch = function (blockA, blockB) {\n  var typesMatch = blockA.type === blockB.type;\n  var titlesMatch = exports.blockTitlesMatch(blockA, blockB);\n  return typesMatch && titlesMatch;\n};\n\n/**\n * Compares two blocks' titles, returns true if they all match\n * @returns {boolean}\n * @param blockA\n * @param blockB\n */\nexports.blockTitlesMatch = function (blockA, blockB) {\n  var blockATitles = blockA.getTitles();\n  var blockBTitles = blockB.getTitles();\n\n  var nameCompare = function nameCompare(a, b) {\n    return a.name < b.name;\n  };\n  blockATitles.sort(nameCompare);\n  blockBTitles.sort(nameCompare);\n\n  for (var i = 0; i < blockATitles.length || i < blockBTitles.length; i++) {\n    var blockATitle = blockATitles[i];\n    var blockBTitle = blockBTitles[i];\n    if (!blockATitle || !blockBTitle || !titlesMatch(blockATitle, blockBTitle)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nvar titlesMatch = function titlesMatch(titleA, titleB) {\n  return titleB.name === titleA.name && titleB.getValue() === titleA.getValue();\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./xml":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","./block_utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js","./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","./locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/required_block_utils.js","sourceRoot":"file://localhost","sourceFile":"build/js/required_block_utils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js","source":"// avatar: A 1029x51 set of 21 avatar images.\n\n'use strict';\n\nexports.load = function (assetUrl, id) {\n  var skinUrl = function skinUrl(path) {\n    if (path !== undefined) {\n      return assetUrl('media/skins/' + id + '/' + path);\n    } else {\n      return null;\n    }\n  };\n  var skin = {\n    id: id,\n    assetUrl: skinUrl,\n    // Images\n    avatar: skinUrl('avatar.png'),\n    avatar_2x: skinUrl('avatar_2x.png'),\n    goal: skinUrl('goal.png'),\n    obstacle: skinUrl('obstacle.png'),\n    smallStaticAvatar: skinUrl('small_static_avatar.png'),\n    staticAvatar: skinUrl('static_avatar.png'),\n    winAvatar: skinUrl('win_avatar.png'),\n    failureAvatar: skinUrl('failure_avatar.png'),\n    decorationAnimation: skinUrl('decoration_animation.png'),\n    decorationAnimation_2x: skinUrl('decoration_animation_2x.png'),\n    repeatImage: assetUrl('media/common_images/repeat-arrows.png'),\n    leftArrow: assetUrl('media/common_images/moveleft.png'),\n    downArrow: assetUrl('media/common_images/movedown.png'),\n    upArrow: assetUrl('media/common_images/moveup.png'),\n    rightArrow: assetUrl('media/common_images/moveright.png'),\n    leftJumpArrow: assetUrl('media/common_images/jumpleft.png'),\n    downJumpArrow: assetUrl('media/common_images/jumpdown.png'),\n    upJumpArrow: assetUrl('media/common_images/jumpup.png'),\n    rightJumpArrow: assetUrl('media/common_images/jumpright.png'),\n    northLineDraw: assetUrl('media/common_images/draw-north.png'),\n    southLineDraw: assetUrl('media/common_images/draw-south.png'),\n    eastLineDraw: assetUrl('media/common_images/draw-east.png'),\n    westLineDraw: assetUrl('media/common_images/draw-west.png'),\n    shortLineDraw: assetUrl('media/common_images/draw-short.png'),\n    longLineDraw: assetUrl('media/common_images/draw-long.png'),\n    shortLineDrawRight: assetUrl('media/common_images/draw-short-right.png'),\n    longLineDrawRight: assetUrl('media/common_images/draw-long-right.png'),\n    longLine: assetUrl('media/common_images/move-long.png'),\n    shortLine: assetUrl('media/common_images/move-short.png'),\n    soundIcon: assetUrl('media/common_images/play-sound.png'),\n    clickIcon: assetUrl('media/common_images/when-click-hand.png'),\n    startIcon: assetUrl('media/common_images/when-run.png'),\n    runArrow: assetUrl('media/common_images/run-arrow.png'),\n    endIcon: assetUrl('media/common_images/end-icon.png'),\n    speedFast: assetUrl('media/common_images/speed-fast.png'),\n    speedMedium: assetUrl('media/common_images/speed-medium.png'),\n    speedSlow: assetUrl('media/common_images/speed-slow.png'),\n    scoreCard: assetUrl('media/common_images/increment-score-75percent.png'),\n    rainbowMenu: assetUrl('media/common_images/rainbow-menuicon.png'),\n    ropeMenu: assetUrl('media/common_images/rope-menuicon.png'),\n    squigglyMenu: assetUrl('media/common_images/squiggly-menuicon.png'),\n    swirlyMenu: assetUrl('media/common_images/swirlyline-menuicon.png'),\n    patternDefault: assetUrl('media/common_images/defaultline-menuicon.png'),\n    rainbowLine: assetUrl('media/common_images/rainbow.png'),\n    ropeLine: assetUrl('media/common_images/rope.png'),\n    squigglyLine: assetUrl('media/common_images/squiggly.png'),\n    swirlyLine: assetUrl('media/common_images/swirlyline.png'),\n    randomPurpleIcon: assetUrl('media/common_images/random-purple.png'),\n\n    // Sounds\n    startSound: [skinUrl('start.mp3'), skinUrl('start.ogg')],\n    winSound: [skinUrl('win.mp3'), skinUrl('win.ogg')],\n    failureSound: [skinUrl('failure.mp3'), skinUrl('failure.ogg')]\n  };\n\n  return skin;\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js","sourceRoot":"file://localhost","sourceFile":"build/js/skins.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionHistory.jsx":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionHistory.jsx","source":"/* global dashboard */\n'use strict';\n\nvar VersionRow = require('./VersionRow.jsx');\nvar sourcesApi = require('../clientApi').sources;\n\n/**\n * A component for viewing project version history.\n */\nmodule.exports = React.createClass({\n  displayName: 'exports',\n\n  propTypes: {\n    handleClearPuzzle: React.PropTypes.func.isRequired\n  },\n\n  /**\n   * @returns {{statusMessage: string, versions: (null|{\n   *   lastModified: Date,\n   *   isLatest: boolean,\n   *   versionId: string\n   * }[])}}\n   */\n  getInitialState: function getInitialState() {\n    return {\n      versions: null,\n      statusMessage: '',\n      showSpinner: true,\n      confirmingClearPuzzle: false\n    };\n  },\n\n  componentWillMount: function componentWillMount() {\n    // TODO: Use Dave's client api when it's finished.\n    sourcesApi.ajax('GET', 'main.json/versions', this.onVersionListReceived, this.onAjaxFailure);\n  },\n\n  /**\n   * Called after the component mounts, when the server responds with the\n   * current list of versions.\n   * @param xhr\n   */\n  onVersionListReceived: function onVersionListReceived(xhr) {\n    this.setState({ versions: JSON.parse(xhr.responseText), showSpinner: false });\n  },\n\n  /**\n   * Called if the server responds with an error when loading an API request.\n   */\n  onAjaxFailure: function onAjaxFailure() {\n    this.setState({ statusMessage: 'An error occurred.' });\n  },\n\n  /**\n   * Called when the server responds to a request to restore a previous version.\n   */\n  onRestoreSuccess: function onRestoreSuccess() {\n    location.reload();\n  },\n\n  /**\n   * Called when the user chooses a previous version to restore.\n   * @param versionId\n   */\n  onChooseVersion: function onChooseVersion(versionId) {\n    // TODO: Use Dave's client api when it's finished.\n    sourcesApi.ajax('PUT', 'main.json/restore?version=' + versionId, this.onRestoreSuccess, this.onAjaxFailure);\n\n    // Show the spinner.\n    this.setState({ showSpinner: true });\n  },\n\n  onConfirmClearPuzzle: function onConfirmClearPuzzle() {\n    this.setState({ confirmingClearPuzzle: true });\n  },\n\n  onCancelClearPuzzle: function onCancelClearPuzzle() {\n    this.setState({ confirmingClearPuzzle: false });\n  },\n\n  onClearPuzzle: function onClearPuzzle() {\n    this.setState({ showSpinner: true });\n    this.props.handleClearPuzzle();\n    dashboard.project.save(function () {\n      location.reload();\n    }, true);\n  },\n\n  render: function render() {\n    var body;\n    if (this.state.showSpinner) {\n      body = React.createElement(\n        'div',\n        { style: { margin: '1em 0', textAlign: 'center' } },\n        React.createElement('i', { className: 'fa fa-spinner fa-spin', style: { fontSize: '32px' } })\n      );\n    } else if (this.state.confirmingClearPuzzle) {\n      body = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'p',\n          null,\n          'Are you sure you want to clear all progress for this level?'\n        ),\n        React.createElement(\n          'button',\n          { id: 'confirm-button', style: { float: 'right' }, onClick: this.onClearPuzzle },\n          'Start Over'\n        ),\n        React.createElement(\n          'button',\n          { id: 'again-button', onClick: this.onCancelClearPuzzle },\n          'Cancel'\n        )\n      );\n    } else {\n      var rows = this.state.versions.map((function (version) {\n        return React.createElement(VersionRow, {\n          lastModified: new Date(version.lastModified),\n          isLatest: version.isLatest,\n          onChoose: this.onChooseVersion.bind(this, version.versionId) });\n      }).bind(this));\n\n      body = React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'div',\n          { style: { maxHeight: '330px', overflowX: 'scroll', margin: '1em 0' } },\n          React.createElement(\n            'table',\n            { style: { width: '100%' } },\n            React.createElement(\n              'tbody',\n              null,\n              rows,\n              React.createElement(\n                'tr',\n                null,\n                React.createElement(\n                  'td',\n                  null,\n                  React.createElement(\n                    'p',\n                    { style: { margin: 0 } },\n                    'Initial version'\n                  )\n                ),\n                React.createElement(\n                  'td',\n                  { width: '250', style: { textAlign: 'right' } },\n                  React.createElement(\n                    'button',\n                    { className: 'btn-danger', onClick: this.onConfirmClearPuzzle, style: { float: 'right' } },\n                    'Delete Progress'\n                  )\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return React.createElement(\n      'div',\n      { className: 'modal-content', style: { margin: 0 } },\n      React.createElement(\n        'p',\n        { className: 'dialog-title' },\n        'Version History'\n      ),\n      body,\n      this.state.statusMessage\n    );\n  }\n});\n//# sourceMappingURL=data:application/json;base64,","deps":{"../clientApi":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/clientApi.js","./VersionRow.jsx":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionRow.jsx"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionHistory.jsx","sourceRoot":"file://localhost","sourceFile":"build/js/templates/VersionHistory.jsx"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionRow.jsx":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionRow.jsx","source":"/* globals $ */\n\n/**\n * A single row in the VersionHistory dialog, describing one version of a project.\n */\n\"use strict\";\n\nmodule.exports = React.createClass({\n  displayName: \"exports\",\n\n  propTypes: {\n    lastModified: React.PropTypes.instanceOf(Date),\n    isLatest: React.PropTypes.bool,\n    onChoose: React.PropTypes.func\n  },\n\n  getLastModifiedTimestamp: function getLastModifiedTimestamp() {\n    var timestamp = this.props.lastModified;\n    if (timestamp.toLocaleString) {\n      return timestamp.toLocaleString();\n    }\n    return timestamp.toString();\n  },\n\n  render: function render() {\n    var button;\n    if (this.props.isLatest) {\n      button = React.createElement(\n        \"button\",\n        { className: \"btn-default\", disabled: \"disabled\", style: { cursor: \"default\" } },\n        \"Current Version\"\n      );\n    } else {\n      button = React.createElement(\n        \"button\",\n        { className: \"btn-info\", onClick: this.props.onChoose },\n        \"Restore this Version\"\n      );\n    }\n\n    return React.createElement(\n      \"tr\",\n      { className: \"versionRow\" },\n      React.createElement(\n        \"td\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"Saved \",\n          React.createElement(\n            \"time\",\n            { className: \"versionTimestamp\", dateTime: this.props.lastModified.toISOString() },\n            this.getLastModifiedTimestamp()\n          )\n        ),\n        this.getLastModifiedTimestamp()\n      ),\n      React.createElement(\n        \"td\",\n        { width: \"250\", style: { textAlign: 'right' } },\n        button\n      )\n    );\n  },\n\n  componentDidMount: function componentDidMount() {\n    $('.versionTimestamp').timeago();\n  }\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL3RlbXBsYXRlcy9WZXJzaW9uUm93LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBTUEsTUFBTSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDOzs7QUFDakMsV0FBUyxFQUFFO0FBQ1QsZ0JBQVksRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFDOUMsWUFBUSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSTtBQUM5QixZQUFRLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0dBQy9COztBQUVELDBCQUF3QixFQUFFLG9DQUFZO0FBQ3BDLFFBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDO0FBQ3hDLFFBQUksU0FBUyxDQUFDLGNBQWMsRUFBRTtBQUM1QixhQUFPLFNBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztLQUNuQztBQUNELFdBQU8sU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO0dBQzdCOztBQUVELFFBQU0sRUFBRSxrQkFBWTtBQUNsQixRQUFJLE1BQU0sQ0FBQztBQUNYLFFBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUU7QUFDdkIsWUFBTSxHQUFHOztVQUFRLFNBQVMsRUFBQyxhQUFhLEVBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUUsRUFBQyxNQUFNLEVBQUUsU0FBUyxFQUFDLEFBQUM7O09BQXlCLENBQUM7S0FDbkgsTUFBTTtBQUNMLFlBQU0sR0FBRzs7VUFBUSxTQUFTLEVBQUMsVUFBVSxFQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQUFBQzs7T0FFMUQsQ0FBQztLQUNYOztBQUVELFdBQ0U7O1FBQUksU0FBUyxFQUFDLFlBQVk7TUFDeEI7OztRQUNFOzs7O1VBQVM7O2NBQU0sU0FBUyxFQUFDLGtCQUFrQixFQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQUFBQztZQUFFLElBQUksQ0FBQyx3QkFBd0IsRUFBRTtXQUFRO1NBQUk7UUFDeEksSUFBSSxDQUFDLHdCQUF3QixFQUFFO09BQzdCO01BQ0w7O1VBQUksS0FBSyxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUUsRUFBQyxTQUFTLEVBQUUsT0FBTyxFQUFDLEFBQUM7UUFDekMsTUFBTTtPQUNKO0tBQ0YsQ0FDTDtHQUNIOztBQUVELG1CQUFpQixFQUFFLDZCQUFZO0FBQzdCLEtBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ2xDO0NBQ0YsQ0FBQyxDQUFDIiwiZmlsZSI6ImJ1aWxkL2pzL3RlbXBsYXRlcy9WZXJzaW9uUm93LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgJCAqL1xuXG5cbi8qKlxuICogQSBzaW5nbGUgcm93IGluIHRoZSBWZXJzaW9uSGlzdG9yeSBkaWFsb2csIGRlc2NyaWJpbmcgb25lIHZlcnNpb24gb2YgYSBwcm9qZWN0LlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgcHJvcFR5cGVzOiB7XG4gICAgbGFzdE1vZGlmaWVkOiBSZWFjdC5Qcm9wVHlwZXMuaW5zdGFuY2VPZihEYXRlKSxcbiAgICBpc0xhdGVzdDogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gICAgb25DaG9vc2U6IFJlYWN0LlByb3BUeXBlcy5mdW5jXG4gIH0sXG5cbiAgZ2V0TGFzdE1vZGlmaWVkVGltZXN0YW1wOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRpbWVzdGFtcCA9IHRoaXMucHJvcHMubGFzdE1vZGlmaWVkO1xuICAgIGlmICh0aW1lc3RhbXAudG9Mb2NhbGVTdHJpbmcpIHtcbiAgICAgIHJldHVybiB0aW1lc3RhbXAudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRpbWVzdGFtcC50b1N0cmluZygpO1xuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBidXR0b247XG4gICAgaWYgKHRoaXMucHJvcHMuaXNMYXRlc3QpIHtcbiAgICAgIGJ1dHRvbiA9IDxidXR0b24gY2xhc3NOYW1lPVwiYnRuLWRlZmF1bHRcIiBkaXNhYmxlZD1cImRpc2FibGVkXCIgc3R5bGU9e3tjdXJzb3I6IFwiZGVmYXVsdFwifX0+Q3VycmVudCBWZXJzaW9uPC9idXR0b24+O1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b24gPSA8YnV0dG9uIGNsYXNzTmFtZT1cImJ0bi1pbmZvXCIgb25DbGljaz17dGhpcy5wcm9wcy5vbkNob29zZX0+XG4gICAgICAgIFJlc3RvcmUgdGhpcyBWZXJzaW9uXG4gICAgICA8L2J1dHRvbj47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDx0ciBjbGFzc05hbWU9XCJ2ZXJzaW9uUm93XCI+XG4gICAgICAgIDx0ZD5cbiAgICAgICAgICA8cD5TYXZlZCA8dGltZSBjbGFzc05hbWU9XCJ2ZXJzaW9uVGltZXN0YW1wXCIgZGF0ZVRpbWU9e3RoaXMucHJvcHMubGFzdE1vZGlmaWVkLnRvSVNPU3RyaW5nKCl9Pnt0aGlzLmdldExhc3RNb2RpZmllZFRpbWVzdGFtcCgpfTwvdGltZT48L3A+XG4gICAgICAgICAge3RoaXMuZ2V0TGFzdE1vZGlmaWVkVGltZXN0YW1wKCl9XG4gICAgICAgIDwvdGQ+XG4gICAgICAgIDx0ZCB3aWR0aD1cIjI1MFwiIHN0eWxlPXt7dGV4dEFsaWduOiAncmlnaHQnfX0+XG4gICAgICAgICAge2J1dHRvbn1cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvdHI+XG4gICAgKTtcbiAgfSxcblxuICBjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24gKCkge1xuICAgICQoJy52ZXJzaW9uVGltZXN0YW1wJykudGltZWFnbygpO1xuICB9XG59KTtcbiJdfQ==","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionRow.jsx","sourceRoot":"file://localhost","sourceFile":"build/js/templates/VersionRow.jsx"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/alert.jsx":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/alert.jsx","source":"/* global $ */\n\n/**\n * Simple boot-strapped style alert.\n */\n'use strict';\n\nmodule.exports = React.createClass({\n  displayName: 'exports',\n\n  propTypes: {\n    body: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]).isRequired,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n    onClose: React.PropTypes.func.isRequired\n  },\n\n  render: function render() {\n    var style = $.extend({}, {\n      position: 'absolute',\n      zIndex: 1000\n    }, this.props.style);\n\n    return React.createElement(\n      'div',\n      { style: style },\n      React.createElement(\n        'div',\n        { className: \"alert fade in \" + (this.props.className || '') },\n        React.createElement(\n          'button',\n          { type: 'button',\n            className: 'alert-button close',\n            style: { margin: 0 } },\n          React.createElement(\n            'span',\n            { onClick: this.props.onClose },\n            '×'\n          )\n        ),\n        this.props.body\n      )\n    );\n  }\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL3RlbXBsYXRlcy9hbGVydC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU1BLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQzs7O0FBQ2pDLFdBQVMsRUFBRTtBQUNULFFBQUksRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUM5QixLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFDdEIsS0FBSyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQ3hCLENBQUMsQ0FBQyxVQUFVO0FBQ2IsYUFBUyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTTtBQUNqQyxTQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNO0FBQzdCLFdBQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVO0dBQ3pDOztBQUVELFFBQU0sRUFBRSxrQkFBWTtBQUNsQixRQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtBQUN2QixjQUFRLEVBQUUsVUFBVTtBQUNwQixZQUFNLEVBQUUsSUFBSTtLQUNiLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFckIsV0FDRTs7UUFBSyxLQUFLLEVBQUUsS0FBSyxBQUFDO01BQ2hCOztVQUFLLFNBQVMsRUFBRSxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUEsQUFBQyxBQUFDO1FBQzlEOztZQUFRLElBQUksRUFBQyxRQUFRO0FBQ25CLHFCQUFTLEVBQUMsb0JBQW9CO0FBQzlCLGlCQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEFBQUM7VUFDckI7O2NBQU0sT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxBQUFDOztXQUFlO1NBQzFDO1FBQ1IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJO09BQ1o7S0FDRixDQUNOO0dBQ0g7Q0FDRixDQUFDLENBQUMiLCJmaWxlIjoiYnVpbGQvanMvdGVtcGxhdGVzL2FsZXJ0LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCAkICovXG5cblxuLyoqXG4gKiBTaW1wbGUgYm9vdC1zdHJhcHBlZCBzdHlsZSBhbGVydC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gIHByb3BUeXBlczoge1xuICAgIGJvZHk6IFJlYWN0LlByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgIFJlYWN0LlByb3BUeXBlcy5lbGVtZW50XG4gICAgXSkuaXNSZXF1aXJlZCxcbiAgICBjbGFzc05hbWU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcsXG4gICAgc3R5bGU6IFJlYWN0LlByb3BUeXBlcy5vYmplY3QsXG4gICAgb25DbG9zZTogUmVhY3QuUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdHlsZSA9ICQuZXh0ZW5kKHt9LCB7XG4gICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgIHpJbmRleDogMTAwMFxuICAgIH0sIHRoaXMucHJvcHMuc3R5bGUpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgc3R5bGU9e3N0eWxlfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wiYWxlcnQgZmFkZSBpbiBcIiArICh0aGlzLnByb3BzLmNsYXNzTmFtZSB8fCAnJyl9PlxuICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJhbGVydC1idXR0b24gY2xvc2VcIlxuICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luOiAwIH19PlxuICAgICAgICAgICAgPHNwYW4gb25DbGljaz17dGhpcy5wcm9wcy5vbkNsb3NlfT4mdGltZXM7PC9zcGFuPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIHt0aGlzLnByb3BzLmJvZHl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG4iXX0=","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/alert.jsx","sourceRoot":"file://localhost","sourceFile":"build/js/templates/alert.jsx"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/builder.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/builder.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div><span>Instructions: </span><textarea type=\"text\" name=\"instructions\"></textarea></div>\\n<div><span>Level Name: </span><textarea type=\"text\" name=\"level_name\"></textarea></div>\\n<button id=\"create-level-button\" class=\"launch\">\\n  Create Level\\n</button>\\n<div id=\"builder-error\"></div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/builder.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/builder.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale'); ; buf.push('\\n\\n');3; if (data.ok) {; buf.push('  <div class=\"farSide\" style=\"padding: 1ex 3ex 0\">\\n    <button id=\"ok-button\" class=\"secondary\">\\n      ', escape((5,  msg.dialogOK() )), '\\n    </button>\\n  </div>\\n');8; }; buf.push('\\n');9; if (data.cancelText) {; buf.push('<button id=\"again-button\" class=\"', escape((9,  data.cancelButtonClass || '' )), '\">\\n    ', escape((10,  data.cancelText )), '\\n</button>\\n');12; }; buf.push('\\n');13; if (data.confirmText) {; buf.push('<button id=\"confirm-button\" class=\"launch\" style=\"float: right\">\\n    ', escape((14,  data.confirmText )), '\\n</button>\\n');16; }; buf.push('\\n');17; if (data.previousLevel) {; buf.push('  <button id=\"back-button\" class=\"launch\">\\n    ', escape((18,  msg.backToPreviousLevel() )), '\\n  </button>\\n');20; }; buf.push('\\n');21; if (data.tryAgain) {; buf.push('  ');21; if (data.isK1 && !data.freePlay) {; buf.push('    <div id=\"again-button\" class=\"launch arrow-container arrow-left\">\\n      <div class=\"arrow-head\"><img src=\"', escape((22,  data.assetUrl('media/tryagain-arrow-head.png') )), '\" alt=\"Arrowhead\" width=\"67\" height=\"130\"/></div>\\n      <div class=\"arrow-text\">', escape((23,  data.tryAgain )), '</div>\\n    </div>\\n  ');25; } else {; buf.push('    ');25; if (data.shouldPromptForHint) {; buf.push('      <button id=\"hint-request-button\" class=\"launch\">\\n        ', escape((26,  msg.hintRequest() )), '\\n      </button>\\n    ');28; } ; buf.push('\\n    <button id=\"again-button\" class=\"launch\">\\n      ', escape((30,  data.tryAgain )), '\\n    </button>\\n  ');32; }; buf.push('');32; }; buf.push('\\n');33; if (data.nextLevel) {; buf.push('  ');33; if (data.isK1 && !data.freePlay) {; buf.push('    <div id=\"continue-button\" class=\"launch arrow-container arrow-right\">\\n      <div class=\"arrow-head\"><img src=\"', escape((34,  data.assetUrl('media/next-arrow-head.png') )), '\" alt=\"Arrowhead\" width=\"66\" height=\"130\"/></div>\\n      <div class=\"arrow-text\">', escape((35,  data.continueText )), '</div>\\n    </div>\\n  ');37; } else {; buf.push('    <button id=\"continue-button\" class=\"launch\" style=\"float: right\">\\n      ', escape((38,  data.continueText )), '\\n    </button>\\n  ');40; }; buf.push('');40; }; buf.push('<div class=\"after-feedback-buttons\"/>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/buttons.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/code.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/code.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div class=\"generated-code-container\">\\n  <p class=\"generatedCodeMessage\">', (2,  message ), '</p>\\n  <pre class=\"generatedCode\">', escape((3,  code )), '</pre>\\n</div>\\n\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/code.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/code.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/instructions.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/instructions.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; if (!locals.renderedMarkdown) { /** if md, rendered in header instead */; buf.push('  <p class=\\'dialog-title\\'>', escape((1,  locals.puzzleTitle )), '</p>\\n');2; }; buf.push('');2; if (locals.renderedMarkdown) {; buf.push('  <div class=\\'instructions-markdown');2; if (locals.markdownClassicMargins) {; buf.push(' classic-margins');2; }; buf.push('\\'>', (2,  locals.renderedMarkdown ), '</div>');2; } else {; buf.push('  ');2; if (locals.instructions) {; buf.push('    <p>', escape((2,  locals.instructions )), '</p>\\n  ');3; }; buf.push('  ');3; if (locals.instructions2) {; buf.push('    <p class=\"instructions2\">', escape((3,  locals.instructions2 )), '</p>\\n  ');4; }; buf.push('');4; }; buf.push('');4; if (locals.aniGifURL) {; buf.push('  <img class=\"aniGif example-image\" src=\\'', escape((4,  locals.aniGifURL )), '\\'/>\\n');5; }; buf.push(''); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/instructions.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/instructions.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/learn.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/learn.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale') ; buf.push('\\n\\n');3; var root = location.protocol + '//' + location.host.replace('learn\\.', '').replace('studio\\.', ''); \n; buf.push('\\n\\n<div id=\"learn\">\\n\\n  <h1><a href=\"', escape((7,  root )), '\">', escape((7,  msg.wantToLearn() )), '</a></h1>\\n  <a href=\"', escape((8,  root )), '\"><img id=\"learn-to-code\" src=\"', escape((8,  assetUrl('media/promo.png') )), '\"></a>\\n  <a href=\"', escape((9,  root )), '\">', escape((9,  msg.watchVideo() )), '</a>\\n  <a href=\"', escape((10,  root )), '\">', escape((10,  msg.tryHOC() )), '</a>\\n  <a href=\"', escape((11,  location.protocol + '//' + location.host \n)), '\">', escape((11,  msg.signup() )), '</a>\\n\\n</div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/learn.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/learn.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/makeYourOwn.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/makeYourOwn.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale') ; buf.push('\\n\\n<div id=\"make-your-own\">\\n\\n  <h1><a href=', escape((5,  data.makeUrl )), '>', escape((5,  data.makeString )), '</a></h1>\\n  <a href=', escape((6,  data.makeUrl )), '><img src=', escape((6,  data.makeImage )), '></a>\\n\\n</div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/makeYourOwn.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/makeYourOwn.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/page.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/page.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1;\n  var msg = require('../locale');\n  var hideRunButton = locals.hideRunButton || false;\n; buf.push('\\n\\n<div id=\"rotateContainer\" style=\"background-image: url(', escape((6,  assetUrl('media/turnphone_horizontal.png') )), ')\">\\n  <div id=\"rotateText\">\\n    <p>', escape((8,  msg.rotateText() )), '<br>', escape((8,  msg.orientationLock() )), '</p>\\n  </div>\\n</div>\\n\\n');12; var gameButtons = function() {; buf.push('  <div id=\"gameButtons\">\\n    <button id=\"runButton\" class=\"launch blocklyLaunch ', escape((13,  hideRunButton ? 'invisible' : '')), '\">\\n      <div>', escape((14,  msg.runProgram() )), '</div>\\n      <img src=\"', escape((15,  assetUrl('media/1x1.gif') )), '\" class=\"run26\"/>\\n    </button>\\n    <button id=\"resetButton\" class=\"launch blocklyLaunch\" style=\"display: none\">\\n      <div>', escape((18,  msg.resetProgram() )), '</div>\\n      <img src=\"', escape((19,  assetUrl('media/1x1.gif') )), '\" class=\"reset26\"/>\\n    </button>\\n    ');21; if (data.controls) { ; buf.push('\\n    ', (22,  data.controls ), '\\n    ');23; } ; buf.push('\\n    ');24; if (!data.pinWorkspaceToBottom && data.extraControlRows) { ; buf.push('\\n    ', (25,  data.extraControlRows ), '\\n    ');26; } ; buf.push('\\n  </div>\\n');28; };; buf.push('\\n<div id=\"visualizationColumn\">\\n  ');30; if (data.hasDesignMode) { ; buf.push('\\n    <div id=\"designToggleRow\"></div>\\n  ');32; } ; buf.push('\\n\\n  <div id=\"visualization\">\\n    ', (35,  data.visualization ), '\\n  </div>\\n\\n  ');38; gameButtons() ; buf.push('\\n\\n  <div id=\"belowVisualization\">\\n\\n    <div id=\"bubble\" class=\"clearfix\">\\n      <table id=\"prompt-table\">\\n        <tr>\\n          <td id=\"prompt-icon-cell\" style=\"display: none\">\\n            <img id=\"prompt-icon\"/>\\n          </td>\\n          <td id=\"prompt-cell\">\\n            <p id=\"prompt\">\\n            <p id=\"prompt2\" style=\"display:none\">\\n            </p>\\n          </td>\\n        </tr>\\n      </table>\\n      ');55; if (data.inputOutputTable) { ; buf.push('\\n      <div id=\"input-table\">\\n        <table>\\n          <tr>\\n            <th>Input</th>\\n            <th>Output</th>\\n          </tr>\\n          ');62; for (var i = 0; i < data.inputOutputTable.length; i++) { ; buf.push('\\n          <tr>\\n            <td>', (64,  data.inputOutputTable[i][0] ), '</td>\\n            <td>', (65,  data.inputOutputTable[i][1] ), '</td>\\n          </tr>\\n          ');67; } ; buf.push('\\n        </table>\\n      </div>\\n      ');70; } ; buf.push('\\n      <div id=\"ani-gif-preview-wrapper\">\\n        <div id=\"ani-gif-preview\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\"visualizationResizeBar\" class=\"fa fa-ellipsis-v\">\\n</div>\\n\\n<div id=\"codeWorkspace\">\\n  <div id=\"codeWorkspaceWrapper\">\\n    <div id=\"headers\" dir=\"', escape((84,  data.localeDirection )), '\">\\n      <div id=\"codeModeHeaders\">\\n        <div id=\"toolbox-header\" class=\"workspace-header\">\\n          <i id=\"hide-toolbox-icon\" style=\"display:none;\" class=\"fa fa-chevron-circle-right\"></i>\\n          <span>', escape((88,  data.editCode ? msg.toolboxHeaderDroplet() : msg.toolboxHeader() )), '</span>\\n        </div>\\n        <div id=\"show-toolbox-header\" class=\"workspace-header\" style=\"display:none;\">\\n          <i id=\"show-toolbox-icon\" class=\"fa fa-chevron-circle-right\"></i>\\n          <span>', escape((92,  msg.showToolbox() )), '</span>\\n        </div>\\n        <div id=\"show-code-header\" class=\"workspace-header workspace-header-button\"><span><img src=\"', escape((94,  assetUrl('media/applab/blocks_glyph.gif') )), '\" class=\"blocks-glyph\" /><i class=\"fa fa-code\"></i>', escape((94,  msg.showCodeHeader() )), '</span></div>\\n        ');95; if (!data.readonlyWorkspace) { ; buf.push('\\n          <div id=\"clear-puzzle-header\" class=\"workspace-header workspace-header-button\"><span><i class=\"fa fa-undo\"></i>', escape((96,  msg.clearPuzzle() )), '</span></div>\\n        ');97; } ; buf.push('\\n        <div id=\"versions-header\" class=\"workspace-header workspace-header-button\"><span><i class=\"fa fa-clock-o\"></i>', escape((98,  msg.showVersionsHeader() )), '</span></div>\\n        <div id=\"workspace-header\" class=\"workspace-header\">\\n          <span id=\"workspace-header-span\">\\n            ', escape((101,  data.readonlyWorkspace ? msg.readonlyWorkspaceHeader() : msg.workspaceHeaderShort() )), '\\n          </span>\\n          <div id=\"blockCounter\">\\n            <div id=\"blockUsed\" class=', escape((104,  data.blockCounterClass )), '>\\n              ', escape((105,  data.blockUsed )), '\\n            </div>\\n            <span>/</span>\\n            <span id=\"idealBlockNumber\">', escape((108,  data.idealBlockNumber )), '</span>\\n            <span> ', escape((109,  msg.blocks() )), '</span>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    ');114; if (data.editCode) { ; buf.push('\\n      <div id=\"codeTextbox\"></div>\\n    ');116; } ; buf.push('\\n    ');117; if (data.pinWorkspaceToBottom && data.extraControlRows) { ; buf.push('\\n    ', (118,  data.extraControlRows ), '\\n    ');119; } ; buf.push('\\n  </div>\\n  ');121; if (data.hasDesignMode) { ; buf.push('\\n    <div id=\"designWorkspace\" style=\"display:none;\">\\n    </div>\\n  ');124; } ; buf.push('\\n</div>\\n\\n<div class=\"clear\"></div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/page.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/page.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/puzzleRating.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/puzzleRating.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<hr>\\n<p>Did you like this puzzle?</p>\\n\\n<a class=\"puzzle-rating-btn\" id=\"like\" data-value=\"1\">\\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\n      width=\"27px\" height=\"27px\" viewBox=\"0 0 26.055 21.058\" enable-background=\"new 0 0 26.055 21.058\" xml:space=\"preserve\" value=\"1\">\\n    <path d=\"M14.426,2.5c0.986-1.348,2.83-2.5,5.092-2.5c3.613,0,6.537,3.044,6.537,6.537\\n        c0,2.357-1.076,3.709-1.894,4.525c-0.941,0.941-8.082,8.082-9.113,9.113c-1.244,1.243-3.019,1.137-4.246-0.09\\n        c-1.314-1.314-7.158-7.158-9.131-9.131C0.408,9.693,0,8.113,0,6.537C0,2.926,3.197,0,6.537,0c2.451,0,4.438,1.508,5.188,2.535\\n        C12.4,3.459,13.643,3.564,14.426,2.5z\"/>\\n  </svg>\\n</a>\\n\\n<a class=\"puzzle-rating-btn\" id=\"dislike\" data-value=\"0\">\\n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\\n      width=\"27px\" height=\"27px\" viewBox=\"382.321 292.82 26.37 26.371\" enable-background=\"new 382.321 292.82 26.37 26.371\"\\n      xml:space=\"preserve\">\\n    <path d=\"M395.506,292.82c-7.282,0.002-13.184,5.904-13.185,13.185c0.001,7.283,5.902,13.184,13.185,13.186\\n        c7.281-0.002,13.183-5.902,13.185-13.186C408.689,298.725,402.787,292.822,395.506,292.82z M402.5,313\\n        c-1.795,1.793-4.257,2.896-6.994,2.898c-2.737-0.002-5.199-1.105-6.994-2.898c-1.794-1.795-2.897-4.258-2.897-6.994\\n        s1.103-5.199,2.897-6.994c1.795-1.793,4.257-2.897,6.994-2.897s5.199,1.104,6.994,2.897c1.792,1.795,2.896,4.258,2.896,6.994\\n        S404.292,311.205,402.5,313z M391.317,304.951c1.054,0,1.907-0.854,1.907-1.906c0-1.053-0.854-1.906-1.907-1.906\\n        c-1.054,0-1.907,0.854-1.907,1.906C389.41,304.098,390.264,304.951,391.317,304.951z M399.691,304.951\\n        c1.053,0,1.906-0.854,1.906-1.906c0-1.053-0.853-1.906-1.906-1.906s-1.907,0.854-1.907,1.906\\n        C397.784,304.098,398.639,304.951,399.691,304.951z M391.773,311.928c1.037-1.035,2.379-1.543,3.739-1.545\\n        c1.352,0.002,2.689,0.512,3.724,1.545c0.642,0.643,1.685,0.643,2.328,0c0.645-0.643,0.645-1.686,0-2.33\\n        c-1.665-1.666-3.864-2.51-6.052-2.508h-0.008c-2.185,0-4.39,0.838-6.06,2.51c-0.642,0.643-0.643,1.686,0,2.328\\n        C390.088,312.571,391.131,312.571,391.773,311.928z\"/>\\n  </svg>\\n</a>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/puzzleRating.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/puzzleRating.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/readonly.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/readonly.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<!DOCTYPE html>\\n<html dir=\"', escape((2,  options.localeDirection )), '\">\\n<head>\\n  <meta charset=\"utf-8\">\\n  <title>Blockly</title>\\n  <link href=\"', escape((6,  assetUrl('css/common.css') )), '\" media=\"all\" rel=\"stylesheet\">\\n  <script type=\"text/javascript\" src=\"', escape((7,  assetUrl('js/blockly.js') )), '\"></script>\\n  <script type=\"text/javascript\" src=\"', escape((8,  assetUrl('js/' + options.locale + '/blockly_locale.js') )), '\"></script>\\n  <script type=\"text/javascript\" src=\"', escape((9,  assetUrl('js/common.js') )), '\"></script>\\n  <script type=\"text/javascript\" src=\"', escape((10,  assetUrl('js/' + options.locale + '/common_locale.js') )), '\"></script>\\n  <script type=\"text/javascript\" src=\"', escape((11,  assetUrl('js/' + options.locale + '/' + app + '_locale.js') )), '\"></script>\\n  <script type=\"text/javascript\" src=\"', escape((12,  assetUrl('js/' + app + '.js') )), '\"></script>\\n  <script type=\"text/javascript\">\\n    ');14; // delay to onload to fix IE9. \n; buf.push('\\n    window.onload = function() {\\n      ', escape((16,  app )), 'Main(', (16,  JSON.stringify(options) ), ');\\n    };\\n  </script>\\n</head>\\n<body class=\"readonly\">\\n  <div id=\"codeWorkspace\"></div>\\n</body>\\n</html>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/readonly.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/readonly.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/shareFailure.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/shareFailure.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<p id=\"share-fail-explanation\">', escape((1,  shareFailure.message )), '</p>\\n\\n');3; if (shareFailure.contents) { ; buf.push('\\n  <div class=\"share-fail-excerpt\">\\n    <pre class=\"generatedCode\">', escape((5,  shareFailure.contents )), '</pre>\\n  </div>\\n');7; } ; buf.push('\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/shareFailure.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/shareFailure.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/sharing.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/sharing.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale'); ; buf.push('\\n');2; if (options.feedbackImage) { ; buf.push('\\n  <div class=\"sharing\">\\n    <img class=\"feedback-image\" src=\"', escape((4,  options.feedbackImage )), '\">\\n  </div>\\n');6; } ; buf.push('\\n\\n<div class=\"sharing\">\\n  <div class=\"social-buttons\">\\n  ');10; if (!options.onMainPage && !options.disablePrinting) { ; buf.push('\\n    <button id=\"print-button\">\\n      ', escape((12,  msg.print() )), '\\n    </button>\\n  ');14; } ; buf.push('\\n');15; if (options.alreadySaved) { ; buf.push('\\n  <button class=\"saved-to-gallery\" disabled>\\n    ', escape((17,  msg.savedToGallery() )), '\\n  </button>\\n');19; } else if (options.saveToGalleryUrl && !options.disableSaveToGallery) { ; buf.push('\\n  <button id=\"save-to-gallery-button\" class=\"launch\">\\n    ', escape((21,  msg.saveToGallery() )), '\\n  </button>\\n');23; } ; buf.push('\\n  </div>\\n\\n');26; if (options.response && options.response.level_source) { ; buf.push('\\n  ');27; if (options.appStrings && options.appStrings.sharingText) { ; buf.push('\\n    <div>', escape((28,  options.appStrings.sharingText )), '</div>\\n  ');29; } ; buf.push('\\n\\n  <div>\\n    <input type=\"text\" id=\"sharing-input\" value=', escape((32,  options.response.level_source )), ' readonly>\\n  </div>\\n\\n  <div class=\\'social-buttons\\'>\\n    ');36; if (options.facebookUrl) {; buf.push('      <a href=\\'', escape((36,  options.facebookUrl )), '\\' target=\"_blank\" class=\"popup-window\">\\n        <img src=\\'', escape((37,  options.assetUrl(\"media/facebook_purple.png\") )), '\\' />\\n      </a>\\n    ');39; }; buf.push('\\n    ');40; if (options.twitterUrl) {; buf.push('      <a href=\\'', escape((40,  options.twitterUrl )), '\\' target=\"_blank\" class=\"popup-window\">\\n        <img src=\\'', escape((41,  options.assetUrl(\"media/twitter_purple.png\") )), '\\' />\\n      </a>\\n    ');43; }; buf.push('    ');43; if (options.sendToPhone) {; buf.push('      <a id=\"sharing-phone\" href=\"\" onClick=\"return false;\">\\n        <img src=\\'', escape((44,  options.assetUrl(\"media/phone_purple.png\") )), '\\' />\\n      </a>\\n    ');46; }; buf.push('    ');46; if (options.level.shapewaysUrl && !options.onMainPage && options.sendToPhone) {; buf.push('      <a id=\"sharing-shapeways\" href=\"\" onClick=\"return false;\">\\n        <img src=\\'', escape((47,  options.assetUrl(\"media/shapeways_purple.png\") )), '\\' />\\n      </a>\\n    ');49; }; buf.push('  </div>\\n');50; } ; buf.push('\\n</div>\\n<div id=\"send-to-phone\" class=\"sharing\" style=\"display: none\">\\n  <label for=\"phone\">Enter a US phone number:</label>\\n  <input type=\"text\" id=\"phone\" name=\"phone\" />\\n  <button id=\"phone-submit\" onClick=\"return false;\">Send</button>\\n  <div id=\"phone-charges\">A text message will be sent via <a href=\"http://twilio.com\">Twilio</a>. Charges may apply to the recipient.</div>\\n</div>\\n');58; if (options.response && options.response.level_source && options.level.shapewaysUrl) {; buf.push('  <div id=\"shapeways-message\" class=\"sharing\" style=\"display: none\">\\n    <div id=\"shapeways-message-body\">You\\'ll be redirected to Shapeways.com to order and purchase a 3D print.</div>\\n    <button id=\"shapeways-print-go-button\" onclick=\"window.open(\\'', escape((60,  options.level.shapewaysUrl )), '\\', \\'_blank\\')\">Go to Shapeways</button>\\n    <div id=\"shapeways-message-body-disclaimer\">Students under 13 years need a parent or guardian to do 3D printing.</div>\\n  </div>\\n');63; }; buf.push(''); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/sharing.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/sharing.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/showCode.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/showCode.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('');1; var msg = require('../locale'); ; buf.push('\\n\\n<p id=\"num-lines-of-code\" class=\"lines-of-code-message\">\\n  ', escape((4,  msg.numLinesOfCodeWritten({ numLines: numLinesWritten }) )), '\\n  <button id=\"show-code-button\" href=\"#\">\\n    ', escape((6,  msg.showGeneratedCode() )), '\\n  </button>\\n</p>\\n\\n');10; if (totalNumLinesWritten !== 0) { ; buf.push('\\n  <p id=\"total-num-lines-of-code\" class=\"lines-of-code-message\">\\n    ', escape((12,  msg.totalNumLinesOfCodeWritten({ numLines: totalNumLinesWritten }) )), '\\n  </p>\\n');14; } ; buf.push('\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"../locale":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js","ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/showCode.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/showCode.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/trophy.html.ejs":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/trophy.html.ejs","source":"module.exports= (function() {\n  var t = function anonymous(locals, filters, escape\n/**/) {\nescape = escape || function (html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\nvar buf = [];\nwith (locals || {}) { (function(){ \n buf.push('<div class=\\'trophy\\'><img class=\\'trophyimg\\' src=\\'', escape((1,  img_url )), '\\'><br>', escape((1,  concept_name )), '</div>\\n'); })();\n} \nreturn buf.join('');\n};\n  return function(locals) {\n    return t(locals, require(\"ejs\").filters);\n  }\n}());","deps":{"ejs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/trophy.html.ejs","sourceRoot":"file://localhost","sourceFile":"build/js/templates/trophy.html.ejs"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","source":"/* global define */\n\n'use strict';\n\nvar xml = require('./xml');\nvar savedAmd;\n\n// Do some hackery to make it so that lodash doesn't think it's being loaded\n// via require js\nif (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n  savedAmd = define.amd;\n  define.amd = false;\n}\n\n// get lodash\nvar _ = require('./lodash');\nvar Hammer = require('./hammer');\n\n// undo hackery\nif (typeof define == 'function' && savedAmd) {\n  define.amd = savedAmd;\n  savedAmd = null;\n}\n\nexports.getLodash = function () {\n  return _;\n};\n\nexports.getHammer = function () {\n  return Hammer;\n};\n\nexports.shallowCopy = function (source) {\n  var result = {};\n  for (var prop in source) {\n    result[prop] = source[prop];\n  }\n\n  return result;\n};\n\n/**\n * Returns a clone of the object, stripping any functions on it.\n */\nexports.cloneWithoutFunctions = function (object) {\n  return JSON.parse(JSON.stringify(object));\n};\n\n/**\n * Returns a new object with the properties from defaults overriden by any\n * properties in options. Leaves defaults and options unchanged.\n * NOTE: For new code, use $.extend({}, defaults, options) instead\n */\nexports.extend = function (defaults, options) {\n  var finalOptions = exports.shallowCopy(defaults);\n  for (var prop in options) {\n    finalOptions[prop] = options[prop];\n  }\n\n  return finalOptions;\n};\n\nexports.escapeHtml = function (unsafe) {\n  return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n};\n\n/**\n * Version of modulo which, unlike javascript's `%` operator,\n * will always return a positive remainder.\n * @param number\n * @param mod\n */\nexports.mod = function (number, mod) {\n  return (number % mod + mod) % mod;\n};\n\n/**\n * Generates an array of integers from start to end inclusive\n */\nexports.range = function (start, end) {\n  var ints = [];\n  for (var i = start; i <= end; i++) {\n    ints.push(i);\n  }\n  return ints;\n};\n\n/**\n * Given two functions, generates a function that returns the result of the\n * second function if and only if the first function returns true\n */\nexports.executeIfConditional = function (conditional, fn) {\n  return function () {\n    if (conditional()) {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n\n/**\n * Removes all single and double quotes from a string\n * @param inputString\n * @returns {string} string without quotes\n */\nexports.stripQuotes = function (inputString) {\n  return inputString.replace(/[\"']/g, \"\");\n};\n\n/**\n * Defines an inheritance relationship between parent class and this class.\n */\nFunction.prototype.inherits = function (parent) {\n  this.prototype = Object.create(parent.prototype);\n  this.prototype.constructor = this;\n  this.superPrototype = parent.prototype;\n};\n\n/**\n * Wrap a couple of our Blockly number validators to allow for ???.  This is\n * done so that level builders can specify required blocks with wildcard fields.\n */\nexports.wrapNumberValidatorsForLevelBuilder = function () {\n  var nonNeg = Blockly.FieldTextInput.nonnegativeIntegerValidator;\n  var numVal = Blockly.FieldTextInput.numberValidator;\n\n  Blockly.FieldTextInput.nonnegativeIntegerValidator = function (text) {\n    if (text === '???') {\n      return text;\n    }\n    return nonNeg(text);\n  };\n\n  Blockly.FieldTextInput.numberValidator = function (text) {\n    if (text === '???') {\n      return text;\n    }\n    return numVal(text);\n  };\n};\n\n/**\n * Return a random key name from an object.\n *\n * Slightly modified from: http://stackoverflow.com/a/15106541\n */\n\nexports.randomKey = function (obj) {\n  var keys = Object.keys(obj);\n  return keys[keys.length * Math.random() << 0];\n};\n\n/**\n * Generate a random identifier in a format matching the RFC-4122 specification.\n *\n * Taken from\n * {@link http://byronsalau.com/blog/how-to-create-a-guid-uuid-in-javascript/}\n *\n * @see RFC-4122 standard {@link http://www.ietf.org/rfc/rfc4122.txt}\n *\n * @returns {string} RFC4122-compliant UUID\n */\nexports.createUuid = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\nexports.fireResizeEvent = function () {\n  var ev = document.createEvent('Event');\n  ev.initEvent('resize', true, true);\n  window.dispatchEvent(ev);\n};\n\n// ECMAScript 6 polyfill for String.prototype.repeat\n// Polyfill adapted from\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n//        /Global_Objects/String/repeat\nif (!String.prototype.repeat) {\n  /**\n   * The repeat() method constructs and returns a new string which contains\n   * the specified number of copies of the string on which it was called,\n   * concatenated together?\n   * @param {number} count\n   * @returns {string}\n   */\n  String.prototype.repeat = function (count) {\n    'use strict';\n    if (this === null) {\n      throw new TypeError('can\\'t convert ' + this + ' to object');\n    }\n    var str = '' + this;\n    count = +count;\n    if (count != count) {\n      count = 0;\n    }\n    if (count < 0) {\n      throw new RangeError('repeat count must be non-negative');\n    }\n    if (count == Infinity) {\n      throw new RangeError('repeat count must be less than infinity');\n    }\n    count = Math.floor(count);\n    if (str.length === 0 || count === 0) {\n      return '';\n    }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (august 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (str.length * count >= 1 << 28) {\n      throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n      if ((count & 1) === 1) {\n        rpt += str;\n      }\n      count >>>= 1;\n      if (count === 0) {\n        break;\n      }\n      str += str;\n    }\n    return rpt;\n  };\n}\n\n/**\n * Similar to val || defaultVal, except it's gated on whether or not val is\n * undefined instead of whether val is falsey.\n * @returns {*} val if not undefined, otherwise defaultVal\n */\nexports.valueOr = function (val, defaultVal) {\n  return val === undefined ? defaultVal : val;\n};\n\n/**\n * Attempts to analyze whether or not err represents infinite recursion having\n * occurred. This error differs per browser, and it's possible that we don't\n * properly discover all cases.\n * Note: Other languages probably have localized messages, meaning we won't\n * catch them.\n */\nexports.isInfiniteRecursionError = function (err) {\n  // Chrome/Safari: message ends in a period in Safari, not in Chrome\n  if (err instanceof RangeError && /^Maximum call stack size exceeded/.test(err.message)) {\n    return true;\n  }\n\n  // Firefox\n  /* jshint ignore:start */\n  // Linter doesn't like our use of InternalError, even though we gate on its\n  // existence.\n  if (typeof InternalError !== 'undefined' && err instanceof InternalError && err.message === 'too much recursion') {\n    return true;\n  }\n  /* jshint ignore:end */\n\n  // IE\n  if (err instanceof Error && err.message === 'Out of stack space') {\n    return true;\n  }\n\n  return false;\n};\n\n// TODO(dave): move this logic to dashboard.\nexports.getPegasusHost = function () {\n  switch (window.location.hostname) {\n    case 'studio.code.org':\n    case 'learn.code.org':\n      return 'code.org';\n    default:\n      var name = window.location.hostname.split('.')[0];\n      switch (name) {\n        case 'localhost':\n          return 'localhost.code.org:3000';\n        case 'development':\n        case 'staging':\n        case 'test':\n        case 'levelbuilder':\n          return name + '.code.org';\n        case 'staging-studio':\n          return 'staging.code.org';\n        case 'test-studio':\n          return 'test.code.org';\n        case 'levelbuilder-studio':\n          return 'levelbuilder.code.org';\n        default:\n          return null;\n      }\n  }\n};\n\n/**\n * IE9 throws an exception when trying to access the media field of a stylesheet\n */\nexports.browserSupportsCssMedia = function () {\n  var styleSheets = document.styleSheets;\n  for (var i = 0; i < styleSheets.length; i++) {\n    var rules = styleSheets[i].cssRules || styleSheets[i].rules;\n    try {\n      if (rules.length > 0) {\n        // see if we can access media\n        var media = rules[0].media;\n      }\n    } catch (e) {\n      return false;\n    }\n  }\n  return true;\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{"./xml":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","./lodash":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/lodash.js","./hammer":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/hammer.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js","sourceRoot":"file://localhost","sourceFile":"build/js/utils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","source":"// Serializes an XML DOM node to a string.\n'use strict';\n\nexports.serialize = function (node) {\n  var serializer = new XMLSerializer();\n  return serializer.serializeToString(node);\n};\n\n// Parses a single root element string, wrapping it in an <xml/> element\nexports.parseElement = function (text) {\n  var parser = new DOMParser();\n  text = text.trim();\n  var dom = text.indexOf('<xml') === 0 ? parser.parseFromString(text, 'text/xml') : parser.parseFromString('<xml>' + text + '</xml>', 'text/xml');\n  var errors = dom.getElementsByTagName(\"parsererror\");\n  var element = dom.firstChild;\n  if (!element) {\n    throw new Error('Nothing parsed');\n  }\n  if (errors.length > 0) {\n    throw new Error(exports.serialize(errors[0]));\n  }\n  if (element !== dom.lastChild) {\n    throw new Error('Parsed multiple elements');\n  }\n  return element;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkL2pzL3htbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxPQUFPLENBQUMsU0FBUyxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQ2pDLE1BQUksVUFBVSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7QUFDckMsU0FBTyxVQUFVLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUM7Q0FDM0MsQ0FBQzs7O0FBR0YsT0FBTyxDQUFDLFlBQVksR0FBRyxVQUFTLElBQUksRUFBRTtBQUNwQyxNQUFJLE1BQU0sR0FBRyxJQUFJLFNBQVMsRUFBRSxDQUFDO0FBQzdCLE1BQUksR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDbkIsTUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQ2hDLE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxHQUN4QyxNQUFNLENBQUMsZUFBZSxDQUFDLE9BQU8sR0FBRyxJQUFJLEdBQUcsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2xFLE1BQUksTUFBTSxHQUFHLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNyRCxNQUFJLE9BQU8sR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO0FBQzdCLE1BQUksQ0FBQyxPQUFPLEVBQUU7QUFDWixVQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7R0FDbkM7QUFDRCxNQUFJLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3JCLFVBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0dBQy9DO0FBQ0QsTUFBSSxPQUFPLEtBQUssR0FBRyxDQUFDLFNBQVMsRUFBRTtBQUM3QixVQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7R0FDN0M7QUFDRCxTQUFPLE9BQU8sQ0FBQztDQUNoQixDQUFDIiwiZmlsZSI6ImJ1aWxkL2pzL3htbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlcmlhbGl6ZXMgYW4gWE1MIERPTSBub2RlIHRvIGEgc3RyaW5nLlxuZXhwb3J0cy5zZXJpYWxpemUgPSBmdW5jdGlvbihub2RlKSB7XG4gIHZhciBzZXJpYWxpemVyID0gbmV3IFhNTFNlcmlhbGl6ZXIoKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuc2VyaWFsaXplVG9TdHJpbmcobm9kZSk7XG59O1xuXG4vLyBQYXJzZXMgYSBzaW5nbGUgcm9vdCBlbGVtZW50IHN0cmluZywgd3JhcHBpbmcgaXQgaW4gYW4gPHhtbC8+IGVsZW1lbnRcbmV4cG9ydHMucGFyc2VFbGVtZW50ID0gZnVuY3Rpb24odGV4dCkge1xuICB2YXIgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICB0ZXh0ID0gdGV4dC50cmltKCk7XG4gIHZhciBkb20gPSB0ZXh0LmluZGV4T2YoJzx4bWwnKSA9PT0gMCA/XG4gICAgICBwYXJzZXIucGFyc2VGcm9tU3RyaW5nKHRleHQsICd0ZXh0L3htbCcpIDpcbiAgICAgIHBhcnNlci5wYXJzZUZyb21TdHJpbmcoJzx4bWw+JyArIHRleHQgKyAnPC94bWw+JywgJ3RleHQveG1sJyk7XG4gIHZhciBlcnJvcnMgPSBkb20uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwYXJzZXJlcnJvclwiKTtcbiAgdmFyIGVsZW1lbnQgPSBkb20uZmlyc3RDaGlsZDtcbiAgaWYgKCFlbGVtZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb3RoaW5nIHBhcnNlZCcpO1xuICB9XG4gIGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihleHBvcnRzLnNlcmlhbGl6ZShlcnJvcnNbMF0pKTtcbiAgfVxuICBpZiAoZWxlbWVudCAhPT0gZG9tLmxhc3RDaGlsZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUGFyc2VkIG11bHRpcGxlIGVsZW1lbnRzJyk7XG4gIH1cbiAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuIl19","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js","sourceRoot":"file://localhost","sourceFile":"build/js/xml.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/lib/_empty.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/lib/_empty.js","source":"","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/lib/_empty.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/lib/_empty.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/path-browserify/index.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/path-browserify/index.js","source":"(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/path-browserify/index.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/path-browserify/index.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","source":"// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/process/browser.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/punycode/punycode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/punycode/punycode.js","source":"(function (global){\n/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/punycode/punycode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/punycode/punycode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/decode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/decode.js","source":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/decode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/querystring-es3/decode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/encode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/encode.js","source":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/encode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/querystring-es3/encode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/index.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/index.js","source":"'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","deps":{"./decode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/decode.js","./encode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/encode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/index.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/querystring-es3/index.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/url/url.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/url/url.js","source":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n","deps":{"punycode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/punycode/punycode.js","querystring":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/index.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/url/url.js","sourceRoot":"file://localhost","sourceFile":"node_modules/browserify/node_modules/url/url.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js","source":"\n/*!\n * EJS\n * Copyright(c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils')\n  , path = require('path')\n  , basename = path.basename\n  , dirname = path.dirname\n  , extname = path.extname\n  , join = path.join\n  , fs = require('fs')\n  , read = fs.readFileSync;\n\n/**\n * Filters.\n *\n * @type Object\n */\n\nvar filters = exports.filters = require('./filters');\n\n/**\n * Intermediate js cache.\n *\n * @type Object\n */\n\nvar cache = {};\n\n/**\n * Clear intermediate js cache.\n *\n * @api public\n */\n\nexports.clearCache = function(){\n  cache = {};\n};\n\n/**\n * Translate filtered code into function calls.\n *\n * @param {String} js\n * @return {String}\n * @api private\n */\n\nfunction filtered(js) {\n  return js.substr(1).split('|').reduce(function(js, filter){\n    var parts = filter.split(':')\n      , name = parts.shift()\n      , args = parts.join(':') || '';\n    if (args) args = ', ' + args;\n    return 'filters.' + name + '(' + js + args + ')';\n  });\n};\n\n/**\n * Re-throw the given `err` in context to the\n * `str` of ejs, `filename`, and `lineno`.\n *\n * @param {Error} err\n * @param {String} str\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nfunction rethrow(err, str, filename, lineno){\n  var lines = str.split('\\n')\n    , start = Math.max(lineno - 3, 0)\n    , end = Math.min(lines.length, lineno + 3);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n  \n  throw err;\n}\n\n/**\n * Parse the given `str` of ejs, returning the function body.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nvar parse = exports.parse = function(str, options){\n  var options = options || {}\n    , open = options.open || exports.open || '<%'\n    , close = options.close || exports.close || '%>'\n    , filename = options.filename\n    , compileDebug = options.compileDebug !== false\n    , buf = [];\n\n  buf.push('var buf = [];');\n  if (false !== options._with) buf.push('\\nwith (locals || {}) { (function(){ ');\n  buf.push('\\n buf.push(\\'');\n\n  var lineno = 1;\n\n  var consumeEOL = false;\n  for (var i = 0, len = str.length; i < len; ++i) {\n    if (str.slice(i, open.length + i) == open) {\n      i += open.length\n  \n      var prefix, postfix, line = (compileDebug ? '__stack.lineno=' : '') + lineno;\n      switch (str.substr(i, 1)) {\n        case '=':\n          prefix = \"', escape((\" + line + ', ';\n          postfix = \")), '\";\n          ++i;\n          break;\n        case '-':\n          prefix = \"', (\" + line + ', ';\n          postfix = \"), '\";\n          ++i;\n          break;\n        default:\n          prefix = \"');\" + line + ';';\n          postfix = \"; buf.push('\";\n      }\n\n      var end = str.indexOf(close, i)\n        , js = str.substring(i, end)\n        , start = i\n        , include = null\n        , n = 0;\n\n      if ('-' == js[js.length-1]){\n        js = js.substring(0, js.length - 2);\n        consumeEOL = true;\n      }\n\n      if (0 == js.trim().indexOf('include')) {\n        var name = js.trim().slice(7).trim();\n        if (!filename) throw new Error('filename option is required for includes');\n        var path = resolveInclude(name, filename);\n        include = read(path, 'utf8');\n        include = exports.parse(include, { filename: path, _with: false, open: open, close: close, compileDebug: compileDebug });\n        buf.push(\"' + (function(){\" + include + \"})() + '\");\n        js = '';\n      }\n\n      while (~(n = js.indexOf(\"\\n\", n))) n++, lineno++;\n      if (js.substr(0, 1) == ':') js = filtered(js);\n      if (js) {\n        if (js.lastIndexOf('//') > js.lastIndexOf('\\n')) js += '\\n';\n        buf.push(prefix, js, postfix);\n      }\n      i += end - start + close.length - 1;\n\n    } else if (str.substr(i, 1) == \"\\\\\") {\n      buf.push(\"\\\\\\\\\");\n    } else if (str.substr(i, 1) == \"'\") {\n      buf.push(\"\\\\'\");\n    } else if (str.substr(i, 1) == \"\\r\") {\n      // ignore\n    } else if (str.substr(i, 1) == \"\\n\") {\n      if (consumeEOL) {\n        consumeEOL = false;\n      } else {\n        buf.push(\"\\\\n\");\n        lineno++;\n      }\n    } else {\n      buf.push(str.substr(i, 1));\n    }\n  }\n\n  if (false !== options._with) buf.push(\"'); })();\\n} \\nreturn buf.join('');\")\n  else buf.push(\"');\\nreturn buf.join('');\");\n\n  return buf.join('');\n};\n\n/**\n * Compile the given `str` of ejs into a `Function`.\n *\n * @param {String} str\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nvar compile = exports.compile = function(str, options){\n  options = options || {};\n  var escape = options.escape || utils.escape;\n  \n  var input = JSON.stringify(str)\n    , compileDebug = options.compileDebug !== false\n    , client = options.client\n    , filename = options.filename\n        ? JSON.stringify(options.filename)\n        : 'undefined';\n  \n  if (compileDebug) {\n    // Adds the fancy stack trace meta info\n    str = [\n      'var __stack = { lineno: 1, input: ' + input + ', filename: ' + filename + ' };',\n      rethrow.toString(),\n      'try {',\n      exports.parse(str, options),\n      '} catch (err) {',\n      '  rethrow(err, __stack.input, __stack.filename, __stack.lineno);',\n      '}'\n    ].join(\"\\n\");\n  } else {\n    str = exports.parse(str, options);\n  }\n  \n  if (options.debug) console.log(str);\n  if (client) str = 'escape = escape || ' + escape.toString() + ';\\n' + str;\n\n  try {\n    var fn = new Function('locals, filters, escape', str);\n  } catch (err) {\n    if ('SyntaxError' == err.name) {\n      err.message += options.filename\n        ? ' in ' + filename\n        : ' while compiling ejs';\n    }\n    throw err;\n  }\n\n  if (client) return fn;\n\n  return function(locals){\n    return fn.call(this, locals, filters, escape);\n  }\n};\n\n/**\n * Render the given `str` of ejs.\n *\n * Options:\n *\n *   - `locals`          Local variables object\n *   - `cache`           Compiled functions are cached, requires `filename`\n *   - `filename`        Used by `cache` to key caches\n *   - `scope`           Function execution context\n *   - `debug`           Output generated function body\n *   - `open`            Open tag, defaulting to \"<%\"\n *   - `close`           Closing tag, defaulting to \"%>\"\n *\n * @param {String} str\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nexports.render = function(str, options){\n  var fn\n    , options = options || {};\n\n  if (options.cache) {\n    if (options.filename) {\n      fn = cache[options.filename] || (cache[options.filename] = compile(str, options));\n    } else {\n      throw new Error('\"cache\" option requires \"filename\".');\n    }\n  } else {\n    fn = compile(str, options);\n  }\n\n  options.__proto__ = options.locals;\n  return fn.call(options.scope, options);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `fn(err, str)`.\n *\n * @param {String} path\n * @param {Object|Function} options or callback\n * @param {Function} fn\n * @api public\n */\n\nexports.renderFile = function(path, options, fn){\n  var key = path + ':string';\n\n  if ('function' == typeof options) {\n    fn = options, options = {};\n  }\n\n  options.filename = path;\n\n  var str;\n  try {\n    str = options.cache\n      ? cache[key] || (cache[key] = read(path, 'utf8'))\n      : read(path, 'utf8');\n  } catch (err) {\n    fn(err);\n    return;\n  }\n  fn(null, exports.render(str, options));\n};\n\n/**\n * Resolve include `name` relative to `filename`.\n *\n * @param {String} name\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nfunction resolveInclude(name, filename) {\n  var path = join(dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) path += '.ejs';\n  return path;\n}\n\n// express support\n\nexports.__express = exports.renderFile;\n\n/**\n * Expose to require().\n */\n\nif (require.extensions) {\n  require.extensions['.ejs'] = function(module, filename) {\n    source = require('fs').readFileSync(filename, 'utf-8');\n    module._compile(compile(source, {}), filename);\n  };\n} else if (require.registerExtension) {\n  require.registerExtension('.ejs', function(src) {\n    return compile(src, {});\n  });\n}\n","deps":{"./utils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/utils.js","fs":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/lib/_empty.js","./filters":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/filters.js","path":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/path-browserify/index.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js","sourceRoot":"file://localhost","sourceFile":"node_modules/ejs/lib/ejs.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/filters.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/filters.js","source":"\n/*!\n * EJS - Filters\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * First element of the target `obj`.\n */\n\nexports.first = function(obj) {\n  return obj[0];\n};\n\n/**\n * Last element of the target `obj`.\n */\n\nexports.last = function(obj) {\n  return obj[obj.length - 1];\n};\n\n/**\n * Capitalize the first letter of the target `str`.\n */\n\nexports.capitalize = function(str){\n  str = String(str);\n  return str[0].toUpperCase() + str.substr(1, str.length);\n};\n\n/**\n * Downcase the target `str`.\n */\n\nexports.downcase = function(str){\n  return String(str).toLowerCase();\n};\n\n/**\n * Uppercase the target `str`.\n */\n\nexports.upcase = function(str){\n  return String(str).toUpperCase();\n};\n\n/**\n * Sort the target `obj`.\n */\n\nexports.sort = function(obj){\n  return Object.create(obj).sort();\n};\n\n/**\n * Sort the target `obj` by the given `prop` ascending.\n */\n\nexports.sort_by = function(obj, prop){\n  return Object.create(obj).sort(function(a, b){\n    a = a[prop], b = b[prop];\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  });\n};\n\n/**\n * Size or length of the target `obj`.\n */\n\nexports.size = exports.length = function(obj) {\n  return obj.length;\n};\n\n/**\n * Add `a` and `b`.\n */\n\nexports.plus = function(a, b){\n  return Number(a) + Number(b);\n};\n\n/**\n * Subtract `b` from `a`.\n */\n\nexports.minus = function(a, b){\n  return Number(a) - Number(b);\n};\n\n/**\n * Multiply `a` by `b`.\n */\n\nexports.times = function(a, b){\n  return Number(a) * Number(b);\n};\n\n/**\n * Divide `a` by `b`.\n */\n\nexports.divided_by = function(a, b){\n  return Number(a) / Number(b);\n};\n\n/**\n * Join `obj` with the given `str`.\n */\n\nexports.join = function(obj, str){\n  return obj.join(str || ', ');\n};\n\n/**\n * Truncate `str` to `len`.\n */\n\nexports.truncate = function(str, len){\n  str = String(str);\n  return str.substr(0, len);\n};\n\n/**\n * Truncate `str` to `n` words.\n */\n\nexports.truncate_words = function(str, n){\n  var str = String(str)\n    , words = str.split(/ +/);\n  return words.slice(0, n).join(' ');\n};\n\n/**\n * Replace `pattern` with `substitution` in `str`.\n */\n\nexports.replace = function(str, pattern, substitution){\n  return String(str).replace(pattern, substitution || '');\n};\n\n/**\n * Prepend `val` to `obj`.\n */\n\nexports.prepend = function(obj, val){\n  return Array.isArray(obj)\n    ? [val].concat(obj)\n    : val + obj;\n};\n\n/**\n * Append `val` to `obj`.\n */\n\nexports.append = function(obj, val){\n  return Array.isArray(obj)\n    ? obj.concat(val)\n    : obj + val;\n};\n\n/**\n * Map the given `prop`.\n */\n\nexports.map = function(arr, prop){\n  return arr.map(function(obj){\n    return obj[prop];\n  });\n};\n\n/**\n * Reverse the given `obj`.\n */\n\nexports.reverse = function(obj){\n  return Array.isArray(obj)\n    ? obj.reverse()\n    : String(obj).split('').reverse().join('');\n};\n\n/**\n * Get `prop` of the given `obj`.\n */\n\nexports.get = function(obj, prop){\n  return obj[prop];\n};\n\n/**\n * Packs the given `obj` into json string\n */\nexports.json = function(obj){\n  return JSON.stringify(obj);\n};","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/filters.js","sourceRoot":"file://localhost","sourceFile":"node_modules/ejs/lib/filters.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/utils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/utils.js","source":"\n/*!\n * EJS\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html){\n  return String(html)\n    .replace(/&(?!\\w+;)/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n};\n ","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/utils.js","sourceRoot":"file://localhost","sourceFile":"node_modules/ejs/lib/utils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar focusNode = require(\"./focusNode\");\n\nvar AutoFocusMixin = {\n  componentDidMount: function() {\n    if (this.props.autoFocus) {\n      focusNode(this.getDOMNode());\n    }\n  }\n};\n\nmodule.exports = AutoFocusMixin;\n","deps":{"./focusNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/AutoFocusMixin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/BeforeInputEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/BeforeInputEventPlugin.js","source":"/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar FallbackCompositionState = require(\"./FallbackCompositionState\");\nvar SyntheticCompositionEvent = require(\"./SyntheticCompositionEvent\");\nvar SyntheticInputEvent = require(\"./SyntheticInputEvent\");\n\nvar keyOf = require(\"./keyOf\");\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'CompositionEvent' in window\n);\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = (\n  ExecutionEnvironment.canUseDOM &&\n  'TextEvent' in window &&\n  !documentMode &&\n  !isPresto()\n);\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = (\n  ExecutionEnvironment.canUseDOM &&\n  (\n    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)\n  )\n);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return (\n    typeof opera === 'object' &&\n    typeof opera.version === 'function' &&\n    parseInt(opera.version(), 10) <= 12\n  );\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBeforeInput: null}),\n      captured: keyOf({onBeforeInputCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topTextInput,\n      topLevelTypes.topPaste\n    ]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionEnd: null}),\n      captured: keyOf({onCompositionEndCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionEnd,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionStart: null}),\n      captured: keyOf({onCompositionStartCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionStart,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCompositionUpdate: null}),\n      captured: keyOf({onCompositionUpdateCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topCompositionUpdate,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyPress,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topMouseDown\n    ]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (\n    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n    // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n    !(nativeEvent.ctrlKey && nativeEvent.altKey)\n  );\n}\n\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return (\n    topLevelType === topLevelTypes.topKeyDown &&\n    nativeEvent.keyCode === START_KEYCODE\n  );\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return (nativeEvent.keyCode !== START_KEYCODE);\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(\n    eventType,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (\n      topLevelType === topLevelTypes.topCompositionEnd ||\n      isFallbackCompositionEnd(topLevelType, nativeEvent)\n    ) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(\n  topLevelType,\n  topLevelTarget,\n  topLevelTargetID,\n  nativeEvent\n) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(\n    eventTypes.beforeInput,\n    topLevelTargetID,\n    nativeEvent\n  );\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID,\n    nativeEvent\n  ) {\n    return [\n      extractCompositionEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      ),\n      extractBeforeInputEvent(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID,\n        nativeEvent\n      )\n    ];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./SyntheticCompositionEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticCompositionEvent.js","./SyntheticInputEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticInputEvent.js","./EventPropagators":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","./FallbackCompositionState":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/FallbackCompositionState.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/BeforeInputEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/BeforeInputEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function(prop) {\n  prefixes.forEach(function(prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundImage: true,\n    backgroundPosition: true,\n    backgroundRepeat: true,\n    backgroundColor: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/CSSProperty.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property %s. Did you mean %s?',\n      name,\n      camelizeStyleName(name)\n    ) : null);\n  };\n\n  var warnBadVendoredStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported vendor-prefixed style property %s. Did you mean %s?',\n      name,\n      name.charAt(0).toUpperCase() + name.slice(1)\n    ) : null);\n  };\n\n  var warnStyleValueWithSemicolon = function(name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Style property values shouldn\\'t contain a semicolon. ' +\n      'Try \"%s: %s\" instead.',\n      name,\n      value.replace(badStyleValueWithSemicolonPattern, '')\n    ) : null);\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function(name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./CSSProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js","./memoizeStringOnly":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/memoizeStringOnly.js","./dangerousStyleValue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/dangerousStyleValue.js","./camelizeStyleName":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelizeStyleName.js","./hyphenateStyleName":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenateStyleName.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/CSSPropertyOperations.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        callbacks.length === contexts.length,\n        'Mismatched list of contexts in callback queue'\n      ) : invariant(callbacks.length === contexts.length));\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0, l = callbacks.length; i < l; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function() {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function() {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvQ2FsbGJhY2tRdWV1ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBDYWxsYmFja1F1ZXVlXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUG9vbGVkQ2xhc3MgPSByZXF1aXJlKFwiLi9Qb29sZWRDbGFzc1wiKTtcblxudmFyIGFzc2lnbiA9IHJlcXVpcmUoXCIuL09iamVjdC5hc3NpZ25cIik7XG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgcHNldWRvLWV2ZW50IG1vZHVsZSB0byBoZWxwIGtlZXAgdHJhY2sgb2YgY29tcG9uZW50cyB3YWl0aW5nIHRvXG4gKiBiZSBub3RpZmllZCB3aGVuIHRoZWlyIERPTSByZXByZXNlbnRhdGlvbnMgYXJlIGF2YWlsYWJsZSBmb3IgdXNlLlxuICpcbiAqIFRoaXMgaW1wbGVtZW50cyBgUG9vbGVkQ2xhc3NgLCBzbyB5b3Ugc2hvdWxkIG5ldmVyIG5lZWQgdG8gaW5zdGFudGlhdGUgdGhpcy5cbiAqIEluc3RlYWQsIHVzZSBgQ2FsbGJhY2tRdWV1ZS5nZXRQb29sZWQoKWAuXG4gKlxuICogQGNsYXNzIFJlYWN0TW91bnRSZWFkeVxuICogQGltcGxlbWVudHMgUG9vbGVkQ2xhc3NcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBDYWxsYmFja1F1ZXVlKCkge1xuICB0aGlzLl9jYWxsYmFja3MgPSBudWxsO1xuICB0aGlzLl9jb250ZXh0cyA9IG51bGw7XG59XG5cbmFzc2lnbihDYWxsYmFja1F1ZXVlLnByb3RvdHlwZSwge1xuXG4gIC8qKlxuICAgKiBFbnF1ZXVlcyBhIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgd2hlbiBgbm90aWZ5QWxsYCBpcyBpbnZva2VkLlxuICAgKlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBJbnZva2VkIHdoZW4gYG5vdGlmeUFsbGAgaXMgaW52b2tlZC5cbiAgICogQHBhcmFtIHs/b2JqZWN0fSBjb250ZXh0IENvbnRleHQgdG8gY2FsbCBgY2FsbGJhY2tgIHdpdGguXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgZW5xdWV1ZTogZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgICB0aGlzLl9jYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3MgfHwgW107XG4gICAgdGhpcy5fY29udGV4dHMgPSB0aGlzLl9jb250ZXh0cyB8fCBbXTtcbiAgICB0aGlzLl9jYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gICAgdGhpcy5fY29udGV4dHMucHVzaChjb250ZXh0KTtcbiAgfSxcblxuICAvKipcbiAgICogSW52b2tlcyBhbGwgZW5xdWV1ZWQgY2FsbGJhY2tzIGFuZCBjbGVhcnMgdGhlIHF1ZXVlLiBUaGlzIGlzIGludm9rZWQgYWZ0ZXJcbiAgICogdGhlIERPTSByZXByZXNlbnRhdGlvbiBvZiBhIGNvbXBvbmVudCBoYXMgYmVlbiBjcmVhdGVkIG9yIHVwZGF0ZWQuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgbm90aWZ5QWxsOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzO1xuICAgIHZhciBjb250ZXh0cyA9IHRoaXMuX2NvbnRleHRzO1xuICAgIGlmIChjYWxsYmFja3MpIHtcbiAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAgIGNhbGxiYWNrcy5sZW5ndGggPT09IGNvbnRleHRzLmxlbmd0aCxcbiAgICAgICAgJ01pc21hdGNoZWQgbGlzdCBvZiBjb250ZXh0cyBpbiBjYWxsYmFjayBxdWV1ZSdcbiAgICAgICkgOiBpbnZhcmlhbnQoY2FsbGJhY2tzLmxlbmd0aCA9PT0gY29udGV4dHMubGVuZ3RoKSk7XG4gICAgICB0aGlzLl9jYWxsYmFja3MgPSBudWxsO1xuICAgICAgdGhpcy5fY29udGV4dHMgPSBudWxsO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjYWxsYmFja3MubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGNhbGxiYWNrc1tpXS5jYWxsKGNvbnRleHRzW2ldKTtcbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrcy5sZW5ndGggPSAwO1xuICAgICAgY29udGV4dHMubGVuZ3RoID0gMDtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlc2V0cyB0aGUgaW50ZXJuYWwgcXVldWUuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgcmVzZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2NhbGxiYWNrcyA9IG51bGw7XG4gICAgdGhpcy5fY29udGV4dHMgPSBudWxsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBgUG9vbGVkQ2xhc3NgIGxvb2tzIGZvciB0aGlzLlxuICAgKi9cbiAgZGVzdHJ1Y3RvcjogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZXNldCgpO1xuICB9XG5cbn0pO1xuXG5Qb29sZWRDbGFzcy5hZGRQb29saW5nVG8oQ2FsbGJhY2tRdWV1ZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FsbGJhY2tRdWV1ZTtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/CallbackQueue.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ChangeEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ChangeEventPlugin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar isEventSupported = require(\"./isEventSupported\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onChange: null}),\n      captured: keyOf({onChangeCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topChange,\n      topLevelTypes.topClick,\n      topLevelTypes.topFocus,\n      topLevelTypes.topInput,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topKeyUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  return (\n    elem.nodeName === 'SELECT' ||\n    (elem.nodeName === 'INPUT' && elem.type === 'file')\n  );\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (\n    (!('documentMode' in document) || document.documentMode > 8)\n  );\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(\n    eventTypes.change,\n    activeElementID,\n    nativeEvent\n  );\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue();\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (\n    (!('documentMode' in document) || document.documentMode > 9)\n  );\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp =  {\n  get: function() {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function(val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(\n    target.constructor.prototype,\n    'value'\n  );\n\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange ||\n      topLevelType === topLevelTypes.topKeyUp ||\n      topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return (\n    elem.nodeName === 'INPUT' &&\n    (elem.type === 'checkbox' || elem.type === 'radio')\n  );\n}\n\nfunction getTargetIDForClickEvent(\n    topLevelType,\n    topLevelTarget,\n    topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(\n          eventTypes.change,\n          targetID,\n          nativeEvent\n        );\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(\n        topLevelType,\n        topLevelTarget,\n        topLevelTargetID\n      );\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPropagators":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./isEventSupported":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./isTextInputElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js","./EventPluginHub":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ChangeEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ChangeEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ClientReactRootIndex.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ClientReactRootIndex.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function() {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ClientReactRootIndex.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ClientReactRootIndex.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMChildrenOperations.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMChildrenOperations.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require(\"./Danger\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar setTextContent = require(\"./setTextContent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n  parentNode.insertBefore(\n    childNode,\n    parentNode.childNodes[index] || null\n  );\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function(updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||\n          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          updatedChild,\n          'processUpdates(): Unable to find child %s of element. This ' +\n          'probably means the DOM was unexpectedly mutated (e.g., by the ' +\n          'browser), usually due to forgetting a <tbody> when using tables, ' +\n          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +\n          'in an <svg> parent. Try inspecting the child nodes of the element ' +\n          'with React ID `%s`.',\n          updatedIndex,\n          parentID\n        ) : invariant(updatedChild));\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(\n            update.parentNode,\n            renderedMarkup[update.markupIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(\n            update.parentNode,\n            initialChildren[update.parentID][update.fromIndex],\n            update.toIndex\n          );\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(\n            update.parentNode,\n            update.textContent\n          );\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvRE9NQ2hpbGRyZW5PcGVyYXRpb25zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBET01DaGlsZHJlbk9wZXJhdGlvbnNcbiAqIEB0eXBlY2hlY2tzIHN0YXRpYy1vbmx5XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRGFuZ2VyID0gcmVxdWlyZShcIi4vRGFuZ2VyXCIpO1xudmFyIFJlYWN0TXVsdGlDaGlsZFVwZGF0ZVR5cGVzID0gcmVxdWlyZShcIi4vUmVhY3RNdWx0aUNoaWxkVXBkYXRlVHlwZXNcIik7XG5cbnZhciBzZXRUZXh0Q29udGVudCA9IHJlcXVpcmUoXCIuL3NldFRleHRDb250ZW50XCIpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxuLyoqXG4gKiBJbnNlcnRzIGBjaGlsZE5vZGVgIGFzIGEgY2hpbGQgb2YgYHBhcmVudE5vZGVgIGF0IHRoZSBgaW5kZXhgLlxuICpcbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gcGFyZW50Tm9kZSBQYXJlbnQgbm9kZSBpbiB3aGljaCB0byBpbnNlcnQuXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGNoaWxkTm9kZSBDaGlsZCBub2RlIHRvIGluc2VydC5cbiAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCBJbmRleCBhdCB3aGljaCB0byBpbnNlcnQgdGhlIGNoaWxkLlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIGluc2VydENoaWxkQXQocGFyZW50Tm9kZSwgY2hpbGROb2RlLCBpbmRleCkge1xuICAvLyBCeSBleHBsb2l0aW5nIGFycmF5cyByZXR1cm5pbmcgYHVuZGVmaW5lZGAgZm9yIGFuIHVuZGVmaW5lZCBpbmRleCwgd2UgY2FuXG4gIC8vIHJlbHkgZXhjbHVzaXZlbHkgb24gYGluc2VydEJlZm9yZShub2RlLCBudWxsKWAgaW5zdGVhZCBvZiBhbHNvIHVzaW5nXG4gIC8vIGBhcHBlbmRDaGlsZChub2RlKWAuIEhvd2V2ZXIsIHVzaW5nIGB1bmRlZmluZWRgIGlzIG5vdCBhbGxvd2VkIGJ5IGFsbFxuICAvLyBicm93c2VycyBzbyB3ZSBtdXN0IHJlcGxhY2UgaXQgd2l0aCBgbnVsbGAuXG4gIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKFxuICAgIGNoaWxkTm9kZSxcbiAgICBwYXJlbnROb2RlLmNoaWxkTm9kZXNbaW5kZXhdIHx8IG51bGxcbiAgKTtcbn1cblxuLyoqXG4gKiBPcGVyYXRpb25zIGZvciB1cGRhdGluZyB3aXRoIERPTSBjaGlsZHJlbi5cbiAqL1xudmFyIERPTUNoaWxkcmVuT3BlcmF0aW9ucyA9IHtcblxuICBkYW5nZXJvdXNseVJlcGxhY2VOb2RlV2l0aE1hcmt1cDogRGFuZ2VyLmRhbmdlcm91c2x5UmVwbGFjZU5vZGVXaXRoTWFya3VwLFxuXG4gIHVwZGF0ZVRleHRDb250ZW50OiBzZXRUZXh0Q29udGVudCxcblxuICAvKipcbiAgICogVXBkYXRlcyBhIGNvbXBvbmVudCdzIGNoaWxkcmVuIGJ5IHByb2Nlc3NpbmcgYSBzZXJpZXMgb2YgdXBkYXRlcy4gVGhlXG4gICAqIHVwZGF0ZSBjb25maWd1cmF0aW9ucyBhcmUgZWFjaCBleHBlY3RlZCB0byBoYXZlIGEgYHBhcmVudE5vZGVgIHByb3BlcnR5LlxuICAgKlxuICAgKiBAcGFyYW0ge2FycmF5PG9iamVjdD59IHVwZGF0ZXMgTGlzdCBvZiB1cGRhdGUgY29uZmlndXJhdGlvbnMuXG4gICAqIEBwYXJhbSB7YXJyYXk8c3RyaW5nPn0gbWFya3VwTGlzdCBMaXN0IG9mIG1hcmt1cCBzdHJpbmdzLlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHByb2Nlc3NVcGRhdGVzOiBmdW5jdGlvbih1cGRhdGVzLCBtYXJrdXBMaXN0KSB7XG4gICAgdmFyIHVwZGF0ZTtcbiAgICAvLyBNYXBwaW5nIGZyb20gcGFyZW50IElEcyB0byBpbml0aWFsIGNoaWxkIG9yZGVyaW5ncy5cbiAgICB2YXIgaW5pdGlhbENoaWxkcmVuID0gbnVsbDtcbiAgICAvLyBMaXN0IG9mIGNoaWxkcmVuIHRoYXQgd2lsbCBiZSBtb3ZlZCBvciByZW1vdmVkLlxuICAgIHZhciB1cGRhdGVkQ2hpbGRyZW4gPSBudWxsO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1cGRhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB1cGRhdGUgPSB1cGRhdGVzW2ldO1xuICAgICAgaWYgKHVwZGF0ZS50eXBlID09PSBSZWFjdE11bHRpQ2hpbGRVcGRhdGVUeXBlcy5NT1ZFX0VYSVNUSU5HIHx8XG4gICAgICAgICAgdXBkYXRlLnR5cGUgPT09IFJlYWN0TXVsdGlDaGlsZFVwZGF0ZVR5cGVzLlJFTU9WRV9OT0RFKSB7XG4gICAgICAgIHZhciB1cGRhdGVkSW5kZXggPSB1cGRhdGUuZnJvbUluZGV4O1xuICAgICAgICB2YXIgdXBkYXRlZENoaWxkID0gdXBkYXRlLnBhcmVudE5vZGUuY2hpbGROb2Rlc1t1cGRhdGVkSW5kZXhdO1xuICAgICAgICB2YXIgcGFyZW50SUQgPSB1cGRhdGUucGFyZW50SUQ7XG5cbiAgICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgICAgICB1cGRhdGVkQ2hpbGQsXG4gICAgICAgICAgJ3Byb2Nlc3NVcGRhdGVzKCk6IFVuYWJsZSB0byBmaW5kIGNoaWxkICVzIG9mIGVsZW1lbnQuIFRoaXMgJyArXG4gICAgICAgICAgJ3Byb2JhYmx5IG1lYW5zIHRoZSBET00gd2FzIHVuZXhwZWN0ZWRseSBtdXRhdGVkIChlLmcuLCBieSB0aGUgJyArXG4gICAgICAgICAgJ2Jyb3dzZXIpLCB1c3VhbGx5IGR1ZSB0byBmb3JnZXR0aW5nIGEgPHRib2R5PiB3aGVuIHVzaW5nIHRhYmxlcywgJyArXG4gICAgICAgICAgJ25lc3RpbmcgdGFncyBsaWtlIDxmb3JtPiwgPHA+LCBvciA8YT4sIG9yIHVzaW5nIG5vbi1TVkcgZWxlbWVudHMgJyArXG4gICAgICAgICAgJ2luIGFuIDxzdmc+IHBhcmVudC4gVHJ5IGluc3BlY3RpbmcgdGhlIGNoaWxkIG5vZGVzIG9mIHRoZSBlbGVtZW50ICcgK1xuICAgICAgICAgICd3aXRoIFJlYWN0IElEIGAlc2AuJyxcbiAgICAgICAgICB1cGRhdGVkSW5kZXgsXG4gICAgICAgICAgcGFyZW50SURcbiAgICAgICAgKSA6IGludmFyaWFudCh1cGRhdGVkQ2hpbGQpKTtcblxuICAgICAgICBpbml0aWFsQ2hpbGRyZW4gPSBpbml0aWFsQ2hpbGRyZW4gfHwge307XG4gICAgICAgIGluaXRpYWxDaGlsZHJlbltwYXJlbnRJRF0gPSBpbml0aWFsQ2hpbGRyZW5bcGFyZW50SURdIHx8IFtdO1xuICAgICAgICBpbml0aWFsQ2hpbGRyZW5bcGFyZW50SURdW3VwZGF0ZWRJbmRleF0gPSB1cGRhdGVkQ2hpbGQ7XG5cbiAgICAgICAgdXBkYXRlZENoaWxkcmVuID0gdXBkYXRlZENoaWxkcmVuIHx8IFtdO1xuICAgICAgICB1cGRhdGVkQ2hpbGRyZW4ucHVzaCh1cGRhdGVkQ2hpbGQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciByZW5kZXJlZE1hcmt1cCA9IERhbmdlci5kYW5nZXJvdXNseVJlbmRlck1hcmt1cChtYXJrdXBMaXN0KTtcblxuICAgIC8vIFJlbW92ZSB1cGRhdGVkIGNoaWxkcmVuIGZpcnN0IHNvIHRoYXQgYHRvSW5kZXhgIGlzIGNvbnNpc3RlbnQuXG4gICAgaWYgKHVwZGF0ZWRDaGlsZHJlbikge1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB1cGRhdGVkQ2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgdXBkYXRlZENoaWxkcmVuW2pdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodXBkYXRlZENoaWxkcmVuW2pdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBrID0gMDsgayA8IHVwZGF0ZXMubGVuZ3RoOyBrKyspIHtcbiAgICAgIHVwZGF0ZSA9IHVwZGF0ZXNba107XG4gICAgICBzd2l0Y2ggKHVwZGF0ZS50eXBlKSB7XG4gICAgICAgIGNhc2UgUmVhY3RNdWx0aUNoaWxkVXBkYXRlVHlwZXMuSU5TRVJUX01BUktVUDpcbiAgICAgICAgICBpbnNlcnRDaGlsZEF0KFxuICAgICAgICAgICAgdXBkYXRlLnBhcmVudE5vZGUsXG4gICAgICAgICAgICByZW5kZXJlZE1hcmt1cFt1cGRhdGUubWFya3VwSW5kZXhdLFxuICAgICAgICAgICAgdXBkYXRlLnRvSW5kZXhcbiAgICAgICAgICApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFJlYWN0TXVsdGlDaGlsZFVwZGF0ZVR5cGVzLk1PVkVfRVhJU1RJTkc6XG4gICAgICAgICAgaW5zZXJ0Q2hpbGRBdChcbiAgICAgICAgICAgIHVwZGF0ZS5wYXJlbnROb2RlLFxuICAgICAgICAgICAgaW5pdGlhbENoaWxkcmVuW3VwZGF0ZS5wYXJlbnRJRF1bdXBkYXRlLmZyb21JbmRleF0sXG4gICAgICAgICAgICB1cGRhdGUudG9JbmRleFxuICAgICAgICAgICk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgUmVhY3RNdWx0aUNoaWxkVXBkYXRlVHlwZXMuVEVYVF9DT05URU5UOlxuICAgICAgICAgIHNldFRleHRDb250ZW50KFxuICAgICAgICAgICAgdXBkYXRlLnBhcmVudE5vZGUsXG4gICAgICAgICAgICB1cGRhdGUudGV4dENvbnRlbnRcbiAgICAgICAgICApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFJlYWN0TXVsdGlDaGlsZFVwZGF0ZVR5cGVzLlJFTU9WRV9OT0RFOlxuICAgICAgICAgIC8vIEFscmVhZHkgcmVtb3ZlZCBieSB0aGUgZm9yLWxvb3AgYWJvdmUuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRE9NQ2hpbGRyZW5PcGVyYXRpb25zO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactMultiChildUpdateTypes":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./setTextContent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setTextContent.js","./Danger":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Danger.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMChildrenOperations.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/DOMChildrenOperations.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n/*jslint bitwise: true */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function(domPropertyConfig) {\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(\n        domPropertyConfig.isCustomAttribute\n      );\n    }\n\n    for (var propName in Properties) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.isStandardName.hasOwnProperty(propName),\n        'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' +\n        '\\'%s\\' which has already been injected. You may be accidentally ' +\n        'injecting the same DOM property config twice, or you may be ' +\n        'injecting two configs that have conflicting property names.',\n        propName\n      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));\n\n      DOMProperty.isStandardName[propName] = true;\n\n      var lowerCased = propName.toLowerCase();\n      DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        DOMProperty.getPossibleStandardName[attributeName] = propName;\n        DOMProperty.getAttributeName[propName] = attributeName;\n      } else {\n        DOMProperty.getAttributeName[propName] = lowerCased;\n      }\n\n      DOMProperty.getPropertyName[propName] =\n        DOMPropertyNames.hasOwnProperty(propName) ?\n          DOMPropertyNames[propName] :\n          propName;\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];\n      } else {\n        DOMProperty.getMutationMethod[propName] = null;\n      }\n\n      var propConfig = Properties[propName];\n      DOMProperty.mustUseAttribute[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);\n      DOMProperty.mustUseProperty[propName] =\n        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);\n      DOMProperty.hasSideEffects[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);\n      DOMProperty.hasBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);\n      DOMProperty.hasNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);\n      DOMProperty.hasPositiveNumericValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);\n      DOMProperty.hasOverloadedBooleanValue[propName] =\n        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);\n\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !DOMProperty.mustUseAttribute[propName] ||\n          !DOMProperty.mustUseProperty[propName],\n        'DOMProperty: Cannot require using both attribute and property: %s',\n        propName\n      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||\n        !DOMProperty.mustUseProperty[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        DOMProperty.mustUseProperty[propName] ||\n          !DOMProperty.hasSideEffects[propName],\n        'DOMProperty: Properties that have side effects must use property: %s',\n        propName\n      ) : invariant(DOMProperty.mustUseProperty[propName] ||\n        !DOMProperty.hasSideEffects[propName]));\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !!DOMProperty.hasBooleanValue[propName] +\n          !!DOMProperty.hasNumericValue[propName] +\n          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,\n        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +\n        'numeric value, but not a combination: %s',\n        propName\n      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +\n        !!DOMProperty.hasNumericValue[propName] +\n        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Checks whether a property name is a standard property.\n   * @type {Object}\n   */\n  isStandardName: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties.\n   * @type {Object}\n   */\n  getPossibleStandardName: {},\n\n  /**\n   * Mapping from normalized names to attribute names that differ. Attribute\n   * names are used when rendering markup or with `*Attribute()`.\n   * @type {Object}\n   */\n  getAttributeName: {},\n\n  /**\n   * Mapping from normalized names to properties on DOM node instances.\n   * (This includes properties that mutate due to external factors.)\n   * @type {Object}\n   */\n  getPropertyName: {},\n\n  /**\n   * Mapping from normalized names to mutation methods. This will only exist if\n   * mutation cannot be set simply by the property or `setAttribute()`.\n   * @type {Object}\n   */\n  getMutationMethod: {},\n\n  /**\n   * Whether the property must be accessed and mutated as an object property.\n   * @type {Object}\n   */\n  mustUseAttribute: {},\n\n  /**\n   * Whether the property must be accessed and mutated using `*Attribute()`.\n   * (This includes anything that fails `<propName> in <element>`.)\n   * @type {Object}\n   */\n  mustUseProperty: {},\n\n  /**\n   * Whether or not setting a value causes side effects such as triggering\n   * resources to be loaded or text selection changes. We must ensure that\n   * the value is only set if it has changed.\n   * @type {Object}\n   */\n  hasSideEffects: {},\n\n  /**\n   * Whether the property should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasBooleanValue: {},\n\n  /**\n   * Whether the property must be numeric or parse as a\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasNumericValue: {},\n\n  /**\n   * Whether the property must be positive numeric or parse as a positive\n   * numeric and should be removed when set to a falsey value.\n   * @type {Object}\n   */\n  hasPositiveNumericValue: {},\n\n  /**\n   * Whether the property can be used as a flag as well as with a value. Removed\n   * when strictly equal to false; present without a value when strictly equal\n   * to true; present with a value otherwise.\n   * @type {Object}\n   */\n  hasOverloadedBooleanValue: {},\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function(attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function(nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/DOMProperty.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar quoteAttributeValueForBrowser = require(\"./quoteAttributeValueForBrowser\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property %s. Did you mean %s?',\n      name,\n      standardName\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +\n      quoteAttributeValueForBrowser(id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return attributeName;\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./quoteAttributeValueForBrowser":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/quoteAttributeValueForBrowser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/DOMPropertyOperations.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Danger.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Danger.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n/*jslint evil: true, sub: true */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createNodesFromMarkup = require(\"./createNodesFromMarkup\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function(markupList) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +\n      'thread. Make sure `window` and `document` are available globally ' +\n      'before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        markupList[i],\n        'dangerouslyRenderMarkup(...): Missing markup.'\n      ) : invariant(markupList[i]));\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(\n            OPEN_TAG_NAME_EXP,\n            // This index will be parsed back out below.\n            '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" '\n          );\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(\n        markupListByNodeName.join(''),\n        emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute &&\n            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            !resultList.hasOwnProperty(resultIndex),\n            'Danger: Assigning to an already-occupied result index.'\n          ) : invariant(!resultList.hasOwnProperty(resultIndex)));\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n\n        } else if (\"production\" !== process.env.NODE_ENV) {\n          console.error(\n            'Danger: Discarding unexpected node:',\n            renderNode\n          );\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultListAssignmentCount === resultList.length,\n      'Danger: Did not assign to every index of resultList.'\n    ) : invariant(resultListAssignmentCount === resultList.length));\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      resultList.length === markupList.length,\n      'Danger: Expected markup to render %s nodes, but rendered %s.',\n      markupList.length,\n      resultList.length\n    ) : invariant(resultList.length === markupList.length));\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +\n      'worker thread. Make sure `window` and `document` are available ' +\n      'globally before requiring React when unit testing or use ' +\n      'React.renderToString for server rendering.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    (\"production\" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      oldChild.tagName.toLowerCase() !== 'html',\n      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +\n      '<html> node. This is because browser quirks make this unreliable ' +\n      'and/or slow. If you want to render to the root you must use ' +\n      'server rendering. See React.renderToString().'\n    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));\n\n    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./getMarkupWrap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js","./createNodesFromMarkup":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createNodesFromMarkup.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Danger.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/Danger.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DefaultEventPluginOrder.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DefaultEventPluginOrder.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require(\"./keyOf\");\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [\n  keyOf({ResponderEventPlugin: null}),\n  keyOf({SimpleEventPlugin: null}),\n  keyOf({TapEventPlugin: null}),\n  keyOf({EnterLeaveEventPlugin: null}),\n  keyOf({ChangeEventPlugin: null}),\n  keyOf({SelectEventPlugin: null}),\n  keyOf({BeforeInputEventPlugin: null}),\n  keyOf({AnalyticsEventPlugin: null}),\n  keyOf({MobileSafariClickEventPlugin: null})\n];\n\nmodule.exports = DefaultEventPluginOrder;\n","deps":{"./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DefaultEventPluginOrder.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/DefaultEventPluginOrder.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EnterLeaveEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EnterLeaveEventPlugin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\nvar ReactMount = require(\"./ReactMount\");\nvar keyOf = require(\"./keyOf\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({onMouseEnter: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  },\n  mouseLeave: {\n    registrationName: keyOf({onMouseLeave: null}),\n    dependencies: [\n      topLevelTypes.topMouseOut,\n      topLevelTypes.topMouseOver\n    ]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topMouseOver &&\n        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut &&\n        topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from, to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      to =\n        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||\n        win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromID = from ? ReactMount.getID(from) : '';\n    var toID = to ? ReactMount.getID(to) : '';\n\n    var leave = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseLeave,\n      fromID,\n      nativeEvent\n    );\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(\n      eventTypes.mouseEnter,\n      toID,\n      nativeEvent\n    );\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPropagators":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./SyntheticMouseEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EnterLeaveEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EnterLeaveEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar PropagationPhases = keyMirror({bubbled: null, captured: null});\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topBlur: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topReset: null,\n  topScroll: null,\n  topSelectionChange: null,\n  topSubmit: null,\n  topTextInput: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n","deps":{"./keyMirror":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventConstants.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventListener.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventListener.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function(target, eventType, callback) {\n    if (!target.addEventListener) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        console.error(\n          'Attempted to listen to events during the capture phase on a ' +\n          'browser that does not support the capture phase. Your application ' +\n          'will not receive some events.'\n        );\n      }\n      return {\n        remove: emptyFunction\n      };\n    } else {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    }\n  },\n\n  registerDefault: function() {}\n};\n\nmodule.exports = EventListener;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvRXZlbnRMaXN0ZW5lci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIEV2ZW50TGlzdGVuZXJcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKFwiLi9lbXB0eUZ1bmN0aW9uXCIpO1xuXG4vKipcbiAqIFVwc3RyZWFtIHZlcnNpb24gb2YgZXZlbnQgbGlzdGVuZXIuIERvZXMgbm90IHRha2UgaW50byBhY2NvdW50IHNwZWNpZmljXG4gKiBuYXR1cmUgb2YgcGxhdGZvcm0uXG4gKi9cbnZhciBFdmVudExpc3RlbmVyID0ge1xuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBidWJibGUgcGhhc2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRXZlbnRUYXJnZXR9IHRhcmdldCBET00gZWxlbWVudCB0byByZWdpc3RlciBsaXN0ZW5lciBvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSBFdmVudCB0eXBlLCBlLmcuICdjbGljaycgb3IgJ21vdXNlb3ZlcicuXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJuIHtvYmplY3R9IE9iamVjdCB3aXRoIGEgYHJlbW92ZWAgbWV0aG9kLlxuICAgKi9cbiAgbGlzdGVuOiBmdW5jdGlvbih0YXJnZXQsIGV2ZW50VHlwZSwgY2FsbGJhY2spIHtcbiAgICBpZiAodGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSBpZiAodGFyZ2V0LmF0dGFjaEV2ZW50KSB7XG4gICAgICB0YXJnZXQuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0YXJnZXQuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGNhcHR1cmU6IGZ1bmN0aW9uKHRhcmdldCwgZXZlbnRUeXBlLCBjYWxsYmFjaykge1xuICAgIGlmICghdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAnQXR0ZW1wdGVkIHRvIGxpc3RlbiB0byBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlIG9uIGEgJyArXG4gICAgICAgICAgJ2Jyb3dzZXIgdGhhdCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjYXB0dXJlIHBoYXNlLiBZb3VyIGFwcGxpY2F0aW9uICcgK1xuICAgICAgICAgICd3aWxsIG5vdCByZWNlaXZlIHNvbWUgZXZlbnRzLidcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZW1wdHlGdW5jdGlvblxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICByZWdpc3RlckRlZmF1bHQ6IGZ1bmN0aW9uKCkge31cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXZlbnRMaXN0ZW5lcjtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventListener.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventListener.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nvar executeDispatchesAndRelease = function(event) {\n  if (event) {\n    var executeDispatch = EventPluginUtils.executeDispatch;\n    // Plugins can provide custom behavior when dispatching events.\n    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);\n    if (PluginModule && PluginModule.executeDispatch) {\n      executeDispatch = PluginModule.executeDispatch;\n    }\n    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid =\n    InstanceHandle &&\n    InstanceHandle.traverseTwoPhase &&\n    InstanceHandle.traverseEnterLeave;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    valid,\n    'InstanceHandle not injected before use!'\n  ) : invariant(valid));\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function(InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function() {\n      if (\"production\" !== process.env.NODE_ENV) {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function(id, registrationName, listener) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !listener || typeof listener === 'function',\n      'Expected %s listener to be a function, instead got type %s',\n      registrationName, typeof listener\n    ) : invariant(!listener || typeof listener === 'function'));\n\n    var bankForRegistrationName =\n      listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function(id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function(id) {\n    for (var registrationName in listenerBank) {\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0, l = plugins.length; i < l; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(\n          topLevelType,\n          topLevelTarget,\n          topLevelTargetID,\n          nativeEvent\n        );\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function(events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function() {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !eventQueue,\n      'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.'\n    ) : invariant(!eventQueue));\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function() {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function() {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./EventPluginRegistry":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js","./EventPluginUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js","./accumulateInto":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./forEachAccumulated":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventPluginHub.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n      'the plugin ordering, `%s`.',\n      pluginName\n    ) : invariant(pluginIndex > -1));\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      PluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n      'method, but `%s` does not.',\n      pluginName\n    ) : invariant(PluginModule.extractEvents));\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          PluginModule,\n          eventName\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName\n      ) : invariant(publishEventForPlugin(\n        publishedEvents[eventName],\n        PluginModule,\n        eventName\n      )));\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'event name, `%s`.',\n    eventName\n  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          PluginModule,\n          eventName\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      PluginModule,\n      eventName\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !EventPluginRegistry.registrationNameModules[registrationName],\n    'EventPluginHub: More than one plugin attempted to publish the same ' +\n    'registration name, `%s`.',\n    registrationName\n  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] =\n    PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function(InjectedEventPluginOrder) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !EventPluginOrder,\n      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.'\n    ) : invariant(!EventPluginOrder));\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function(injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) ||\n          namesToPlugins[pluginName] !== PluginModule) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !namesToPlugins[pluginName],\n          'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n          pluginName\n        ) : invariant(!namesToPlugins[pluginName]));\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function(event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[\n        dispatchConfig.registrationName\n      ] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[\n        dispatchConfig.phasedRegistrationNames[phase]\n      ];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function() {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventPluginRegistry.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (\"production\" !== process.env.NODE_ENV) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, cb) {\n  forEachEventDispatch(event, cb);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventPluginUtils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (!domID) {\n      throw new Error('Dispatching id must not be null');\n    }\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners =\n      accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We can not perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(\n      event.dispatchMarker,\n      accumulateDirectionalDispatches,\n      event\n    );\n  }\n}\n\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners =\n        accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(\n    fromID,\n    toID,\n    accumulateDispatches,\n    leave,\n    enter\n  );\n}\n\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvRXZlbnRQcm9wYWdhdG9ycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBFdmVudFByb3BhZ2F0b3JzXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRDb25zdGFudHMgPSByZXF1aXJlKFwiLi9FdmVudENvbnN0YW50c1wiKTtcbnZhciBFdmVudFBsdWdpbkh1YiA9IHJlcXVpcmUoXCIuL0V2ZW50UGx1Z2luSHViXCIpO1xuXG52YXIgYWNjdW11bGF0ZUludG8gPSByZXF1aXJlKFwiLi9hY2N1bXVsYXRlSW50b1wiKTtcbnZhciBmb3JFYWNoQWNjdW11bGF0ZWQgPSByZXF1aXJlKFwiLi9mb3JFYWNoQWNjdW11bGF0ZWRcIik7XG5cbnZhciBQcm9wYWdhdGlvblBoYXNlcyA9IEV2ZW50Q29uc3RhbnRzLlByb3BhZ2F0aW9uUGhhc2VzO1xudmFyIGdldExpc3RlbmVyID0gRXZlbnRQbHVnaW5IdWIuZ2V0TGlzdGVuZXI7XG5cbi8qKlxuICogU29tZSBldmVudCB0eXBlcyBoYXZlIGEgbm90aW9uIG9mIGRpZmZlcmVudCByZWdpc3RyYXRpb24gbmFtZXMgZm9yIGRpZmZlcmVudFxuICogXCJwaGFzZXNcIiBvZiBwcm9wYWdhdGlvbi4gVGhpcyBmaW5kcyBsaXN0ZW5lcnMgYnkgYSBnaXZlbiBwaGFzZS5cbiAqL1xuZnVuY3Rpb24gbGlzdGVuZXJBdFBoYXNlKGlkLCBldmVudCwgcHJvcGFnYXRpb25QaGFzZSkge1xuICB2YXIgcmVnaXN0cmF0aW9uTmFtZSA9XG4gICAgZXZlbnQuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbcHJvcGFnYXRpb25QaGFzZV07XG4gIHJldHVybiBnZXRMaXN0ZW5lcihpZCwgcmVnaXN0cmF0aW9uTmFtZSk7XG59XG5cbi8qKlxuICogVGFncyBhIGBTeW50aGV0aWNFdmVudGAgd2l0aCBkaXNwYXRjaGVkIGxpc3RlbmVycy4gQ3JlYXRpbmcgdGhpcyBmdW5jdGlvblxuICogaGVyZSwgYWxsb3dzIHVzIHRvIG5vdCBoYXZlIHRvIGJpbmQgb3IgY3JlYXRlIGZ1bmN0aW9ucyBmb3IgZWFjaCBldmVudC5cbiAqIE11dGF0aW5nIHRoZSBldmVudCdzIG1lbWJlcnMgYWxsb3dzIHVzIHRvIG5vdCBoYXZlIHRvIGNyZWF0ZSBhIHdyYXBwaW5nXG4gKiBcImRpc3BhdGNoXCIgb2JqZWN0IHRoYXQgcGFpcnMgdGhlIGV2ZW50IHdpdGggdGhlIGxpc3RlbmVyLlxuICovXG5mdW5jdGlvbiBhY2N1bXVsYXRlRGlyZWN0aW9uYWxEaXNwYXRjaGVzKGRvbUlELCB1cHdhcmRzLCBldmVudCkge1xuICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgaWYgKCFkb21JRCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEaXNwYXRjaGluZyBpZCBtdXN0IG5vdCBiZSBudWxsJyk7XG4gICAgfVxuICB9XG4gIHZhciBwaGFzZSA9IHVwd2FyZHMgPyBQcm9wYWdhdGlvblBoYXNlcy5idWJibGVkIDogUHJvcGFnYXRpb25QaGFzZXMuY2FwdHVyZWQ7XG4gIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyQXRQaGFzZShkb21JRCwgZXZlbnQsIHBoYXNlKTtcbiAgaWYgKGxpc3RlbmVyKSB7XG4gICAgZXZlbnQuX2Rpc3BhdGNoTGlzdGVuZXJzID1cbiAgICAgIGFjY3VtdWxhdGVJbnRvKGV2ZW50Ll9kaXNwYXRjaExpc3RlbmVycywgbGlzdGVuZXIpO1xuICAgIGV2ZW50Ll9kaXNwYXRjaElEcyA9IGFjY3VtdWxhdGVJbnRvKGV2ZW50Ll9kaXNwYXRjaElEcywgZG9tSUQpO1xuICB9XG59XG5cbi8qKlxuICogQ29sbGVjdCBkaXNwYXRjaGVzIChtdXN0IGJlIGVudGlyZWx5IGNvbGxlY3RlZCBiZWZvcmUgZGlzcGF0Y2hpbmcgLSBzZWUgdW5pdFxuICogdGVzdHMpLiBMYXppbHkgYWxsb2NhdGUgdGhlIGFycmF5IHRvIGNvbnNlcnZlIG1lbW9yeS4gIFdlIG11c3QgbG9vcCB0aHJvdWdoXG4gKiBlYWNoIGV2ZW50IGFuZCBwZXJmb3JtIHRoZSB0cmF2ZXJzYWwgZm9yIGVhY2ggb25lLiBXZSBjYW4gbm90IHBlcmZvcm0gYVxuICogc2luZ2xlIHRyYXZlcnNhbCBmb3IgdGhlIGVudGlyZSBjb2xsZWN0aW9uIG9mIGV2ZW50cyBiZWNhdXNlIGVhY2ggZXZlbnQgbWF5XG4gKiBoYXZlIGEgZGlmZmVyZW50IHRhcmdldC5cbiAqL1xuZnVuY3Rpb24gYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NpbmdsZShldmVudCkge1xuICBpZiAoZXZlbnQgJiYgZXZlbnQuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpIHtcbiAgICBFdmVudFBsdWdpbkh1Yi5pbmplY3Rpb24uZ2V0SW5zdGFuY2VIYW5kbGUoKS50cmF2ZXJzZVR3b1BoYXNlKFxuICAgICAgZXZlbnQuZGlzcGF0Y2hNYXJrZXIsXG4gICAgICBhY2N1bXVsYXRlRGlyZWN0aW9uYWxEaXNwYXRjaGVzLFxuICAgICAgZXZlbnRcbiAgICApO1xuICB9XG59XG5cblxuLyoqXG4gKiBBY2N1bXVsYXRlcyB3aXRob3V0IHJlZ2FyZCB0byBkaXJlY3Rpb24sIGRvZXMgbm90IGxvb2sgZm9yIHBoYXNlZFxuICogcmVnaXN0cmF0aW9uIG5hbWVzLiBTYW1lIGFzIGBhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlc1NpbmdsZWAgYnV0IHdpdGhvdXRcbiAqIHJlcXVpcmluZyB0aGF0IHRoZSBgZGlzcGF0Y2hNYXJrZXJgIGJlIHRoZSBzYW1lIGFzIHRoZSBkaXNwYXRjaGVkIElELlxuICovXG5mdW5jdGlvbiBhY2N1bXVsYXRlRGlzcGF0Y2hlcyhpZCwgaWdub3JlZERpcmVjdGlvbiwgZXZlbnQpIHtcbiAgaWYgKGV2ZW50ICYmIGV2ZW50LmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpIHtcbiAgICB2YXIgcmVnaXN0cmF0aW9uTmFtZSA9IGV2ZW50LmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWU7XG4gICAgdmFyIGxpc3RlbmVyID0gZ2V0TGlzdGVuZXIoaWQsIHJlZ2lzdHJhdGlvbk5hbWUpO1xuICAgIGlmIChsaXN0ZW5lcikge1xuICAgICAgZXZlbnQuX2Rpc3BhdGNoTGlzdGVuZXJzID1cbiAgICAgICAgYWNjdW11bGF0ZUludG8oZXZlbnQuX2Rpc3BhdGNoTGlzdGVuZXJzLCBsaXN0ZW5lcik7XG4gICAgICBldmVudC5fZGlzcGF0Y2hJRHMgPSBhY2N1bXVsYXRlSW50byhldmVudC5fZGlzcGF0Y2hJRHMsIGlkKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBBY2N1bXVsYXRlcyBkaXNwYXRjaGVzIG9uIGFuIGBTeW50aGV0aWNFdmVudGAsIGJ1dCBvbmx5IGZvciB0aGVcbiAqIGBkaXNwYXRjaE1hcmtlcmAuXG4gKiBAcGFyYW0ge1N5bnRoZXRpY0V2ZW50fSBldmVudFxuICovXG5mdW5jdGlvbiBhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlc1NpbmdsZShldmVudCkge1xuICBpZiAoZXZlbnQgJiYgZXZlbnQuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkge1xuICAgIGFjY3VtdWxhdGVEaXNwYXRjaGVzKGV2ZW50LmRpc3BhdGNoTWFya2VyLCBudWxsLCBldmVudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyhldmVudHMpIHtcbiAgZm9yRWFjaEFjY3VtdWxhdGVkKGV2ZW50cywgYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NpbmdsZSk7XG59XG5cbmZ1bmN0aW9uIGFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyhsZWF2ZSwgZW50ZXIsIGZyb21JRCwgdG9JRCkge1xuICBFdmVudFBsdWdpbkh1Yi5pbmplY3Rpb24uZ2V0SW5zdGFuY2VIYW5kbGUoKS50cmF2ZXJzZUVudGVyTGVhdmUoXG4gICAgZnJvbUlELFxuICAgIHRvSUQsXG4gICAgYWNjdW11bGF0ZURpc3BhdGNoZXMsXG4gICAgbGVhdmUsXG4gICAgZW50ZXJcbiAgKTtcbn1cblxuXG5mdW5jdGlvbiBhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlcyhldmVudHMpIHtcbiAgZm9yRWFjaEFjY3VtdWxhdGVkKGV2ZW50cywgYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXNTaW5nbGUpO1xufVxuXG5cblxuLyoqXG4gKiBBIHNtYWxsIHNldCBvZiBwcm9wYWdhdGlvbiBwYXR0ZXJucywgZWFjaCBvZiB3aGljaCB3aWxsIGFjY2VwdCBhIHNtYWxsIGFtb3VudFxuICogb2YgaW5mb3JtYXRpb24sIGFuZCBnZW5lcmF0ZSBhIHNldCBvZiBcImRpc3BhdGNoIHJlYWR5IGV2ZW50IG9iamVjdHNcIiAtIHdoaWNoXG4gKiBhcmUgc2V0cyBvZiBldmVudHMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBhbm5vdGF0ZWQgd2l0aCBhIHNldCBvZiBkaXNwYXRjaGVkXG4gKiBsaXN0ZW5lciBmdW5jdGlvbnMvaWRzLiBUaGUgQVBJIGlzIGRlc2lnbmVkIHRoaXMgd2F5IHRvIGRpc2NvdXJhZ2UgdGhlc2VcbiAqIHByb3BhZ2F0aW9uIHN0cmF0ZWdpZXMgZnJvbSBhY3R1YWxseSBleGVjdXRpbmcgdGhlIGRpc3BhdGNoZXMsIHNpbmNlIHdlXG4gKiBhbHdheXMgd2FudCB0byBjb2xsZWN0IHRoZSBlbnRpcmUgc2V0IG9mIGRpc3BhdGNoZXMgYmVmb3JlIGV4ZWN1dGluZyBldmVudCBhXG4gKiBzaW5nbGUgb25lLlxuICpcbiAqIEBjb25zdHJ1Y3RvciBFdmVudFByb3BhZ2F0b3JzXG4gKi9cbnZhciBFdmVudFByb3BhZ2F0b3JzID0ge1xuICBhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzOiBhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzLFxuICBhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlczogYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXMsXG4gIGFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlczogYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50UHJvcGFnYXRvcnM7XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPluginHub":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","./forEachAccumulated":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js","./accumulateInto":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/EventPropagators.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\n\"use strict\";\n\nvar canUseDOM = !!(\n  (typeof window !== 'undefined' &&\n  window.document && window.document.createElement)\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ExecutionEnvironment.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/FallbackCompositionState.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/FallbackCompositionState.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function() {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function() {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n","deps":{"./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./getTextContentAccessor":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/FallbackCompositionState.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/FallbackCompositionState.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/HTMLDOMPropertyConfig.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/HTMLDOMPropertyConfig.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE =\n  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE =\n  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = (\n    implementation &&\n    implementation.hasFeature &&\n    implementation.hasFeature(\n      'http://www.w3.org/TR/SVG11/feature#BasicStructure',\n      '1.1'\n    )\n  );\n}\n\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(\n    /^(data|aria)-[a-z_][a-z\\d_.\\-]*$/\n  ),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusMixin\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    high: null,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    low: null,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: null,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // property is supported for OpenGraph in meta tags.\n    property: null,\n    // IE-only attribute that controls focus behavior\n    unselectable: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n","deps":{"./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/HTMLDOMPropertyConfig.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/HTMLDOMPropertyConfig.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require(\"./ReactPropTypes\");\n\nvar invariant = require(\"./invariant\");\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(input) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checkedLink == null || input.props.valueLink == null,\n    'Cannot provide a checkedLink and a valueLink. If you want to use ' +\n    'checkedLink, you probably don\\'t want to use valueLink and vice versa.'\n  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));\n}\nfunction _assertValueLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.value == null && input.props.onChange == null,\n    'Cannot provide a valueLink and a value or onChange event. If you want ' +\n    'to use value or onChange, you probably don\\'t want to use valueLink.'\n  ) : invariant(input.props.value == null && input.props.onChange == null));\n}\n\nfunction _assertCheckedLink(input) {\n  _assertSingleLink(input);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    input.props.checked == null && input.props.onChange == null,\n    'Cannot provide a checkedLink and a checked property or onChange event. ' +\n    'If you want to use checked or onChange, you probably don\\'t want to ' +\n    'use checkedLink'\n  ) : invariant(input.props.checked == null && input.props.onChange == null));\n}\n\n/**\n * @param {SyntheticEvent} e change event to handle\n */\nfunction _handleLinkedValueChange(e) {\n  /*jshint validthis:true */\n  this.props.valueLink.requestChange(e.target.value);\n}\n\n/**\n  * @param {SyntheticEvent} e change event to handle\n  */\nfunction _handleLinkedCheckChange(e) {\n  /*jshint validthis:true */\n  this.props.checkedLink.requestChange(e.target.checked);\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  Mixin: {\n    propTypes: {\n      value: function(props, propName, componentName) {\n        if (!props[propName] ||\n            hasReadOnlyValue[props.type] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `value` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultValue`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      checked: function(props, propName, componentName) {\n        if (!props[propName] ||\n            props.onChange ||\n            props.readOnly ||\n            props.disabled) {\n          return null;\n        }\n        return new Error(\n          'You provided a `checked` prop to a form field without an ' +\n          '`onChange` handler. This will render a read-only field. If ' +\n          'the field should be mutable use `defaultChecked`. Otherwise, ' +\n          'set either `onChange` or `readOnly`.'\n        );\n      },\n      onChange: ReactPropTypes.func\n    }\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return input.props.valueLink.value;\n    }\n    return input.props.value;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function(input) {\n    if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return input.props.checkedLink.value;\n    }\n    return input.props.checked;\n  },\n\n  /**\n   * @param {ReactComponent} input Form component\n   * @return {function} change callback either from onChange prop or link.\n   */\n  getOnChange: function(input) {\n    if (input.props.valueLink) {\n      _assertValueLink(input);\n      return _handleLinkedValueChange;\n    } else if (input.props.checkedLink) {\n      _assertCheckedLink(input);\n      return _handleLinkedCheckChange;\n    }\n    return input.props.onChange;\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvTGlua2VkVmFsdWVVdGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgTGlua2VkVmFsdWVVdGlsc1xuICogQHR5cGVjaGVja3Mgc3RhdGljLW9ubHlcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlcyA9IHJlcXVpcmUoXCIuL1JlYWN0UHJvcFR5cGVzXCIpO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG52YXIgaGFzUmVhZE9ubHlWYWx1ZSA9IHtcbiAgJ2J1dHRvbic6IHRydWUsXG4gICdjaGVja2JveCc6IHRydWUsXG4gICdpbWFnZSc6IHRydWUsXG4gICdoaWRkZW4nOiB0cnVlLFxuICAncmFkaW8nOiB0cnVlLFxuICAncmVzZXQnOiB0cnVlLFxuICAnc3VibWl0JzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gX2Fzc2VydFNpbmdsZUxpbmsoaW5wdXQpIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBpbnB1dC5wcm9wcy5jaGVja2VkTGluayA9PSBudWxsIHx8IGlucHV0LnByb3BzLnZhbHVlTGluayA9PSBudWxsLFxuICAgICdDYW5ub3QgcHJvdmlkZSBhIGNoZWNrZWRMaW5rIGFuZCBhIHZhbHVlTGluay4gSWYgeW91IHdhbnQgdG8gdXNlICcgK1xuICAgICdjaGVja2VkTGluaywgeW91IHByb2JhYmx5IGRvblxcJ3Qgd2FudCB0byB1c2UgdmFsdWVMaW5rIGFuZCB2aWNlIHZlcnNhLidcbiAgKSA6IGludmFyaWFudChpbnB1dC5wcm9wcy5jaGVja2VkTGluayA9PSBudWxsIHx8IGlucHV0LnByb3BzLnZhbHVlTGluayA9PSBudWxsKSk7XG59XG5mdW5jdGlvbiBfYXNzZXJ0VmFsdWVMaW5rKGlucHV0KSB7XG4gIF9hc3NlcnRTaW5nbGVMaW5rKGlucHV0KTtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBpbnB1dC5wcm9wcy52YWx1ZSA9PSBudWxsICYmIGlucHV0LnByb3BzLm9uQ2hhbmdlID09IG51bGwsXG4gICAgJ0Nhbm5vdCBwcm92aWRlIGEgdmFsdWVMaW5rIGFuZCBhIHZhbHVlIG9yIG9uQ2hhbmdlIGV2ZW50LiBJZiB5b3Ugd2FudCAnICtcbiAgICAndG8gdXNlIHZhbHVlIG9yIG9uQ2hhbmdlLCB5b3UgcHJvYmFibHkgZG9uXFwndCB3YW50IHRvIHVzZSB2YWx1ZUxpbmsuJ1xuICApIDogaW52YXJpYW50KGlucHV0LnByb3BzLnZhbHVlID09IG51bGwgJiYgaW5wdXQucHJvcHMub25DaGFuZ2UgPT0gbnVsbCkpO1xufVxuXG5mdW5jdGlvbiBfYXNzZXJ0Q2hlY2tlZExpbmsoaW5wdXQpIHtcbiAgX2Fzc2VydFNpbmdsZUxpbmsoaW5wdXQpO1xuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIGlucHV0LnByb3BzLmNoZWNrZWQgPT0gbnVsbCAmJiBpbnB1dC5wcm9wcy5vbkNoYW5nZSA9PSBudWxsLFxuICAgICdDYW5ub3QgcHJvdmlkZSBhIGNoZWNrZWRMaW5rIGFuZCBhIGNoZWNrZWQgcHJvcGVydHkgb3Igb25DaGFuZ2UgZXZlbnQuICcgK1xuICAgICdJZiB5b3Ugd2FudCB0byB1c2UgY2hlY2tlZCBvciBvbkNoYW5nZSwgeW91IHByb2JhYmx5IGRvblxcJ3Qgd2FudCB0byAnICtcbiAgICAndXNlIGNoZWNrZWRMaW5rJ1xuICApIDogaW52YXJpYW50KGlucHV0LnByb3BzLmNoZWNrZWQgPT0gbnVsbCAmJiBpbnB1dC5wcm9wcy5vbkNoYW5nZSA9PSBudWxsKSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtTeW50aGV0aWNFdmVudH0gZSBjaGFuZ2UgZXZlbnQgdG8gaGFuZGxlXG4gKi9cbmZ1bmN0aW9uIF9oYW5kbGVMaW5rZWRWYWx1ZUNoYW5nZShlKSB7XG4gIC8qanNoaW50IHZhbGlkdGhpczp0cnVlICovXG4gIHRoaXMucHJvcHMudmFsdWVMaW5rLnJlcXVlc3RDaGFuZ2UoZS50YXJnZXQudmFsdWUpO1xufVxuXG4vKipcbiAgKiBAcGFyYW0ge1N5bnRoZXRpY0V2ZW50fSBlIGNoYW5nZSBldmVudCB0byBoYW5kbGVcbiAgKi9cbmZ1bmN0aW9uIF9oYW5kbGVMaW5rZWRDaGVja0NoYW5nZShlKSB7XG4gIC8qanNoaW50IHZhbGlkdGhpczp0cnVlICovXG4gIHRoaXMucHJvcHMuY2hlY2tlZExpbmsucmVxdWVzdENoYW5nZShlLnRhcmdldC5jaGVja2VkKTtcbn1cblxuLyoqXG4gKiBQcm92aWRlIGEgbGlua2VkIGB2YWx1ZWAgYXR0cmlidXRlIGZvciBjb250cm9sbGVkIGZvcm1zLiBZb3Ugc2hvdWxkIG5vdCB1c2VcbiAqIHRoaXMgb3V0c2lkZSBvZiB0aGUgUmVhY3RET00gY29udHJvbGxlZCBmb3JtIGNvbXBvbmVudHMuXG4gKi9cbnZhciBMaW5rZWRWYWx1ZVV0aWxzID0ge1xuICBNaXhpbjoge1xuICAgIHByb3BUeXBlczoge1xuICAgICAgdmFsdWU6IGZ1bmN0aW9uKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSkge1xuICAgICAgICBpZiAoIXByb3BzW3Byb3BOYW1lXSB8fFxuICAgICAgICAgICAgaGFzUmVhZE9ubHlWYWx1ZVtwcm9wcy50eXBlXSB8fFxuICAgICAgICAgICAgcHJvcHMub25DaGFuZ2UgfHxcbiAgICAgICAgICAgIHByb3BzLnJlYWRPbmx5IHx8XG4gICAgICAgICAgICBwcm9wcy5kaXNhYmxlZCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAgICAgJ1lvdSBwcm92aWRlZCBhIGB2YWx1ZWAgcHJvcCB0byBhIGZvcm0gZmllbGQgd2l0aG91dCBhbiAnICtcbiAgICAgICAgICAnYG9uQ2hhbmdlYCBoYW5kbGVyLiBUaGlzIHdpbGwgcmVuZGVyIGEgcmVhZC1vbmx5IGZpZWxkLiBJZiAnICtcbiAgICAgICAgICAndGhlIGZpZWxkIHNob3VsZCBiZSBtdXRhYmxlIHVzZSBgZGVmYXVsdFZhbHVlYC4gT3RoZXJ3aXNlLCAnICtcbiAgICAgICAgICAnc2V0IGVpdGhlciBgb25DaGFuZ2VgIG9yIGByZWFkT25seWAuJ1xuICAgICAgICApO1xuICAgICAgfSxcbiAgICAgIGNoZWNrZWQ6IGZ1bmN0aW9uKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSkge1xuICAgICAgICBpZiAoIXByb3BzW3Byb3BOYW1lXSB8fFxuICAgICAgICAgICAgcHJvcHMub25DaGFuZ2UgfHxcbiAgICAgICAgICAgIHByb3BzLnJlYWRPbmx5IHx8XG4gICAgICAgICAgICBwcm9wcy5kaXNhYmxlZCkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAgICAgJ1lvdSBwcm92aWRlZCBhIGBjaGVja2VkYCBwcm9wIHRvIGEgZm9ybSBmaWVsZCB3aXRob3V0IGFuICcgK1xuICAgICAgICAgICdgb25DaGFuZ2VgIGhhbmRsZXIuIFRoaXMgd2lsbCByZW5kZXIgYSByZWFkLW9ubHkgZmllbGQuIElmICcgK1xuICAgICAgICAgICd0aGUgZmllbGQgc2hvdWxkIGJlIG11dGFibGUgdXNlIGBkZWZhdWx0Q2hlY2tlZGAuIE90aGVyd2lzZSwgJyArXG4gICAgICAgICAgJ3NldCBlaXRoZXIgYG9uQ2hhbmdlYCBvciBgcmVhZE9ubHlgLidcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICBvbkNoYW5nZTogUmVhY3RQcm9wVHlwZXMuZnVuY1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHtSZWFjdENvbXBvbmVudH0gaW5wdXQgRm9ybSBjb21wb25lbnRcbiAgICogQHJldHVybiB7Kn0gY3VycmVudCB2YWx1ZSBvZiB0aGUgaW5wdXQgZWl0aGVyIGZyb20gdmFsdWUgcHJvcCBvciBsaW5rLlxuICAgKi9cbiAgZ2V0VmFsdWU6IGZ1bmN0aW9uKGlucHV0KSB7XG4gICAgaWYgKGlucHV0LnByb3BzLnZhbHVlTGluaykge1xuICAgICAgX2Fzc2VydFZhbHVlTGluayhpbnB1dCk7XG4gICAgICByZXR1cm4gaW5wdXQucHJvcHMudmFsdWVMaW5rLnZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQucHJvcHMudmFsdWU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7UmVhY3RDb21wb25lbnR9IGlucHV0IEZvcm0gY29tcG9uZW50XG4gICAqIEByZXR1cm4geyp9IGN1cnJlbnQgY2hlY2tlZCBzdGF0dXMgb2YgdGhlIGlucHV0IGVpdGhlciBmcm9tIGNoZWNrZWQgcHJvcFxuICAgKiAgICAgICAgICAgICBvciBsaW5rLlxuICAgKi9cbiAgZ2V0Q2hlY2tlZDogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQucHJvcHMuY2hlY2tlZExpbmspIHtcbiAgICAgIF9hc3NlcnRDaGVja2VkTGluayhpbnB1dCk7XG4gICAgICByZXR1cm4gaW5wdXQucHJvcHMuY2hlY2tlZExpbmsudmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBpbnB1dC5wcm9wcy5jaGVja2VkO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBpbnB1dCBGb3JtIGNvbXBvbmVudFxuICAgKiBAcmV0dXJuIHtmdW5jdGlvbn0gY2hhbmdlIGNhbGxiYWNrIGVpdGhlciBmcm9tIG9uQ2hhbmdlIHByb3Agb3IgbGluay5cbiAgICovXG4gIGdldE9uQ2hhbmdlOiBmdW5jdGlvbihpbnB1dCkge1xuICAgIGlmIChpbnB1dC5wcm9wcy52YWx1ZUxpbmspIHtcbiAgICAgIF9hc3NlcnRWYWx1ZUxpbmsoaW5wdXQpO1xuICAgICAgcmV0dXJuIF9oYW5kbGVMaW5rZWRWYWx1ZUNoYW5nZTtcbiAgICB9IGVsc2UgaWYgKGlucHV0LnByb3BzLmNoZWNrZWRMaW5rKSB7XG4gICAgICBfYXNzZXJ0Q2hlY2tlZExpbmsoaW5wdXQpO1xuICAgICAgcmV0dXJuIF9oYW5kbGVMaW5rZWRDaGVja0NoYW5nZTtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0LnByb3BzLm9uQ2hhbmdlO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExpbmtlZFZhbHVlVXRpbHM7XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactPropTypes":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/LinkedValueUtils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LocalEventTrapMixin\n */\n\n'use strict';\n\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar accumulateInto = require(\"./accumulateInto\");\nvar forEachAccumulated = require(\"./forEachAccumulated\");\nvar invariant = require(\"./invariant\");\n\nfunction remove(event) {\n  event.remove();\n}\n\nvar LocalEventTrapMixin = {\n  trapBubbledEvent:function(topLevelType, handlerBaseName) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));\n    // If a component renders to null or if another component fatals and causes\n    // the state of the tree to be corrupted, `node` here can be null.\n    var node = this.getDOMNode();\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      node,\n      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'\n    ) : invariant(node));\n    var listener = ReactBrowserEventEmitter.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      node\n    );\n    this._localEventListeners =\n      accumulateInto(this._localEventListeners, listener);\n  },\n\n  // trapCapturedEvent would look nearly identical. We don't implement that\n  // method because it isn't currently needed.\n\n  componentWillUnmount:function() {\n    if (this._localEventListeners) {\n      forEachAccumulated(this._localEventListeners, remove);\n    }\n  }\n};\n\nmodule.exports = LocalEventTrapMixin;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvTG9jYWxFdmVudFRyYXBNaXhpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgTG9jYWxFdmVudFRyYXBNaXhpblxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0QnJvd3NlckV2ZW50RW1pdHRlciA9IHJlcXVpcmUoXCIuL1JlYWN0QnJvd3NlckV2ZW50RW1pdHRlclwiKTtcblxudmFyIGFjY3VtdWxhdGVJbnRvID0gcmVxdWlyZShcIi4vYWNjdW11bGF0ZUludG9cIik7XG52YXIgZm9yRWFjaEFjY3VtdWxhdGVkID0gcmVxdWlyZShcIi4vZm9yRWFjaEFjY3VtdWxhdGVkXCIpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxuZnVuY3Rpb24gcmVtb3ZlKGV2ZW50KSB7XG4gIGV2ZW50LnJlbW92ZSgpO1xufVxuXG52YXIgTG9jYWxFdmVudFRyYXBNaXhpbiA9IHtcbiAgdHJhcEJ1YmJsZWRFdmVudDpmdW5jdGlvbih0b3BMZXZlbFR5cGUsIGhhbmRsZXJCYXNlTmFtZSkge1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQodGhpcy5pc01vdW50ZWQoKSwgJ011c3QgYmUgbW91bnRlZCB0byB0cmFwIGV2ZW50cycpIDogaW52YXJpYW50KHRoaXMuaXNNb3VudGVkKCkpKTtcbiAgICAvLyBJZiBhIGNvbXBvbmVudCByZW5kZXJzIHRvIG51bGwgb3IgaWYgYW5vdGhlciBjb21wb25lbnQgZmF0YWxzIGFuZCBjYXVzZXNcbiAgICAvLyB0aGUgc3RhdGUgb2YgdGhlIHRyZWUgdG8gYmUgY29ycnVwdGVkLCBgbm9kZWAgaGVyZSBjYW4gYmUgbnVsbC5cbiAgICB2YXIgbm9kZSA9IHRoaXMuZ2V0RE9NTm9kZSgpO1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICBub2RlLFxuICAgICAgJ0xvY2FsRXZlbnRUcmFwTWl4aW4udHJhcEJ1YmJsZWRFdmVudCguLi4pOiBSZXF1aXJlcyBub2RlIHRvIGJlIHJlbmRlcmVkLidcbiAgICApIDogaW52YXJpYW50KG5vZGUpKTtcbiAgICB2YXIgbGlzdGVuZXIgPSBSZWFjdEJyb3dzZXJFdmVudEVtaXR0ZXIudHJhcEJ1YmJsZWRFdmVudChcbiAgICAgIHRvcExldmVsVHlwZSxcbiAgICAgIGhhbmRsZXJCYXNlTmFtZSxcbiAgICAgIG5vZGVcbiAgICApO1xuICAgIHRoaXMuX2xvY2FsRXZlbnRMaXN0ZW5lcnMgPVxuICAgICAgYWNjdW11bGF0ZUludG8odGhpcy5fbG9jYWxFdmVudExpc3RlbmVycywgbGlzdGVuZXIpO1xuICB9LFxuXG4gIC8vIHRyYXBDYXB0dXJlZEV2ZW50IHdvdWxkIGxvb2sgbmVhcmx5IGlkZW50aWNhbC4gV2UgZG9uJ3QgaW1wbGVtZW50IHRoYXRcbiAgLy8gbWV0aG9kIGJlY2F1c2UgaXQgaXNuJ3QgY3VycmVudGx5IG5lZWRlZC5cblxuICBjb21wb25lbnRXaWxsVW5tb3VudDpmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbG9jYWxFdmVudExpc3RlbmVycykge1xuICAgICAgZm9yRWFjaEFjY3VtdWxhdGVkKHRoaXMuX2xvY2FsRXZlbnRMaXN0ZW5lcnMsIHJlbW92ZSk7XG4gICAgfVxuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExvY2FsRXZlbnRUcmFwTWl4aW47XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./accumulateInto":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js","./forEachAccumulated":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/LocalEventTrapMixin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/MobileSafariClickEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/MobileSafariClickEventPlugin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MobileSafariClickEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n/**\n * Mobile Safari does not fire properly bubble click events on non-interactive\n * elements, which means delegated click listeners do not fire. The workaround\n * for this bug involves attaching an empty click listener on the target node.\n *\n * This particular plugin works around the bug by attaching an empty click\n * listener on `touchstart` (which does fire on every element).\n */\nvar MobileSafariClickEventPlugin = {\n\n  eventTypes: null,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    if (topLevelType === topLevelTypes.topTouchStart) {\n      var target = nativeEvent.target;\n      if (target && !target.onclick) {\n        target.onclick = emptyFunction;\n      }\n    }\n  }\n\n};\n\nmodule.exports = MobileSafariClickEventPlugin;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/MobileSafariClickEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/MobileSafariClickEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","source":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/Object.assign.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function(copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function(a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function(a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fiveArgumentPooler = function(a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function(instance) {\n  var Klass = this;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.'\n  ) : invariant(instance instanceof Klass));\n  if (instance.destructor) {\n    instance.destructor();\n  }\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function(CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUG9vbGVkQ2xhc3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBQb29sZWRDbGFzc1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxuLyoqXG4gKiBTdGF0aWMgcG9vbGVycy4gU2V2ZXJhbCBjdXN0b20gdmVyc2lvbnMgZm9yIGVhY2ggcG90ZW50aWFsIG51bWJlciBvZlxuICogYXJndW1lbnRzLiBBIGNvbXBsZXRlbHkgZ2VuZXJpYyBwb29sZXIgaXMgZWFzeSB0byBpbXBsZW1lbnQsIGJ1dCB3b3VsZFxuICogcmVxdWlyZSBhY2Nlc3NpbmcgdGhlIGBhcmd1bWVudHNgIG9iamVjdC4gSW4gZWFjaCBvZiB0aGVzZSwgYHRoaXNgIHJlZmVycyB0b1xuICogdGhlIENsYXNzIGl0c2VsZiwgbm90IGFuIGluc3RhbmNlLiBJZiBhbnkgb3RoZXJzIGFyZSBuZWVkZWQsIHNpbXBseSBhZGQgdGhlbVxuICogaGVyZSwgb3IgaW4gdGhlaXIgb3duIGZpbGVzLlxuICovXG52YXIgb25lQXJndW1lbnRQb29sZXIgPSBmdW5jdGlvbihjb3B5RmllbGRzRnJvbSkge1xuICB2YXIgS2xhc3MgPSB0aGlzO1xuICBpZiAoS2xhc3MuaW5zdGFuY2VQb29sLmxlbmd0aCkge1xuICAgIHZhciBpbnN0YW5jZSA9IEtsYXNzLmluc3RhbmNlUG9vbC5wb3AoKTtcbiAgICBLbGFzcy5jYWxsKGluc3RhbmNlLCBjb3B5RmllbGRzRnJvbSk7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgS2xhc3MoY29weUZpZWxkc0Zyb20pO1xuICB9XG59O1xuXG52YXIgdHdvQXJndW1lbnRQb29sZXIgPSBmdW5jdGlvbihhMSwgYTIpIHtcbiAgdmFyIEtsYXNzID0gdGhpcztcbiAgaWYgKEtsYXNzLmluc3RhbmNlUG9vbC5sZW5ndGgpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBLbGFzcy5pbnN0YW5jZVBvb2wucG9wKCk7XG4gICAgS2xhc3MuY2FsbChpbnN0YW5jZSwgYTEsIGEyKTtcbiAgICByZXR1cm4gaW5zdGFuY2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5ldyBLbGFzcyhhMSwgYTIpO1xuICB9XG59O1xuXG52YXIgdGhyZWVBcmd1bWVudFBvb2xlciA9IGZ1bmN0aW9uKGExLCBhMiwgYTMpIHtcbiAgdmFyIEtsYXNzID0gdGhpcztcbiAgaWYgKEtsYXNzLmluc3RhbmNlUG9vbC5sZW5ndGgpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBLbGFzcy5pbnN0YW5jZVBvb2wucG9wKCk7XG4gICAgS2xhc3MuY2FsbChpbnN0YW5jZSwgYTEsIGEyLCBhMyk7XG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgS2xhc3MoYTEsIGEyLCBhMyk7XG4gIH1cbn07XG5cbnZhciBmaXZlQXJndW1lbnRQb29sZXIgPSBmdW5jdGlvbihhMSwgYTIsIGEzLCBhNCwgYTUpIHtcbiAgdmFyIEtsYXNzID0gdGhpcztcbiAgaWYgKEtsYXNzLmluc3RhbmNlUG9vbC5sZW5ndGgpIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBLbGFzcy5pbnN0YW5jZVBvb2wucG9wKCk7XG4gICAgS2xhc3MuY2FsbChpbnN0YW5jZSwgYTEsIGEyLCBhMywgYTQsIGE1KTtcbiAgICByZXR1cm4gaW5zdGFuY2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5ldyBLbGFzcyhhMSwgYTIsIGEzLCBhNCwgYTUpO1xuICB9XG59O1xuXG52YXIgc3RhbmRhcmRSZWxlYXNlciA9IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIHZhciBLbGFzcyA9IHRoaXM7XG4gIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgaW5zdGFuY2UgaW5zdGFuY2VvZiBLbGFzcyxcbiAgICAnVHJ5aW5nIHRvIHJlbGVhc2UgYW4gaW5zdGFuY2UgaW50byBhIHBvb2wgb2YgYSBkaWZmZXJlbnQgdHlwZS4nXG4gICkgOiBpbnZhcmlhbnQoaW5zdGFuY2UgaW5zdGFuY2VvZiBLbGFzcykpO1xuICBpZiAoaW5zdGFuY2UuZGVzdHJ1Y3Rvcikge1xuICAgIGluc3RhbmNlLmRlc3RydWN0b3IoKTtcbiAgfVxuICBpZiAoS2xhc3MuaW5zdGFuY2VQb29sLmxlbmd0aCA8IEtsYXNzLnBvb2xTaXplKSB7XG4gICAgS2xhc3MuaW5zdGFuY2VQb29sLnB1c2goaW5zdGFuY2UpO1xuICB9XG59O1xuXG52YXIgREVGQVVMVF9QT09MX1NJWkUgPSAxMDtcbnZhciBERUZBVUxUX1BPT0xFUiA9IG9uZUFyZ3VtZW50UG9vbGVyO1xuXG4vKipcbiAqIEF1Z21lbnRzIGBDb3B5Q29uc3RydWN0b3JgIHRvIGJlIGEgcG9vbGFibGUgY2xhc3MsIGF1Z21lbnRpbmcgb25seSB0aGUgY2xhc3NcbiAqIGl0c2VsZiAoc3RhdGljYWxseSkgbm90IGFkZGluZyBhbnkgcHJvdG90eXBpY2FsIGZpZWxkcy4gQW55IENvcHlDb25zdHJ1Y3RvclxuICogeW91IGdpdmUgdGhpcyBtYXkgaGF2ZSBhIGBwb29sU2l6ZWAgcHJvcGVydHksIGFuZCB3aWxsIGxvb2sgZm9yIGFcbiAqIHByb3RvdHlwaWNhbCBgZGVzdHJ1Y3RvcmAgb24gaW5zdGFuY2VzIChvcHRpb25hbCkuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gQ29weUNvbnN0cnVjdG9yIENvbnN0cnVjdG9yIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVzZXQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBwb29sZXIgQ3VzdG9taXphYmxlIHBvb2xlci5cbiAqL1xudmFyIGFkZFBvb2xpbmdUbyA9IGZ1bmN0aW9uKENvcHlDb25zdHJ1Y3RvciwgcG9vbGVyKSB7XG4gIHZhciBOZXdLbGFzcyA9IENvcHlDb25zdHJ1Y3RvcjtcbiAgTmV3S2xhc3MuaW5zdGFuY2VQb29sID0gW107XG4gIE5ld0tsYXNzLmdldFBvb2xlZCA9IHBvb2xlciB8fCBERUZBVUxUX1BPT0xFUjtcbiAgaWYgKCFOZXdLbGFzcy5wb29sU2l6ZSkge1xuICAgIE5ld0tsYXNzLnBvb2xTaXplID0gREVGQVVMVF9QT09MX1NJWkU7XG4gIH1cbiAgTmV3S2xhc3MucmVsZWFzZSA9IHN0YW5kYXJkUmVsZWFzZXI7XG4gIHJldHVybiBOZXdLbGFzcztcbn07XG5cbnZhciBQb29sZWRDbGFzcyA9IHtcbiAgYWRkUG9vbGluZ1RvOiBhZGRQb29saW5nVG8sXG4gIG9uZUFyZ3VtZW50UG9vbGVyOiBvbmVBcmd1bWVudFBvb2xlcixcbiAgdHdvQXJndW1lbnRQb29sZXI6IHR3b0FyZ3VtZW50UG9vbGVyLFxuICB0aHJlZUFyZ3VtZW50UG9vbGVyOiB0aHJlZUFyZ3VtZW50UG9vbGVyLFxuICBmaXZlQXJndW1lbnRQb29sZXI6IGZpdmVBcmd1bWVudFBvb2xlclxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBQb29sZWRDbGFzcztcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/PooledClass.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/React.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/React.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar ReactChildren = require(\"./ReactChildren\");\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactDefaultInjection = require(\"./ReactDefaultInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypes = require(\"./ReactPropTypes\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactServerRendering = require(\"./ReactServerRendering\");\n\nvar assign = require(\"./Object.assign\");\nvar findDOMNode = require(\"./findDOMNode\");\nvar onlyChild = require(\"./onlyChild\");\n\nReactDefaultInjection.inject();\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    only: onlyChild\n  },\n  Component: ReactComponent,\n  DOM: ReactDOM,\n  PropTypes: ReactPropTypes,\n  initializeTouchEvents: function(shouldUseTouch) {\n    EventPluginUtils.useTouchEvents = shouldUseTouch;\n  },\n  createClass: ReactClass.createClass,\n  createElement: createElement,\n  cloneElement: cloneElement,\n  createFactory: createFactory,\n  createMixin: function(mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n  constructAndRenderComponent: ReactMount.constructAndRenderComponent,\n  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,\n  findDOMNode: findDOMNode,\n  render: render,\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  isValidElement: ReactElement.isValidElement,\n  withContext: ReactContext.withContext,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // If we're in Chrome, look for the devtools marker and provide a download\n    // link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n        console.debug(\n          'Download the React DevTools for a better development experience: ' +\n          'https://fb.me/react-devtools'\n        );\n      }\n    }\n\n    var expectedFeatures = [\n      // shims\n      Array.isArray,\n      Array.prototype.every,\n      Array.prototype.forEach,\n      Array.prototype.indexOf,\n      Array.prototype.map,\n      Date.now,\n      Function.prototype.bind,\n      Object.keys,\n      String.prototype.split,\n      String.prototype.trim,\n\n      // shams\n      Object.create,\n      Object.freeze\n    ];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error(\n          'One or more ES5 shim/shams expected by React are not available: ' +\n          'https://fb.me/react-warning-polyfills'\n        );\n        break;\n      }\n    }\n  }\n}\n\nReact.version = '0.13.3';\n\nmodule.exports = React;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdFxuICovXG5cbi8qIGdsb2JhbHMgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgRXZlbnRQbHVnaW5VdGlscyA9IHJlcXVpcmUoXCIuL0V2ZW50UGx1Z2luVXRpbHNcIik7XG52YXIgUmVhY3RDaGlsZHJlbiA9IHJlcXVpcmUoXCIuL1JlYWN0Q2hpbGRyZW5cIik7XG52YXIgUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKFwiLi9SZWFjdENvbXBvbmVudFwiKTtcbnZhciBSZWFjdENsYXNzID0gcmVxdWlyZShcIi4vUmVhY3RDbGFzc1wiKTtcbnZhciBSZWFjdENvbnRleHQgPSByZXF1aXJlKFwiLi9SZWFjdENvbnRleHRcIik7XG52YXIgUmVhY3RDdXJyZW50T3duZXIgPSByZXF1aXJlKFwiLi9SZWFjdEN1cnJlbnRPd25lclwiKTtcbnZhciBSZWFjdEVsZW1lbnQgPSByZXF1aXJlKFwiLi9SZWFjdEVsZW1lbnRcIik7XG52YXIgUmVhY3RFbGVtZW50VmFsaWRhdG9yID0gcmVxdWlyZShcIi4vUmVhY3RFbGVtZW50VmFsaWRhdG9yXCIpO1xudmFyIFJlYWN0RE9NID0gcmVxdWlyZShcIi4vUmVhY3RET01cIik7XG52YXIgUmVhY3RET01UZXh0Q29tcG9uZW50ID0gcmVxdWlyZShcIi4vUmVhY3RET01UZXh0Q29tcG9uZW50XCIpO1xudmFyIFJlYWN0RGVmYXVsdEluamVjdGlvbiA9IHJlcXVpcmUoXCIuL1JlYWN0RGVmYXVsdEluamVjdGlvblwiKTtcbnZhciBSZWFjdEluc3RhbmNlSGFuZGxlcyA9IHJlcXVpcmUoXCIuL1JlYWN0SW5zdGFuY2VIYW5kbGVzXCIpO1xudmFyIFJlYWN0TW91bnQgPSByZXF1aXJlKFwiLi9SZWFjdE1vdW50XCIpO1xudmFyIFJlYWN0UGVyZiA9IHJlcXVpcmUoXCIuL1JlYWN0UGVyZlwiKTtcbnZhciBSZWFjdFByb3BUeXBlcyA9IHJlcXVpcmUoXCIuL1JlYWN0UHJvcFR5cGVzXCIpO1xudmFyIFJlYWN0UmVjb25jaWxlciA9IHJlcXVpcmUoXCIuL1JlYWN0UmVjb25jaWxlclwiKTtcbnZhciBSZWFjdFNlcnZlclJlbmRlcmluZyA9IHJlcXVpcmUoXCIuL1JlYWN0U2VydmVyUmVuZGVyaW5nXCIpO1xuXG52YXIgYXNzaWduID0gcmVxdWlyZShcIi4vT2JqZWN0LmFzc2lnblwiKTtcbnZhciBmaW5kRE9NTm9kZSA9IHJlcXVpcmUoXCIuL2ZpbmRET01Ob2RlXCIpO1xudmFyIG9ubHlDaGlsZCA9IHJlcXVpcmUoXCIuL29ubHlDaGlsZFwiKTtcblxuUmVhY3REZWZhdWx0SW5qZWN0aW9uLmluamVjdCgpO1xuXG52YXIgY3JlYXRlRWxlbWVudCA9IFJlYWN0RWxlbWVudC5jcmVhdGVFbGVtZW50O1xudmFyIGNyZWF0ZUZhY3RvcnkgPSBSZWFjdEVsZW1lbnQuY3JlYXRlRmFjdG9yeTtcbnZhciBjbG9uZUVsZW1lbnQgPSBSZWFjdEVsZW1lbnQuY2xvbmVFbGVtZW50O1xuXG5pZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gIGNyZWF0ZUVsZW1lbnQgPSBSZWFjdEVsZW1lbnRWYWxpZGF0b3IuY3JlYXRlRWxlbWVudDtcbiAgY3JlYXRlRmFjdG9yeSA9IFJlYWN0RWxlbWVudFZhbGlkYXRvci5jcmVhdGVGYWN0b3J5O1xuICBjbG9uZUVsZW1lbnQgPSBSZWFjdEVsZW1lbnRWYWxpZGF0b3IuY2xvbmVFbGVtZW50O1xufVxuXG52YXIgcmVuZGVyID0gUmVhY3RQZXJmLm1lYXN1cmUoJ1JlYWN0JywgJ3JlbmRlcicsIFJlYWN0TW91bnQucmVuZGVyKTtcblxudmFyIFJlYWN0ID0ge1xuICBDaGlsZHJlbjoge1xuICAgIG1hcDogUmVhY3RDaGlsZHJlbi5tYXAsXG4gICAgZm9yRWFjaDogUmVhY3RDaGlsZHJlbi5mb3JFYWNoLFxuICAgIGNvdW50OiBSZWFjdENoaWxkcmVuLmNvdW50LFxuICAgIG9ubHk6IG9ubHlDaGlsZFxuICB9LFxuICBDb21wb25lbnQ6IFJlYWN0Q29tcG9uZW50LFxuICBET006IFJlYWN0RE9NLFxuICBQcm9wVHlwZXM6IFJlYWN0UHJvcFR5cGVzLFxuICBpbml0aWFsaXplVG91Y2hFdmVudHM6IGZ1bmN0aW9uKHNob3VsZFVzZVRvdWNoKSB7XG4gICAgRXZlbnRQbHVnaW5VdGlscy51c2VUb3VjaEV2ZW50cyA9IHNob3VsZFVzZVRvdWNoO1xuICB9LFxuICBjcmVhdGVDbGFzczogUmVhY3RDbGFzcy5jcmVhdGVDbGFzcyxcbiAgY3JlYXRlRWxlbWVudDogY3JlYXRlRWxlbWVudCxcbiAgY2xvbmVFbGVtZW50OiBjbG9uZUVsZW1lbnQsXG4gIGNyZWF0ZUZhY3Rvcnk6IGNyZWF0ZUZhY3RvcnksXG4gIGNyZWF0ZU1peGluOiBmdW5jdGlvbihtaXhpbikge1xuICAgIC8vIEN1cnJlbnRseSBhIG5vb3AuIFdpbGwgYmUgdXNlZCB0byB2YWxpZGF0ZSBhbmQgdHJhY2UgbWl4aW5zLlxuICAgIHJldHVybiBtaXhpbjtcbiAgfSxcbiAgY29uc3RydWN0QW5kUmVuZGVyQ29tcG9uZW50OiBSZWFjdE1vdW50LmNvbnN0cnVjdEFuZFJlbmRlckNvbXBvbmVudCxcbiAgY29uc3RydWN0QW5kUmVuZGVyQ29tcG9uZW50QnlJRDogUmVhY3RNb3VudC5jb25zdHJ1Y3RBbmRSZW5kZXJDb21wb25lbnRCeUlELFxuICBmaW5kRE9NTm9kZTogZmluZERPTU5vZGUsXG4gIHJlbmRlcjogcmVuZGVyLFxuICByZW5kZXJUb1N0cmluZzogUmVhY3RTZXJ2ZXJSZW5kZXJpbmcucmVuZGVyVG9TdHJpbmcsXG4gIHJlbmRlclRvU3RhdGljTWFya3VwOiBSZWFjdFNlcnZlclJlbmRlcmluZy5yZW5kZXJUb1N0YXRpY01hcmt1cCxcbiAgdW5tb3VudENvbXBvbmVudEF0Tm9kZTogUmVhY3RNb3VudC51bm1vdW50Q29tcG9uZW50QXROb2RlLFxuICBpc1ZhbGlkRWxlbWVudDogUmVhY3RFbGVtZW50LmlzVmFsaWRFbGVtZW50LFxuICB3aXRoQ29udGV4dDogUmVhY3RDb250ZXh0LndpdGhDb250ZXh0LFxuXG4gIC8vIEhvb2sgZm9yIEpTWCBzcHJlYWQsIGRvbid0IHVzZSB0aGlzIGZvciBhbnl0aGluZyBlbHNlLlxuICBfX3NwcmVhZDogYXNzaWduXG59O1xuXG4vLyBJbmplY3QgdGhlIHJ1bnRpbWUgaW50byBhIGRldnRvb2xzIGdsb2JhbCBob29rIHJlZ2FyZGxlc3Mgb2YgYnJvd3Nlci5cbi8vIEFsbG93cyBmb3IgZGVidWdnaW5nIHdoZW4gdGhlIGhvb2sgaXMgaW5qZWN0ZWQgb24gdGhlIHBhZ2UuXG5pZiAoXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gIT09ICd1bmRlZmluZWQnICYmXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uaW5qZWN0ID09PSAnZnVuY3Rpb24nKSB7XG4gIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5pbmplY3Qoe1xuICAgIEN1cnJlbnRPd25lcjogUmVhY3RDdXJyZW50T3duZXIsXG4gICAgSW5zdGFuY2VIYW5kbGVzOiBSZWFjdEluc3RhbmNlSGFuZGxlcyxcbiAgICBNb3VudDogUmVhY3RNb3VudCxcbiAgICBSZWNvbmNpbGVyOiBSZWFjdFJlY29uY2lsZXIsXG4gICAgVGV4dENvbXBvbmVudDogUmVhY3RET01UZXh0Q29tcG9uZW50XG4gIH0pO1xufVxuXG5pZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gIHZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoXCIuL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpO1xuICBpZiAoRXhlY3V0aW9uRW52aXJvbm1lbnQuY2FuVXNlRE9NICYmIHdpbmRvdy50b3AgPT09IHdpbmRvdy5zZWxmKSB7XG5cbiAgICAvLyBJZiB3ZSdyZSBpbiBDaHJvbWUsIGxvb2sgZm9yIHRoZSBkZXZ0b29scyBtYXJrZXIgYW5kIHByb3ZpZGUgYSBkb3dubG9hZFxuICAgIC8vIGxpbmsgaWYgbm90IGluc3RhbGxlZC5cbiAgICBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUnKSA+IC0xKSB7XG4gICAgICBpZiAodHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5kZWJ1ZyhcbiAgICAgICAgICAnRG93bmxvYWQgdGhlIFJlYWN0IERldlRvb2xzIGZvciBhIGJldHRlciBkZXZlbG9wbWVudCBleHBlcmllbmNlOiAnICtcbiAgICAgICAgICAnaHR0cHM6Ly9mYi5tZS9yZWFjdC1kZXZ0b29scydcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgZXhwZWN0ZWRGZWF0dXJlcyA9IFtcbiAgICAgIC8vIHNoaW1zXG4gICAgICBBcnJheS5pc0FycmF5LFxuICAgICAgQXJyYXkucHJvdG90eXBlLmV2ZXJ5LFxuICAgICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2gsXG4gICAgICBBcnJheS5wcm90b3R5cGUuaW5kZXhPZixcbiAgICAgIEFycmF5LnByb3RvdHlwZS5tYXAsXG4gICAgICBEYXRlLm5vdyxcbiAgICAgIEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLFxuICAgICAgT2JqZWN0LmtleXMsXG4gICAgICBTdHJpbmcucHJvdG90eXBlLnNwbGl0LFxuICAgICAgU3RyaW5nLnByb3RvdHlwZS50cmltLFxuXG4gICAgICAvLyBzaGFtc1xuICAgICAgT2JqZWN0LmNyZWF0ZSxcbiAgICAgIE9iamVjdC5mcmVlemVcbiAgICBdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHBlY3RlZEZlYXR1cmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWV4cGVjdGVkRmVhdHVyZXNbaV0pIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICAnT25lIG9yIG1vcmUgRVM1IHNoaW0vc2hhbXMgZXhwZWN0ZWQgYnkgUmVhY3QgYXJlIG5vdCBhdmFpbGFibGU6ICcgK1xuICAgICAgICAgICdodHRwczovL2ZiLm1lL3JlYWN0LXdhcm5pbmctcG9seWZpbGxzJ1xuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuUmVhY3QudmVyc2lvbiA9ICcwLjEzLjMnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0O1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./onlyChild":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/onlyChild.js","./ReactDOM":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOM.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./ReactPropTypes":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js","./findDOMNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js","./ReactContext":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js","./EventPluginUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js","./ReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js","./ReactChildren":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildren.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElementValidator":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","./ReactServerRendering":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRendering.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./ReactDOMTextComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js","./ReactDefaultInjection":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultInjection.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/React.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/React.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar findDOMNode = require(\"./findDOMNode\");\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function() {\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n","deps":{"./findDOMNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactBrowserComponentMixin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar assign = require(\"./Object.assign\");\nvar isEventSupported = require(\"./isEventSupported\");\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTextInput: 'textInput',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function(ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(\n        ReactBrowserEventEmitter.handleTopLevel\n      );\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!(\n            (isListening.hasOwnProperty(dependency) && isListening[dependency])\n          )) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'wheel',\n              mountAt\n            );\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'mousewheel',\n              mountAt\n            );\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt\n            );\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              mountAt\n            );\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topScroll,\n              'scroll',\n              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE\n            );\n          }\n        } else if (dependency === topLevelTypes.topFocus ||\n            dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topFocus,\n              'focus',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n              topLevelTypes.topBlur,\n              'blur',\n              mountAt\n            );\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topFocus,\n              'focusin',\n              mountAt\n            );\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n              topLevelTypes.topBlur,\n              'focusout',\n              mountAt\n            );\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n            dependency,\n            topEventMapping[dependency],\n            mountAt\n          );\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(\n      topLevelType,\n      handlerBaseName,\n      handle\n    );\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function() {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPluginHub":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./isEventSupported":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js","./ViewportMetrics":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js","./EventPluginRegistry":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js","./ReactEventEmitterMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventEmitterMixin.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactBrowserEventEmitter.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildReconciler.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildReconciler.js","source":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require(\"./ReactReconciler\");\n\nvar flattenChildren = require(\"./flattenChildren\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function(nestedChildNodes, transaction, context) {\n    var children = flattenChildren(nestedChildNodes);\n    for (var name in children) {\n      if (children.hasOwnProperty(name)) {\n        var child = children[name];\n        // The rendered children must be turned into instances as they're\n        // mounted.\n        var childInstance = instantiateReactComponent(child, null);\n        children[name] = childInstance;\n      }\n    }\n    return children;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextNestedChildNodes Nested child maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function(\n    prevChildren,\n    nextNestedChildNodes,\n    transaction,\n    context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    var nextChildren = flattenChildren(nextNestedChildNodes);\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(\n          prevChild, nextElement, transaction, context\n        );\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(\n          nextElement,\n          null\n        );\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) &&\n          !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function(renderedChildren) {\n    for (var name in renderedChildren) {\n      var renderedChild = renderedChildren[name];\n      ReactReconciler.unmountComponent(renderedChild);\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n","deps":{"./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./instantiateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js","./shouldUpdateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js","./flattenChildren":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/flattenChildren.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildReconciler.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactChildReconciler.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildren.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildren.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactFragment = require(\"./ReactFragment\");\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar threeArgumentPooler = PooledClass.threeArgumentPooler;\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.forEachFunction = forEachFunction;\n  this.forEachContext = forEachContext;\n}\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(traverseContext, child, name, i) {\n  var forEachBookKeeping = traverseContext;\n  forEachBookKeeping.forEachFunction.call(\n    forEachBookKeeping.forEachContext, child, i);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc.\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext =\n    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, mapFunction, mapContext) {\n  this.mapResult = mapResult;\n  this.mapFunction = mapFunction;\n  this.mapContext = mapContext;\n}\nPooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);\n\nfunction mapSingleChildIntoContext(traverseContext, child, name, i) {\n  var mapBookKeeping = traverseContext;\n  var mapResult = mapBookKeeping.mapResult;\n\n  var keyUnique = !mapResult.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'ReactChildren.map(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n\n  if (keyUnique) {\n    var mappedChild =\n      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);\n    mapResult[name] = mappedChild;\n  }\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * TODO: This may likely break any calls to `ReactChildren.map` that were\n * previously relying on the fact that we guarded against null children.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} mapFunction.\n * @param {*} mapContext Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var mapResult = {};\n  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n  return ReactFragment.create(mapResult);\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name, i) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  count: countChildren\n};\n\nmodule.exports = ReactChildren;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RDaGlsZHJlbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RDaGlsZHJlblxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFBvb2xlZENsYXNzID0gcmVxdWlyZShcIi4vUG9vbGVkQ2xhc3NcIik7XG52YXIgUmVhY3RGcmFnbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RnJhZ21lbnRcIik7XG5cbnZhciB0cmF2ZXJzZUFsbENoaWxkcmVuID0gcmVxdWlyZShcIi4vdHJhdmVyc2VBbGxDaGlsZHJlblwiKTtcbnZhciB3YXJuaW5nID0gcmVxdWlyZShcIi4vd2FybmluZ1wiKTtcblxudmFyIHR3b0FyZ3VtZW50UG9vbGVyID0gUG9vbGVkQ2xhc3MudHdvQXJndW1lbnRQb29sZXI7XG52YXIgdGhyZWVBcmd1bWVudFBvb2xlciA9IFBvb2xlZENsYXNzLnRocmVlQXJndW1lbnRQb29sZXI7XG5cbi8qKlxuICogUG9vbGVkQ2xhc3MgcmVwcmVzZW50aW5nIHRoZSBib29ra2VlcGluZyBhc3NvY2lhdGVkIHdpdGggcGVyZm9ybWluZyBhIGNoaWxkXG4gKiB0cmF2ZXJzYWwuIEFsbG93cyBhdm9pZGluZyBiaW5kaW5nIGNhbGxiYWNrcy5cbiAqXG4gKiBAY29uc3RydWN0b3IgRm9yRWFjaEJvb2tLZWVwaW5nXG4gKiBAcGFyYW0geyFmdW5jdGlvbn0gZm9yRWFjaEZ1bmN0aW9uIEZ1bmN0aW9uIHRvIHBlcmZvcm0gdHJhdmVyc2FsIHdpdGguXG4gKiBAcGFyYW0gez8qfSBmb3JFYWNoQ29udGV4dCBDb250ZXh0IHRvIHBlcmZvcm0gY29udGV4dCB3aXRoLlxuICovXG5mdW5jdGlvbiBGb3JFYWNoQm9va0tlZXBpbmcoZm9yRWFjaEZ1bmN0aW9uLCBmb3JFYWNoQ29udGV4dCkge1xuICB0aGlzLmZvckVhY2hGdW5jdGlvbiA9IGZvckVhY2hGdW5jdGlvbjtcbiAgdGhpcy5mb3JFYWNoQ29udGV4dCA9IGZvckVhY2hDb250ZXh0O1xufVxuUG9vbGVkQ2xhc3MuYWRkUG9vbGluZ1RvKEZvckVhY2hCb29rS2VlcGluZywgdHdvQXJndW1lbnRQb29sZXIpO1xuXG5mdW5jdGlvbiBmb3JFYWNoU2luZ2xlQ2hpbGQodHJhdmVyc2VDb250ZXh0LCBjaGlsZCwgbmFtZSwgaSkge1xuICB2YXIgZm9yRWFjaEJvb2tLZWVwaW5nID0gdHJhdmVyc2VDb250ZXh0O1xuICBmb3JFYWNoQm9va0tlZXBpbmcuZm9yRWFjaEZ1bmN0aW9uLmNhbGwoXG4gICAgZm9yRWFjaEJvb2tLZWVwaW5nLmZvckVhY2hDb250ZXh0LCBjaGlsZCwgaSk7XG59XG5cbi8qKlxuICogSXRlcmF0ZXMgdGhyb3VnaCBjaGlsZHJlbiB0aGF0IGFyZSB0eXBpY2FsbHkgc3BlY2lmaWVkIGFzIGBwcm9wcy5jaGlsZHJlbmAuXG4gKlxuICogVGhlIHByb3ZpZGVkIGZvckVhY2hGdW5jKGNoaWxkLCBpbmRleCkgd2lsbCBiZSBjYWxsZWQgZm9yIGVhY2hcbiAqIGxlYWYgY2hpbGQuXG4gKlxuICogQHBhcmFtIHs/Kn0gY2hpbGRyZW4gQ2hpbGRyZW4gdHJlZSBjb250YWluZXIuXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCosIGludCl9IGZvckVhY2hGdW5jLlxuICogQHBhcmFtIHsqfSBmb3JFYWNoQ29udGV4dCBDb250ZXh0IGZvciBmb3JFYWNoQ29udGV4dC5cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaENoaWxkcmVuKGNoaWxkcmVuLCBmb3JFYWNoRnVuYywgZm9yRWFjaENvbnRleHQpIHtcbiAgaWYgKGNoaWxkcmVuID09IG51bGwpIHtcbiAgICByZXR1cm4gY2hpbGRyZW47XG4gIH1cblxuICB2YXIgdHJhdmVyc2VDb250ZXh0ID1cbiAgICBGb3JFYWNoQm9va0tlZXBpbmcuZ2V0UG9vbGVkKGZvckVhY2hGdW5jLCBmb3JFYWNoQ29udGV4dCk7XG4gIHRyYXZlcnNlQWxsQ2hpbGRyZW4oY2hpbGRyZW4sIGZvckVhY2hTaW5nbGVDaGlsZCwgdHJhdmVyc2VDb250ZXh0KTtcbiAgRm9yRWFjaEJvb2tLZWVwaW5nLnJlbGVhc2UodHJhdmVyc2VDb250ZXh0KTtcbn1cblxuLyoqXG4gKiBQb29sZWRDbGFzcyByZXByZXNlbnRpbmcgdGhlIGJvb2trZWVwaW5nIGFzc29jaWF0ZWQgd2l0aCBwZXJmb3JtaW5nIGEgY2hpbGRcbiAqIG1hcHBpbmcuIEFsbG93cyBhdm9pZGluZyBiaW5kaW5nIGNhbGxiYWNrcy5cbiAqXG4gKiBAY29uc3RydWN0b3IgTWFwQm9va0tlZXBpbmdcbiAqIEBwYXJhbSB7ISp9IG1hcFJlc3VsdCBPYmplY3QgY29udGFpbmluZyB0aGUgb3JkZXJlZCBtYXAgb2YgcmVzdWx0cy5cbiAqIEBwYXJhbSB7IWZ1bmN0aW9ufSBtYXBGdW5jdGlvbiBGdW5jdGlvbiB0byBwZXJmb3JtIG1hcHBpbmcgd2l0aC5cbiAqIEBwYXJhbSB7Pyp9IG1hcENvbnRleHQgQ29udGV4dCB0byBwZXJmb3JtIG1hcHBpbmcgd2l0aC5cbiAqL1xuZnVuY3Rpb24gTWFwQm9va0tlZXBpbmcobWFwUmVzdWx0LCBtYXBGdW5jdGlvbiwgbWFwQ29udGV4dCkge1xuICB0aGlzLm1hcFJlc3VsdCA9IG1hcFJlc3VsdDtcbiAgdGhpcy5tYXBGdW5jdGlvbiA9IG1hcEZ1bmN0aW9uO1xuICB0aGlzLm1hcENvbnRleHQgPSBtYXBDb250ZXh0O1xufVxuUG9vbGVkQ2xhc3MuYWRkUG9vbGluZ1RvKE1hcEJvb2tLZWVwaW5nLCB0aHJlZUFyZ3VtZW50UG9vbGVyKTtcblxuZnVuY3Rpb24gbWFwU2luZ2xlQ2hpbGRJbnRvQ29udGV4dCh0cmF2ZXJzZUNvbnRleHQsIGNoaWxkLCBuYW1lLCBpKSB7XG4gIHZhciBtYXBCb29rS2VlcGluZyA9IHRyYXZlcnNlQ29udGV4dDtcbiAgdmFyIG1hcFJlc3VsdCA9IG1hcEJvb2tLZWVwaW5nLm1hcFJlc3VsdDtcblxuICB2YXIga2V5VW5pcXVlID0gIW1hcFJlc3VsdC5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcbiAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAga2V5VW5pcXVlLFxuICAgICAgJ1JlYWN0Q2hpbGRyZW4ubWFwKC4uLik6IEVuY291bnRlcmVkIHR3byBjaGlsZHJlbiB3aXRoIHRoZSBzYW1lIGtleSwgJyArXG4gICAgICAnYCVzYC4gQ2hpbGQga2V5cyBtdXN0IGJlIHVuaXF1ZTsgd2hlbiB0d28gY2hpbGRyZW4gc2hhcmUgYSBrZXksIG9ubHkgJyArXG4gICAgICAndGhlIGZpcnN0IGNoaWxkIHdpbGwgYmUgdXNlZC4nLFxuICAgICAgbmFtZVxuICAgICkgOiBudWxsKTtcbiAgfVxuXG4gIGlmIChrZXlVbmlxdWUpIHtcbiAgICB2YXIgbWFwcGVkQ2hpbGQgPVxuICAgICAgbWFwQm9va0tlZXBpbmcubWFwRnVuY3Rpb24uY2FsbChtYXBCb29rS2VlcGluZy5tYXBDb250ZXh0LCBjaGlsZCwgaSk7XG4gICAgbWFwUmVzdWx0W25hbWVdID0gbWFwcGVkQ2hpbGQ7XG4gIH1cbn1cblxuLyoqXG4gKiBNYXBzIGNoaWxkcmVuIHRoYXQgYXJlIHR5cGljYWxseSBzcGVjaWZpZWQgYXMgYHByb3BzLmNoaWxkcmVuYC5cbiAqXG4gKiBUaGUgcHJvdmlkZWQgbWFwRnVuY3Rpb24oY2hpbGQsIGtleSwgaW5kZXgpIHdpbGwgYmUgY2FsbGVkIGZvciBlYWNoXG4gKiBsZWFmIGNoaWxkLlxuICpcbiAqIFRPRE86IFRoaXMgbWF5IGxpa2VseSBicmVhayBhbnkgY2FsbHMgdG8gYFJlYWN0Q2hpbGRyZW4ubWFwYCB0aGF0IHdlcmVcbiAqIHByZXZpb3VzbHkgcmVseWluZyBvbiB0aGUgZmFjdCB0aGF0IHdlIGd1YXJkZWQgYWdhaW5zdCBudWxsIGNoaWxkcmVuLlxuICpcbiAqIEBwYXJhbSB7Pyp9IGNoaWxkcmVuIENoaWxkcmVuIHRyZWUgY29udGFpbmVyLlxuICogQHBhcmFtIHtmdW5jdGlvbigqLCBpbnQpfSBtYXBGdW5jdGlvbi5cbiAqIEBwYXJhbSB7Kn0gbWFwQ29udGV4dCBDb250ZXh0IGZvciBtYXBGdW5jdGlvbi5cbiAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IGNvbnRhaW5pbmcgdGhlIG9yZGVyZWQgbWFwIG9mIHJlc3VsdHMuXG4gKi9cbmZ1bmN0aW9uIG1hcENoaWxkcmVuKGNoaWxkcmVuLCBmdW5jLCBjb250ZXh0KSB7XG4gIGlmIChjaGlsZHJlbiA9PSBudWxsKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xuICB9XG5cbiAgdmFyIG1hcFJlc3VsdCA9IHt9O1xuICB2YXIgdHJhdmVyc2VDb250ZXh0ID0gTWFwQm9va0tlZXBpbmcuZ2V0UG9vbGVkKG1hcFJlc3VsdCwgZnVuYywgY29udGV4dCk7XG4gIHRyYXZlcnNlQWxsQ2hpbGRyZW4oY2hpbGRyZW4sIG1hcFNpbmdsZUNoaWxkSW50b0NvbnRleHQsIHRyYXZlcnNlQ29udGV4dCk7XG4gIE1hcEJvb2tLZWVwaW5nLnJlbGVhc2UodHJhdmVyc2VDb250ZXh0KTtcbiAgcmV0dXJuIFJlYWN0RnJhZ21lbnQuY3JlYXRlKG1hcFJlc3VsdCk7XG59XG5cbmZ1bmN0aW9uIGZvckVhY2hTaW5nbGVDaGlsZER1bW15KHRyYXZlcnNlQ29udGV4dCwgY2hpbGQsIG5hbWUsIGkpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbi8qKlxuICogQ291bnQgdGhlIG51bWJlciBvZiBjaGlsZHJlbiB0aGF0IGFyZSB0eXBpY2FsbHkgc3BlY2lmaWVkIGFzXG4gKiBgcHJvcHMuY2hpbGRyZW5gLlxuICpcbiAqIEBwYXJhbSB7Pyp9IGNoaWxkcmVuIENoaWxkcmVuIHRyZWUgY29udGFpbmVyLlxuICogQHJldHVybiB7bnVtYmVyfSBUaGUgbnVtYmVyIG9mIGNoaWxkcmVuLlxuICovXG5mdW5jdGlvbiBjb3VudENoaWxkcmVuKGNoaWxkcmVuLCBjb250ZXh0KSB7XG4gIHJldHVybiB0cmF2ZXJzZUFsbENoaWxkcmVuKGNoaWxkcmVuLCBmb3JFYWNoU2luZ2xlQ2hpbGREdW1teSwgbnVsbCk7XG59XG5cbnZhciBSZWFjdENoaWxkcmVuID0ge1xuICBmb3JFYWNoOiBmb3JFYWNoQ2hpbGRyZW4sXG4gIG1hcDogbWFwQ2hpbGRyZW4sXG4gIGNvdW50OiBjb3VudENoaWxkcmVuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0Q2hpbGRyZW47XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./ReactFragment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","./traverseAllChildren":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildren.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactChildren.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require(\"./ReactComponent\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactErrorUtils = require(\"./ReactErrorUtils\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar keyMirror = require(\"./keyMirror\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar MIXINS_KEY = keyOf({mixins: null});\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function(Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function(Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function(Constructor, childContextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        childContextTypes,\n        ReactPropTypeLocations.childContext\n      );\n    }\n    Constructor.childContextTypes = assign(\n      {},\n      Constructor.childContextTypes,\n      childContextTypes\n    );\n  },\n  contextTypes: function(Constructor, contextTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        contextTypes,\n        ReactPropTypeLocations.context\n      );\n    }\n    Constructor.contextTypes = assign(\n      {},\n      Constructor.contextTypes,\n      contextTypes\n    );\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function(Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(\n        Constructor.getDefaultProps,\n        getDefaultProps\n      );\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function(Constructor, propTypes) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      validateTypeDef(\n        Constructor,\n        propTypes,\n        ReactPropTypeLocations.prop\n      );\n    }\n    Constructor.propTypes = assign(\n      {},\n      Constructor.propTypes,\n      propTypes\n    );\n  },\n  statics: function(Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  }\n};\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof typeDef[propName] === 'function',\n        '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n        'React.PropTypes.',\n        Constructor.displayName || 'ReactClass',\n        ReactPropTypeLocationNames[location],\n        propName\n      ) : null);\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?\n    ReactClassInterface[name] :\n    null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.OVERRIDE_BASE,\n      'ReactClassInterface: You are attempting to override ' +\n      '`%s` from your class specification. Ensure that your method names ' +\n      'do not overlap with React methods.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      specPolicy === SpecPolicy.DEFINE_MANY ||\n      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,\n      'ReactClassInterface: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be due ' +\n      'to a mixin.',\n      name\n    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||\n    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof spec !== 'function',\n    'ReactClass: You\\'re attempting to ' +\n    'use a component class as a mixin. Instead, just use a regular object.'\n  ) : invariant(typeof spec !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !ReactElement.isValidElement(spec),\n    'ReactClass: You\\'re attempting to ' +\n    'use a component as a mixin. Instead, just use a regular object.'\n  ) : invariant(!ReactElement.isValidElement(spec)));\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod =\n        ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var markedDontBind = property && property.__reactDontBind;\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind =\n        isFunction &&\n        !isReactClassMethod &&\n        !isAlreadyDefined &&\n        !markedDontBind;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            isReactClassMethod && (\n              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n            ),\n            'ReactClass: Unexpected spec policy %s for key %s ' +\n            'when mixing in component specs.',\n            specPolicy,\n            name\n          ) : invariant(isReactClassMethod && (\n            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)\n          )));\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (\"production\" !== process.env.NODE_ENV) {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isReserved,\n      'ReactClass: You are attempting to define a reserved ' +\n      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n      'as an instance property instead; it will still be accessible on the ' +\n      'constructor.',\n      name\n    ) : invariant(!isReserved));\n\n    var isInherited = name in Constructor;\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !isInherited,\n      'ReactClass: You are attempting to define ' +\n      '`%s` on your component more than once. This conflict may be ' +\n      'due to a mixin.',\n      name\n    ) : invariant(!isInherited));\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    one && two && typeof one === 'object' && typeof two === 'object',\n    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        one[key] === undefined,\n        'mergeIntoWithNoDuplicateKeys(): ' +\n        'Tried to merge two objects with the same key: `%s`. This conflict ' +\n        'may be due to a mixin; in particular, this may be caused by two ' +\n        'getInitialState() or getDefaultProps() methods returning objects ' +\n        'with clashing keys.',\n        key\n      ) : invariant(one[key] === undefined));\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (\"production\" !== process.env.NODE_ENV) {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): React component methods may only be bound to the ' +\n          'component instance. See %s',\n          componentName\n        ) : null);\n      } else if (!args.length) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See %s',\n          componentName\n        ) : null);\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(\n        component,\n        ReactErrorUtils.guard(\n          method,\n          component.constructor.displayName + '.' + autoBindKey\n        )\n      );\n    }\n  }\n}\n\nvar typeDeprecationDescriptor = {\n  enumerable: false,\n  get: function() {\n    var displayName = this.displayName || this.name || 'Component';\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      '%s.type is deprecated. Use %s directly to access the class.',\n      displayName,\n      displayName\n    ) : null);\n    Object.defineProperty(this, 'type', {\n      value: this\n    });\n    return this;\n  }\n};\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function(newState, callback) {\n    ReactUpdateQueue.enqueueReplaceState(this, newState);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function() {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          owner._warnedAboutRefsInRender,\n          '%s is accessing isMounted inside its render() function. ' +\n          'render() should be a pure function of props and state. It should ' +\n          'never access something that requires stale data from the previous ' +\n          'render, such as refs. Move this logic to componentDidMount and ' +\n          'componentDidUpdate instead.',\n          owner.getName() || 'A component'\n        ) : null);\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(this);\n    return (\n      internalInstance &&\n      internalInstance !== ReactLifeCycle.currentlyMountingInstance\n    );\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function(partialProps, callback) {\n    ReactUpdateQueue.enqueueSetProps(this, partialProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function(newProps, callback) {\n    ReactUpdateQueue.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      ReactUpdateQueue.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function() {};\nassign(\n  ReactClassComponent.prototype,\n  ReactComponent.prototype,\n  ReactClassMixin\n);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function(spec) {\n    var Constructor = function(props, context) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n          'JSX instead. See: https://fb.me/react-legacyfactory'\n        ) : null);\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (\"production\" !== process.env.NODE_ENV) {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' &&\n            this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(\n      mixSpecIntoComponent.bind(null, Constructor)\n    );\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    ) : invariant(Constructor.prototype.render));\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        spec.displayName || 'A component'\n      ) : null);\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    // Legacy hook\n    Constructor.type = Constructor;\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function(mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RDbGFzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdENsYXNzXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKFwiLi9SZWFjdENvbXBvbmVudFwiKTtcbnZhciBSZWFjdEN1cnJlbnRPd25lciA9IHJlcXVpcmUoXCIuL1JlYWN0Q3VycmVudE93bmVyXCIpO1xudmFyIFJlYWN0RWxlbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFwiKTtcbnZhciBSZWFjdEVycm9yVXRpbHMgPSByZXF1aXJlKFwiLi9SZWFjdEVycm9yVXRpbHNcIik7XG52YXIgUmVhY3RJbnN0YW5jZU1hcCA9IHJlcXVpcmUoXCIuL1JlYWN0SW5zdGFuY2VNYXBcIik7XG52YXIgUmVhY3RMaWZlQ3ljbGUgPSByZXF1aXJlKFwiLi9SZWFjdExpZmVDeWNsZVwiKTtcbnZhciBSZWFjdFByb3BUeXBlTG9jYXRpb25zID0gcmVxdWlyZShcIi4vUmVhY3RQcm9wVHlwZUxvY2F0aW9uc1wiKTtcbnZhciBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lcyA9IHJlcXVpcmUoXCIuL1JlYWN0UHJvcFR5cGVMb2NhdGlvbk5hbWVzXCIpO1xudmFyIFJlYWN0VXBkYXRlUXVldWUgPSByZXF1aXJlKFwiLi9SZWFjdFVwZGF0ZVF1ZXVlXCIpO1xuXG52YXIgYXNzaWduID0gcmVxdWlyZShcIi4vT2JqZWN0LmFzc2lnblwiKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG52YXIga2V5TWlycm9yID0gcmVxdWlyZShcIi4va2V5TWlycm9yXCIpO1xudmFyIGtleU9mID0gcmVxdWlyZShcIi4va2V5T2ZcIik7XG52YXIgd2FybmluZyA9IHJlcXVpcmUoXCIuL3dhcm5pbmdcIik7XG5cbnZhciBNSVhJTlNfS0VZID0ga2V5T2Yoe21peGluczogbnVsbH0pO1xuXG4vKipcbiAqIFBvbGljaWVzIHRoYXQgZGVzY3JpYmUgbWV0aG9kcyBpbiBgUmVhY3RDbGFzc0ludGVyZmFjZWAuXG4gKi9cbnZhciBTcGVjUG9saWN5ID0ga2V5TWlycm9yKHtcbiAgLyoqXG4gICAqIFRoZXNlIG1ldGhvZHMgbWF5IGJlIGRlZmluZWQgb25seSBvbmNlIGJ5IHRoZSBjbGFzcyBzcGVjaWZpY2F0aW9uIG9yIG1peGluLlxuICAgKi9cbiAgREVGSU5FX09OQ0U6IG51bGwsXG4gIC8qKlxuICAgKiBUaGVzZSBtZXRob2RzIG1heSBiZSBkZWZpbmVkIGJ5IGJvdGggdGhlIGNsYXNzIHNwZWNpZmljYXRpb24gYW5kIG1peGlucy5cbiAgICogU3Vic2VxdWVudCBkZWZpbml0aW9ucyB3aWxsIGJlIGNoYWluZWQuIFRoZXNlIG1ldGhvZHMgbXVzdCByZXR1cm4gdm9pZC5cbiAgICovXG4gIERFRklORV9NQU5ZOiBudWxsLFxuICAvKipcbiAgICogVGhlc2UgbWV0aG9kcyBhcmUgb3ZlcnJpZGluZyB0aGUgYmFzZSBjbGFzcy5cbiAgICovXG4gIE9WRVJSSURFX0JBU0U6IG51bGwsXG4gIC8qKlxuICAgKiBUaGVzZSBtZXRob2RzIGFyZSBzaW1pbGFyIHRvIERFRklORV9NQU5ZLCBleGNlcHQgd2UgYXNzdW1lIHRoZXkgcmV0dXJuXG4gICAqIG9iamVjdHMuIFdlIHRyeSB0byBtZXJnZSB0aGUga2V5cyBvZiB0aGUgcmV0dXJuIHZhbHVlcyBvZiBhbGwgdGhlIG1peGVkIGluXG4gICAqIGZ1bmN0aW9ucy4gSWYgdGhlcmUgaXMgYSBrZXkgY29uZmxpY3Qgd2UgdGhyb3cuXG4gICAqL1xuICBERUZJTkVfTUFOWV9NRVJHRUQ6IG51bGxcbn0pO1xuXG5cbnZhciBpbmplY3RlZE1peGlucyA9IFtdO1xuXG4vKipcbiAqIENvbXBvc2l0ZSBjb21wb25lbnRzIGFyZSBoaWdoZXItbGV2ZWwgY29tcG9uZW50cyB0aGF0IGNvbXBvc2Ugb3RoZXIgY29tcG9zaXRlXG4gKiBvciBuYXRpdmUgY29tcG9uZW50cy5cbiAqXG4gKiBUbyBjcmVhdGUgYSBuZXcgdHlwZSBvZiBgUmVhY3RDbGFzc2AsIHBhc3MgYSBzcGVjaWZpY2F0aW9uIG9mXG4gKiB5b3VyIG5ldyBjbGFzcyB0byBgUmVhY3QuY3JlYXRlQ2xhc3NgLiBUaGUgb25seSByZXF1aXJlbWVudCBvZiB5b3VyIGNsYXNzXG4gKiBzcGVjaWZpY2F0aW9uIGlzIHRoYXQgeW91IGltcGxlbWVudCBhIGByZW5kZXJgIG1ldGhvZC5cbiAqXG4gKiAgIHZhciBNeUNvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAqICAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICogICAgICAgcmV0dXJuIDxkaXY+SGVsbG8gV29ybGQ8L2Rpdj47XG4gKiAgICAgfVxuICogICB9KTtcbiAqXG4gKiBUaGUgY2xhc3Mgc3BlY2lmaWNhdGlvbiBzdXBwb3J0cyBhIHNwZWNpZmljIHByb3RvY29sIG9mIG1ldGhvZHMgdGhhdCBoYXZlXG4gKiBzcGVjaWFsIG1lYW5pbmcgKGUuZy4gYHJlbmRlcmApLiBTZWUgYFJlYWN0Q2xhc3NJbnRlcmZhY2VgIGZvclxuICogbW9yZSB0aGUgY29tcHJlaGVuc2l2ZSBwcm90b2NvbC4gQW55IG90aGVyIHByb3BlcnRpZXMgYW5kIG1ldGhvZHMgaW4gdGhlXG4gKiBjbGFzcyBzcGVjaWZpY2F0aW9uIHdpbGwgYXZhaWxhYmxlIG9uIHRoZSBwcm90b3R5cGUuXG4gKlxuICogQGludGVyZmFjZSBSZWFjdENsYXNzSW50ZXJmYWNlXG4gKiBAaW50ZXJuYWxcbiAqL1xudmFyIFJlYWN0Q2xhc3NJbnRlcmZhY2UgPSB7XG5cbiAgLyoqXG4gICAqIEFuIGFycmF5IG9mIE1peGluIG9iamVjdHMgdG8gaW5jbHVkZSB3aGVuIGRlZmluaW5nIHlvdXIgY29tcG9uZW50LlxuICAgKlxuICAgKiBAdHlwZSB7YXJyYXl9XG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgbWl4aW5zOiBTcGVjUG9saWN5LkRFRklORV9NQU5ZLFxuXG4gIC8qKlxuICAgKiBBbiBvYmplY3QgY29udGFpbmluZyBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIHRoYXQgc2hvdWxkIGJlIGRlZmluZWQgb25cbiAgICogdGhlIGNvbXBvbmVudCdzIGNvbnN0cnVjdG9yIGluc3RlYWQgb2YgaXRzIHByb3RvdHlwZSAoc3RhdGljIG1ldGhvZHMpLlxuICAgKlxuICAgKiBAdHlwZSB7b2JqZWN0fVxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHN0YXRpY3M6IFNwZWNQb2xpY3kuREVGSU5FX01BTlksXG5cbiAgLyoqXG4gICAqIERlZmluaXRpb24gb2YgcHJvcCB0eXBlcyBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAqXG4gICAqIEB0eXBlIHtvYmplY3R9XG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgcHJvcFR5cGVzOiBTcGVjUG9saWN5LkRFRklORV9NQU5ZLFxuXG4gIC8qKlxuICAgKiBEZWZpbml0aW9uIG9mIGNvbnRleHQgdHlwZXMgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKlxuICAgKiBAdHlwZSB7b2JqZWN0fVxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIGNvbnRleHRUeXBlczogU3BlY1BvbGljeS5ERUZJTkVfTUFOWSxcblxuICAvKipcbiAgICogRGVmaW5pdGlvbiBvZiBjb250ZXh0IHR5cGVzIHRoaXMgY29tcG9uZW50IHNldHMgZm9yIGl0cyBjaGlsZHJlbi5cbiAgICpcbiAgICogQHR5cGUge29iamVjdH1cbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBjaGlsZENvbnRleHRUeXBlczogU3BlY1BvbGljeS5ERUZJTkVfTUFOWSxcblxuICAvLyA9PT09IERlZmluaXRpb24gbWV0aG9kcyA9PT09XG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIG1vdW50ZWQuIFZhbHVlcyBpbiB0aGUgbWFwcGluZyB3aWxsIGJlIHNldCBvblxuICAgKiBgdGhpcy5wcm9wc2AgaWYgdGhhdCBwcm9wIGlzIG5vdCBzcGVjaWZpZWQgKGkuZS4gdXNpbmcgYW4gYGluYCBjaGVjaykuXG4gICAqXG4gICAqIFRoaXMgbWV0aG9kIGlzIGludm9rZWQgYmVmb3JlIGBnZXRJbml0aWFsU3RhdGVgIGFuZCB0aGVyZWZvcmUgY2Fubm90IHJlbHlcbiAgICogb24gYHRoaXMuc3RhdGVgIG9yIHVzZSBgdGhpcy5zZXRTdGF0ZWAuXG4gICAqXG4gICAqIEByZXR1cm4ge29iamVjdH1cbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBnZXREZWZhdWx0UHJvcHM6IFNwZWNQb2xpY3kuREVGSU5FX01BTllfTUVSR0VELFxuXG4gIC8qKlxuICAgKiBJbnZva2VkIG9uY2UgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgbW91bnRlZC4gVGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIHVzZWRcbiAgICogYXMgdGhlIGluaXRpYWwgdmFsdWUgb2YgYHRoaXMuc3RhdGVgLlxuICAgKlxuICAgKiAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAqICAgICByZXR1cm4ge1xuICAgKiAgICAgICBpc09uOiBmYWxzZSxcbiAgICogICAgICAgZm9vQmF6OiBuZXcgQmF6Rm9vKClcbiAgICogICAgIH1cbiAgICogICB9XG4gICAqXG4gICAqIEByZXR1cm4ge29iamVjdH1cbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBnZXRJbml0aWFsU3RhdGU6IFNwZWNQb2xpY3kuREVGSU5FX01BTllfTUVSR0VELFxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtvYmplY3R9XG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgZ2V0Q2hpbGRDb250ZXh0OiBTcGVjUG9saWN5LkRFRklORV9NQU5ZX01FUkdFRCxcblxuICAvKipcbiAgICogVXNlcyBwcm9wcyBmcm9tIGB0aGlzLnByb3BzYCBhbmQgc3RhdGUgZnJvbSBgdGhpcy5zdGF0ZWAgdG8gcmVuZGVyIHRoZVxuICAgKiBzdHJ1Y3R1cmUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICpcbiAgICogTm8gZ3VhcmFudGVlcyBhcmUgbWFkZSBhYm91dCB3aGVuIG9yIGhvdyBvZnRlbiB0aGlzIG1ldGhvZCBpcyBpbnZva2VkLCBzb1xuICAgKiBpdCBtdXN0IG5vdCBoYXZlIHNpZGUgZWZmZWN0cy5cbiAgICpcbiAgICogICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgKiAgICAgdmFyIG5hbWUgPSB0aGlzLnByb3BzLm5hbWU7XG4gICAqICAgICByZXR1cm4gPGRpdj5IZWxsbywge25hbWV9ITwvZGl2PjtcbiAgICogICB9XG4gICAqXG4gICAqIEByZXR1cm4ge1JlYWN0Q29tcG9uZW50fVxuICAgKiBAbm9zaWRlZWZmZWN0c1xuICAgKiBAcmVxdWlyZWRcbiAgICovXG4gIHJlbmRlcjogU3BlY1BvbGljeS5ERUZJTkVfT05DRSxcblxuXG5cbiAgLy8gPT09PSBEZWxlZ2F0ZSBtZXRob2RzID09PT1cblxuICAvKipcbiAgICogSW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgaW5pdGlhbGx5IGNyZWF0ZWQgYW5kIGFib3V0IHRvIGJlIG1vdW50ZWQuXG4gICAqIFRoaXMgbWF5IGhhdmUgc2lkZSBlZmZlY3RzLCBidXQgYW55IGV4dGVybmFsIHN1YnNjcmlwdGlvbnMgb3IgZGF0YSBjcmVhdGVkXG4gICAqIGJ5IHRoaXMgbWV0aG9kIG11c3QgYmUgY2xlYW5lZCB1cCBpbiBgY29tcG9uZW50V2lsbFVubW91bnRgLlxuICAgKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIGNvbXBvbmVudFdpbGxNb3VudDogU3BlY1BvbGljeS5ERUZJTkVfTUFOWSxcblxuICAvKipcbiAgICogSW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaGFzIGJlZW4gbW91bnRlZCBhbmQgaGFzIGEgRE9NIHJlcHJlc2VudGF0aW9uLlxuICAgKiBIb3dldmVyLCB0aGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCB0aGUgRE9NIG5vZGUgaXMgaW4gdGhlIGRvY3VtZW50LlxuICAgKlxuICAgKiBVc2UgdGhpcyBhcyBhbiBvcHBvcnR1bml0eSB0byBvcGVyYXRlIG9uIHRoZSBET00gd2hlbiB0aGUgY29tcG9uZW50IGhhc1xuICAgKiBiZWVuIG1vdW50ZWQgKGluaXRpYWxpemVkIGFuZCByZW5kZXJlZCkgZm9yIHRoZSBmaXJzdCB0aW1lLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IHJvb3ROb2RlIERPTSBlbGVtZW50IHJlcHJlc2VudGluZyB0aGUgY29tcG9uZW50LlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIGNvbXBvbmVudERpZE1vdW50OiBTcGVjUG9saWN5LkRFRklORV9NQU5ZLFxuXG4gIC8qKlxuICAgKiBJbnZva2VkIGJlZm9yZSB0aGUgY29tcG9uZW50IHJlY2VpdmVzIG5ldyBwcm9wcy5cbiAgICpcbiAgICogVXNlIHRoaXMgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gcmVhY3QgdG8gYSBwcm9wIHRyYW5zaXRpb24gYnkgdXBkYXRpbmcgdGhlXG4gICAqIHN0YXRlIHVzaW5nIGB0aGlzLnNldFN0YXRlYC4gQ3VycmVudCBwcm9wcyBhcmUgYWNjZXNzZWQgdmlhIGB0aGlzLnByb3BzYC5cbiAgICpcbiAgICogICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzOiBmdW5jdGlvbihuZXh0UHJvcHMsIG5leHRDb250ZXh0KSB7XG4gICAqICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICogICAgICAgbGlrZXNJbmNyZWFzaW5nOiBuZXh0UHJvcHMubGlrZUNvdW50ID4gdGhpcy5wcm9wcy5saWtlQ291bnRcbiAgICogICAgIH0pO1xuICAgKiAgIH1cbiAgICpcbiAgICogTk9URTogVGhlcmUgaXMgbm8gZXF1aXZhbGVudCBgY29tcG9uZW50V2lsbFJlY2VpdmVTdGF0ZWAuIEFuIGluY29taW5nIHByb3BcbiAgICogdHJhbnNpdGlvbiBtYXkgY2F1c2UgYSBzdGF0ZSBjaGFuZ2UsIGJ1dCB0aGUgb3Bwb3NpdGUgaXMgbm90IHRydWUuIElmIHlvdVxuICAgKiBuZWVkIGl0LCB5b3UgYXJlIHByb2JhYmx5IGxvb2tpbmcgZm9yIGBjb21wb25lbnRXaWxsVXBkYXRlYC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IG5leHRQcm9wc1xuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHM6IFNwZWNQb2xpY3kuREVGSU5FX01BTlksXG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hpbGUgZGVjaWRpbmcgaWYgdGhlIGNvbXBvbmVudCBzaG91bGQgYmUgdXBkYXRlZCBhcyBhIHJlc3VsdCBvZlxuICAgKiByZWNlaXZpbmcgbmV3IHByb3BzLCBzdGF0ZSBhbmQvb3IgY29udGV4dC5cbiAgICpcbiAgICogVXNlIHRoaXMgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gYHJldHVybiBmYWxzZWAgd2hlbiB5b3UncmUgY2VydGFpbiB0aGF0IHRoZVxuICAgKiB0cmFuc2l0aW9uIHRvIHRoZSBuZXcgcHJvcHMvc3RhdGUvY29udGV4dCB3aWxsIG5vdCByZXF1aXJlIGEgY29tcG9uZW50XG4gICAqIHVwZGF0ZS5cbiAgICpcbiAgICogICBzaG91bGRDb21wb25lbnRVcGRhdGU6IGZ1bmN0aW9uKG5leHRQcm9wcywgbmV4dFN0YXRlLCBuZXh0Q29udGV4dCkge1xuICAgKiAgICAgcmV0dXJuICFlcXVhbChuZXh0UHJvcHMsIHRoaXMucHJvcHMpIHx8XG4gICAqICAgICAgICFlcXVhbChuZXh0U3RhdGUsIHRoaXMuc3RhdGUpIHx8XG4gICAqICAgICAgICFlcXVhbChuZXh0Q29udGV4dCwgdGhpcy5jb250ZXh0KTtcbiAgICogICB9XG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBuZXh0UHJvcHNcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBuZXh0U3RhdGVcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBuZXh0Q29udGV4dFxuICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBjb21wb25lbnQgc2hvdWxkIHVwZGF0ZS5cbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICBzaG91bGRDb21wb25lbnRVcGRhdGU6IFNwZWNQb2xpY3kuREVGSU5FX09OQ0UsXG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGFib3V0IHRvIHVwZGF0ZSBkdWUgdG8gYSB0cmFuc2l0aW9uIGZyb21cbiAgICogYHRoaXMucHJvcHNgLCBgdGhpcy5zdGF0ZWAgYW5kIGB0aGlzLmNvbnRleHRgIHRvIGBuZXh0UHJvcHNgLCBgbmV4dFN0YXRlYFxuICAgKiBhbmQgYG5leHRDb250ZXh0YC5cbiAgICpcbiAgICogVXNlIHRoaXMgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gcGVyZm9ybSBwcmVwYXJhdGlvbiBiZWZvcmUgYW4gdXBkYXRlIG9jY3Vycy5cbiAgICpcbiAgICogTk9URTogWW91ICoqY2Fubm90KiogdXNlIGB0aGlzLnNldFN0YXRlKClgIGluIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV4dFByb3BzXG4gICAqIEBwYXJhbSB7P29iamVjdH0gbmV4dFN0YXRlXG4gICAqIEBwYXJhbSB7P29iamVjdH0gbmV4dENvbnRleHRcbiAgICogQHBhcmFtIHtSZWFjdFJlY29uY2lsZVRyYW5zYWN0aW9ufSB0cmFuc2FjdGlvblxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIGNvbXBvbmVudFdpbGxVcGRhdGU6IFNwZWNQb2xpY3kuREVGSU5FX01BTlksXG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50J3MgRE9NIHJlcHJlc2VudGF0aW9uIGhhcyBiZWVuIHVwZGF0ZWQuXG4gICAqXG4gICAqIFVzZSB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIG9wZXJhdGUgb24gdGhlIERPTSB3aGVuIHRoZSBjb21wb25lbnQgaGFzXG4gICAqIGJlZW4gdXBkYXRlZC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IHByZXZQcm9wc1xuICAgKiBAcGFyYW0gez9vYmplY3R9IHByZXZTdGF0ZVxuICAgKiBAcGFyYW0gez9vYmplY3R9IHByZXZDb250ZXh0XG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gcm9vdE5vZGUgRE9NIGVsZW1lbnQgcmVwcmVzZW50aW5nIHRoZSBjb21wb25lbnQuXG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgY29tcG9uZW50RGlkVXBkYXRlOiBTcGVjUG9saWN5LkRFRklORV9NQU5ZLFxuXG4gIC8qKlxuICAgKiBJbnZva2VkIHdoZW4gdGhlIGNvbXBvbmVudCBpcyBhYm91dCB0byBiZSByZW1vdmVkIGZyb20gaXRzIHBhcmVudCBhbmQgaGF2ZVxuICAgKiBpdHMgRE9NIHJlcHJlc2VudGF0aW9uIGRlc3Ryb3llZC5cbiAgICpcbiAgICogVXNlIHRoaXMgYXMgYW4gb3Bwb3J0dW5pdHkgdG8gZGVhbGxvY2F0ZSBhbnkgZXh0ZXJuYWwgcmVzb3VyY2VzLlxuICAgKlxuICAgKiBOT1RFOiBUaGVyZSBpcyBubyBgY29tcG9uZW50RGlkVW5tb3VudGAgc2luY2UgeW91ciBjb21wb25lbnQgd2lsbCBoYXZlIGJlZW5cbiAgICogZGVzdHJveWVkIGJ5IHRoYXQgcG9pbnQuXG4gICAqXG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgY29tcG9uZW50V2lsbFVubW91bnQ6IFNwZWNQb2xpY3kuREVGSU5FX01BTlksXG5cblxuXG4gIC8vID09PT0gQWR2YW5jZWQgbWV0aG9kcyA9PT09XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIGNvbXBvbmVudCdzIGN1cnJlbnRseSBtb3VudGVkIERPTSByZXByZXNlbnRhdGlvbi5cbiAgICpcbiAgICogQnkgZGVmYXVsdCwgdGhpcyBpbXBsZW1lbnRzIFJlYWN0J3MgcmVuZGVyaW5nIGFuZCByZWNvbmNpbGlhdGlvbiBhbGdvcml0aG0uXG4gICAqIFNvcGhpc3RpY2F0ZWQgY2xpZW50cyBtYXkgd2lzaCB0byBvdmVycmlkZSB0aGlzLlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0UmVjb25jaWxlVHJhbnNhY3Rpb259IHRyYW5zYWN0aW9uXG4gICAqIEBpbnRlcm5hbFxuICAgKiBAb3ZlcnJpZGFibGVcbiAgICovXG4gIHVwZGF0ZUNvbXBvbmVudDogU3BlY1BvbGljeS5PVkVSUklERV9CQVNFXG5cbn07XG5cbi8qKlxuICogTWFwcGluZyBmcm9tIGNsYXNzIHNwZWNpZmljYXRpb24ga2V5cyB0byBzcGVjaWFsIHByb2Nlc3NpbmcgZnVuY3Rpb25zLlxuICpcbiAqIEFsdGhvdWdoIHRoZXNlIGFyZSBkZWNsYXJlZCBsaWtlIGluc3RhbmNlIHByb3BlcnRpZXMgaW4gdGhlIHNwZWNpZmljYXRpb25cbiAqIHdoZW4gZGVmaW5pbmcgY2xhc3NlcyB1c2luZyBgUmVhY3QuY3JlYXRlQ2xhc3NgLCB0aGV5IGFyZSBhY3R1YWxseSBzdGF0aWNcbiAqIGFuZCBhcmUgYWNjZXNzaWJsZSBvbiB0aGUgY29uc3RydWN0b3IgaW5zdGVhZCBvZiB0aGUgcHJvdG90eXBlLiBEZXNwaXRlXG4gKiBiZWluZyBzdGF0aWMsIHRoZXkgbXVzdCBiZSBkZWZpbmVkIG91dHNpZGUgb2YgdGhlIFwic3RhdGljc1wiIGtleSB1bmRlclxuICogd2hpY2ggYWxsIG90aGVyIHN0YXRpYyBtZXRob2RzIGFyZSBkZWZpbmVkLlxuICovXG52YXIgUkVTRVJWRURfU1BFQ19LRVlTID0ge1xuICBkaXNwbGF5TmFtZTogZnVuY3Rpb24oQ29uc3RydWN0b3IsIGRpc3BsYXlOYW1lKSB7XG4gICAgQ29uc3RydWN0b3IuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgfSxcbiAgbWl4aW5zOiBmdW5jdGlvbihDb25zdHJ1Y3RvciwgbWl4aW5zKSB7XG4gICAgaWYgKG1peGlucykge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtaXhpbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbWl4U3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIG1peGluc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBjaGlsZENvbnRleHRUeXBlczogZnVuY3Rpb24oQ29uc3RydWN0b3IsIGNoaWxkQ29udGV4dFR5cGVzKSB7XG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgdmFsaWRhdGVUeXBlRGVmKFxuICAgICAgICBDb25zdHJ1Y3RvcixcbiAgICAgICAgY2hpbGRDb250ZXh0VHlwZXMsXG4gICAgICAgIFJlYWN0UHJvcFR5cGVMb2NhdGlvbnMuY2hpbGRDb250ZXh0XG4gICAgICApO1xuICAgIH1cbiAgICBDb25zdHJ1Y3Rvci5jaGlsZENvbnRleHRUeXBlcyA9IGFzc2lnbihcbiAgICAgIHt9LFxuICAgICAgQ29uc3RydWN0b3IuY2hpbGRDb250ZXh0VHlwZXMsXG4gICAgICBjaGlsZENvbnRleHRUeXBlc1xuICAgICk7XG4gIH0sXG4gIGNvbnRleHRUeXBlczogZnVuY3Rpb24oQ29uc3RydWN0b3IsIGNvbnRleHRUeXBlcykge1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIHZhbGlkYXRlVHlwZURlZihcbiAgICAgICAgQ29uc3RydWN0b3IsXG4gICAgICAgIGNvbnRleHRUeXBlcyxcbiAgICAgICAgUmVhY3RQcm9wVHlwZUxvY2F0aW9ucy5jb250ZXh0XG4gICAgICApO1xuICAgIH1cbiAgICBDb25zdHJ1Y3Rvci5jb250ZXh0VHlwZXMgPSBhc3NpZ24oXG4gICAgICB7fSxcbiAgICAgIENvbnN0cnVjdG9yLmNvbnRleHRUeXBlcyxcbiAgICAgIGNvbnRleHRUeXBlc1xuICAgICk7XG4gIH0sXG4gIC8qKlxuICAgKiBTcGVjaWFsIGNhc2UgZ2V0RGVmYXVsdFByb3BzIHdoaWNoIHNob3VsZCBtb3ZlIGludG8gc3RhdGljcyBidXQgcmVxdWlyZXNcbiAgICogYXV0b21hdGljIG1lcmdpbmcuXG4gICAqL1xuICBnZXREZWZhdWx0UHJvcHM6IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBnZXREZWZhdWx0UHJvcHMpIHtcbiAgICBpZiAoQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzKSB7XG4gICAgICBDb25zdHJ1Y3Rvci5nZXREZWZhdWx0UHJvcHMgPSBjcmVhdGVNZXJnZWRSZXN1bHRGdW5jdGlvbihcbiAgICAgICAgQ29uc3RydWN0b3IuZ2V0RGVmYXVsdFByb3BzLFxuICAgICAgICBnZXREZWZhdWx0UHJvcHNcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIENvbnN0cnVjdG9yLmdldERlZmF1bHRQcm9wcyA9IGdldERlZmF1bHRQcm9wcztcbiAgICB9XG4gIH0sXG4gIHByb3BUeXBlczogZnVuY3Rpb24oQ29uc3RydWN0b3IsIHByb3BUeXBlcykge1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIHZhbGlkYXRlVHlwZURlZihcbiAgICAgICAgQ29uc3RydWN0b3IsXG4gICAgICAgIHByb3BUeXBlcyxcbiAgICAgICAgUmVhY3RQcm9wVHlwZUxvY2F0aW9ucy5wcm9wXG4gICAgICApO1xuICAgIH1cbiAgICBDb25zdHJ1Y3Rvci5wcm9wVHlwZXMgPSBhc3NpZ24oXG4gICAgICB7fSxcbiAgICAgIENvbnN0cnVjdG9yLnByb3BUeXBlcyxcbiAgICAgIHByb3BUeXBlc1xuICAgICk7XG4gIH0sXG4gIHN0YXRpY3M6IGZ1bmN0aW9uKENvbnN0cnVjdG9yLCBzdGF0aWNzKSB7XG4gICAgbWl4U3RhdGljU3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIHN0YXRpY3MpO1xuICB9XG59O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZVR5cGVEZWYoQ29uc3RydWN0b3IsIHR5cGVEZWYsIGxvY2F0aW9uKSB7XG4gIGZvciAodmFyIHByb3BOYW1lIGluIHR5cGVEZWYpIHtcbiAgICBpZiAodHlwZURlZi5oYXNPd25Qcm9wZXJ0eShwcm9wTmFtZSkpIHtcbiAgICAgIC8vIHVzZSBhIHdhcm5pbmcgaW5zdGVhZCBvZiBhbiBpbnZhcmlhbnQgc28gY29tcG9uZW50c1xuICAgICAgLy8gZG9uJ3Qgc2hvdyB1cCBpbiBwcm9kIGJ1dCBub3QgaW4gX19ERVZfX1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgIHR5cGVvZiB0eXBlRGVmW3Byb3BOYW1lXSA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICAgJyVzOiAlcyB0eXBlIGAlc2AgaXMgaW52YWxpZDsgaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gJyArXG4gICAgICAgICdSZWFjdC5Qcm9wVHlwZXMuJyxcbiAgICAgICAgQ29uc3RydWN0b3IuZGlzcGxheU5hbWUgfHwgJ1JlYWN0Q2xhc3MnLFxuICAgICAgICBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lc1tsb2NhdGlvbl0sXG4gICAgICAgIHByb3BOYW1lXG4gICAgICApIDogbnVsbCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlTWV0aG9kT3ZlcnJpZGUocHJvdG8sIG5hbWUpIHtcbiAgdmFyIHNwZWNQb2xpY3kgPSBSZWFjdENsYXNzSW50ZXJmYWNlLmhhc093blByb3BlcnR5KG5hbWUpID9cbiAgICBSZWFjdENsYXNzSW50ZXJmYWNlW25hbWVdIDpcbiAgICBudWxsO1xuXG4gIC8vIERpc2FsbG93IG92ZXJyaWRpbmcgb2YgYmFzZSBjbGFzcyBtZXRob2RzIHVubGVzcyBleHBsaWNpdGx5IGFsbG93ZWQuXG4gIGlmIChSZWFjdENsYXNzTWl4aW4uaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5PVkVSUklERV9CQVNFLFxuICAgICAgJ1JlYWN0Q2xhc3NJbnRlcmZhY2U6IFlvdSBhcmUgYXR0ZW1wdGluZyB0byBvdmVycmlkZSAnICtcbiAgICAgICdgJXNgIGZyb20geW91ciBjbGFzcyBzcGVjaWZpY2F0aW9uLiBFbnN1cmUgdGhhdCB5b3VyIG1ldGhvZCBuYW1lcyAnICtcbiAgICAgICdkbyBub3Qgb3ZlcmxhcCB3aXRoIFJlYWN0IG1ldGhvZHMuJyxcbiAgICAgIG5hbWVcbiAgICApIDogaW52YXJpYW50KHNwZWNQb2xpY3kgPT09IFNwZWNQb2xpY3kuT1ZFUlJJREVfQkFTRSkpO1xuICB9XG5cbiAgLy8gRGlzYWxsb3cgZGVmaW5pbmcgbWV0aG9kcyBtb3JlIHRoYW4gb25jZSB1bmxlc3MgZXhwbGljaXRseSBhbGxvd2VkLlxuICBpZiAocHJvdG8uaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWSB8fFxuICAgICAgc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWV9NRVJHRUQsXG4gICAgICAnUmVhY3RDbGFzc0ludGVyZmFjZTogWW91IGFyZSBhdHRlbXB0aW5nIHRvIGRlZmluZSAnICtcbiAgICAgICdgJXNgIG9uIHlvdXIgY29tcG9uZW50IG1vcmUgdGhhbiBvbmNlLiBUaGlzIGNvbmZsaWN0IG1heSBiZSBkdWUgJyArXG4gICAgICAndG8gYSBtaXhpbi4nLFxuICAgICAgbmFtZVxuICAgICkgOiBpbnZhcmlhbnQoc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWSB8fFxuICAgIHNwZWNQb2xpY3kgPT09IFNwZWNQb2xpY3kuREVGSU5FX01BTllfTUVSR0VEKSk7XG4gIH1cbn1cblxuLyoqXG4gKiBNaXhpbiBoZWxwZXIgd2hpY2ggaGFuZGxlcyBwb2xpY3kgdmFsaWRhdGlvbiBhbmQgcmVzZXJ2ZWRcbiAqIHNwZWNpZmljYXRpb24ga2V5cyB3aGVuIGJ1aWxkaW5nIFJlYWN0IGNsYXNzc2VzLlxuICovXG5mdW5jdGlvbiBtaXhTcGVjSW50b0NvbXBvbmVudChDb25zdHJ1Y3Rvciwgc3BlYykge1xuICBpZiAoIXNwZWMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIHR5cGVvZiBzcGVjICE9PSAnZnVuY3Rpb24nLFxuICAgICdSZWFjdENsYXNzOiBZb3VcXCdyZSBhdHRlbXB0aW5nIHRvICcgK1xuICAgICd1c2UgYSBjb21wb25lbnQgY2xhc3MgYXMgYSBtaXhpbi4gSW5zdGVhZCwganVzdCB1c2UgYSByZWd1bGFyIG9iamVjdC4nXG4gICkgOiBpbnZhcmlhbnQodHlwZW9mIHNwZWMgIT09ICdmdW5jdGlvbicpKTtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAhUmVhY3RFbGVtZW50LmlzVmFsaWRFbGVtZW50KHNwZWMpLFxuICAgICdSZWFjdENsYXNzOiBZb3VcXCdyZSBhdHRlbXB0aW5nIHRvICcgK1xuICAgICd1c2UgYSBjb21wb25lbnQgYXMgYSBtaXhpbi4gSW5zdGVhZCwganVzdCB1c2UgYSByZWd1bGFyIG9iamVjdC4nXG4gICkgOiBpbnZhcmlhbnQoIVJlYWN0RWxlbWVudC5pc1ZhbGlkRWxlbWVudChzcGVjKSkpO1xuXG4gIHZhciBwcm90byA9IENvbnN0cnVjdG9yLnByb3RvdHlwZTtcblxuICAvLyBCeSBoYW5kbGluZyBtaXhpbnMgYmVmb3JlIGFueSBvdGhlciBwcm9wZXJ0aWVzLCB3ZSBlbnN1cmUgdGhlIHNhbWVcbiAgLy8gY2hhaW5pbmcgb3JkZXIgaXMgYXBwbGllZCB0byBtZXRob2RzIHdpdGggREVGSU5FX01BTlkgcG9saWN5LCB3aGV0aGVyXG4gIC8vIG1peGlucyBhcmUgbGlzdGVkIGJlZm9yZSBvciBhZnRlciB0aGVzZSBtZXRob2RzIGluIHRoZSBzcGVjLlxuICBpZiAoc3BlYy5oYXNPd25Qcm9wZXJ0eShNSVhJTlNfS0VZKSkge1xuICAgIFJFU0VSVkVEX1NQRUNfS0VZUy5taXhpbnMoQ29uc3RydWN0b3IsIHNwZWMubWl4aW5zKTtcbiAgfVxuXG4gIGZvciAodmFyIG5hbWUgaW4gc3BlYykge1xuICAgIGlmICghc3BlYy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKG5hbWUgPT09IE1JWElOU19LRVkpIHtcbiAgICAgIC8vIFdlIGhhdmUgYWxyZWFkeSBoYW5kbGVkIG1peGlucyBpbiBhIHNwZWNpYWwgY2FzZSBhYm92ZVxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdmFyIHByb3BlcnR5ID0gc3BlY1tuYW1lXTtcbiAgICB2YWxpZGF0ZU1ldGhvZE92ZXJyaWRlKHByb3RvLCBuYW1lKTtcblxuICAgIGlmIChSRVNFUlZFRF9TUEVDX0tFWVMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgIFJFU0VSVkVEX1NQRUNfS0VZU1tuYW1lXShDb25zdHJ1Y3RvciwgcHJvcGVydHkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTZXR1cCBtZXRob2RzIG9uIHByb3RvdHlwZTpcbiAgICAgIC8vIFRoZSBmb2xsb3dpbmcgbWVtYmVyIG1ldGhvZHMgc2hvdWxkIG5vdCBiZSBhdXRvbWF0aWNhbGx5IGJvdW5kOlxuICAgICAgLy8gMS4gRXhwZWN0ZWQgUmVhY3RDbGFzcyBtZXRob2RzIChpbiB0aGUgXCJpbnRlcmZhY2VcIikuXG4gICAgICAvLyAyLiBPdmVycmlkZGVuIG1ldGhvZHMgKHRoYXQgd2VyZSBtaXhlZCBpbikuXG4gICAgICB2YXIgaXNSZWFjdENsYXNzTWV0aG9kID1cbiAgICAgICAgUmVhY3RDbGFzc0ludGVyZmFjZS5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcbiAgICAgIHZhciBpc0FscmVhZHlEZWZpbmVkID0gcHJvdG8uaGFzT3duUHJvcGVydHkobmFtZSk7XG4gICAgICB2YXIgbWFya2VkRG9udEJpbmQgPSBwcm9wZXJ0eSAmJiBwcm9wZXJ0eS5fX3JlYWN0RG9udEJpbmQ7XG4gICAgICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiBwcm9wZXJ0eSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIHZhciBzaG91bGRBdXRvQmluZCA9XG4gICAgICAgIGlzRnVuY3Rpb24gJiZcbiAgICAgICAgIWlzUmVhY3RDbGFzc01ldGhvZCAmJlxuICAgICAgICAhaXNBbHJlYWR5RGVmaW5lZCAmJlxuICAgICAgICAhbWFya2VkRG9udEJpbmQ7XG5cbiAgICAgIGlmIChzaG91bGRBdXRvQmluZCkge1xuICAgICAgICBpZiAoIXByb3RvLl9fcmVhY3RBdXRvQmluZE1hcCkge1xuICAgICAgICAgIHByb3RvLl9fcmVhY3RBdXRvQmluZE1hcCA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIHByb3RvLl9fcmVhY3RBdXRvQmluZE1hcFtuYW1lXSA9IHByb3BlcnR5O1xuICAgICAgICBwcm90b1tuYW1lXSA9IHByb3BlcnR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGlzQWxyZWFkeURlZmluZWQpIHtcbiAgICAgICAgICB2YXIgc3BlY1BvbGljeSA9IFJlYWN0Q2xhc3NJbnRlcmZhY2VbbmFtZV07XG5cbiAgICAgICAgICAvLyBUaGVzZSBjYXNlcyBzaG91bGQgYWxyZWFkeSBiZSBjYXVnaHQgYnkgdmFsaWRhdGVNZXRob2RPdmVycmlkZVxuICAgICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAgICAgICBpc1JlYWN0Q2xhc3NNZXRob2QgJiYgKFxuICAgICAgICAgICAgICAoc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWV9NRVJHRUQgfHwgc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWSlcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICAnUmVhY3RDbGFzczogVW5leHBlY3RlZCBzcGVjIHBvbGljeSAlcyBmb3Iga2V5ICVzICcgK1xuICAgICAgICAgICAgJ3doZW4gbWl4aW5nIGluIGNvbXBvbmVudCBzcGVjcy4nLFxuICAgICAgICAgICAgc3BlY1BvbGljeSxcbiAgICAgICAgICAgIG5hbWVcbiAgICAgICAgICApIDogaW52YXJpYW50KGlzUmVhY3RDbGFzc01ldGhvZCAmJiAoXG4gICAgICAgICAgICAoc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWV9NRVJHRUQgfHwgc3BlY1BvbGljeSA9PT0gU3BlY1BvbGljeS5ERUZJTkVfTUFOWSlcbiAgICAgICAgICApKSk7XG5cbiAgICAgICAgICAvLyBGb3IgbWV0aG9kcyB3aGljaCBhcmUgZGVmaW5lZCBtb3JlIHRoYW4gb25jZSwgY2FsbCB0aGUgZXhpc3RpbmdcbiAgICAgICAgICAvLyBtZXRob2RzIGJlZm9yZSBjYWxsaW5nIHRoZSBuZXcgcHJvcGVydHksIG1lcmdpbmcgaWYgYXBwcm9wcmlhdGUuXG4gICAgICAgICAgaWYgKHNwZWNQb2xpY3kgPT09IFNwZWNQb2xpY3kuREVGSU5FX01BTllfTUVSR0VEKSB7XG4gICAgICAgICAgICBwcm90b1tuYW1lXSA9IGNyZWF0ZU1lcmdlZFJlc3VsdEZ1bmN0aW9uKHByb3RvW25hbWVdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChzcGVjUG9saWN5ID09PSBTcGVjUG9saWN5LkRFRklORV9NQU5ZKSB7XG4gICAgICAgICAgICBwcm90b1tuYW1lXSA9IGNyZWF0ZUNoYWluZWRGdW5jdGlvbihwcm90b1tuYW1lXSwgcHJvcGVydHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm90b1tuYW1lXSA9IHByb3BlcnR5O1xuICAgICAgICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgICAgIC8vIEFkZCB2ZXJib3NlIGRpc3BsYXlOYW1lIHRvIHRoZSBmdW5jdGlvbiwgd2hpY2ggaGVscHMgd2hlbiBsb29raW5nXG4gICAgICAgICAgICAvLyBhdCBwcm9maWxpbmcgdG9vbHMuXG4gICAgICAgICAgICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnZnVuY3Rpb24nICYmIHNwZWMuZGlzcGxheU5hbWUpIHtcbiAgICAgICAgICAgICAgcHJvdG9bbmFtZV0uZGlzcGxheU5hbWUgPSBzcGVjLmRpc3BsYXlOYW1lICsgJ18nICsgbmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gbWl4U3RhdGljU3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIHN0YXRpY3MpIHtcbiAgaWYgKCFzdGF0aWNzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGZvciAodmFyIG5hbWUgaW4gc3RhdGljcykge1xuICAgIHZhciBwcm9wZXJ0eSA9IHN0YXRpY3NbbmFtZV07XG4gICAgaWYgKCFzdGF0aWNzLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICB2YXIgaXNSZXNlcnZlZCA9IG5hbWUgaW4gUkVTRVJWRURfU1BFQ19LRVlTO1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAhaXNSZXNlcnZlZCxcbiAgICAgICdSZWFjdENsYXNzOiBZb3UgYXJlIGF0dGVtcHRpbmcgdG8gZGVmaW5lIGEgcmVzZXJ2ZWQgJyArXG4gICAgICAncHJvcGVydHksIGAlc2AsIHRoYXQgc2hvdWxkblxcJ3QgYmUgb24gdGhlIFwic3RhdGljc1wiIGtleS4gRGVmaW5lIGl0ICcgK1xuICAgICAgJ2FzIGFuIGluc3RhbmNlIHByb3BlcnR5IGluc3RlYWQ7IGl0IHdpbGwgc3RpbGwgYmUgYWNjZXNzaWJsZSBvbiB0aGUgJyArXG4gICAgICAnY29uc3RydWN0b3IuJyxcbiAgICAgIG5hbWVcbiAgICApIDogaW52YXJpYW50KCFpc1Jlc2VydmVkKSk7XG5cbiAgICB2YXIgaXNJbmhlcml0ZWQgPSBuYW1lIGluIENvbnN0cnVjdG9yO1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAhaXNJbmhlcml0ZWQsXG4gICAgICAnUmVhY3RDbGFzczogWW91IGFyZSBhdHRlbXB0aW5nIHRvIGRlZmluZSAnICtcbiAgICAgICdgJXNgIG9uIHlvdXIgY29tcG9uZW50IG1vcmUgdGhhbiBvbmNlLiBUaGlzIGNvbmZsaWN0IG1heSBiZSAnICtcbiAgICAgICdkdWUgdG8gYSBtaXhpbi4nLFxuICAgICAgbmFtZVxuICAgICkgOiBpbnZhcmlhbnQoIWlzSW5oZXJpdGVkKSk7XG4gICAgQ29uc3RydWN0b3JbbmFtZV0gPSBwcm9wZXJ0eTtcbiAgfVxufVxuXG4vKipcbiAqIE1lcmdlIHR3byBvYmplY3RzLCBidXQgdGhyb3cgaWYgYm90aCBjb250YWluIHRoZSBzYW1lIGtleS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb25lIFRoZSBmaXJzdCBvYmplY3QsIHdoaWNoIGlzIG11dGF0ZWQuXG4gKiBAcGFyYW0ge29iamVjdH0gdHdvIFRoZSBzZWNvbmQgb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmplY3R9IG9uZSBhZnRlciBpdCBoYXMgYmVlbiBtdXRhdGVkIHRvIGNvbnRhaW4gZXZlcnl0aGluZyBpbiB0d28uXG4gKi9cbmZ1bmN0aW9uIG1lcmdlSW50b1dpdGhOb0R1cGxpY2F0ZUtleXMob25lLCB0d28pIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBvbmUgJiYgdHdvICYmIHR5cGVvZiBvbmUgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0d28gPT09ICdvYmplY3QnLFxuICAgICdtZXJnZUludG9XaXRoTm9EdXBsaWNhdGVLZXlzKCk6IENhbm5vdCBtZXJnZSBub24tb2JqZWN0cy4nXG4gICkgOiBpbnZhcmlhbnQob25lICYmIHR3byAmJiB0eXBlb2Ygb25lID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdHdvID09PSAnb2JqZWN0JykpO1xuXG4gIGZvciAodmFyIGtleSBpbiB0d28pIHtcbiAgICBpZiAodHdvLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAgIG9uZVtrZXldID09PSB1bmRlZmluZWQsXG4gICAgICAgICdtZXJnZUludG9XaXRoTm9EdXBsaWNhdGVLZXlzKCk6ICcgK1xuICAgICAgICAnVHJpZWQgdG8gbWVyZ2UgdHdvIG9iamVjdHMgd2l0aCB0aGUgc2FtZSBrZXk6IGAlc2AuIFRoaXMgY29uZmxpY3QgJyArXG4gICAgICAgICdtYXkgYmUgZHVlIHRvIGEgbWl4aW47IGluIHBhcnRpY3VsYXIsIHRoaXMgbWF5IGJlIGNhdXNlZCBieSB0d28gJyArXG4gICAgICAgICdnZXRJbml0aWFsU3RhdGUoKSBvciBnZXREZWZhdWx0UHJvcHMoKSBtZXRob2RzIHJldHVybmluZyBvYmplY3RzICcgK1xuICAgICAgICAnd2l0aCBjbGFzaGluZyBrZXlzLicsXG4gICAgICAgIGtleVxuICAgICAgKSA6IGludmFyaWFudChvbmVba2V5XSA9PT0gdW5kZWZpbmVkKSk7XG4gICAgICBvbmVba2V5XSA9IHR3b1trZXldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb25lO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGludm9rZXMgdHdvIGZ1bmN0aW9ucyBhbmQgbWVyZ2VzIHRoZWlyIHJldHVybiB2YWx1ZXMuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gb25lIEZ1bmN0aW9uIHRvIGludm9rZSBmaXJzdC5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHR3byBGdW5jdGlvbiB0byBpbnZva2Ugc2Vjb25kLlxuICogQHJldHVybiB7ZnVuY3Rpb259IEZ1bmN0aW9uIHRoYXQgaW52b2tlcyB0aGUgdHdvIGFyZ3VtZW50IGZ1bmN0aW9ucy5cbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU1lcmdlZFJlc3VsdEZ1bmN0aW9uKG9uZSwgdHdvKSB7XG4gIHJldHVybiBmdW5jdGlvbiBtZXJnZWRSZXN1bHQoKSB7XG4gICAgdmFyIGEgPSBvbmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB2YXIgYiA9IHR3by5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChhID09IG51bGwpIHtcbiAgICAgIHJldHVybiBiO1xuICAgIH0gZWxzZSBpZiAoYiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gYTtcbiAgICB9XG4gICAgdmFyIGMgPSB7fTtcbiAgICBtZXJnZUludG9XaXRoTm9EdXBsaWNhdGVLZXlzKGMsIGEpO1xuICAgIG1lcmdlSW50b1dpdGhOb0R1cGxpY2F0ZUtleXMoYywgYik7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgaW52b2tlcyB0d28gZnVuY3Rpb25zIGFuZCBpZ25vcmVzIHRoZWlyIHJldHVybiB2YWxlcy5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBvbmUgRnVuY3Rpb24gdG8gaW52b2tlIGZpcnN0LlxuICogQHBhcmFtIHtmdW5jdGlvbn0gdHdvIEZ1bmN0aW9uIHRvIGludm9rZSBzZWNvbmQuXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn0gRnVuY3Rpb24gdGhhdCBpbnZva2VzIHRoZSB0d28gYXJndW1lbnQgZnVuY3Rpb25zLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKG9uZSwgdHdvKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjaGFpbmVkRnVuY3Rpb24oKSB7XG4gICAgb25lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdHdvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbi8qKlxuICogQmluZHMgYSBtZXRob2QgdG8gdGhlIGNvbXBvbmVudC5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29tcG9uZW50IENvbXBvbmVudCB3aG9zZSBtZXRob2QgaXMgZ29pbmcgdG8gYmUgYm91bmQuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBtZXRob2QgTWV0aG9kIHRvIGJlIGJvdW5kLlxuICogQHJldHVybiB7ZnVuY3Rpb259IFRoZSBib3VuZCBtZXRob2QuXG4gKi9cbmZ1bmN0aW9uIGJpbmRBdXRvQmluZE1ldGhvZChjb21wb25lbnQsIG1ldGhvZCkge1xuICB2YXIgYm91bmRNZXRob2QgPSBtZXRob2QuYmluZChjb21wb25lbnQpO1xuICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQ29udGV4dCA9IGNvbXBvbmVudDtcbiAgICBib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRNZXRob2QgPSBtZXRob2Q7XG4gICAgYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQXJndW1lbnRzID0gbnVsbDtcbiAgICB2YXIgY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5jb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZTtcbiAgICB2YXIgX2JpbmQgPSBib3VuZE1ldGhvZC5iaW5kO1xuICAgIC8qIGVzbGludC1kaXNhYmxlIGJsb2NrLXNjb3BlZC12YXIsIG5vLXVuZGVmICovXG4gICAgYm91bmRNZXRob2QuYmluZCA9IGZ1bmN0aW9uKG5ld1RoaXMgKSB7Zm9yICh2YXIgYXJncz1bXSwkX18wPTEsJF9fMT1hcmd1bWVudHMubGVuZ3RoOyRfXzA8JF9fMTskX18wKyspIGFyZ3MucHVzaChhcmd1bWVudHNbJF9fMF0pO1xuICAgICAgLy8gVXNlciBpcyB0cnlpbmcgdG8gYmluZCgpIGFuIGF1dG9ib3VuZCBtZXRob2Q7IHdlIGVmZmVjdGl2ZWx5IHdpbGxcbiAgICAgIC8vIGlnbm9yZSB0aGUgdmFsdWUgb2YgXCJ0aGlzXCIgdGhhdCB0aGUgdXNlciBpcyB0cnlpbmcgdG8gdXNlLCBzb1xuICAgICAgLy8gbGV0J3Mgd2Fybi5cbiAgICAgIGlmIChuZXdUaGlzICE9PSBjb21wb25lbnQgJiYgbmV3VGhpcyAhPT0gbnVsbCkge1xuICAgICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gd2FybmluZyhcbiAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAnYmluZCgpOiBSZWFjdCBjb21wb25lbnQgbWV0aG9kcyBtYXkgb25seSBiZSBib3VuZCB0byB0aGUgJyArXG4gICAgICAgICAgJ2NvbXBvbmVudCBpbnN0YW5jZS4gU2VlICVzJyxcbiAgICAgICAgICBjb21wb25lbnROYW1lXG4gICAgICAgICkgOiBudWxsKTtcbiAgICAgIH0gZWxzZSBpZiAoIWFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICdiaW5kKCk6IFlvdSBhcmUgYmluZGluZyBhIGNvbXBvbmVudCBtZXRob2QgdG8gdGhlIGNvbXBvbmVudC4gJyArXG4gICAgICAgICAgJ1JlYWN0IGRvZXMgdGhpcyBmb3IgeW91IGF1dG9tYXRpY2FsbHkgaW4gYSBoaWdoLXBlcmZvcm1hbmNlICcgK1xuICAgICAgICAgICd3YXksIHNvIHlvdSBjYW4gc2FmZWx5IHJlbW92ZSB0aGlzIGNhbGwuIFNlZSAlcycsXG4gICAgICAgICAgY29tcG9uZW50TmFtZVxuICAgICAgICApIDogbnVsbCk7XG4gICAgICAgIHJldHVybiBib3VuZE1ldGhvZDtcbiAgICAgIH1cbiAgICAgIHZhciByZWJvdW5kTWV0aG9kID0gX2JpbmQuYXBwbHkoYm91bmRNZXRob2QsIGFyZ3VtZW50cyk7XG4gICAgICByZWJvdW5kTWV0aG9kLl9fcmVhY3RCb3VuZENvbnRleHQgPSBjb21wb25lbnQ7XG4gICAgICByZWJvdW5kTWV0aG9kLl9fcmVhY3RCb3VuZE1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIHJlYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQXJndW1lbnRzID0gYXJncztcbiAgICAgIHJldHVybiByZWJvdW5kTWV0aG9kO1xuICAgICAgLyogZXNsaW50LWVuYWJsZSAqL1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGJvdW5kTWV0aG9kO1xufVxuXG4vKipcbiAqIEJpbmRzIGFsbCBhdXRvLWJvdW5kIG1ldGhvZHMgaW4gYSBjb21wb25lbnQuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGNvbXBvbmVudCBDb21wb25lbnQgd2hvc2UgbWV0aG9kIGlzIGdvaW5nIHRvIGJlIGJvdW5kLlxuICovXG5mdW5jdGlvbiBiaW5kQXV0b0JpbmRNZXRob2RzKGNvbXBvbmVudCkge1xuICBmb3IgKHZhciBhdXRvQmluZEtleSBpbiBjb21wb25lbnQuX19yZWFjdEF1dG9CaW5kTWFwKSB7XG4gICAgaWYgKGNvbXBvbmVudC5fX3JlYWN0QXV0b0JpbmRNYXAuaGFzT3duUHJvcGVydHkoYXV0b0JpbmRLZXkpKSB7XG4gICAgICB2YXIgbWV0aG9kID0gY29tcG9uZW50Ll9fcmVhY3RBdXRvQmluZE1hcFthdXRvQmluZEtleV07XG4gICAgICBjb21wb25lbnRbYXV0b0JpbmRLZXldID0gYmluZEF1dG9CaW5kTWV0aG9kKFxuICAgICAgICBjb21wb25lbnQsXG4gICAgICAgIFJlYWN0RXJyb3JVdGlscy5ndWFyZChcbiAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgY29tcG9uZW50LmNvbnN0cnVjdG9yLmRpc3BsYXlOYW1lICsgJy4nICsgYXV0b0JpbmRLZXlcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIHR5cGVEZXByZWNhdGlvbkRlc2NyaXB0b3IgPSB7XG4gIGVudW1lcmFibGU6IGZhbHNlLFxuICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkaXNwbGF5TmFtZSA9IHRoaXMuZGlzcGxheU5hbWUgfHwgdGhpcy5uYW1lIHx8ICdDb21wb25lbnQnO1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgZmFsc2UsXG4gICAgICAnJXMudHlwZSBpcyBkZXByZWNhdGVkLiBVc2UgJXMgZGlyZWN0bHkgdG8gYWNjZXNzIHRoZSBjbGFzcy4nLFxuICAgICAgZGlzcGxheU5hbWUsXG4gICAgICBkaXNwbGF5TmFtZVxuICAgICkgOiBudWxsKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ3R5cGUnLCB7XG4gICAgICB2YWx1ZTogdGhpc1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59O1xuXG4vKipcbiAqIEFkZCBtb3JlIHRvIHRoZSBSZWFjdENsYXNzIGJhc2UgY2xhc3MuIFRoZXNlIGFyZSBhbGwgbGVnYWN5IGZlYXR1cmVzIGFuZFxuICogdGhlcmVmb3JlIG5vdCBhbHJlYWR5IHBhcnQgb2YgdGhlIG1vZGVybiBSZWFjdENvbXBvbmVudC5cbiAqL1xudmFyIFJlYWN0Q2xhc3NNaXhpbiA9IHtcblxuICAvKipcbiAgICogVE9ETzogVGhpcyB3aWxsIGJlIGRlcHJlY2F0ZWQgYmVjYXVzZSBzdGF0ZSBzaG91bGQgYWx3YXlzIGtlZXAgYSBjb25zaXN0ZW50XG4gICAqIHR5cGUgc2lnbmF0dXJlIGFuZCB0aGUgb25seSB1c2UgY2FzZSBmb3IgdGhpcywgaXMgdG8gYXZvaWQgdGhhdC5cbiAgICovXG4gIHJlcGxhY2VTdGF0ZTogZnVuY3Rpb24obmV3U3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgUmVhY3RVcGRhdGVRdWV1ZS5lbnF1ZXVlUmVwbGFjZVN0YXRlKHRoaXMsIG5ld1N0YXRlKTtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIFJlYWN0VXBkYXRlUXVldWUuZW5xdWV1ZUNhbGxiYWNrKHRoaXMsIGNhbGxiYWNrKTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIENoZWNrcyB3aGV0aGVyIG9yIG5vdCB0aGlzIGNvbXBvc2l0ZSBjb21wb25lbnQgaXMgbW91bnRlZC5cbiAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiBtb3VudGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gICAqIEBwcm90ZWN0ZWRcbiAgICogQGZpbmFsXG4gICAqL1xuICBpc01vdW50ZWQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIHZhciBvd25lciA9IFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQ7XG4gICAgICBpZiAob3duZXIgIT09IG51bGwpIHtcbiAgICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgICAgb3duZXIuX3dhcm5lZEFib3V0UmVmc0luUmVuZGVyLFxuICAgICAgICAgICclcyBpcyBhY2Nlc3NpbmcgaXNNb3VudGVkIGluc2lkZSBpdHMgcmVuZGVyKCkgZnVuY3Rpb24uICcgK1xuICAgICAgICAgICdyZW5kZXIoKSBzaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uIG9mIHByb3BzIGFuZCBzdGF0ZS4gSXQgc2hvdWxkICcgK1xuICAgICAgICAgICduZXZlciBhY2Nlc3Mgc29tZXRoaW5nIHRoYXQgcmVxdWlyZXMgc3RhbGUgZGF0YSBmcm9tIHRoZSBwcmV2aW91cyAnICtcbiAgICAgICAgICAncmVuZGVyLCBzdWNoIGFzIHJlZnMuIE1vdmUgdGhpcyBsb2dpYyB0byBjb21wb25lbnREaWRNb3VudCBhbmQgJyArXG4gICAgICAgICAgJ2NvbXBvbmVudERpZFVwZGF0ZSBpbnN0ZWFkLicsXG4gICAgICAgICAgb3duZXIuZ2V0TmFtZSgpIHx8ICdBIGNvbXBvbmVudCdcbiAgICAgICAgKSA6IG51bGwpO1xuICAgICAgICBvd25lci5fd2FybmVkQWJvdXRSZWZzSW5SZW5kZXIgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICB2YXIgaW50ZXJuYWxJbnN0YW5jZSA9IFJlYWN0SW5zdGFuY2VNYXAuZ2V0KHRoaXMpO1xuICAgIHJldHVybiAoXG4gICAgICBpbnRlcm5hbEluc3RhbmNlICYmXG4gICAgICBpbnRlcm5hbEluc3RhbmNlICE9PSBSZWFjdExpZmVDeWNsZS5jdXJyZW50bHlNb3VudGluZ0luc3RhbmNlXG4gICAgKTtcbiAgfSxcblxuICAvKipcbiAgICogU2V0cyBhIHN1YnNldCBvZiB0aGUgcHJvcHMuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXJ0aWFsUHJvcHMgU3Vic2V0IG9mIHRoZSBuZXh0IHByb3BzLlxuICAgKiBAcGFyYW0gez9mdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGVkIGFmdGVyIHByb3BzIGFyZSB1cGRhdGVkLlxuICAgKiBAZmluYWxcbiAgICogQHB1YmxpY1xuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgc2V0UHJvcHM6IGZ1bmN0aW9uKHBhcnRpYWxQcm9wcywgY2FsbGJhY2spIHtcbiAgICBSZWFjdFVwZGF0ZVF1ZXVlLmVucXVldWVTZXRQcm9wcyh0aGlzLCBwYXJ0aWFsUHJvcHMpO1xuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgUmVhY3RVcGRhdGVRdWV1ZS5lbnF1ZXVlQ2FsbGJhY2sodGhpcywgY2FsbGJhY2spO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogUmVwbGFjZSBhbGwgdGhlIHByb3BzLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gbmV3UHJvcHMgU3Vic2V0IG9mIHRoZSBuZXh0IHByb3BzLlxuICAgKiBAcGFyYW0gez9mdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGVkIGFmdGVyIHByb3BzIGFyZSB1cGRhdGVkLlxuICAgKiBAZmluYWxcbiAgICogQHB1YmxpY1xuICAgKiBAZGVwcmVjYXRlZFxuICAgKi9cbiAgcmVwbGFjZVByb3BzOiBmdW5jdGlvbihuZXdQcm9wcywgY2FsbGJhY2spIHtcbiAgICBSZWFjdFVwZGF0ZVF1ZXVlLmVucXVldWVSZXBsYWNlUHJvcHModGhpcywgbmV3UHJvcHMpO1xuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgUmVhY3RVcGRhdGVRdWV1ZS5lbnF1ZXVlQ2FsbGJhY2sodGhpcywgY2FsbGJhY2spO1xuICAgIH1cbiAgfVxufTtcblxudmFyIFJlYWN0Q2xhc3NDb21wb25lbnQgPSBmdW5jdGlvbigpIHt9O1xuYXNzaWduKFxuICBSZWFjdENsYXNzQ29tcG9uZW50LnByb3RvdHlwZSxcbiAgUmVhY3RDb21wb25lbnQucHJvdG90eXBlLFxuICBSZWFjdENsYXNzTWl4aW5cbik7XG5cbi8qKlxuICogTW9kdWxlIGZvciBjcmVhdGluZyBjb21wb3NpdGUgY29tcG9uZW50cy5cbiAqXG4gKiBAY2xhc3MgUmVhY3RDbGFzc1xuICovXG52YXIgUmVhY3RDbGFzcyA9IHtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGNvbXBvc2l0ZSBjb21wb25lbnQgY2xhc3MgZ2l2ZW4gYSBjbGFzcyBzcGVjaWZpY2F0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gc3BlYyBDbGFzcyBzcGVjaWZpY2F0aW9uICh3aGljaCBtdXN0IGRlZmluZSBgcmVuZGVyYCkuXG4gICAqIEByZXR1cm4ge2Z1bmN0aW9ufSBDb21wb25lbnQgY29uc3RydWN0b3IgZnVuY3Rpb24uXG4gICAqIEBwdWJsaWNcbiAgICovXG4gIGNyZWF0ZUNsYXNzOiBmdW5jdGlvbihzcGVjKSB7XG4gICAgdmFyIENvbnN0cnVjdG9yID0gZnVuY3Rpb24ocHJvcHMsIGNvbnRleHQpIHtcbiAgICAgIC8vIFRoaXMgY29uc3RydWN0b3IgaXMgb3ZlcnJpZGRlbiBieSBtb2Nrcy4gVGhlIGFyZ3VtZW50IGlzIHVzZWRcbiAgICAgIC8vIGJ5IG1vY2tzIHRvIGFzc2VydCBvbiB3aGF0IGdldHMgbW91bnRlZC5cblxuICAgICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gd2FybmluZyhcbiAgICAgICAgICB0aGlzIGluc3RhbmNlb2YgQ29uc3RydWN0b3IsXG4gICAgICAgICAgJ1NvbWV0aGluZyBpcyBjYWxsaW5nIGEgUmVhY3QgY29tcG9uZW50IGRpcmVjdGx5LiBVc2UgYSBmYWN0b3J5IG9yICcgK1xuICAgICAgICAgICdKU1ggaW5zdGVhZC4gU2VlOiBodHRwczovL2ZiLm1lL3JlYWN0LWxlZ2FjeWZhY3RvcnknXG4gICAgICAgICkgOiBudWxsKTtcbiAgICAgIH1cblxuICAgICAgLy8gV2lyZSB1cCBhdXRvLWJpbmRpbmdcbiAgICAgIGlmICh0aGlzLl9fcmVhY3RBdXRvQmluZE1hcCkge1xuICAgICAgICBiaW5kQXV0b0JpbmRNZXRob2RzKHRoaXMpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnByb3BzID0gcHJvcHM7XG4gICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgICAgdGhpcy5zdGF0ZSA9IG51bGw7XG5cbiAgICAgIC8vIFJlYWN0Q2xhc3NlcyBkb2Vzbid0IGhhdmUgY29uc3RydWN0b3JzLiBJbnN0ZWFkLCB0aGV5IHVzZSB0aGVcbiAgICAgIC8vIGdldEluaXRpYWxTdGF0ZSBhbmQgY29tcG9uZW50V2lsbE1vdW50IG1ldGhvZHMgZm9yIGluaXRpYWxpemF0aW9uLlxuXG4gICAgICB2YXIgaW5pdGlhbFN0YXRlID0gdGhpcy5nZXRJbml0aWFsU3RhdGUgPyB0aGlzLmdldEluaXRpYWxTdGF0ZSgpIDogbnVsbDtcbiAgICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgLy8gV2UgYWxsb3cgYXV0by1tb2NrcyB0byBwcm9jZWVkIGFzIGlmIHRoZXkncmUgcmV0dXJuaW5nIG51bGwuXG4gICAgICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgdGhpcy5nZXRJbml0aWFsU3RhdGUuX2lzTW9ja0Z1bmN0aW9uKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBwcm9iYWJseSBiYWQgcHJhY3RpY2UuIENvbnNpZGVyIHdhcm5pbmcgaGVyZSBhbmRcbiAgICAgICAgICAvLyBkZXByZWNhdGluZyB0aGlzIGNvbnZlbmllbmNlLlxuICAgICAgICAgIGluaXRpYWxTdGF0ZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAgIHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KGluaXRpYWxTdGF0ZSksXG4gICAgICAgICclcy5nZXRJbml0aWFsU3RhdGUoKTogbXVzdCByZXR1cm4gYW4gb2JqZWN0IG9yIG51bGwnLFxuICAgICAgICBDb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZSB8fCAnUmVhY3RDb21wb3NpdGVDb21wb25lbnQnXG4gICAgICApIDogaW52YXJpYW50KHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KGluaXRpYWxTdGF0ZSkpKTtcblxuICAgICAgdGhpcy5zdGF0ZSA9IGluaXRpYWxTdGF0ZTtcbiAgICB9O1xuICAgIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IG5ldyBSZWFjdENsYXNzQ29tcG9uZW50KCk7XG4gICAgQ29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ29uc3RydWN0b3I7XG5cbiAgICBpbmplY3RlZE1peGlucy5mb3JFYWNoKFxuICAgICAgbWl4U3BlY0ludG9Db21wb25lbnQuYmluZChudWxsLCBDb25zdHJ1Y3RvcilcbiAgICApO1xuXG4gICAgbWl4U3BlY0ludG9Db21wb25lbnQoQ29uc3RydWN0b3IsIHNwZWMpO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgZGVmYXVsdFByb3BzIHByb3BlcnR5IGFmdGVyIGFsbCBtaXhpbnMgaGF2ZSBiZWVuIG1lcmdlZFxuICAgIGlmIChDb25zdHJ1Y3Rvci5nZXREZWZhdWx0UHJvcHMpIHtcbiAgICAgIENvbnN0cnVjdG9yLmRlZmF1bHRQcm9wcyA9IENvbnN0cnVjdG9yLmdldERlZmF1bHRQcm9wcygpO1xuICAgIH1cblxuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIC8vIFRoaXMgaXMgYSB0YWcgdG8gaW5kaWNhdGUgdGhhdCB0aGUgdXNlIG9mIHRoZXNlIG1ldGhvZCBuYW1lcyBpcyBvayxcbiAgICAgIC8vIHNpbmNlIGl0J3MgdXNlZCB3aXRoIGNyZWF0ZUNsYXNzLiBJZiBpdCdzIG5vdCwgdGhlbiBpdCdzIGxpa2VseSBhXG4gICAgICAvLyBtaXN0YWtlIHNvIHdlJ2xsIHdhcm4geW91IHRvIHVzZSB0aGUgc3RhdGljIHByb3BlcnR5LCBwcm9wZXJ0eVxuICAgICAgLy8gaW5pdGlhbGl6ZXIgb3IgY29uc3RydWN0b3IgcmVzcGVjdGl2ZWx5LlxuICAgICAgaWYgKENvbnN0cnVjdG9yLmdldERlZmF1bHRQcm9wcykge1xuICAgICAgICBDb25zdHJ1Y3Rvci5nZXREZWZhdWx0UHJvcHMuaXNSZWFjdENsYXNzQXBwcm92ZWQgPSB7fTtcbiAgICAgIH1cbiAgICAgIGlmIChDb25zdHJ1Y3Rvci5wcm90b3R5cGUuZ2V0SW5pdGlhbFN0YXRlKSB7XG4gICAgICAgIENvbnN0cnVjdG9yLnByb3RvdHlwZS5nZXRJbml0aWFsU3RhdGUuaXNSZWFjdENsYXNzQXBwcm92ZWQgPSB7fTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgQ29uc3RydWN0b3IucHJvdG90eXBlLnJlbmRlcixcbiAgICAgICdjcmVhdGVDbGFzcyguLi4pOiBDbGFzcyBzcGVjaWZpY2F0aW9uIG11c3QgaW1wbGVtZW50IGEgYHJlbmRlcmAgbWV0aG9kLidcbiAgICApIDogaW52YXJpYW50KENvbnN0cnVjdG9yLnByb3RvdHlwZS5yZW5kZXIpKTtcblxuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgICAhQ29uc3RydWN0b3IucHJvdG90eXBlLmNvbXBvbmVudFNob3VsZFVwZGF0ZSxcbiAgICAgICAgJyVzIGhhcyBhIG1ldGhvZCBjYWxsZWQgJyArXG4gICAgICAgICdjb21wb25lbnRTaG91bGRVcGRhdGUoKS4gRGlkIHlvdSBtZWFuIHNob3VsZENvbXBvbmVudFVwZGF0ZSgpPyAnICtcbiAgICAgICAgJ1RoZSBuYW1lIGlzIHBocmFzZWQgYXMgYSBxdWVzdGlvbiBiZWNhdXNlIHRoZSBmdW5jdGlvbiBpcyAnICtcbiAgICAgICAgJ2V4cGVjdGVkIHRvIHJldHVybiBhIHZhbHVlLicsXG4gICAgICAgIHNwZWMuZGlzcGxheU5hbWUgfHwgJ0EgY29tcG9uZW50J1xuICAgICAgKSA6IG51bGwpO1xuICAgIH1cblxuICAgIC8vIFJlZHVjZSB0aW1lIHNwZW50IGRvaW5nIGxvb2t1cHMgYnkgc2V0dGluZyB0aGVzZSBvbiB0aGUgcHJvdG90eXBlLlxuICAgIGZvciAodmFyIG1ldGhvZE5hbWUgaW4gUmVhY3RDbGFzc0ludGVyZmFjZSkge1xuICAgICAgaWYgKCFDb25zdHJ1Y3Rvci5wcm90b3R5cGVbbWV0aG9kTmFtZV0pIHtcbiAgICAgICAgQ29uc3RydWN0b3IucHJvdG90eXBlW21ldGhvZE5hbWVdID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBMZWdhY3kgaG9va1xuICAgIENvbnN0cnVjdG9yLnR5cGUgPSBDb25zdHJ1Y3RvcjtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICB0cnkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29uc3RydWN0b3IsICd0eXBlJywgdHlwZURlcHJlY2F0aW9uRGVzY3JpcHRvcik7XG4gICAgICB9IGNhdGNoICh4KSB7XG4gICAgICAgIC8vIElFIHdpbGwgZmFpbCBvbiBkZWZpbmVQcm9wZXJ0eSAoZXM1LXNoaW0vc2hhbSB0b28pXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9LFxuXG4gIGluamVjdGlvbjoge1xuICAgIGluamVjdE1peGluOiBmdW5jdGlvbihtaXhpbikge1xuICAgICAgaW5qZWN0ZWRNaXhpbnMucHVzaChtaXhpbik7XG4gICAgfVxuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RDbGFzcztcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactUpdateQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./ReactErrorUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactErrorUtils.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./ReactLifeCycle":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./ReactPropTypeLocationNames":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactPropTypeLocations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js","./keyMirror":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactClass.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\n\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context) {\n  this.props = props;\n  this.context = context;\n}\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function(partialState, callback) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof partialState === 'object' ||\n    typeof partialState === 'function' ||\n    partialState == null,\n    'setState(...): takes an object of state variables to update or a ' +\n    'function which returns an object of state variables.'\n  ) : invariant(typeof partialState === 'object' ||\n  typeof partialState === 'function' ||\n  partialState == null));\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      partialState != null,\n      'setState(...): You passed an undefined or null state object; ' +\n      'instead, use forceUpdate().'\n    ) : null);\n  }\n  ReactUpdateQueue.enqueueSetState(this, partialState);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function(callback) {\n  ReactUpdateQueue.enqueueForceUpdate(this);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (\"production\" !== process.env.NODE_ENV) {\n  var deprecatedAPIs = {\n    getDOMNode: [\n      'getDOMNode',\n      'Use React.findDOMNode(component) instead.'\n    ],\n    isMounted: [\n      'isMounted',\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\n      'componentWillUnmount to prevent memory leaks.'\n    ],\n    replaceProps: [\n      'replaceProps',\n      'Instead, call React.render again at the top level.'\n    ],\n    replaceState: [\n      'replaceState',\n      'Refactor your code to use setState instead (see ' +\n      'https://github.com/facebook/react/issues/3236).'\n    ],\n    setProps: [\n      'setProps',\n      'Instead, call React.render again at the top level.'\n    ]\n  };\n  var defineDeprecationWarning = function(methodName, info) {\n    try {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function() {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            '%s(...) is deprecated in plain JavaScript React classes. %s',\n            info[0],\n            info[1]\n          ) : null);\n          return undefined;\n        }\n      });\n    } catch (x) {\n      // IE will fail on defineProperty (es5-shim/sham too)\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./ReactUpdateQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactMount = require(\"./ReactMount\");\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates:\n    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID:\n    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function(rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n","deps":{"./ReactDOMIDOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactComponentBrowserEnvironment.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function(environment) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        !injected,\n        'ReactCompositeComponent: injectEnvironment() can only be called once.'\n      ) : invariant(!injected));\n      ReactComponentEnvironment.unmountIDFromEnvironment =\n        environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID =\n        environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates =\n        environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RDb21wb25lbnRFbnZpcm9ubWVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdENvbXBvbmVudEVudmlyb25tZW50XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG52YXIgaW5qZWN0ZWQgPSBmYWxzZTtcblxudmFyIFJlYWN0Q29tcG9uZW50RW52aXJvbm1lbnQgPSB7XG5cbiAgLyoqXG4gICAqIE9wdGlvbmFsbHkgaW5qZWN0YWJsZSBlbnZpcm9ubWVudCBkZXBlbmRlbnQgY2xlYW51cCBob29rLiAoc2VydmVyIHZzLlxuICAgKiBicm93c2VyIGV0YykuIEV4YW1wbGU6IEEgYnJvd3NlciBzeXN0ZW0gY2FjaGVzIERPTSBub2RlcyBiYXNlZCBvbiBjb21wb25lbnRcbiAgICogSUQgYW5kIG11c3QgcmVtb3ZlIHRoYXQgY2FjaGUgZW50cnkgd2hlbiB0aGlzIGluc3RhbmNlIGlzIHVubW91bnRlZC5cbiAgICovXG4gIHVubW91bnRJREZyb21FbnZpcm9ubWVudDogbnVsbCxcblxuICAvKipcbiAgICogT3B0aW9uYWxseSBpbmplY3RhYmxlIGhvb2sgZm9yIHN3YXBwaW5nIG91dCBtb3VudCBpbWFnZXMgaW4gdGhlIG1pZGRsZSBvZlxuICAgKiB0aGUgdHJlZS5cbiAgICovXG4gIHJlcGxhY2VOb2RlV2l0aE1hcmt1cEJ5SUQ6IG51bGwsXG5cbiAgLyoqXG4gICAqIE9wdGlvbmFsbHkgaW5qZWN0YWJsZSBob29rIGZvciBwcm9jZXNzaW5nIGEgcXVldWUgb2YgY2hpbGQgdXBkYXRlcy4gV2lsbFxuICAgKiBsYXRlciBtb3ZlIGludG8gTXVsdGlDaGlsZENvbXBvbmVudHMuXG4gICAqL1xuICBwcm9jZXNzQ2hpbGRyZW5VcGRhdGVzOiBudWxsLFxuXG4gIGluamVjdGlvbjoge1xuICAgIGluamVjdEVudmlyb25tZW50OiBmdW5jdGlvbihlbnZpcm9ubWVudCkge1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgICAgIWluamVjdGVkLFxuICAgICAgICAnUmVhY3RDb21wb3NpdGVDb21wb25lbnQ6IGluamVjdEVudmlyb25tZW50KCkgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UuJ1xuICAgICAgKSA6IGludmFyaWFudCghaW5qZWN0ZWQpKTtcbiAgICAgIFJlYWN0Q29tcG9uZW50RW52aXJvbm1lbnQudW5tb3VudElERnJvbUVudmlyb25tZW50ID1cbiAgICAgICAgZW52aXJvbm1lbnQudW5tb3VudElERnJvbUVudmlyb25tZW50O1xuICAgICAgUmVhY3RDb21wb25lbnRFbnZpcm9ubWVudC5yZXBsYWNlTm9kZVdpdGhNYXJrdXBCeUlEID1cbiAgICAgICAgZW52aXJvbm1lbnQucmVwbGFjZU5vZGVXaXRoTWFya3VwQnlJRDtcbiAgICAgIFJlYWN0Q29tcG9uZW50RW52aXJvbm1lbnQucHJvY2Vzc0NoaWxkcmVuVXBkYXRlcyA9XG4gICAgICAgIGVudmlyb25tZW50LnByb2Nlc3NDaGlsZHJlblVwZGF0ZXM7XG4gICAgICBpbmplY3RlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RDb21wb25lbnRFbnZpcm9ubWVudDtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactComponentEnvironment.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCompositeComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCompositeComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar invariant = require(\"./invariant\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function(element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._isTopLevel = false;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(this._currentElement._context);\n\n    var Component = ReactNativeComponent.getComponentClassForElement(\n      this._currentElement\n    );\n\n    // Initialize the public class\n    var inst = new Component(publicProps, publicContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        inst.render != null,\n        '%s(...): No `render` method found on the returned component ' +\n        'instance: you may have forgotten to define `render` in your ' +\n        'component or you may have accidentally tried to render an element ' +\n        'whose type is a function that isn\\'t a React component.',\n        Component.displayName || Component.name || 'Component'\n      ) : null);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      this._warnIfContextsDiffer(this._currentElement._context, context);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getInitialState ||\n        inst.getInitialState.isReactClassApproved,\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Did you mean to define a state property instead?',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.getDefaultProps ||\n        inst.getDefaultProps.isReactClassApproved,\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n        'This is only supported for classes created using React.createClass. ' +\n        'Use a static property to define defaultProps instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.propTypes,\n        'propTypes was defined as an instance property on %s. Use a static ' +\n        'property to define propTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !inst.contextTypes,\n        'contextTypes was defined as an instance property on %s. Use a ' +\n        'static property to define contextTypes instead.',\n        this.getName() || 'a component'\n      ) : null);\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof inst.componentShouldUpdate !== 'function',\n        '%s has a method called ' +\n        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n        'The name is phrased as a question because the function is ' +\n        'expected to return a value.',\n        (this.getName() || 'A component')\n      ) : null);\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof initialState === 'object' && !Array.isArray(initialState),\n      '%s.state: must be set to an object or null',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var childContext;\n    var renderedElement;\n\n    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;\n    ReactLifeCycle.currentlyMountingInstance = this;\n    try {\n      if (inst.componentWillMount) {\n        inst.componentWillMount();\n        // When mounting, calls to `setState` by `componentWillMount` will set\n        // `this._pendingStateQueue` without triggering a re-render.\n        if (this._pendingStateQueue) {\n          inst.state = this._processPendingState(inst.props, inst.context);\n        }\n      }\n\n      childContext = this._getValidatedChildContext(context);\n      renderedElement = this._renderValidatedComponent(childContext);\n    } finally {\n      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(\n      renderedElement,\n      this._currentElement.type // The wrapping type\n    );\n\n    var markup = ReactReconciler.mountComponent(\n      this._renderedComponent,\n      rootID,\n      transaction,\n      this._mergeChildContext(context, childContext)\n    );\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function() {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;\n      ReactLifeCycle.currentlyUnmountingInstance = this;\n      try {\n        inst.componentWillUnmount();\n      } finally {\n        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;\n      }\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n\n    // Reset pending fields\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Schedule a partial update to the props. Only used for internal testing.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @internal\n   */\n  _setPropsInternal: function(partialProps, callback) {\n    // This is a deoptimized path. We optimize for always having an element.\n    // This creates an extra internal element.\n    var element = this._pendingElement || this._currentElement;\n    this._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      assign({}, element.props, partialProps)\n    );\n    ReactUpdates.enqueueUpdate(this, callback);\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function(context) {\n    var maskedContext = null;\n    // This really should be getting the component class for the element,\n    // but we know that we're not going to need it for built-ins.\n    if (typeof this._currentElement.type === 'string') {\n      return emptyObject;\n    }\n    var contextTypes = this._currentElement.type.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function(context) {\n    var maskedContext = this._maskContext(context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.contextTypes) {\n        this._checkPropTypes(\n          Component.contextTypes,\n          maskedContext,\n          ReactPropTypeLocations.context\n        );\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _getValidatedChildContext: function(currentContext) {\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        typeof inst.constructor.childContextTypes === 'object',\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n        'use getChildContext().',\n        this.getName() || 'ReactCompositeComponent'\n      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));\n      if (\"production\" !== process.env.NODE_ENV) {\n        this._checkPropTypes(\n          inst.constructor.childContextTypes,\n          childContext,\n          ReactPropTypeLocations.childContext\n        );\n      }\n      for (var name in childContext) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          name in inst.constructor.childContextTypes,\n          '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n          this.getName() || 'ReactCompositeComponent',\n          name\n        ) : invariant(name in inst.constructor.childContextTypes));\n      }\n      return childContext;\n    }\n    return null;\n  },\n\n  _mergeChildContext: function(currentContext, childContext) {\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function(newProps) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var Component = ReactNativeComponent.getComponentClassForElement(\n        this._currentElement\n      );\n      if (Component.propTypes) {\n        this._checkPropTypes(\n          Component.propTypes,\n          newProps,\n          ReactPropTypeLocations.prop\n        );\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function(propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          (\"production\" !== process.env.NODE_ENV ? invariant(\n            typeof propTypes[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually ' +\n            'from React.PropTypes.',\n            componentName || 'React class',\n            ReactPropTypeLocationNames[location],\n            propName\n          ) : invariant(typeof propTypes[propName] === 'function'));\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // React.render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Composite propType: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          } else {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'Failed Context Types: %s%s',\n              error.message,\n              addendum\n            ) : null);\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function(nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(\n      transaction,\n      prevElement,\n      nextElement,\n      prevContext,\n      nextContext\n    );\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(\n        this,\n        this._pendingElement || this._currentElement,\n        transaction,\n        this._context\n      );\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        ReactElementValidator.checkAndWarnForMutatedProps(\n          this._currentElement\n        );\n      }\n\n      this.updateComponent(\n        transaction,\n        this._currentElement,\n        this._currentElement,\n        this._context,\n        this._context\n      );\n    }\n  },\n\n  /**\n   * Compare two contexts, warning if they are different\n   * TODO: Remove this check when owner-context is removed\n   */\n   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {\n    ownerBasedContext = this._maskContext(ownerBasedContext);\n    parentBasedContext = this._maskContext(parentBasedContext);\n    var parentKeys = Object.keys(parentBasedContext).sort();\n    var displayName = this.getName() || 'ReactCompositeComponent';\n    for (var i = 0; i < parentKeys.length; i++) {\n      var key = parentKeys[i];\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        ownerBasedContext[key] === parentBasedContext[key],\n        'owner-based and parent-based contexts differ '  +\n        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +\n        '(see: http://fb.me/react-context-by-parent)',\n        ownerBasedContext[key],\n        parentBasedContext[key],\n        key,\n        displayName\n      ) : null);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(\n    transaction,\n    prevParentElement,\n    nextParentElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var nextContext = inst.context;\n    var nextProps = inst.props;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement !== nextParentElement) {\n      nextContext = this._processContext(nextParentElement._context);\n      nextProps = this._processProps(nextParentElement.props);\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (nextUnmaskedContext != null) {\n          this._warnIfContextsDiffer(\n            nextParentElement._context,\n            nextUnmaskedContext\n          );\n        }\n      }\n\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate =\n      this._pendingForceUpdate ||\n      !inst.shouldComponentUpdate ||\n      inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        typeof shouldUpdate !== 'undefined',\n        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n        'boolean value. Make sure to return true or false.',\n        this.getName() || 'ReactCompositeComponent'\n      ) : null);\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(\n        nextParentElement,\n        nextProps,\n        nextState,\n        nextContext,\n        transaction,\n        nextUnmaskedContext\n      );\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function(props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(\n        nextState,\n        typeof partial === 'function' ?\n          partial.call(inst, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function(\n    nextElement,\n    nextProps,\n    nextState,\n    nextContext,\n    transaction,\n    unmaskedContext\n  ) {\n    var inst = this._instance;\n\n    var prevProps = inst.props;\n    var prevState = inst.state;\n    var prevContext = inst.context;\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (inst.componentDidUpdate) {\n      transaction.getReactMountReady().enqueue(\n        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),\n        inst\n      );\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function(transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var childContext = this._getValidatedChildContext();\n    var nextRenderedElement = this._renderValidatedComponent(childContext);\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(\n        prevComponentInstance,\n        nextRenderedElement,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(\n        nextRenderedElement,\n        this._currentElement.type\n      );\n      var nextMarkup = ReactReconciler.mountComponent(\n        this._renderedComponent,\n        thisID,\n        transaction,\n        this._mergeChildContext(context, childContext)\n      );\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(\n      prevComponentID,\n      nextMarkup\n    );\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function() {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (\"production\" !== process.env.NODE_ENV) {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' &&\n          inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function(childContext) {\n    var renderedComponent;\n    var previousContext = ReactContext.current;\n    ReactContext.current = this._mergeChildContext(\n      this._currentElement._context,\n      childContext\n    );\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent =\n        this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactContext.current = previousContext;\n      ReactCurrentOwner.current = null;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      // TODO: An `isValidNode` function would probably be more appropriate\n      renderedComponent === null || renderedComponent === false ||\n      ReactElement.isValidElement(renderedComponent),\n      '%s.render(): A valid ReactComponent must be returned. You may have ' +\n        'returned undefined, an array or some other invalid object.',\n      this.getName() || 'ReactCompositeComponent'\n    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false ||\n    ReactElement.isValidElement(renderedComponent)));\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function(ref, component) {\n    var inst = this.getPublicInstance();\n    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;\n    refs[ref] = component.getPublicInstance();\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function(ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function() {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return (\n      type.displayName || (constructor && constructor.displayName) ||\n      type.name || (constructor && constructor.name) ||\n      null\n    );\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by React.render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function() {\n    return this._instance;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(\n  ReactCompositeComponentMixin,\n  'ReactCompositeComponent',\n  {\n    mountComponent: 'mountComponent',\n    updateComponent: 'updateComponent',\n    _renderValidatedComponent: '_renderValidatedComponent'\n  }\n);\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactComponentEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js","./ReactContext":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","./ReactLifeCycle":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./ReactNativeComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactPropTypeLocations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js","./ReactPropTypeLocationNames":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./emptyObject":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./shouldUpdateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCompositeComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactCompositeComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar warning = require(\"./warning\");\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RDb250ZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdENvbnRleHRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi9PYmplY3QuYXNzaWduXCIpO1xudmFyIGVtcHR5T2JqZWN0ID0gcmVxdWlyZShcIi4vZW1wdHlPYmplY3RcIik7XG52YXIgd2FybmluZyA9IHJlcXVpcmUoXCIuL3dhcm5pbmdcIik7XG5cbnZhciBkaWRXYXJuID0gZmFsc2U7XG5cbi8qKlxuICogS2VlcHMgdHJhY2sgb2YgdGhlIGN1cnJlbnQgY29udGV4dC5cbiAqXG4gKiBUaGUgY29udGV4dCBpcyBhdXRvbWF0aWNhbGx5IHBhc3NlZCBkb3duIHRoZSBjb21wb25lbnQgb3duZXJzaGlwIGhpZXJhcmNoeVxuICogYW5kIGlzIGFjY2Vzc2libGUgdmlhIGB0aGlzLmNvbnRleHRgIG9uIFJlYWN0Q29tcG9zaXRlQ29tcG9uZW50cy5cbiAqL1xudmFyIFJlYWN0Q29udGV4dCA9IHtcblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqIEB0eXBlIHtvYmplY3R9XG4gICAqL1xuICBjdXJyZW50OiBlbXB0eU9iamVjdCxcblxuICAvKipcbiAgICogVGVtcG9yYXJpbHkgZXh0ZW5kcyB0aGUgY3VycmVudCBjb250ZXh0IHdoaWxlIGV4ZWN1dGluZyBzY29wZWRDYWxsYmFjay5cbiAgICpcbiAgICogQSB0eXBpY2FsIHVzZSBjYXNlIG1pZ2h0IGxvb2sgbGlrZVxuICAgKlxuICAgKiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICogICAgdmFyIGNoaWxkcmVuID0gUmVhY3RDb250ZXh0LndpdGhDb250ZXh0KHtmb286ICdmb28nfSwgKCkgPT4gKFxuICAgKlxuICAgKiAgICApKTtcbiAgICogICAgcmV0dXJuIDxkaXY+e2NoaWxkcmVufTwvZGl2PjtcbiAgICogIH1cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IG5ld0NvbnRleHQgTmV3IGNvbnRleHQgdG8gbWVyZ2UgaW50byB0aGUgZXhpc3RpbmcgY29udGV4dFxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBzY29wZWRDYWxsYmFjayBDYWxsYmFjayB0byBydW4gd2l0aCB0aGUgbmV3IGNvbnRleHRcbiAgICogQHJldHVybiB7UmVhY3RDb21wb25lbnR8YXJyYXk8UmVhY3RDb21wb25lbnQ+fVxuICAgKi9cbiAgd2l0aENvbnRleHQ6IGZ1bmN0aW9uKG5ld0NvbnRleHQsIHNjb3BlZENhbGxiYWNrKSB7XG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgIGRpZFdhcm4sXG4gICAgICAgICd3aXRoQ29udGV4dCBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbi4gJyArXG4gICAgICAgICdVc2UgYSB3cmFwcGVyIGNvbXBvbmVudCB3aXRoIGdldENoaWxkQ29udGV4dCBpbnN0ZWFkLidcbiAgICAgICkgOiBudWxsKTtcblxuICAgICAgZGlkV2FybiA9IHRydWU7XG4gICAgfVxuXG4gICAgdmFyIHJlc3VsdDtcbiAgICB2YXIgcHJldmlvdXNDb250ZXh0ID0gUmVhY3RDb250ZXh0LmN1cnJlbnQ7XG4gICAgUmVhY3RDb250ZXh0LmN1cnJlbnQgPSBhc3NpZ24oe30sIHByZXZpb3VzQ29udGV4dCwgbmV3Q29udGV4dCk7XG4gICAgdHJ5IHtcbiAgICAgIHJlc3VsdCA9IHNjb3BlZENhbGxiYWNrKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIFJlYWN0Q29udGV4dC5jdXJyZW50ID0gcHJldmlvdXNDb250ZXh0O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RDb250ZXh0O1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./emptyObject":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactContext.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactCurrentOwner.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOM.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOM.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\nvar mapObject = require(\"./mapObject\");\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOM = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  clipPath: 'clipPath',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOM;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RET00uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdERPTVxuICogQHR5cGVjaGVja3Mgc3RhdGljLW9ubHlcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdEVsZW1lbnQgPSByZXF1aXJlKFwiLi9SZWFjdEVsZW1lbnRcIik7XG52YXIgUmVhY3RFbGVtZW50VmFsaWRhdG9yID0gcmVxdWlyZShcIi4vUmVhY3RFbGVtZW50VmFsaWRhdG9yXCIpO1xuXG52YXIgbWFwT2JqZWN0ID0gcmVxdWlyZShcIi4vbWFwT2JqZWN0XCIpO1xuXG4vKipcbiAqIENyZWF0ZSBhIGZhY3RvcnkgdGhhdCBjcmVhdGVzIEhUTUwgdGFnIGVsZW1lbnRzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGFnIG5hbWUgKGUuZy4gYGRpdmApLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRE9NRmFjdG9yeSh0YWcpIHtcbiAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgIHJldHVybiBSZWFjdEVsZW1lbnRWYWxpZGF0b3IuY3JlYXRlRmFjdG9yeSh0YWcpO1xuICB9XG4gIHJldHVybiBSZWFjdEVsZW1lbnQuY3JlYXRlRmFjdG9yeSh0YWcpO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBtYXBwaW5nIGZyb20gc3VwcG9ydGVkIEhUTUwgdGFncyB0byBgUmVhY3RET01Db21wb25lbnRgIGNsYXNzZXMuXG4gKiBUaGlzIGlzIGFsc28gYWNjZXNzaWJsZSB2aWEgYFJlYWN0LkRPTWAuXG4gKlxuICogQHB1YmxpY1xuICovXG52YXIgUmVhY3RET00gPSBtYXBPYmplY3Qoe1xuICBhOiAnYScsXG4gIGFiYnI6ICdhYmJyJyxcbiAgYWRkcmVzczogJ2FkZHJlc3MnLFxuICBhcmVhOiAnYXJlYScsXG4gIGFydGljbGU6ICdhcnRpY2xlJyxcbiAgYXNpZGU6ICdhc2lkZScsXG4gIGF1ZGlvOiAnYXVkaW8nLFxuICBiOiAnYicsXG4gIGJhc2U6ICdiYXNlJyxcbiAgYmRpOiAnYmRpJyxcbiAgYmRvOiAnYmRvJyxcbiAgYmlnOiAnYmlnJyxcbiAgYmxvY2txdW90ZTogJ2Jsb2NrcXVvdGUnLFxuICBib2R5OiAnYm9keScsXG4gIGJyOiAnYnInLFxuICBidXR0b246ICdidXR0b24nLFxuICBjYW52YXM6ICdjYW52YXMnLFxuICBjYXB0aW9uOiAnY2FwdGlvbicsXG4gIGNpdGU6ICdjaXRlJyxcbiAgY29kZTogJ2NvZGUnLFxuICBjb2w6ICdjb2wnLFxuICBjb2xncm91cDogJ2NvbGdyb3VwJyxcbiAgZGF0YTogJ2RhdGEnLFxuICBkYXRhbGlzdDogJ2RhdGFsaXN0JyxcbiAgZGQ6ICdkZCcsXG4gIGRlbDogJ2RlbCcsXG4gIGRldGFpbHM6ICdkZXRhaWxzJyxcbiAgZGZuOiAnZGZuJyxcbiAgZGlhbG9nOiAnZGlhbG9nJyxcbiAgZGl2OiAnZGl2JyxcbiAgZGw6ICdkbCcsXG4gIGR0OiAnZHQnLFxuICBlbTogJ2VtJyxcbiAgZW1iZWQ6ICdlbWJlZCcsXG4gIGZpZWxkc2V0OiAnZmllbGRzZXQnLFxuICBmaWdjYXB0aW9uOiAnZmlnY2FwdGlvbicsXG4gIGZpZ3VyZTogJ2ZpZ3VyZScsXG4gIGZvb3RlcjogJ2Zvb3RlcicsXG4gIGZvcm06ICdmb3JtJyxcbiAgaDE6ICdoMScsXG4gIGgyOiAnaDInLFxuICBoMzogJ2gzJyxcbiAgaDQ6ICdoNCcsXG4gIGg1OiAnaDUnLFxuICBoNjogJ2g2JyxcbiAgaGVhZDogJ2hlYWQnLFxuICBoZWFkZXI6ICdoZWFkZXInLFxuICBocjogJ2hyJyxcbiAgaHRtbDogJ2h0bWwnLFxuICBpOiAnaScsXG4gIGlmcmFtZTogJ2lmcmFtZScsXG4gIGltZzogJ2ltZycsXG4gIGlucHV0OiAnaW5wdXQnLFxuICBpbnM6ICdpbnMnLFxuICBrYmQ6ICdrYmQnLFxuICBrZXlnZW46ICdrZXlnZW4nLFxuICBsYWJlbDogJ2xhYmVsJyxcbiAgbGVnZW5kOiAnbGVnZW5kJyxcbiAgbGk6ICdsaScsXG4gIGxpbms6ICdsaW5rJyxcbiAgbWFpbjogJ21haW4nLFxuICBtYXA6ICdtYXAnLFxuICBtYXJrOiAnbWFyaycsXG4gIG1lbnU6ICdtZW51JyxcbiAgbWVudWl0ZW06ICdtZW51aXRlbScsXG4gIG1ldGE6ICdtZXRhJyxcbiAgbWV0ZXI6ICdtZXRlcicsXG4gIG5hdjogJ25hdicsXG4gIG5vc2NyaXB0OiAnbm9zY3JpcHQnLFxuICBvYmplY3Q6ICdvYmplY3QnLFxuICBvbDogJ29sJyxcbiAgb3B0Z3JvdXA6ICdvcHRncm91cCcsXG4gIG9wdGlvbjogJ29wdGlvbicsXG4gIG91dHB1dDogJ291dHB1dCcsXG4gIHA6ICdwJyxcbiAgcGFyYW06ICdwYXJhbScsXG4gIHBpY3R1cmU6ICdwaWN0dXJlJyxcbiAgcHJlOiAncHJlJyxcbiAgcHJvZ3Jlc3M6ICdwcm9ncmVzcycsXG4gIHE6ICdxJyxcbiAgcnA6ICdycCcsXG4gIHJ0OiAncnQnLFxuICBydWJ5OiAncnVieScsXG4gIHM6ICdzJyxcbiAgc2FtcDogJ3NhbXAnLFxuICBzY3JpcHQ6ICdzY3JpcHQnLFxuICBzZWN0aW9uOiAnc2VjdGlvbicsXG4gIHNlbGVjdDogJ3NlbGVjdCcsXG4gIHNtYWxsOiAnc21hbGwnLFxuICBzb3VyY2U6ICdzb3VyY2UnLFxuICBzcGFuOiAnc3BhbicsXG4gIHN0cm9uZzogJ3N0cm9uZycsXG4gIHN0eWxlOiAnc3R5bGUnLFxuICBzdWI6ICdzdWInLFxuICBzdW1tYXJ5OiAnc3VtbWFyeScsXG4gIHN1cDogJ3N1cCcsXG4gIHRhYmxlOiAndGFibGUnLFxuICB0Ym9keTogJ3Rib2R5JyxcbiAgdGQ6ICd0ZCcsXG4gIHRleHRhcmVhOiAndGV4dGFyZWEnLFxuICB0Zm9vdDogJ3Rmb290JyxcbiAgdGg6ICd0aCcsXG4gIHRoZWFkOiAndGhlYWQnLFxuICB0aW1lOiAndGltZScsXG4gIHRpdGxlOiAndGl0bGUnLFxuICB0cjogJ3RyJyxcbiAgdHJhY2s6ICd0cmFjaycsXG4gIHU6ICd1JyxcbiAgdWw6ICd1bCcsXG4gICd2YXInOiAndmFyJyxcbiAgdmlkZW86ICd2aWRlbycsXG4gIHdicjogJ3dicicsXG5cbiAgLy8gU1ZHXG4gIGNpcmNsZTogJ2NpcmNsZScsXG4gIGNsaXBQYXRoOiAnY2xpcFBhdGgnLFxuICBkZWZzOiAnZGVmcycsXG4gIGVsbGlwc2U6ICdlbGxpcHNlJyxcbiAgZzogJ2cnLFxuICBsaW5lOiAnbGluZScsXG4gIGxpbmVhckdyYWRpZW50OiAnbGluZWFyR3JhZGllbnQnLFxuICBtYXNrOiAnbWFzaycsXG4gIHBhdGg6ICdwYXRoJyxcbiAgcGF0dGVybjogJ3BhdHRlcm4nLFxuICBwb2x5Z29uOiAncG9seWdvbicsXG4gIHBvbHlsaW5lOiAncG9seWxpbmUnLFxuICByYWRpYWxHcmFkaWVudDogJ3JhZGlhbEdyYWRpZW50JyxcbiAgcmVjdDogJ3JlY3QnLFxuICBzdG9wOiAnc3RvcCcsXG4gIHN2ZzogJ3N2ZycsXG4gIHRleHQ6ICd0ZXh0JyxcbiAgdHNwYW46ICd0c3BhbidcblxufSwgY3JlYXRlRE9NRmFjdG9yeSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RET007XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","./mapObject":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/mapObject.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOM.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOM.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMButton.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMButton.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar button = ReactElement.createFactory('button');\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactClass.createClass({\n  displayName: 'ReactDOMButton',\n  tagName: 'BUTTON',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n","deps":{"./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./keyMirror":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js","./AutoFocusMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMButton.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMButton.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMProperty = require(\"./DOMProperty\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactMultiChild = require(\"./ReactMultiChild\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar invariant = require(\"./invariant\");\nvar isEventSupported = require(\"./isEventSupported\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = {'string': true, 'number': true};\n\nvar STYLE = keyOf({style: null});\n\nvar ELEMENT_NODE_TYPE = 1;\n\n/**\n * Optionally injectable operations for mutating the DOM\n */\nvar BackendIDOperations = null;\n\n/**\n * @param {?object} props\n */\nfunction assertValidProps(props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (props.dangerouslySetInnerHTML != null) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.children == null,\n      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'\n    ) : invariant(props.children == null));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof props.dangerouslySetInnerHTML === 'object' &&\n      '__html' in props.dangerouslySetInnerHTML,\n      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +\n      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +\n      'for more information.'\n    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&\n    '__html' in props.dangerouslySetInnerHTML));\n  }\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      props.innerHTML == null,\n      'Directly setting property `innerHTML` is not permitted. ' +\n      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'\n    ) : null);\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !props.contentEditable || props.children == null,\n      'A component is `contentEditable` and contains `children` managed by ' +\n      'React. It is now your responsibility to guarantee that none of ' +\n      'those nodes are unexpectedly modified or duplicated. This is ' +\n      'probably not intentional.'\n    ) : null);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    props.style == null || typeof props.style === 'object',\n    'The `style` prop expects a mapping from style properties to values, ' +\n    'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' +\n    'using JSX.'\n  ) : invariant(props.style == null || typeof props.style === 'object'));\n}\n\nfunction putListener(id, registrationName, listener, transaction) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      registrationName !== 'onScroll' || isEventSupported('scroll', true),\n      'This browser doesn\\'t support the `onScroll` event'\n    ) : null);\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ?\n      container.ownerDocument :\n      container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getPutListenerQueue().enqueuePutListener(\n    id,\n    registrationName,\n    listener\n  );\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n  // NOTE: menuitem's close tag should be omitted, but that causes problems.\n};\n\n// We accept any tag to be rendered but since this gets injected into abitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));\n    validatedTagCache[tag] = true;\n  }\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag;\n  this._renderedChildren = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function(element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} The computed markup.\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    assertValidProps(this._currentElement.props);\n    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';\n    return (\n      this._createOpenTagMarkupAndPutListeners(transaction) +\n      this._createContentMarkup(transaction, context) +\n      closeTag\n    );\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function(transaction) {\n    var props = this._currentElement.props;\n    var ret = '<' + this._tag;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, propValue, transaction);\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup =\n          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret + '>';\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID + '>';\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function(transaction, context) {\n    var prefix = '';\n    if (this._tag === 'listing' ||\n        this._tag === 'pre' ||\n        this._tag === 'textarea') {\n      // Add an initial newline because browsers ignore the first newline in\n      // a <listing>, <pre>, or <textarea> as an \"authoring convenience\" -- see\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.\n      prefix = '\\n';\n    }\n\n    var props = this._currentElement.props;\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        return prefix + innerHTML.__html;\n      }\n    } else {\n      var contentToUse =\n        CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        return prefix + escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(\n          childrenToUse,\n          transaction,\n          context\n        );\n        return prefix + mountImages.join('');\n      }\n    }\n    return prefix;\n  },\n\n  receiveComponent: function(nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function(transaction, prevElement, nextElement, context) {\n    assertValidProps(this._currentElement.props);\n    this._updateDOMProperties(prevElement.props, transaction);\n    this._updateDOMChildren(prevElement.props, transaction, context);\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMProperties: function(lastProps, transaction) {\n    var nextProps = this._currentElement.props;\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) ||\n         !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        deleteListener(this._rootNodeID, propKey);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.deletePropertyByID(\n          this._rootNodeID,\n          propKey\n        );\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ?\n        this._previousStyleCopy :\n        lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) &&\n                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) &&\n                lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        putListener(this._rootNodeID, propKey, nextProp, transaction);\n      } else if (\n          DOMProperty.isStandardName[propKey] ||\n          DOMProperty.isCustomAttribute(propKey)) {\n        BackendIDOperations.updatePropertyByID(\n          this._rootNodeID,\n          propKey,\n          nextProp\n        );\n      }\n    }\n    if (styleUpdates) {\n      BackendIDOperations.updateStylesByID(\n        this._rootNodeID,\n        styleUpdates\n      );\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {ReactReconcileTransaction} transaction\n   */\n  _updateDOMChildren: function(lastProps, transaction, context) {\n    var nextProps = this._currentElement.props;\n\n    var lastContent =\n      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent =\n      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml =\n      lastProps.dangerouslySetInnerHTML &&\n      lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml =\n      nextProps.dangerouslySetInnerHTML &&\n      nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        BackendIDOperations.updateInnerHTMLByID(\n          this._rootNodeID,\n          nextHtml\n        );\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function() {\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin,\n  ReactMultiChild.Mixin\n);\n\nReactDOMComponent.injection = {\n  injectIDOperations: function(IDOperations) {\n    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;\n  }\n};\n\nmodule.exports = ReactDOMComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./DOMPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./ReactComponentBrowserEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./escapeTextContentForBrowser":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./isEventSupported":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js","./CSSPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js","./ReactMultiChild":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChild.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMForm.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMForm.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMForm\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar form = ReactElement.createFactory('form');\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactClass.createClass({\n  displayName: 'ReactDOMForm',\n  tagName: 'FORM',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return form(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');\n  }\n});\n\nmodule.exports = ReactDOMForm;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./LocalEventTrapMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMForm.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMForm.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n/*jslint evil: true */\n\n'use strict';\n\nvar CSSPropertyOperations = require(\"./CSSPropertyOperations\");\nvar DOMChildrenOperations = require(\"./DOMChildrenOperations\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Errors for properties that should not be updated with `updatePropertyById()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML:\n    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes. This is made injectable via\n * `ReactDOMComponent.BackendIDOperations`.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Updates a DOM node to remove a property. This should only be used to remove\n   * DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A property name to remove, see `DOMProperty`.\n   * @internal\n   */\n  deletePropertyByID: function(id, name, value) {\n    var node = ReactMount.getNode(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),\n      'updatePropertyByID(...): %s',\n      INVALID_PROPERTY_ERRORS[name]\n    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));\n    DOMPropertyOperations.deleteValueForProperty(node, name, value);\n  },\n\n  /**\n   * Updates a DOM node with new style values. If a value is specified as '',\n   * the corresponding style property will be unset.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {object} styles Mapping from styles to values.\n   * @internal\n   */\n  updateStylesByID: function(id, styles) {\n    var node = ReactMount.getNode(id);\n    CSSPropertyOperations.setValueForStyles(node, styles);\n  },\n\n  /**\n   * Updates a DOM node's innerHTML.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} html An HTML string.\n   * @internal\n   */\n  updateInnerHTMLByID: function(id, html) {\n    var node = ReactMount.getNode(id);\n    setInnerHTML(node, html);\n  },\n\n  /**\n   * Updates a DOM node's text content set by `props.content`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} content Text content.\n   * @internal\n   */\n  updateTextContentByID: function(id, content) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.updateTextContent(node, content);\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function(updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  updatePropertyByID: 'updatePropertyByID',\n  deletePropertyByID: 'deletePropertyByID',\n  updateStylesByID: 'updateStylesByID',\n  updateInnerHTMLByID: 'updateInnerHTMLByID',\n  updateTextContentByID: 'updateTextContentByID',\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./CSSPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js","./DOMPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./setInnerHTML":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js","./DOMChildrenOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMChildrenOperations.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMIDOperations.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIframe.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIframe.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIframe\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar iframe = ReactElement.createFactory('iframe');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <iframe> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <iframe> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMIframe = ReactClass.createClass({\n  displayName: 'ReactDOMIframe',\n  tagName: 'IFRAME',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return iframe(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n  }\n});\n\nmodule.exports = ReactDOMIframe;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./LocalEventTrapMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIframe.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMIframe.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMImg.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMImg.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar img = ReactElement.createFactory('img');\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactClass.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./LocalEventTrapMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMImg.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMImg.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMInput.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMInput.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar input = ReactElement.createFactory('input');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = ReactClass.createClass({\n  displayName: 'ReactDOMInput',\n  tagName: 'INPUT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    return {\n      initialChecked: this.props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.defaultChecked = null;\n    props.defaultValue = null;\n\n    var value = LinkedValueUtils.getValue(this);\n    props.value = value != null ? value : this.state.initialValue;\n\n    var checked = LinkedValueUtils.getChecked(this);\n    props.checked = checked != null ? checked : this.state.initialChecked;\n\n    props.onChange = this._handleChange;\n\n    return input(props, this.props.children);\n  },\n\n  componentDidMount: function() {\n    var id = ReactMount.getID(this.getDOMNode());\n    instancesByReactID[id] = this;\n  },\n\n  componentWillUnmount: function() {\n    var rootNode = this.getDOMNode();\n    var id = ReactMount.getID(rootNode);\n    delete instancesByReactID[id];\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var rootNode = this.getDOMNode();\n    if (this.props.checked != null) {\n      DOMPropertyOperations.setValueForProperty(\n        rootNode,\n        'checked',\n        this.props.checked || false\n      );\n    }\n\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    // Here we use asap to wait until all updates have propagated, which\n    // is important when using controlled components within layers:\n    // https://github.com/facebook/react/issues/1698\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n\n    var name = this.props.name;\n    if (this.props.type === 'radio' && name != null) {\n      var rootNode = this.getDOMNode();\n      var queryRoot = rootNode;\n\n      while (queryRoot.parentNode) {\n        queryRoot = queryRoot.parentNode;\n      }\n\n      // If `rootNode.form` was non-null, then we could try `form.elements`,\n      // but that sometimes behaves strangely in IE8. We could also try using\n      // `form.getElementsByName`, but that will only return direct children\n      // and won't include inputs that use the HTML5 `form=` attribute. Since\n      // the input might not even be in a form, let's just use the global\n      // `querySelectorAll` to ensure we don't miss anything.\n      var group = queryRoot.querySelectorAll(\n        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n      for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n        var otherNode = group[i];\n        if (otherNode === rootNode ||\n            otherNode.form !== rootNode.form) {\n          continue;\n        }\n        var otherID = ReactMount.getID(otherNode);\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherID,\n          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +\n          'same `name` is not supported.'\n        ) : invariant(otherID));\n        var otherInstance = instancesByReactID[otherID];\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          otherInstance,\n          'ReactDOMInput: Unknown radio button ID %s.',\n          otherID\n        ) : invariant(otherInstance));\n        // If this is a controlled radio button group, forcing the input that\n        // was previously checked to update will cause it to be come re-checked\n        // as appropriate.\n        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n      }\n    }\n\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMInput;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./AutoFocusMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js","./DOMPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./LinkedValueUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMInput.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMInput.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMOption.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMOption.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\nvar option = ReactElement.createFactory('option');\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactClass.createClass({\n  displayName: 'ReactDOMOption',\n  tagName: 'OPTION',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RET01PcHRpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RET01PcHRpb25cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdEJyb3dzZXJDb21wb25lbnRNaXhpbiA9IHJlcXVpcmUoXCIuL1JlYWN0QnJvd3NlckNvbXBvbmVudE1peGluXCIpO1xudmFyIFJlYWN0Q2xhc3MgPSByZXF1aXJlKFwiLi9SZWFjdENsYXNzXCIpO1xudmFyIFJlYWN0RWxlbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFwiKTtcblxudmFyIHdhcm5pbmcgPSByZXF1aXJlKFwiLi93YXJuaW5nXCIpO1xuXG52YXIgb3B0aW9uID0gUmVhY3RFbGVtZW50LmNyZWF0ZUZhY3RvcnkoJ29wdGlvbicpO1xuXG4vKipcbiAqIEltcGxlbWVudHMgYW4gPG9wdGlvbj4gbmF0aXZlIGNvbXBvbmVudCB0aGF0IHdhcm5zIHdoZW4gYHNlbGVjdGVkYCBpcyBzZXQuXG4gKi9cbnZhciBSZWFjdERPTU9wdGlvbiA9IFJlYWN0Q2xhc3MuY3JlYXRlQ2xhc3Moe1xuICBkaXNwbGF5TmFtZTogJ1JlYWN0RE9NT3B0aW9uJyxcbiAgdGFnTmFtZTogJ09QVElPTicsXG5cbiAgbWl4aW5zOiBbUmVhY3RCcm93c2VyQ29tcG9uZW50TWl4aW5dLFxuXG4gIGNvbXBvbmVudFdpbGxNb3VudDogZnVuY3Rpb24oKSB7XG4gICAgLy8gVE9ETyAoeXVuZ3N0ZXJzKTogUmVtb3ZlIHN1cHBvcnQgZm9yIGBzZWxlY3RlZGAgaW4gPG9wdGlvbj4uXG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgIHRoaXMucHJvcHMuc2VsZWN0ZWQgPT0gbnVsbCxcbiAgICAgICAgJ1VzZSB0aGUgYGRlZmF1bHRWYWx1ZWAgb3IgYHZhbHVlYCBwcm9wcyBvbiA8c2VsZWN0PiBpbnN0ZWFkIG9mICcgK1xuICAgICAgICAnc2V0dGluZyBgc2VsZWN0ZWRgIG9uIDxvcHRpb24+LidcbiAgICAgICkgOiBudWxsKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gb3B0aW9uKHRoaXMucHJvcHMsIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICB9XG5cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0RE9NT3B0aW9uO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMOption.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMOption.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelect.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelect.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\n\nvar select = ReactElement.createFactory('select');\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  /*jshint validthis:true */\n  if (this._pendingUpdate) {\n    this._pendingUpdate = false;\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null && this.isMounted()) {\n      updateOptions(this, value);\n    }\n  }\n}\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction selectValueType(props, propName, componentName) {\n  if (props[propName] == null) {\n    return null;\n  }\n  if (props.multiple) {\n    if (!Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be an array if \") +\n        (\"`multiple` is true.\")\n      );\n    }\n  } else {\n    if (Array.isArray(props[propName])) {\n      return new Error(\n        (\"The `\" + propName + \"` prop supplied to <select> must be a scalar \") +\n        (\"value if `multiple` is false.\")\n      );\n    }\n  }\n}\n\n/**\n * @param {ReactComponent} component Instance of ReactDOMSelect\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(component, propValue) {\n  var selectedValue, i, l;\n  var options = component.getDOMNode().options;\n\n  if (component.props.multiple) {\n    selectedValue = {};\n    for (i = 0, l = propValue.length; i < l; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0, l = options.length; i < l; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0, l = options.length; i < l; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = ReactClass.createClass({\n  displayName: 'ReactDOMSelect',\n  tagName: 'SELECT',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  propTypes: {\n    defaultValue: selectValueType,\n    value: selectValueType\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    props.onChange = this._handleChange;\n    props.value = null;\n\n    return select(props, this.props.children);\n  },\n\n  componentWillMount: function() {\n    this._pendingUpdate = false;\n  },\n\n  componentDidMount: function() {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      updateOptions(this, value);\n    } else if (this.props.defaultValue != null) {\n      updateOptions(this, this.props.defaultValue);\n    }\n  },\n\n  componentDidUpdate: function(prevProps) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      this._pendingUpdate = false;\n      updateOptions(this, value);\n    } else if (!prevProps.multiple !== !this.props.multiple) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (this.props.defaultValue != null) {\n        updateOptions(this, this.props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(this, this.props.multiple ? [] : '');\n      }\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n\n    this._pendingUpdate = true;\n    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMSelect;\n","deps":{"./AutoFocusMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js","./LinkedValueUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelect.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMSelect.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelection.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelection.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar getNodeForCharacterOffset = require(\"./getNodeForCharacterOffset\");\nvar getTextContentAccessor = require(\"./getTextContentAccessor\");\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(\n    selection.anchorNode,\n    selection.anchorOffset,\n    selection.focusNode,\n    selection.focusOffset\n  );\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(\n    tempRange.startContainer,\n    tempRange.startOffset,\n    tempRange.endContainer,\n    tempRange.endOffset\n  );\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ?\n            start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = (\n  ExecutionEnvironment.canUseDOM &&\n  'selection' in document &&\n  !('getSelection' in window)\n);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./getTextContentAccessor":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js","./getNodeForCharacterOffset":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getNodeForCharacterOffset.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelection.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMSelection.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function(props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function(text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function(rootID, transaction, context) {\n    this._rootNodeID = rootID;\n    var escapedText = escapeTextContentForBrowser(this._stringText);\n\n    if (transaction.renderToStaticMarkup) {\n      // Normally we'd wrap this in a `span` for the reasons stated above, but\n      // since this is a situation where React won't take over (static pages),\n      // we can simply return the text as it is.\n      return escapedText;\n    }\n\n    return (\n      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +\n        escapedText +\n      '</span>'\n    );\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function(nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        ReactDOMComponent.BackendIDOperations.updateTextContentByID(\n          this._rootNodeID,\n          nextStringText\n        );\n      }\n    }\n  },\n\n  unmountComponent: function() {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n","deps":{"./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./escapeTextContentForBrowser":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js","./ReactComponentBrowserEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js","./DOMPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","./ReactDOMComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMTextComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextarea.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextarea.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar DOMPropertyOperations = require(\"./DOMPropertyOperations\");\nvar LinkedValueUtils = require(\"./LinkedValueUtils\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar warning = require(\"./warning\");\n\nvar textarea = ReactElement.createFactory('textarea');\n\nfunction forceUpdateIfMounted() {\n  /*jshint validthis:true */\n  if (this.isMounted()) {\n    this.forceUpdate();\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = ReactClass.createClass({\n  displayName: 'ReactDOMTextarea',\n  tagName: 'TEXTAREA',\n\n  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],\n\n  getInitialState: function() {\n    var defaultValue = this.props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = this.props.children;\n    if (children != null) {\n      if (\"production\" !== process.env.NODE_ENV) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'Use the `defaultValue` or `value` props instead of setting ' +\n          'children on <textarea>.'\n        ) : null);\n      }\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        defaultValue == null,\n        'If you supply `defaultValue` on a <textarea>, do not pass children.'\n      ) : invariant(defaultValue == null));\n      if (Array.isArray(children)) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          children.length <= 1,\n          '<textarea> can only have at most one child.'\n        ) : invariant(children.length <= 1));\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(this);\n    return {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue)\n    };\n  },\n\n  render: function() {\n    // Clone `this.props` so we don't mutate the input.\n    var props = assign({}, this.props);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      props.dangerouslySetInnerHTML == null,\n      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'\n    ) : invariant(props.dangerouslySetInnerHTML == null));\n\n    props.defaultValue = null;\n    props.value = null;\n    props.onChange = this._handleChange;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    return textarea(props, this.state.initialValue);\n  },\n\n  componentDidUpdate: function(prevProps, prevState, prevContext) {\n    var value = LinkedValueUtils.getValue(this);\n    if (value != null) {\n      var rootNode = this.getDOMNode();\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);\n    }\n  },\n\n  _handleChange: function(event) {\n    var returnValue;\n    var onChange = LinkedValueUtils.getOnChange(this);\n    if (onChange) {\n      returnValue = onChange.call(this, event);\n    }\n    ReactUpdates.asap(forceUpdateIfMounted, this);\n    return returnValue;\n  }\n\n});\n\nmodule.exports = ReactDOMTextarea;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RET01UZXh0YXJlYS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0RE9NVGV4dGFyZWFcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBBdXRvRm9jdXNNaXhpbiA9IHJlcXVpcmUoXCIuL0F1dG9Gb2N1c01peGluXCIpO1xudmFyIERPTVByb3BlcnR5T3BlcmF0aW9ucyA9IHJlcXVpcmUoXCIuL0RPTVByb3BlcnR5T3BlcmF0aW9uc1wiKTtcbnZhciBMaW5rZWRWYWx1ZVV0aWxzID0gcmVxdWlyZShcIi4vTGlua2VkVmFsdWVVdGlsc1wiKTtcbnZhciBSZWFjdEJyb3dzZXJDb21wb25lbnRNaXhpbiA9IHJlcXVpcmUoXCIuL1JlYWN0QnJvd3NlckNvbXBvbmVudE1peGluXCIpO1xudmFyIFJlYWN0Q2xhc3MgPSByZXF1aXJlKFwiLi9SZWFjdENsYXNzXCIpO1xudmFyIFJlYWN0RWxlbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFwiKTtcbnZhciBSZWFjdFVwZGF0ZXMgPSByZXF1aXJlKFwiLi9SZWFjdFVwZGF0ZXNcIik7XG5cbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi9PYmplY3QuYXNzaWduXCIpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxudmFyIHdhcm5pbmcgPSByZXF1aXJlKFwiLi93YXJuaW5nXCIpO1xuXG52YXIgdGV4dGFyZWEgPSBSZWFjdEVsZW1lbnQuY3JlYXRlRmFjdG9yeSgndGV4dGFyZWEnKTtcblxuZnVuY3Rpb24gZm9yY2VVcGRhdGVJZk1vdW50ZWQoKSB7XG4gIC8qanNoaW50IHZhbGlkdGhpczp0cnVlICovXG4gIGlmICh0aGlzLmlzTW91bnRlZCgpKSB7XG4gICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICB9XG59XG5cbi8qKlxuICogSW1wbGVtZW50cyBhIDx0ZXh0YXJlYT4gbmF0aXZlIGNvbXBvbmVudCB0aGF0IGFsbG93cyBzZXR0aW5nIGB2YWx1ZWAsIGFuZFxuICogYGRlZmF1bHRWYWx1ZWAuIFRoaXMgZGlmZmVycyBmcm9tIHRoZSB0cmFkaXRpb25hbCBET00gQVBJIGJlY2F1c2UgdmFsdWUgaXNcbiAqIHVzdWFsbHkgc2V0IGFzIFBDREFUQSBjaGlsZHJlbi5cbiAqXG4gKiBJZiBgdmFsdWVgIGlzIG5vdCBzdXBwbGllZCAob3IgbnVsbC91bmRlZmluZWQpLCB1c2VyIGFjdGlvbnMgdGhhdCBhZmZlY3QgdGhlXG4gKiB2YWx1ZSB3aWxsIHRyaWdnZXIgdXBkYXRlcyB0byB0aGUgZWxlbWVudC5cbiAqXG4gKiBJZiBgdmFsdWVgIGlzIHN1cHBsaWVkIChhbmQgbm90IG51bGwvdW5kZWZpbmVkKSwgdGhlIHJlbmRlcmVkIGVsZW1lbnQgd2lsbFxuICogbm90IHRyaWdnZXIgdXBkYXRlcyB0byB0aGUgZWxlbWVudC4gSW5zdGVhZCwgdGhlIGB2YWx1ZWAgcHJvcCBtdXN0IGNoYW5nZSBpblxuICogb3JkZXIgZm9yIHRoZSByZW5kZXJlZCBlbGVtZW50IHRvIGJlIHVwZGF0ZWQuXG4gKlxuICogVGhlIHJlbmRlcmVkIGVsZW1lbnQgd2lsbCBiZSBpbml0aWFsaXplZCB3aXRoIGFuIGVtcHR5IHZhbHVlLCB0aGUgcHJvcFxuICogYGRlZmF1bHRWYWx1ZWAgaWYgc3BlY2lmaWVkLCBvciB0aGUgY2hpbGRyZW4gY29udGVudCAoZGVwcmVjYXRlZCkuXG4gKi9cbnZhciBSZWFjdERPTVRleHRhcmVhID0gUmVhY3RDbGFzcy5jcmVhdGVDbGFzcyh7XG4gIGRpc3BsYXlOYW1lOiAnUmVhY3RET01UZXh0YXJlYScsXG4gIHRhZ05hbWU6ICdURVhUQVJFQScsXG5cbiAgbWl4aW5zOiBbQXV0b0ZvY3VzTWl4aW4sIExpbmtlZFZhbHVlVXRpbHMuTWl4aW4sIFJlYWN0QnJvd3NlckNvbXBvbmVudE1peGluXSxcblxuICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkZWZhdWx0VmFsdWUgPSB0aGlzLnByb3BzLmRlZmF1bHRWYWx1ZTtcbiAgICAvLyBUT0RPICh5dW5nc3RlcnMpOiBSZW1vdmUgc3VwcG9ydCBmb3IgY2hpbGRyZW4gY29udGVudCBpbiA8dGV4dGFyZWE+LlxuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgaWYgKGNoaWxkcmVuICE9IG51bGwpIHtcbiAgICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgJ1VzZSB0aGUgYGRlZmF1bHRWYWx1ZWAgb3IgYHZhbHVlYCBwcm9wcyBpbnN0ZWFkIG9mIHNldHRpbmcgJyArXG4gICAgICAgICAgJ2NoaWxkcmVuIG9uIDx0ZXh0YXJlYT4uJ1xuICAgICAgICApIDogbnVsbCk7XG4gICAgICB9XG4gICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgICBkZWZhdWx0VmFsdWUgPT0gbnVsbCxcbiAgICAgICAgJ0lmIHlvdSBzdXBwbHkgYGRlZmF1bHRWYWx1ZWAgb24gYSA8dGV4dGFyZWE+LCBkbyBub3QgcGFzcyBjaGlsZHJlbi4nXG4gICAgICApIDogaW52YXJpYW50KGRlZmF1bHRWYWx1ZSA9PSBudWxsKSk7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgICAgICBjaGlsZHJlbi5sZW5ndGggPD0gMSxcbiAgICAgICAgICAnPHRleHRhcmVhPiBjYW4gb25seSBoYXZlIGF0IG1vc3Qgb25lIGNoaWxkLidcbiAgICAgICAgKSA6IGludmFyaWFudChjaGlsZHJlbi5sZW5ndGggPD0gMSkpO1xuICAgICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuWzBdO1xuICAgICAgfVxuXG4gICAgICBkZWZhdWx0VmFsdWUgPSAnJyArIGNoaWxkcmVuO1xuICAgIH1cbiAgICBpZiAoZGVmYXVsdFZhbHVlID09IG51bGwpIHtcbiAgICAgIGRlZmF1bHRWYWx1ZSA9ICcnO1xuICAgIH1cbiAgICB2YXIgdmFsdWUgPSBMaW5rZWRWYWx1ZVV0aWxzLmdldFZhbHVlKHRoaXMpO1xuICAgIHJldHVybiB7XG4gICAgICAvLyBXZSBzYXZlIHRoZSBpbml0aWFsIHZhbHVlIHNvIHRoYXQgYFJlYWN0RE9NQ29tcG9uZW50YCBkb2Vzbid0IHVwZGF0ZVxuICAgICAgLy8gYHRleHRDb250ZW50YCAodW5uZWNlc3Nhcnkgc2luY2Ugd2UgdXBkYXRlIHZhbHVlKS5cbiAgICAgIC8vIFRoZSBpbml0aWFsIHZhbHVlIGNhbiBiZSBhIGJvb2xlYW4gb3Igb2JqZWN0IHNvIHRoYXQncyB3aHkgaXQnc1xuICAgICAgLy8gZm9yY2VkIHRvIGJlIGEgc3RyaW5nLlxuICAgICAgaW5pdGlhbFZhbHVlOiAnJyArICh2YWx1ZSAhPSBudWxsID8gdmFsdWUgOiBkZWZhdWx0VmFsdWUpXG4gICAgfTtcbiAgfSxcblxuICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgIC8vIENsb25lIGB0aGlzLnByb3BzYCBzbyB3ZSBkb24ndCBtdXRhdGUgdGhlIGlucHV0LlxuICAgIHZhciBwcm9wcyA9IGFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG5cbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgcHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPT0gbnVsbCxcbiAgICAgICdgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxgIGRvZXMgbm90IG1ha2Ugc2Vuc2Ugb24gPHRleHRhcmVhPi4nXG4gICAgKSA6IGludmFyaWFudChwcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9PSBudWxsKSk7XG5cbiAgICBwcm9wcy5kZWZhdWx0VmFsdWUgPSBudWxsO1xuICAgIHByb3BzLnZhbHVlID0gbnVsbDtcbiAgICBwcm9wcy5vbkNoYW5nZSA9IHRoaXMuX2hhbmRsZUNoYW5nZTtcblxuICAgIC8vIEFsd2F5cyBzZXQgY2hpbGRyZW4gdG8gdGhlIHNhbWUgdGhpbmcuIEluIElFOSwgdGhlIHNlbGVjdGlvbiByYW5nZSB3aWxsXG4gICAgLy8gZ2V0IHJlc2V0IGlmIGB0ZXh0Q29udGVudGAgaXMgbXV0YXRlZC5cbiAgICByZXR1cm4gdGV4dGFyZWEocHJvcHMsIHRoaXMuc3RhdGUuaW5pdGlhbFZhbHVlKTtcbiAgfSxcblxuICBjb21wb25lbnREaWRVcGRhdGU6IGZ1bmN0aW9uKHByZXZQcm9wcywgcHJldlN0YXRlLCBwcmV2Q29udGV4dCkge1xuICAgIHZhciB2YWx1ZSA9IExpbmtlZFZhbHVlVXRpbHMuZ2V0VmFsdWUodGhpcyk7XG4gICAgaWYgKHZhbHVlICE9IG51bGwpIHtcbiAgICAgIHZhciByb290Tm9kZSA9IHRoaXMuZ2V0RE9NTm9kZSgpO1xuICAgICAgLy8gQ2FzdCBgdmFsdWVgIHRvIGEgc3RyaW5nIHRvIGVuc3VyZSB0aGUgdmFsdWUgaXMgc2V0IGNvcnJlY3RseS4gV2hpbGVcbiAgICAgIC8vIGJyb3dzZXJzIHR5cGljYWxseSBkbyB0aGlzIGFzIG5lY2Vzc2FyeSwganNkb20gZG9lc24ndC5cbiAgICAgIERPTVByb3BlcnR5T3BlcmF0aW9ucy5zZXRWYWx1ZUZvclByb3BlcnR5KHJvb3ROb2RlLCAndmFsdWUnLCAnJyArIHZhbHVlKTtcbiAgICB9XG4gIH0sXG5cbiAgX2hhbmRsZUNoYW5nZTogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICB2YXIgcmV0dXJuVmFsdWU7XG4gICAgdmFyIG9uQ2hhbmdlID0gTGlua2VkVmFsdWVVdGlscy5nZXRPbkNoYW5nZSh0aGlzKTtcbiAgICBpZiAob25DaGFuZ2UpIHtcbiAgICAgIHJldHVyblZhbHVlID0gb25DaGFuZ2UuY2FsbCh0aGlzLCBldmVudCk7XG4gICAgfVxuICAgIFJlYWN0VXBkYXRlcy5hc2FwKGZvcmNlVXBkYXRlSWZNb3VudGVkLCB0aGlzKTtcbiAgICByZXR1cm4gcmV0dXJuVmFsdWU7XG4gIH1cblxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RET01UZXh0YXJlYTtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./AutoFocusMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js","./DOMPropertyOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js","./LinkedValueUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextarea.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDOMTextarea.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultBatchingStrategy.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultBatchingStrategy.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require(\"./ReactUpdates\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function() {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(\n  ReactDefaultBatchingStrategyTransaction.prototype,\n  Transaction.Mixin,\n  {\n    getTransactionWrappers: function() {\n      return TRANSACTION_WRAPPERS;\n    }\n  }\n);\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function(callback, a, b, c, d) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d);\n    } else {\n      transaction.perform(callback, null, a, b, c, d);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n","deps":{"./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js","./Transaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultBatchingStrategy.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDefaultBatchingStrategy.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultInjection.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultInjection.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require(\"./BeforeInputEventPlugin\");\nvar ChangeEventPlugin = require(\"./ChangeEventPlugin\");\nvar ClientReactRootIndex = require(\"./ClientReactRootIndex\");\nvar DefaultEventPluginOrder = require(\"./DefaultEventPluginOrder\");\nvar EnterLeaveEventPlugin = require(\"./EnterLeaveEventPlugin\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar HTMLDOMPropertyConfig = require(\"./HTMLDOMPropertyConfig\");\nvar MobileSafariClickEventPlugin = require(\"./MobileSafariClickEventPlugin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactComponentBrowserEnvironment =\n  require(\"./ReactComponentBrowserEnvironment\");\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactDOMButton = require(\"./ReactDOMButton\");\nvar ReactDOMForm = require(\"./ReactDOMForm\");\nvar ReactDOMImg = require(\"./ReactDOMImg\");\nvar ReactDOMIDOperations = require(\"./ReactDOMIDOperations\");\nvar ReactDOMIframe = require(\"./ReactDOMIframe\");\nvar ReactDOMInput = require(\"./ReactDOMInput\");\nvar ReactDOMOption = require(\"./ReactDOMOption\");\nvar ReactDOMSelect = require(\"./ReactDOMSelect\");\nvar ReactDOMTextarea = require(\"./ReactDOMTextarea\");\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactEventListener = require(\"./ReactEventListener\");\nvar ReactInjection = require(\"./ReactInjection\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactReconcileTransaction = require(\"./ReactReconcileTransaction\");\nvar SelectEventPlugin = require(\"./SelectEventPlugin\");\nvar ServerReactRootIndex = require(\"./ServerReactRootIndex\");\nvar SimpleEventPlugin = require(\"./SimpleEventPlugin\");\nvar SVGDOMPropertyConfig = require(\"./SVGDOMPropertyConfig\");\n\nvar createFullPageComponent = require(\"./createFullPageComponent\");\n\nfunction autoGenerateWrapperClass(type) {\n  return ReactClass.createClass({\n    tagName: type.toUpperCase(),\n    render: function() {\n      return new ReactElement(\n        type,\n        null,\n        null,\n        null,\n        null,\n        this.props\n      );\n    }\n  });\n}\n\nfunction inject() {\n  ReactInjection.EventEmitter.injectReactEventListener(\n    ReactEventListener\n  );\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(\n    ReactDOMComponent\n  );\n\n  ReactInjection.NativeComponent.injectTextComponentClass(\n    ReactDOMTextComponent\n  );\n\n  ReactInjection.NativeComponent.injectAutoWrapper(\n    autoGenerateWrapperClass\n  );\n\n  // This needs to happen before createFullPageComponent() otherwise the mixin\n  // won't be included.\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.NativeComponent.injectComponentClasses({\n    'button': ReactDOMButton,\n    'form': ReactDOMForm,\n    'iframe': ReactDOMIframe,\n    'img': ReactDOMImg,\n    'input': ReactDOMInput,\n    'option': ReactDOMOption,\n    'select': ReactDOMSelect,\n    'textarea': ReactDOMTextarea,\n\n    'html': createFullPageComponent('html'),\n    'head': createFullPageComponent('head'),\n    'body': createFullPageComponent('body')\n  });\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(\n    ReactReconcileTransaction\n  );\n  ReactInjection.Updates.injectBatchingStrategy(\n    ReactDefaultBatchingStrategy\n  );\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(\n    ExecutionEnvironment.canUseDOM ?\n      ClientReactRootIndex.createReactRootIndex :\n      ServerReactRootIndex.createReactRootIndex\n  );\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';\n    if ((/[?&]react_perf\\b/).test(url)) {\n      var ReactDefaultPerf = require(\"./ReactDefaultPerf\");\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./ReactComponentBrowserEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactDOMComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js","./ReactDOMTextComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ClientReactRootIndex":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ClientReactRootIndex.js","./ServerReactRootIndex":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ServerReactRootIndex.js","./DefaultEventPluginOrder":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DefaultEventPluginOrder.js","./HTMLDOMPropertyConfig":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/HTMLDOMPropertyConfig.js","./MobileSafariClickEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/MobileSafariClickEventPlugin.js","./ReactBrowserComponentMixin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js","./ReactDOMImg":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMImg.js","./ReactDOMIframe":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIframe.js","./ReactDOMOption":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMOption.js","./ReactDOMSelect":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelect.js","./ReactDOMTextarea":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextarea.js","./createFullPageComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createFullPageComponent.js","./SVGDOMPropertyConfig":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SVGDOMPropertyConfig.js","./SelectEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SelectEventPlugin.js","./ChangeEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ChangeEventPlugin.js","./ReactDefaultBatchingStrategy":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultBatchingStrategy.js","./ReactDOMForm":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMForm.js","./ReactDOMInput":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMInput.js","./ReactEventListener":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventListener.js","./ReactInjection":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInjection.js","./EnterLeaveEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EnterLeaveEventPlugin.js","./ReactDOMButton":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMButton.js","./BeforeInputEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/BeforeInputEventPlugin.js","./SimpleEventPlugin":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SimpleEventPlugin.js","./ReactDefaultPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerf.js","./ReactReconcileTransaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconcileTransaction.js","./ReactDOMIDOperations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultInjection.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDefaultInjection.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerf.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerf.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactDefaultPerfAnalysis = require(\"./ReactDefaultPerfAnalysis\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactPerf = require(\"./ReactPerf\");\n\nvar performanceNow = require(\"./performanceNow\");\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function() {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function() {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function() {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  getMeasurementsSummaryMap: function(measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(\n      measurements,\n      true\n    );\n    return summary.map(function(item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  printDOM: function(measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function(item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result['type'] = item.type;\n      result['args'] = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log(\n      'Total time:',\n      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'\n    );\n  },\n\n  _recordWrite: function(id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes =\n      ReactDefaultPerf\n        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]\n        .writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function(moduleName, fnName, func) {\n    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' ||\n          fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' ||\n          moduleName === 'ReactDOMIDOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function(update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(\n              update.parentID,\n              update.type,\n              totalTime,\n              writeArgs\n            );\n          });\n        } else {\n          // basic format\n          ReactDefaultPerf._recordWrite(\n            args[0],\n            fnName,\n            totalTime,\n            Array.prototype.slice.call(args, 1)\n          );\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (\n        (// TODO: receiveComponent()?\n        (fnName === 'mountComponent' ||\n        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {\n\n        if (typeof this._currentElement.type === 'string') {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ?\n          args[0] :\n          this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[\n          ReactDefaultPerf._allMeasurements.length - 1\n        ];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ?\n            this._currentElement._owner.getName() :\n            '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n","deps":{"./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactDefaultPerfAnalysis":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerfAnalysis.js","./performanceNow":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performanceNow.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerf.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDefaultPerf.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerfAnalysis.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerfAnalysis.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\nvar assign = require(\"./Object.assign\");\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  TEXT_CONTENT: 'set textContent',\n  'updatePropertyByID': 'update attribute',\n  'deletePropertyByID': 'delete attribute',\n  'updateStylesByID': 'update styles',\n  'updateInnerHTMLByID': 'set innerHTML',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var id;\n\n    for (id in measurement.writes) {\n      measurement.writes[id].forEach(function(write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    }\n  }\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign(\n      {},\n      measurement.exclusive,\n      measurement.inclusive\n    );\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function(a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n","deps":{"./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerfAnalysis.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactDefaultPerfAnalysis.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactContext":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactElement.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocations = require(\"./ReactPropTypeLocations\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\nvar NUMERIC_PROPERTY_REGEX = /^\\d+$/;\n\n/**\n * Gets the instance's name for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getName(instance) {\n  var publicInstance = instance && instance.getPublicInstance();\n  if (!publicInstance) {\n    return undefined;\n  }\n  var constructor = publicInstance.constructor;\n  if (!constructor) {\n    return undefined;\n  }\n  return constructor.displayName || constructor.name || undefined;\n}\n\n/**\n * Gets the current owner's displayName for use in warnings.\n *\n * @internal\n * @return {?string} Display name or undefined\n */\nfunction getCurrentOwnerDisplayName() {\n  var current = ReactCurrentOwner.current;\n  return (\n    current && getName(current) || undefined\n  );\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  warnAndMonitorForKeyUse(\n    'Each child in an array or iterator should have a unique \"key\" prop.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Warn if the key is being defined as an object property but has an incorrect\n * value.\n *\n * @internal\n * @param {string} name Property name of the key.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validatePropertyKey(name, element, parentType) {\n  if (!NUMERIC_PROPERTY_REGEX.test(name)) {\n    return;\n  }\n  warnAndMonitorForKeyUse(\n    'Child objects should have non-numeric keys so ordering is preserved.',\n    element,\n    parentType\n  );\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} message The base warning that gets output.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction warnAndMonitorForKeyUse(message, element, parentType) {\n  var ownerName = getCurrentOwnerDisplayName();\n  var parentName = typeof parentType === 'string' ?\n    parentType : parentType.displayName || parentType.name;\n\n  var useName = ownerName || parentName;\n  var memoizer = ownerHasKeyUseWarning[message] || (\n    (ownerHasKeyUseWarning[message] = {})\n  );\n  if (memoizer.hasOwnProperty(useName)) {\n    return;\n  }\n  memoizer[useName] = true;\n\n  var parentOrOwnerAddendum =\n    ownerName ? (\" Check the render method of \" + ownerName + \".\") :\n    parentName ? (\" Check the React.render call using <\" + parentName + \">.\") :\n    '';\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwnerAddendum = '';\n  if (element &&\n      element._owner &&\n      element._owner !== ReactCurrentOwner.current) {\n    // Name of the component that originally created this child.\n    var childOwnerName = getName(element._owner);\n\n    childOwnerAddendum = (\" It was passed a child from \" + childOwnerName + \".\");\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    message + '%s%s See https://fb.me/react-warning-keys for more information.',\n    parentOrOwnerAddendum,\n    childOwnerAddendum\n  ) : null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    node._store.validated = true;\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    } else if (typeof node === 'object') {\n      var fragment = ReactFragment.extractIfFragment(node);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          validatePropertyKey(key, fragment[key], parentType);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          typeof propTypes[propName] === 'function',\n          '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n          'React.PropTypes.',\n          componentName || 'React class',\n          ReactPropTypeLocationNames[location],\n          propName\n        ) : invariant(typeof propTypes[propName] === 'function'));\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(this);\n        (\"production\" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);\n      }\n    }\n  }\n}\n\nvar warnedPropsMutations = {};\n\n/**\n * Warn about mutating props when setting `propName` on `element`.\n *\n * @param {string} propName The string key within props that was set\n * @param {ReactElement} element\n */\nfunction warnForPropsMutation(propName, element) {\n  var type = element.type;\n  var elementName = typeof type === 'string' ? type : type.displayName;\n  var ownerName = element._owner ?\n    element._owner.getPublicInstance().constructor.displayName : null;\n\n  var warningKey = propName + '|' + elementName + '|' + ownerName;\n  if (warnedPropsMutations.hasOwnProperty(warningKey)) {\n    return;\n  }\n  warnedPropsMutations[warningKey] = true;\n\n  var elementInfo = '';\n  if (elementName) {\n    elementInfo = ' <' + elementName + ' />';\n  }\n  var ownerInfo = '';\n  if (ownerName) {\n    ownerInfo = ' The element was created by ' + ownerName + '.';\n  }\n\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Don\\'t set .props.%s of the React component%s. Instead, specify the ' +\n    'correct value when initially creating the element or use ' +\n    'React.cloneElement to make a new element with updated props.%s',\n    propName,\n    elementInfo,\n    ownerInfo\n  ) : null);\n}\n\n// Inline Object.is polyfill\nfunction is(a, b) {\n  if (a !== a) {\n    // NaN\n    return b !== b;\n  }\n  if (a === 0 && b === 0) {\n    // +-0\n    return 1 / a === 1 / b;\n  }\n  return a === b;\n}\n\n/**\n * Given an element, check if its props have been mutated since element\n * creation (or the last call to this function). In particular, check if any\n * new props have been added, which we can't directly catch by defining warning\n * properties on the props object.\n *\n * @param {ReactElement} element\n */\nfunction checkAndWarnForMutatedProps(element) {\n  if (!element._store) {\n    // Element was created using `new ReactElement` directly or with\n    // `ReactElement.createElement`; skip mutation checking\n    return;\n  }\n\n  var originalProps = element._store.originalProps;\n  var props = element.props;\n\n  for (var propName in props) {\n    if (props.hasOwnProperty(propName)) {\n      if (!originalProps.hasOwnProperty(propName) ||\n          !is(originalProps[propName], props[propName])) {\n        warnForPropsMutation(propName, element);\n\n        // Copy over the new value so that the two props objects match again\n        originalProps[propName] = props[propName];\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  if (element.type == null) {\n    // This has already warned. Don't throw.\n    return;\n  }\n  // Extract the component class from the element. Converts string types\n  // to a composite class which may have propTypes.\n  // TODO: Validating a string's propTypes is not decoupled from the\n  // rendering target which is problematic.\n  var componentClass = ReactNativeComponent.getComponentClassForElement(\n    element\n  );\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(\n      name,\n      componentClass.propTypes,\n      element.props,\n      ReactPropTypeLocations.prop\n    );\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      componentClass.getDefaultProps.isReactClassApproved,\n      'getDefaultProps is only used on classic React.createClass ' +\n      'definitions. Use a static property named `defaultProps` instead.'\n    ) : null);\n  }\n}\n\nvar ReactElementValidator = {\n\n  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,\n\n  createElement: function(type, props, children) {\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      type != null,\n      'React.createElement: type should not be null or undefined. It should ' +\n        'be a string (for DOM elements) or a ReactClass (for composite ' +\n        'components).'\n    ) : null);\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function(type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(\n      null,\n      type\n    );\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      try {\n        Object.defineProperty(\n          validatedFactory,\n          'type',\n          {\n            enumerable: false,\n            get: function() {\n              (\"production\" !== process.env.NODE_ENV ? warning(\n                false,\n                'Factory.type is deprecated. Access the class directly ' +\n                'before passing it to createFactory.'\n              ) : null);\n              Object.defineProperty(this, 'type', {\n                value: type\n              });\n              return type;\n            }\n          }\n        );\n      } catch (x) {\n        // IE will fail on defineProperty (es5-shim/sham too)\n      }\n    }\n\n\n    return validatedFactory;\n  },\n\n  cloneElement: function(element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactFragment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","./ReactPropTypeLocations":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js","./ReactPropTypeLocationNames":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./getIteratorFn":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js","./ReactNativeComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactElementValidator.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\nvar ReactEmptyComponentType = function() {};\nReactEmptyComponentType.prototype.componentDidMount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Make sure we run these methods in the correct order, we shouldn't\n  // need this check. We're going to assume if we're here it means we ran\n  // componentWillUnmount already so there is no internal instance (it gets\n  // removed as part of the unmounting process).\n  if (!internalInstance) {\n    return;\n  }\n  registerNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.componentWillUnmount = function() {\n  var internalInstance = ReactInstanceMap.get(this);\n  // TODO: Get rid of this check. See TODO in componentDidMount.\n  if (!internalInstance) {\n    return;\n  }\n  deregisterNullComponentID(internalInstance._rootNodeID);\n};\nReactEmptyComponentType.prototype.render = function() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n};\n\nvar emptyElement = ReactElement.createElement(ReactEmptyComponentType);\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  emptyElement: emptyElement,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RFbXB0eUNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0RW1wdHlDb21wb25lbnRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdEVsZW1lbnQgPSByZXF1aXJlKFwiLi9SZWFjdEVsZW1lbnRcIik7XG52YXIgUmVhY3RJbnN0YW5jZU1hcCA9IHJlcXVpcmUoXCIuL1JlYWN0SW5zdGFuY2VNYXBcIik7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbnZhciBjb21wb25lbnQ7XG4vLyBUaGlzIHJlZ2lzdHJ5IGtlZXBzIHRyYWNrIG9mIHRoZSBSZWFjdCBJRHMgb2YgdGhlIGNvbXBvbmVudHMgdGhhdCByZW5kZXJlZCB0b1xuLy8gYG51bGxgIChpbiByZWFsaXR5IGEgcGxhY2Vob2xkZXIgc3VjaCBhcyBgbm9zY3JpcHRgKVxudmFyIG51bGxDb21wb25lbnRJRHNSZWdpc3RyeSA9IHt9O1xuXG52YXIgUmVhY3RFbXB0eUNvbXBvbmVudEluamVjdGlvbiA9IHtcbiAgaW5qZWN0RW1wdHlDb21wb25lbnQ6IGZ1bmN0aW9uKGVtcHR5Q29tcG9uZW50KSB7XG4gICAgY29tcG9uZW50ID0gUmVhY3RFbGVtZW50LmNyZWF0ZUZhY3RvcnkoZW1wdHlDb21wb25lbnQpO1xuICB9XG59O1xuXG52YXIgUmVhY3RFbXB0eUNvbXBvbmVudFR5cGUgPSBmdW5jdGlvbigpIHt9O1xuUmVhY3RFbXB0eUNvbXBvbmVudFR5cGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpbnRlcm5hbEluc3RhbmNlID0gUmVhY3RJbnN0YW5jZU1hcC5nZXQodGhpcyk7XG4gIC8vIFRPRE86IE1ha2Ugc3VyZSB3ZSBydW4gdGhlc2UgbWV0aG9kcyBpbiB0aGUgY29ycmVjdCBvcmRlciwgd2Ugc2hvdWxkbid0XG4gIC8vIG5lZWQgdGhpcyBjaGVjay4gV2UncmUgZ29pbmcgdG8gYXNzdW1lIGlmIHdlJ3JlIGhlcmUgaXQgbWVhbnMgd2UgcmFuXG4gIC8vIGNvbXBvbmVudFdpbGxVbm1vdW50IGFscmVhZHkgc28gdGhlcmUgaXMgbm8gaW50ZXJuYWwgaW5zdGFuY2UgKGl0IGdldHNcbiAgLy8gcmVtb3ZlZCBhcyBwYXJ0IG9mIHRoZSB1bm1vdW50aW5nIHByb2Nlc3MpLlxuICBpZiAoIWludGVybmFsSW5zdGFuY2UpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcmVnaXN0ZXJOdWxsQ29tcG9uZW50SUQoaW50ZXJuYWxJbnN0YW5jZS5fcm9vdE5vZGVJRCk7XG59O1xuUmVhY3RFbXB0eUNvbXBvbmVudFR5cGUucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24oKSB7XG4gIHZhciBpbnRlcm5hbEluc3RhbmNlID0gUmVhY3RJbnN0YW5jZU1hcC5nZXQodGhpcyk7XG4gIC8vIFRPRE86IEdldCByaWQgb2YgdGhpcyBjaGVjay4gU2VlIFRPRE8gaW4gY29tcG9uZW50RGlkTW91bnQuXG4gIGlmICghaW50ZXJuYWxJbnN0YW5jZSkge1xuICAgIHJldHVybjtcbiAgfVxuICBkZXJlZ2lzdGVyTnVsbENvbXBvbmVudElEKGludGVybmFsSW5zdGFuY2UuX3Jvb3ROb2RlSUQpO1xufTtcblJlYWN0RW1wdHlDb21wb25lbnRUeXBlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBjb21wb25lbnQsXG4gICAgJ1RyeWluZyB0byByZXR1cm4gbnVsbCBmcm9tIGEgcmVuZGVyLCBidXQgbm8gbnVsbCBwbGFjZWhvbGRlciBjb21wb25lbnQgJyArXG4gICAgJ3dhcyBpbmplY3RlZC4nXG4gICkgOiBpbnZhcmlhbnQoY29tcG9uZW50KSk7XG4gIHJldHVybiBjb21wb25lbnQoKTtcbn07XG5cbnZhciBlbXB0eUVsZW1lbnQgPSBSZWFjdEVsZW1lbnQuY3JlYXRlRWxlbWVudChSZWFjdEVtcHR5Q29tcG9uZW50VHlwZSk7XG5cbi8qKlxuICogTWFyayB0aGUgY29tcG9uZW50IGFzIGhhdmluZyByZW5kZXJlZCB0byBudWxsLlxuICogQHBhcmFtIHtzdHJpbmd9IGlkIENvbXBvbmVudCdzIGBfcm9vdE5vZGVJRGAuXG4gKi9cbmZ1bmN0aW9uIHJlZ2lzdGVyTnVsbENvbXBvbmVudElEKGlkKSB7XG4gIG51bGxDb21wb25lbnRJRHNSZWdpc3RyeVtpZF0gPSB0cnVlO1xufVxuXG4vKipcbiAqIFVubWFyayB0aGUgY29tcG9uZW50IGFzIGhhdmluZyByZW5kZXJlZCB0byBudWxsOiBpdCByZW5kZXJzIHRvIHNvbWV0aGluZyBub3cuXG4gKiBAcGFyYW0ge3N0cmluZ30gaWQgQ29tcG9uZW50J3MgYF9yb290Tm9kZUlEYC5cbiAqL1xuZnVuY3Rpb24gZGVyZWdpc3Rlck51bGxDb21wb25lbnRJRChpZCkge1xuICBkZWxldGUgbnVsbENvbXBvbmVudElEc1JlZ2lzdHJ5W2lkXTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gaWQgQ29tcG9uZW50J3MgYF9yb290Tm9kZUlEYC5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIGNvbXBvbmVudCBpcyByZW5kZXJlZCB0byBudWxsLlxuICovXG5mdW5jdGlvbiBpc051bGxDb21wb25lbnRJRChpZCkge1xuICByZXR1cm4gISFudWxsQ29tcG9uZW50SURzUmVnaXN0cnlbaWRdO1xufVxuXG52YXIgUmVhY3RFbXB0eUNvbXBvbmVudCA9IHtcbiAgZW1wdHlFbGVtZW50OiBlbXB0eUVsZW1lbnQsXG4gIGluamVjdGlvbjogUmVhY3RFbXB0eUNvbXBvbmVudEluamVjdGlvbixcbiAgaXNOdWxsQ29tcG9uZW50SUQ6IGlzTnVsbENvbXBvbmVudElEXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0RW1wdHlDb21wb25lbnQ7XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactEmptyComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactErrorUtils.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactErrorUtils.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n\"use strict\";\n\nvar ReactErrorUtils = {\n  /**\n   * Creates a guarded version of a function. This is supposed to make debugging\n   * of event handlers easier. To aid debugging with the browser's debugger,\n   * this currently simply returns the original function.\n   *\n   * @param {function} func Function to be executed\n   * @param {string} name The name of the guard\n   * @return {function}\n   */\n  guard: function(func, name) {\n    return func;\n  }\n};\n\nmodule.exports = ReactErrorUtils;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactErrorUtils.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactErrorUtils.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventEmitterMixin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventEmitterMixin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue();\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var events = EventPluginHub.extractEvents(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n","deps":{"./EventPluginHub":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventEmitterMixin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactEventEmitterMixin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventListener.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventListener.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require(\"./EventListener\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar getEventTarget = require(\"./getEventTarget\");\nvar getUnboundedScrollPosition = require(\"./getUnboundedScrollPosition\");\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(\n  TopLevelCallbackBookKeeping,\n  PooledClass.twoArgumentPooler\n);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(bookKeeping.nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(\n      bookKeeping.topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      bookKeeping.nativeEvent\n    );\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function() {\n    return ReactEventListener._enabled;\n  },\n\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(\n      element,\n      handlerBaseName,\n      ReactEventListener.dispatchEvent.bind(null, topLevelType)\n    );\n  },\n\n  monitorScrollValue: function(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(\n      topLevelType,\n      nativeEvent\n    );\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./getEventTarget":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js","./getUnboundedScrollPosition":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getUnboundedScrollPosition.js","./EventListener":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventListener.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventListener.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactEventListener.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","source":"(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactFragment\n*/\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar warning = require(\"./warning\");\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is opaque, for now.\n */\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var fragmentKey = '_reactFragment';\n  var didWarnKey = '_reactDidWarn';\n  var canWarnForReactFragment = false;\n\n  try {\n    // Feature test. Don't even try to issue this warning if we can't use\n    // enumerable: false.\n\n    var dummy = function() {\n      return 1;\n    };\n\n    Object.defineProperty(\n      {},\n      fragmentKey,\n      {enumerable: false, value: true}\n    );\n\n    Object.defineProperty(\n      {},\n      'key',\n      {enumerable: true, get: dummy}\n    );\n\n    canWarnForReactFragment = true;\n  } catch (x) { }\n\n  var proxyPropertyAccessWithWarning = function(obj, key) {\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      get: function() {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an opaque type. Accessing any of its ' +\n          'properties is deprecated. Pass it to one of the React.Children ' +\n          'helpers.'\n        ) : null);\n        this[didWarnKey] = true;\n        return this[fragmentKey][key];\n      },\n      set: function(value) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          this[didWarnKey],\n          'A ReactFragment is an immutable opaque type. Mutating its ' +\n          'properties is deprecated.'\n        ) : null);\n        this[didWarnKey] = true;\n        this[fragmentKey][key] = value;\n      }\n    });\n  };\n\n  var issuedWarnings = {};\n\n  var didWarnForFragment = function(fragment) {\n    // We use the keys and the type of the value as a heuristic to dedupe the\n    // warning to avoid spamming too much.\n    var fragmentCacheKey = '';\n    for (var key in fragment) {\n      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';\n    }\n    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];\n    issuedWarnings[fragmentCacheKey] = true;\n    return alreadyWarnedOnce;\n  };\n}\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function(object) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment only accepts a single object.',\n          object\n        ) : null);\n        return object;\n      }\n      if (ReactElement.isValidElement(object)) {\n        (\"production\" !== process.env.NODE_ENV ? warning(\n          false,\n          'React.addons.createFragment does not accept a ReactElement ' +\n          'without a wrapper object.'\n        ) : null);\n        return object;\n      }\n      if (canWarnForReactFragment) {\n        var proxy = {};\n        Object.defineProperty(proxy, fragmentKey, {\n          enumerable: false,\n          value: object\n        });\n        Object.defineProperty(proxy, didWarnKey, {\n          writable: true,\n          enumerable: false,\n          value: false\n        });\n        for (var key in object) {\n          proxyPropertyAccessWithWarning(proxy, key);\n        }\n        Object.preventExtensions(proxy);\n        return proxy;\n      }\n    }\n    return object;\n  },\n  // Extract the original keyed object from the fragment opaque type. Warn if\n  // a plain object is passed here.\n  extract: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        if (!fragment[fragmentKey]) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnForFragment(fragment),\n            'Any use of a keyed object should be wrapped in ' +\n            'React.addons.createFragment(object) before being passed as a ' +\n            'child.'\n          ) : null);\n          return fragment;\n        }\n        return fragment[fragmentKey];\n      }\n    }\n    return fragment;\n  },\n  // Check if this is a fragment and if so, extract the keyed object. If it\n  // is a fragment-like object, warn that it should be wrapped. Ignore if we\n  // can't determine what kind of object this is.\n  extractIfFragment: function(fragment) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (canWarnForReactFragment) {\n        // If it is the opaque type, return the keyed object.\n        if (fragment[fragmentKey]) {\n          return fragment[fragmentKey];\n        }\n        // Otherwise, check each property if it has an element, if it does\n        // it is probably meant as a fragment, so we can warn early. Defer,\n        // the warning to extract.\n        for (var key in fragment) {\n          if (fragment.hasOwnProperty(key) &&\n              ReactElement.isValidElement(fragment[key])) {\n            // This looks like a fragment object, we should provide an\n            // early warning.\n            return ReactFragment.extract(fragment);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n};\n\nmodule.exports = ReactFragment;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactFragment.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInjection.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInjection.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactClass = require(\"./ReactClass\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactRootIndex = require(\"./ReactRootIndex\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMComponent: ReactDOMComponent.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n","deps":{"./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./EventPluginHub":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactEmptyComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./ReactNativeComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js","./ReactDOMComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactRootIndex":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./ReactComponentEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInjection.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactInjection.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require(\"./ReactDOMSelection\");\n\nvar containsNode = require(\"./containsNode\");\nvar focusNode = require(\"./focusNode\");\nvar getActiveElement = require(\"./getActiveElement\");\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function(elem) {\n    return elem && (\n      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||\n      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')\n    );\n  },\n\n  getSelectionInformation: function() {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange:\n          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?\n          ReactInputSelection.getSelection(focusedElem) :\n          null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function(priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem &&\n        isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(\n          priorFocusedElem,\n          priorSelectionRange\n        );\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function(input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || {start: 0, end: 0};\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function(input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName === 'INPUT') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n","deps":{"./containsNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js","./focusNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js","./getActiveElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js","./ReactDOMSelection":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelection.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactInputSelection.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require(\"./ReactRootIndex\");\n\nvar invariant = require(\"./invariant\");\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 100;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || (\n    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR\n  );\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return (\n    descendantID.indexOf(ancestorID) === 0 &&\n    isBoundary(descendantID, ancestorID.length)\n  );\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(ancestorID) && isValidID(destinationID),\n    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',\n    ancestorID,\n    destinationID\n  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isAncestorIDOf(ancestorID, destinationID),\n    'getNextDescendantID(...): React has made an invalid assumption about ' +\n    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',\n    ancestorID,\n    destinationID\n  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    isValidID(longestCommonID),\n    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',\n    oneID,\n    twoID,\n    longestCommonID\n  ) : invariant(isValidID(longestCommonID)));\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    start !== stop,\n    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',\n    start\n  ) : invariant(start !== stop));\n  var traverseUp = isAncestorIDOf(stop, start);\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    traverseUp || isAncestorIDOf(start, stop),\n    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +\n    'not have a parent path.',\n    start,\n    stop\n  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start; /* until break */; id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      depth++ < MAX_TREE_DEPTH,\n      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +\n      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',\n      start, stop\n    ) : invariant(depth++ < MAX_TREE_DEPTH));\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function() {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function(rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function(id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function(targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function(targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./ReactRootIndex":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactInstanceHandles.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function(key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function(key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function(key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function(key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactInstanceMap.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js","source":"/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLifeCycle\n */\n\n'use strict';\n\n/**\n * This module manages the bookkeeping when a component is in the process\n * of being mounted or being unmounted. This is used as a way to enforce\n * invariants (or warnings) when it is not recommended to call\n * setState/forceUpdate.\n *\n * currentlyMountingInstance: During the construction phase, it is not possible\n * to trigger an update since the instance is not fully mounted yet. However, we\n * currently allow this as a convenience for mutating the initial state.\n *\n * currentlyUnmountingInstance: During the unmounting phase, the instance is\n * still mounted and can therefore schedule an update. However, this is not\n * recommended and probably an error since it's about to be unmounted.\n * Therefore we still want to trigger in an error for that case.\n */\n\nvar ReactLifeCycle = {\n  currentlyMountingInstance: null,\n  currentlyUnmountingInstance: null\n};\n\nmodule.exports = ReactLifeCycle;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactLifeCycle.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require(\"./adler32\");\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function(markup) {\n    var checksum = adler32(markup);\n    return markup.replace(\n      '>',\n      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n    );\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function(markup, element) {\n    var existingChecksum = element.getAttribute(\n      ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n    );\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n","deps":{"./adler32":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/adler32.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactMarkupChecksum.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactUpdateQueue = require(\"./ReactUpdateQueue\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar containsNode = require(\"./containsNode\");\nvar getReactRootElementInContainer = require(\"./getReactRootElementInContainer\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\nvar setInnerHTML = require(\"./setInnerHTML\");\nvar shouldUpdateReactComponent = require(\"./shouldUpdateReactComponent\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          !isValid(cached, id),\n          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',\n          ATTR_NAME, id\n        ) : invariant(!isValid(cached, id)));\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponent.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalGetID(node) === id,\n      'ReactMount: Unexpected modification of `%s`',\n      ATTR_NAME\n    ) : invariant(internalGetID(node) === id));\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(\n    targetID,\n    findDeepestCachedAncestorImpl\n  );\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup) {\n  var markup = ReactReconciler.mountComponent(\n    componentInstance, rootID, transaction, emptyObject\n  );\n  componentInstance._isTopLevel = true;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(\n    componentInstance,\n    rootID,\n    container,\n    shouldReuseMarkup) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n  transaction.perform(\n    mountComponentIntoNode,\n    null,\n    componentInstance,\n    rootID,\n    container,\n    transaction,\n    shouldReuseMarkup\n  );\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function(container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function(\n      prevComponent,\n      nextElement,\n      container,\n      callback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    ReactMount.scrollMonitor(container, function() {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] =\n        getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function(nextComponent, container) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      '_registerComponent(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function(\n    nextElement,\n    container,\n    shouldReuseMarkup\n  ) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      '_renderNewRootComponent(): Render methods should be a pure function ' +\n      'of props and state; triggering nested component updates from ' +\n      'render is not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(\n      componentInstance,\n      container\n    );\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(\n      batchedMountComponentIntoNode,\n      componentInstance,\n      reactRootID,\n      container,\n      shouldReuseMarkup\n    );\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] =\n        getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function(nextElement, container, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactElement.isValidElement(nextElement),\n      'React.render(): Invalid component element.%s',\n      (\n        typeof nextElement === 'string' ?\n          ' Instead of passing an element string, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        typeof nextElement === 'function' ?\n          ' Instead of passing a component class, make sure to instantiate ' +\n          'it by passing it to React.createElement.' :\n        // Check if it quacks like an element\n        nextElement != null && nextElement.props !== undefined ?\n          ' This may be caused by unintentionally loading two independent ' +\n          'copies of React.' :\n          ''\n      )\n    ) : invariant(ReactElement.isValidElement(nextElement)));\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevElement = prevComponent._currentElement;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        return ReactMount._updateRootComponent(\n          prevComponent,\n          nextElement,\n          container,\n          callback\n        ).getPublicInstance();\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup =\n      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (ReactMount.isRenderedByReact(rootElementSibling)) {\n            (\"production\" !== process.env.NODE_ENV ? warning(\n              false,\n              'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.'\n            ) : null);\n            break;\n          }\n\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;\n\n    var component = ReactMount._renderNewRootComponent(\n      nextElement,\n      container,\n      shouldReuseMarkup\n    ).getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into the supplied `container`.\n   *\n   * @param {function} constructor React component constructor.\n   * @param {?object} props Initial props of the component instance.\n   * @param {DOMElement} container DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  constructAndRenderComponent: function(constructor, props, container) {\n    var element = ReactElement.createElement(constructor, props);\n    return ReactMount.render(element, container);\n  },\n\n  /**\n   * Constructs a component instance of `constructor` with `initialProps` and\n   * renders it into a container node identified by supplied `id`.\n   *\n   * @param {function} componentConstructor React component constructor\n   * @param {?object} props Initial props of the component instance.\n   * @param {string} id ID of the DOM element to render into.\n   * @return {ReactComponent} Component instance rendered in the container node.\n   */\n  constructAndRenderComponentByID: function(constructor, props, id) {\n    var domNode = document.getElementById(id);\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      domNode,\n      'Tried to get element with id of \"%s\" but it is not present on the page.',\n      id\n    ) : invariant(domNode));\n    return ReactMount.constructAndRenderComponent(constructor, props, domNode);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function(container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function(container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      ReactCurrentOwner.current == null,\n      'unmountComponentAtNode(): Render methods should be a pure function of ' +\n      'props and state; triggering nested component updates from render is ' +\n      'not allowed. If necessary, trigger nested updates in ' +\n      'componentDidUpdate.'\n    ) : null);\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'unmountComponentAtNode(...): Target container is not a DOM element.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      return false;\n    }\n    ReactMount.unmountComponentFromNode(component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (\"production\" !== process.env.NODE_ENV) {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Unmounts a component and removes it from the DOM.\n   *\n   * @param {ReactComponent} instance React component instance.\n   * @param {DOMElement} container DOM element to unmount from.\n   * @final\n   * @internal\n   * @see {ReactMount.unmountComponentAtNode}\n   */\n  unmountComponentFromNode: function(instance, container) {\n    ReactReconciler.unmountComponent(instance);\n\n    if (container.nodeType === DOC_NODE_TYPE) {\n      container = container.documentElement;\n    }\n\n    // http://jsperf.com/emptying-a-node\n    while (container.lastChild) {\n      container.removeChild(container.lastChild);\n    }\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function(id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          // Call internalGetID here because getID calls isValid which calls\n          // findReactContainerForID (this function).\n          internalGetID(rootElement) === reactRootID,\n          'ReactMount: Root element ID differed from reactRootID.'\n        ) : invariant(// Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID));\n\n        var containerChild = container.firstChild;\n        if (containerChild &&\n            reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'ReactMount: Root element has been removed from its original ' +\n            'container. New container:', rootElement.parentNode\n          ) : null);\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function(id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * True if the supplied `node` is rendered by React.\n   *\n   * @param {*} node DOM Element to check.\n   * @return {boolean} True if the DOM Element appears to be rendered by React.\n   * @internal\n   */\n  isRenderedByReact: function(node) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      return false;\n    }\n    var id = ReactMount.getID(node);\n    return id ? id.charAt(0) === SEPARATOR : false;\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function(node) {\n    var current = node;\n    while (current && current.parentNode !== current) {\n      if (ReactMount.isRenderedByReact(current)) {\n        return current;\n      }\n      current = current.parentNode;\n    }\n    return null;\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function(ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'findComponentRoot(..., %s): Unable to find element. This probably ' +\n      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +\n      'usually due to forgetting a <tbody> when using tables, nesting tags ' +\n      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +\n      'parent. ' +\n      'Try inspecting the child nodes of the element with React ID `%s`.',\n      targetID,\n      ReactMount.getID(ancestorNode)\n    ) : invariant(false));\n  },\n\n  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container && (\n        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n      ),\n      'mountComponentIntoNode(...): Target container is not valid.'\n    ) : invariant(container && (\n      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)\n    )));\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME\n        );\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(\n          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,\n          checksum\n        );\n\n        var diffIndex = firstDifferenceIndex(markup, rootMarkup);\n        var difference = ' (client) ' +\n          markup.substring(diffIndex - 20, diffIndex + 20) +\n          '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        (\"production\" !== process.env.NODE_ENV ? invariant(\n          container.nodeType !== DOC_NODE_TYPE,\n          'You\\'re trying to render a component to the document using ' +\n          'server rendering but the checksum was invalid. This usually ' +\n          'means you rendered a different component type or props on ' +\n          'the client from the one on the server, or your render() ' +\n          'methods are impure. React cannot handle this case due to ' +\n          'cross-browser quirks by rendering at the document root. You ' +\n          'should look for environment dependent code in your components ' +\n          'and ensure the props are the same client and server side:\\n%s',\n          difference\n        ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            false,\n            'React attempted to reuse markup in a container but the ' +\n            'checksum was invalid. This generally means that you are ' +\n            'using server rendering and the markup generated on the ' +\n            'server was not what the client was expecting. React injected ' +\n            'new markup to compensate which works but you have lost many ' +\n            'of the benefits of server rendering. Instead, figure out ' +\n            'why the markup being generated is different on the client ' +\n            'or server:\\n%s',\n            difference\n          ) : null);\n        }\n      }\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      container.nodeType !== DOC_NODE_TYPE,\n      'You\\'re trying to render a component to the document but ' +\n        'you didn\\'t use server rendering. We can\\'t do this ' +\n        'without using server rendering due to cross-browser quirks. ' +\n        'See React.renderToString() for server rendering.'\n    ) : invariant(container.nodeType !== DOC_NODE_TYPE));\n\n    setInnerHTML(container, markup);\n  },\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RNb3VudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RNb3VudFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIERPTVByb3BlcnR5ID0gcmVxdWlyZShcIi4vRE9NUHJvcGVydHlcIik7XG52YXIgUmVhY3RCcm93c2VyRXZlbnRFbWl0dGVyID0gcmVxdWlyZShcIi4vUmVhY3RCcm93c2VyRXZlbnRFbWl0dGVyXCIpO1xudmFyIFJlYWN0Q3VycmVudE93bmVyID0gcmVxdWlyZShcIi4vUmVhY3RDdXJyZW50T3duZXJcIik7XG52YXIgUmVhY3RFbGVtZW50ID0gcmVxdWlyZShcIi4vUmVhY3RFbGVtZW50XCIpO1xudmFyIFJlYWN0RWxlbWVudFZhbGlkYXRvciA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFZhbGlkYXRvclwiKTtcbnZhciBSZWFjdEVtcHR5Q29tcG9uZW50ID0gcmVxdWlyZShcIi4vUmVhY3RFbXB0eUNvbXBvbmVudFwiKTtcbnZhciBSZWFjdEluc3RhbmNlSGFuZGxlcyA9IHJlcXVpcmUoXCIuL1JlYWN0SW5zdGFuY2VIYW5kbGVzXCIpO1xudmFyIFJlYWN0SW5zdGFuY2VNYXAgPSByZXF1aXJlKFwiLi9SZWFjdEluc3RhbmNlTWFwXCIpO1xudmFyIFJlYWN0TWFya3VwQ2hlY2tzdW0gPSByZXF1aXJlKFwiLi9SZWFjdE1hcmt1cENoZWNrc3VtXCIpO1xudmFyIFJlYWN0UGVyZiA9IHJlcXVpcmUoXCIuL1JlYWN0UGVyZlwiKTtcbnZhciBSZWFjdFJlY29uY2lsZXIgPSByZXF1aXJlKFwiLi9SZWFjdFJlY29uY2lsZXJcIik7XG52YXIgUmVhY3RVcGRhdGVRdWV1ZSA9IHJlcXVpcmUoXCIuL1JlYWN0VXBkYXRlUXVldWVcIik7XG52YXIgUmVhY3RVcGRhdGVzID0gcmVxdWlyZShcIi4vUmVhY3RVcGRhdGVzXCIpO1xuXG52YXIgZW1wdHlPYmplY3QgPSByZXF1aXJlKFwiLi9lbXB0eU9iamVjdFwiKTtcbnZhciBjb250YWluc05vZGUgPSByZXF1aXJlKFwiLi9jb250YWluc05vZGVcIik7XG52YXIgZ2V0UmVhY3RSb290RWxlbWVudEluQ29udGFpbmVyID0gcmVxdWlyZShcIi4vZ2V0UmVhY3RSb290RWxlbWVudEluQ29udGFpbmVyXCIpO1xudmFyIGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKFwiLi9pbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50XCIpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcbnZhciBzZXRJbm5lckhUTUwgPSByZXF1aXJlKFwiLi9zZXRJbm5lckhUTUxcIik7XG52YXIgc2hvdWxkVXBkYXRlUmVhY3RDb21wb25lbnQgPSByZXF1aXJlKFwiLi9zaG91bGRVcGRhdGVSZWFjdENvbXBvbmVudFwiKTtcbnZhciB3YXJuaW5nID0gcmVxdWlyZShcIi4vd2FybmluZ1wiKTtcblxudmFyIFNFUEFSQVRPUiA9IFJlYWN0SW5zdGFuY2VIYW5kbGVzLlNFUEFSQVRPUjtcblxudmFyIEFUVFJfTkFNRSA9IERPTVByb3BlcnR5LklEX0FUVFJJQlVURV9OQU1FO1xudmFyIG5vZGVDYWNoZSA9IHt9O1xuXG52YXIgRUxFTUVOVF9OT0RFX1RZUEUgPSAxO1xudmFyIERPQ19OT0RFX1RZUEUgPSA5O1xuXG4vKiogTWFwcGluZyBmcm9tIHJlYWN0Um9vdElEIHRvIFJlYWN0IGNvbXBvbmVudCBpbnN0YW5jZS4gKi9cbnZhciBpbnN0YW5jZXNCeVJlYWN0Um9vdElEID0ge307XG5cbi8qKiBNYXBwaW5nIGZyb20gcmVhY3RSb290SUQgdG8gYGNvbnRhaW5lcmAgbm9kZXMuICovXG52YXIgY29udGFpbmVyc0J5UmVhY3RSb290SUQgPSB7fTtcblxuaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAvKiogX19ERVZfXy1vbmx5IG1hcHBpbmcgZnJvbSByZWFjdFJvb3RJRCB0byByb290IGVsZW1lbnRzLiAqL1xuICB2YXIgcm9vdEVsZW1lbnRzQnlSZWFjdFJvb3RJRCA9IHt9O1xufVxuXG4vLyBVc2VkIHRvIHN0b3JlIGJyZWFkdGgtZmlyc3Qgc2VhcmNoIHN0YXRlIGluIGZpbmRDb21wb25lbnRSb290LlxudmFyIGZpbmRDb21wb25lbnRSb290UmV1c2FibGVBcnJheSA9IFtdO1xuXG4vKipcbiAqIEZpbmRzIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgY2hhcmFjdGVyXG4gKiB0aGF0J3Mgbm90IGNvbW1vbiBiZXR3ZWVuIHRoZSB0d28gZ2l2ZW4gc3RyaW5ncy5cbiAqXG4gKiBAcmV0dXJuIHtudW1iZXJ9IHRoZSBpbmRleCBvZiB0aGUgY2hhcmFjdGVyIHdoZXJlIHRoZSBzdHJpbmdzIGRpdmVyZ2VcbiAqL1xuZnVuY3Rpb24gZmlyc3REaWZmZXJlbmNlSW5kZXgoc3RyaW5nMSwgc3RyaW5nMikge1xuICB2YXIgbWluTGVuID0gTWF0aC5taW4oc3RyaW5nMS5sZW5ndGgsIHN0cmluZzIubGVuZ3RoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtaW5MZW47IGkrKykge1xuICAgIGlmIChzdHJpbmcxLmNoYXJBdChpKSAhPT0gc3RyaW5nMi5jaGFyQXQoaSkpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyaW5nMS5sZW5ndGggPT09IHN0cmluZzIubGVuZ3RoID8gLTEgOiBtaW5MZW47XG59XG5cbi8qKlxuICogQHBhcmFtIHtET01FbGVtZW50fSBjb250YWluZXIgRE9NIGVsZW1lbnQgdGhhdCBtYXkgY29udGFpbiBhIFJlYWN0IGNvbXBvbmVudC5cbiAqIEByZXR1cm4gez9zdHJpbmd9IEEgXCJyZWFjdFJvb3RcIiBJRCwgaWYgYSBSZWFjdCBjb21wb25lbnQgaXMgcmVuZGVyZWQuXG4gKi9cbmZ1bmN0aW9uIGdldFJlYWN0Um9vdElEKGNvbnRhaW5lcikge1xuICB2YXIgcm9vdEVsZW1lbnQgPSBnZXRSZWFjdFJvb3RFbGVtZW50SW5Db250YWluZXIoY29udGFpbmVyKTtcbiAgcmV0dXJuIHJvb3RFbGVtZW50ICYmIFJlYWN0TW91bnQuZ2V0SUQocm9vdEVsZW1lbnQpO1xufVxuXG4vKipcbiAqIEFjY2Vzc2luZyBub2RlW0FUVFJfTkFNRV0gb3IgY2FsbGluZyBnZXRBdHRyaWJ1dGUoQVRUUl9OQU1FKSBvbiBhIGZvcm1cbiAqIGVsZW1lbnQgY2FuIHJldHVybiBpdHMgY29udHJvbCB3aG9zZSBuYW1lIG9yIElEIGVxdWFscyBBVFRSX05BTUUuIEFsbFxuICogRE9NIG5vZGVzIHN1cHBvcnQgYGdldEF0dHJpYnV0ZU5vZGVgIGJ1dCB0aGlzIGNhbiBhbHNvIGdldCBjYWxsZWQgb25cbiAqIG90aGVyIG9iamVjdHMgc28ganVzdCByZXR1cm4gJycgaWYgd2UncmUgZ2l2ZW4gc29tZXRoaW5nIG90aGVyIHRoYW4gYVxuICogRE9NIG5vZGUgKHN1Y2ggYXMgd2luZG93KS5cbiAqXG4gKiBAcGFyYW0gez9ET01FbGVtZW50fERPTVdpbmRvd3xET01Eb2N1bWVudHxET01UZXh0Tm9kZX0gbm9kZSBET00gbm9kZS5cbiAqIEByZXR1cm4ge3N0cmluZ30gSUQgb2YgdGhlIHN1cHBsaWVkIGBkb21Ob2RlYC5cbiAqL1xuZnVuY3Rpb24gZ2V0SUQobm9kZSkge1xuICB2YXIgaWQgPSBpbnRlcm5hbEdldElEKG5vZGUpO1xuICBpZiAoaWQpIHtcbiAgICBpZiAobm9kZUNhY2hlLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgICAgdmFyIGNhY2hlZCA9IG5vZGVDYWNoZVtpZF07XG4gICAgICBpZiAoY2FjaGVkICE9PSBub2RlKSB7XG4gICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICAgICAgIWlzVmFsaWQoY2FjaGVkLCBpZCksXG4gICAgICAgICAgJ1JlYWN0TW91bnQ6IFR3byB2YWxpZCBidXQgdW5lcXVhbCBub2RlcyB3aXRoIHRoZSBzYW1lIGAlc2A6ICVzJyxcbiAgICAgICAgICBBVFRSX05BTUUsIGlkXG4gICAgICAgICkgOiBpbnZhcmlhbnQoIWlzVmFsaWQoY2FjaGVkLCBpZCkpKTtcblxuICAgICAgICBub2RlQ2FjaGVbaWRdID0gbm9kZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZUNhY2hlW2lkXSA9IG5vZGU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGlkO1xufVxuXG5mdW5jdGlvbiBpbnRlcm5hbEdldElEKG5vZGUpIHtcbiAgLy8gSWYgbm9kZSBpcyBzb21ldGhpbmcgbGlrZSBhIHdpbmRvdywgZG9jdW1lbnQsIG9yIHRleHQgbm9kZSwgbm9uZSBvZlxuICAvLyB3aGljaCBzdXBwb3J0IGF0dHJpYnV0ZXMgb3IgYSAuZ2V0QXR0cmlidXRlIG1ldGhvZCwgZ3JhY2VmdWxseSByZXR1cm5cbiAgLy8gdGhlIGVtcHR5IHN0cmluZywgYXMgaWYgdGhlIGF0dHJpYnV0ZSB3ZXJlIG1pc3NpbmcuXG4gIHJldHVybiBub2RlICYmIG5vZGUuZ2V0QXR0cmlidXRlICYmIG5vZGUuZ2V0QXR0cmlidXRlKEFUVFJfTkFNRSkgfHwgJyc7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgUmVhY3Qtc3BlY2lmaWMgSUQgb2YgdGhlIGdpdmVuIG5vZGUuXG4gKlxuICogQHBhcmFtIHtET01FbGVtZW50fSBub2RlIFRoZSBET00gbm9kZSB3aG9zZSBJRCB3aWxsIGJlIHNldC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBpZCBUaGUgdmFsdWUgb2YgdGhlIElEIGF0dHJpYnV0ZS5cbiAqL1xuZnVuY3Rpb24gc2V0SUQobm9kZSwgaWQpIHtcbiAgdmFyIG9sZElEID0gaW50ZXJuYWxHZXRJRChub2RlKTtcbiAgaWYgKG9sZElEICE9PSBpZCkge1xuICAgIGRlbGV0ZSBub2RlQ2FjaGVbb2xkSURdO1xuICB9XG4gIG5vZGUuc2V0QXR0cmlidXRlKEFUVFJfTkFNRSwgaWQpO1xuICBub2RlQ2FjaGVbaWRdID0gbm9kZTtcbn1cblxuLyoqXG4gKiBGaW5kcyB0aGUgbm9kZSB3aXRoIHRoZSBzdXBwbGllZCBSZWFjdC1nZW5lcmF0ZWQgRE9NIElELlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZCBBIFJlYWN0LWdlbmVyYXRlZCBET00gSUQuXG4gKiBAcmV0dXJuIHtET01FbGVtZW50fSBET00gbm9kZSB3aXRoIHRoZSBzdXBwbGVkIGBpZGAuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZnVuY3Rpb24gZ2V0Tm9kZShpZCkge1xuICBpZiAoIW5vZGVDYWNoZS5oYXNPd25Qcm9wZXJ0eShpZCkgfHwgIWlzVmFsaWQobm9kZUNhY2hlW2lkXSwgaWQpKSB7XG4gICAgbm9kZUNhY2hlW2lkXSA9IFJlYWN0TW91bnQuZmluZFJlYWN0Tm9kZUJ5SUQoaWQpO1xuICB9XG4gIHJldHVybiBub2RlQ2FjaGVbaWRdO1xufVxuXG4vKipcbiAqIEZpbmRzIHRoZSBub2RlIHdpdGggdGhlIHN1cHBsaWVkIHB1YmxpYyBSZWFjdCBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0geyp9IGluc3RhbmNlIEEgcHVibGljIFJlYWN0IGluc3RhbmNlLlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9IERPTSBub2RlIHdpdGggdGhlIHN1cHBsZWQgYGlkYC5cbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBnZXROb2RlRnJvbUluc3RhbmNlKGluc3RhbmNlKSB7XG4gIHZhciBpZCA9IFJlYWN0SW5zdGFuY2VNYXAuZ2V0KGluc3RhbmNlKS5fcm9vdE5vZGVJRDtcbiAgaWYgKFJlYWN0RW1wdHlDb21wb25lbnQuaXNOdWxsQ29tcG9uZW50SUQoaWQpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKCFub2RlQ2FjaGUuaGFzT3duUHJvcGVydHkoaWQpIHx8ICFpc1ZhbGlkKG5vZGVDYWNoZVtpZF0sIGlkKSkge1xuICAgIG5vZGVDYWNoZVtpZF0gPSBSZWFjdE1vdW50LmZpbmRSZWFjdE5vZGVCeUlEKGlkKTtcbiAgfVxuICByZXR1cm4gbm9kZUNhY2hlW2lkXTtcbn1cblxuLyoqXG4gKiBBIG5vZGUgaXMgXCJ2YWxpZFwiIGlmIGl0IGlzIGNvbnRhaW5lZCBieSBhIGN1cnJlbnRseSBtb3VudGVkIGNvbnRhaW5lci5cbiAqXG4gKiBUaGlzIG1lYW5zIHRoYXQgdGhlIG5vZGUgZG9lcyBub3QgaGF2ZSB0byBiZSBjb250YWluZWQgYnkgYSBkb2N1bWVudCBpblxuICogb3JkZXIgdG8gYmUgY29uc2lkZXJlZCB2YWxpZC5cbiAqXG4gKiBAcGFyYW0gez9ET01FbGVtZW50fSBub2RlIFRoZSBjYW5kaWRhdGUgRE9NIG5vZGUuXG4gKiBAcGFyYW0ge3N0cmluZ30gaWQgVGhlIGV4cGVjdGVkIElEIG9mIHRoZSBub2RlLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciB0aGUgbm9kZSBpcyBjb250YWluZWQgYnkgYSBtb3VudGVkIGNvbnRhaW5lci5cbiAqL1xuZnVuY3Rpb24gaXNWYWxpZChub2RlLCBpZCkge1xuICBpZiAobm9kZSkge1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICBpbnRlcm5hbEdldElEKG5vZGUpID09PSBpZCxcbiAgICAgICdSZWFjdE1vdW50OiBVbmV4cGVjdGVkIG1vZGlmaWNhdGlvbiBvZiBgJXNgJyxcbiAgICAgIEFUVFJfTkFNRVxuICAgICkgOiBpbnZhcmlhbnQoaW50ZXJuYWxHZXRJRChub2RlKSA9PT0gaWQpKTtcblxuICAgIHZhciBjb250YWluZXIgPSBSZWFjdE1vdW50LmZpbmRSZWFjdENvbnRhaW5lckZvcklEKGlkKTtcbiAgICBpZiAoY29udGFpbmVyICYmIGNvbnRhaW5zTm9kZShjb250YWluZXIsIG5vZGUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogQ2F1c2VzIHRoZSBjYWNoZSB0byBmb3JnZXQgYWJvdXQgb25lIFJlYWN0LXNwZWNpZmljIElELlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZCBUaGUgSUQgdG8gZm9yZ2V0LlxuICovXG5mdW5jdGlvbiBwdXJnZUlEKGlkKSB7XG4gIGRlbGV0ZSBub2RlQ2FjaGVbaWRdO1xufVxuXG52YXIgZGVlcGVzdE5vZGVTb0ZhciA9IG51bGw7XG5mdW5jdGlvbiBmaW5kRGVlcGVzdENhY2hlZEFuY2VzdG9ySW1wbChhbmNlc3RvcklEKSB7XG4gIHZhciBhbmNlc3RvciA9IG5vZGVDYWNoZVthbmNlc3RvcklEXTtcbiAgaWYgKGFuY2VzdG9yICYmIGlzVmFsaWQoYW5jZXN0b3IsIGFuY2VzdG9ySUQpKSB7XG4gICAgZGVlcGVzdE5vZGVTb0ZhciA9IGFuY2VzdG9yO1xuICB9IGVsc2Uge1xuICAgIC8vIFRoaXMgbm9kZSBpc24ndCBwb3B1bGF0ZWQgaW4gdGhlIGNhY2hlLCBzbyBwcmVzdW1hYmx5IG5vbmUgb2YgaXRzXG4gICAgLy8gZGVzY2VuZGFudHMgYXJlLiBCcmVhayBvdXQgb2YgdGhlIGxvb3AuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogUmV0dXJuIHRoZSBkZWVwZXN0IGNhY2hlZCBub2RlIHdob3NlIElEIGlzIGEgcHJlZml4IG9mIGB0YXJnZXRJRGAuXG4gKi9cbmZ1bmN0aW9uIGZpbmREZWVwZXN0Q2FjaGVkQW5jZXN0b3IodGFyZ2V0SUQpIHtcbiAgZGVlcGVzdE5vZGVTb0ZhciA9IG51bGw7XG4gIFJlYWN0SW5zdGFuY2VIYW5kbGVzLnRyYXZlcnNlQW5jZXN0b3JzKFxuICAgIHRhcmdldElELFxuICAgIGZpbmREZWVwZXN0Q2FjaGVkQW5jZXN0b3JJbXBsXG4gICk7XG5cbiAgdmFyIGZvdW5kTm9kZSA9IGRlZXBlc3ROb2RlU29GYXI7XG4gIGRlZXBlc3ROb2RlU29GYXIgPSBudWxsO1xuICByZXR1cm4gZm91bmROb2RlO1xufVxuXG4vKipcbiAqIE1vdW50cyB0aGlzIGNvbXBvbmVudCBhbmQgaW5zZXJ0cyBpdCBpbnRvIHRoZSBET00uXG4gKlxuICogQHBhcmFtIHtSZWFjdENvbXBvbmVudH0gY29tcG9uZW50SW5zdGFuY2UgVGhlIGluc3RhbmNlIHRvIG1vdW50LlxuICogQHBhcmFtIHtzdHJpbmd9IHJvb3RJRCBET00gSUQgb2YgdGhlIHJvb3Qgbm9kZS5cbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gY29udGFpbmVyIERPTSBlbGVtZW50IHRvIG1vdW50IGludG8uXG4gKiBAcGFyYW0ge1JlYWN0UmVjb25jaWxlVHJhbnNhY3Rpb259IHRyYW5zYWN0aW9uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHNob3VsZFJldXNlTWFya3VwIElmIHRydWUsIGRvIG5vdCBpbnNlcnQgbWFya3VwXG4gKi9cbmZ1bmN0aW9uIG1vdW50Q29tcG9uZW50SW50b05vZGUoXG4gICAgY29tcG9uZW50SW5zdGFuY2UsXG4gICAgcm9vdElELFxuICAgIGNvbnRhaW5lcixcbiAgICB0cmFuc2FjdGlvbixcbiAgICBzaG91bGRSZXVzZU1hcmt1cCkge1xuICB2YXIgbWFya3VwID0gUmVhY3RSZWNvbmNpbGVyLm1vdW50Q29tcG9uZW50KFxuICAgIGNvbXBvbmVudEluc3RhbmNlLCByb290SUQsIHRyYW5zYWN0aW9uLCBlbXB0eU9iamVjdFxuICApO1xuICBjb21wb25lbnRJbnN0YW5jZS5faXNUb3BMZXZlbCA9IHRydWU7XG4gIFJlYWN0TW91bnQuX21vdW50SW1hZ2VJbnRvTm9kZShtYXJrdXAsIGNvbnRhaW5lciwgc2hvdWxkUmV1c2VNYXJrdXApO1xufVxuXG4vKipcbiAqIEJhdGNoZWQgbW91bnQuXG4gKlxuICogQHBhcmFtIHtSZWFjdENvbXBvbmVudH0gY29tcG9uZW50SW5zdGFuY2UgVGhlIGluc3RhbmNlIHRvIG1vdW50LlxuICogQHBhcmFtIHtzdHJpbmd9IHJvb3RJRCBET00gSUQgb2YgdGhlIHJvb3Qgbm9kZS5cbiAqIEBwYXJhbSB7RE9NRWxlbWVudH0gY29udGFpbmVyIERPTSBlbGVtZW50IHRvIG1vdW50IGludG8uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHNob3VsZFJldXNlTWFya3VwIElmIHRydWUsIGRvIG5vdCBpbnNlcnQgbWFya3VwXG4gKi9cbmZ1bmN0aW9uIGJhdGNoZWRNb3VudENvbXBvbmVudEludG9Ob2RlKFxuICAgIGNvbXBvbmVudEluc3RhbmNlLFxuICAgIHJvb3RJRCxcbiAgICBjb250YWluZXIsXG4gICAgc2hvdWxkUmV1c2VNYXJrdXApIHtcbiAgdmFyIHRyYW5zYWN0aW9uID0gUmVhY3RVcGRhdGVzLlJlYWN0UmVjb25jaWxlVHJhbnNhY3Rpb24uZ2V0UG9vbGVkKCk7XG4gIHRyYW5zYWN0aW9uLnBlcmZvcm0oXG4gICAgbW91bnRDb21wb25lbnRJbnRvTm9kZSxcbiAgICBudWxsLFxuICAgIGNvbXBvbmVudEluc3RhbmNlLFxuICAgIHJvb3RJRCxcbiAgICBjb250YWluZXIsXG4gICAgdHJhbnNhY3Rpb24sXG4gICAgc2hvdWxkUmV1c2VNYXJrdXBcbiAgKTtcbiAgUmVhY3RVcGRhdGVzLlJlYWN0UmVjb25jaWxlVHJhbnNhY3Rpb24ucmVsZWFzZSh0cmFuc2FjdGlvbik7XG59XG5cbi8qKlxuICogTW91bnRpbmcgaXMgdGhlIHByb2Nlc3Mgb2YgaW5pdGlhbGl6aW5nIGEgUmVhY3QgY29tcG9uZW50IGJ5IGNyZWF0aW5nIGl0c1xuICogcmVwcmVzZW50YXRpdmUgRE9NIGVsZW1lbnRzIGFuZCBpbnNlcnRpbmcgdGhlbSBpbnRvIGEgc3VwcGxpZWQgYGNvbnRhaW5lcmAuXG4gKiBBbnkgcHJpb3IgY29udGVudCBpbnNpZGUgYGNvbnRhaW5lcmAgaXMgZGVzdHJveWVkIGluIHRoZSBwcm9jZXNzLlxuICpcbiAqICAgUmVhY3RNb3VudC5yZW5kZXIoXG4gKiAgICAgY29tcG9uZW50LFxuICogICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKVxuICogICApO1xuICpcbiAqICAgPGRpdiBpZD1cImNvbnRhaW5lclwiPiAgICAgICAgICAgICAgICAgICA8LS0gU3VwcGxpZWQgYGNvbnRhaW5lcmAuXG4gKiAgICAgPGRpdiBkYXRhLXJlYWN0aWQ9XCIuM1wiPiAgICAgICAgICAgICAgPC0tIFJlbmRlcmVkIHJlYWN0Um9vdCBvZiBSZWFjdFxuICogICAgICAgLy8gLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50LlxuICogICAgIDwvZGl2PlxuICogICA8L2Rpdj5cbiAqXG4gKiBJbnNpZGUgb2YgYGNvbnRhaW5lcmAsIHRoZSBmaXJzdCBlbGVtZW50IHJlbmRlcmVkIGlzIHRoZSBcInJlYWN0Um9vdFwiLlxuICovXG52YXIgUmVhY3RNb3VudCA9IHtcbiAgLyoqIEV4cG9zZWQgZm9yIGRlYnVnZ2luZyBwdXJwb3NlcyAqKi9cbiAgX2luc3RhbmNlc0J5UmVhY3RSb290SUQ6IGluc3RhbmNlc0J5UmVhY3RSb290SUQsXG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgYSBob29rIHByb3ZpZGVkIHRvIHN1cHBvcnQgcmVuZGVyaW5nIFJlYWN0IGNvbXBvbmVudHMgd2hpbGVcbiAgICogZW5zdXJpbmcgdGhhdCB0aGUgYXBwYXJlbnQgc2Nyb2xsIHBvc2l0aW9uIG9mIGl0cyBgY29udGFpbmVyYCBkb2VzIG5vdFxuICAgKiBjaGFuZ2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gY29udGFpbmVyIFRoZSBgY29udGFpbmVyYCBiZWluZyByZW5kZXJlZCBpbnRvLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSByZW5kZXJDYWxsYmFjayBUaGlzIG11c3QgYmUgY2FsbGVkIG9uY2UgdG8gZG8gdGhlIHJlbmRlci5cbiAgICovXG4gIHNjcm9sbE1vbml0b3I6IGZ1bmN0aW9uKGNvbnRhaW5lciwgcmVuZGVyQ2FsbGJhY2spIHtcbiAgICByZW5kZXJDYWxsYmFjaygpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBUYWtlIGEgY29tcG9uZW50IHRoYXQncyBhbHJlYWR5IG1vdW50ZWQgaW50byB0aGUgRE9NIGFuZCByZXBsYWNlIGl0cyBwcm9wc1xuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBwcmV2Q29tcG9uZW50IGNvbXBvbmVudCBpbnN0YW5jZSBhbHJlYWR5IGluIHRoZSBET01cbiAgICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IG5leHRFbGVtZW50IGNvbXBvbmVudCBpbnN0YW5jZSB0byByZW5kZXJcbiAgICogQHBhcmFtIHtET01FbGVtZW50fSBjb250YWluZXIgY29udGFpbmVyIHRvIHJlbmRlciBpbnRvXG4gICAqIEBwYXJhbSB7P2Z1bmN0aW9ufSBjYWxsYmFjayBmdW5jdGlvbiB0cmlnZ2VyZWQgb24gY29tcGxldGlvblxuICAgKi9cbiAgX3VwZGF0ZVJvb3RDb21wb25lbnQ6IGZ1bmN0aW9uKFxuICAgICAgcHJldkNvbXBvbmVudCxcbiAgICAgIG5leHRFbGVtZW50LFxuICAgICAgY29udGFpbmVyLFxuICAgICAgY2FsbGJhY2spIHtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICBSZWFjdEVsZW1lbnRWYWxpZGF0b3IuY2hlY2tBbmRXYXJuRm9yTXV0YXRlZFByb3BzKG5leHRFbGVtZW50KTtcbiAgICB9XG5cbiAgICBSZWFjdE1vdW50LnNjcm9sbE1vbml0b3IoY29udGFpbmVyLCBmdW5jdGlvbigpIHtcbiAgICAgIFJlYWN0VXBkYXRlUXVldWUuZW5xdWV1ZUVsZW1lbnRJbnRlcm5hbChwcmV2Q29tcG9uZW50LCBuZXh0RWxlbWVudCk7XG4gICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgUmVhY3RVcGRhdGVRdWV1ZS5lbnF1ZXVlQ2FsbGJhY2tJbnRlcm5hbChwcmV2Q29tcG9uZW50LCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAvLyBSZWNvcmQgdGhlIHJvb3QgZWxlbWVudCBpbiBjYXNlIGl0IGxhdGVyIGdldHMgdHJhbnNwbGFudGVkLlxuICAgICAgcm9vdEVsZW1lbnRzQnlSZWFjdFJvb3RJRFtnZXRSZWFjdFJvb3RJRChjb250YWluZXIpXSA9XG4gICAgICAgIGdldFJlYWN0Um9vdEVsZW1lbnRJbkNvbnRhaW5lcihjb250YWluZXIpO1xuICAgIH1cblxuICAgIHJldHVybiBwcmV2Q29tcG9uZW50O1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIGNvbXBvbmVudCBpbnRvIHRoZSBpbnN0YW5jZSBtYXAgYW5kIHN0YXJ0cyBzY3JvbGwgdmFsdWVcbiAgICogbW9uaXRvcmluZ1xuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBuZXh0Q29tcG9uZW50IGNvbXBvbmVudCBpbnN0YW5jZSB0byByZW5kZXJcbiAgICogQHBhcmFtIHtET01FbGVtZW50fSBjb250YWluZXIgY29udGFpbmVyIHRvIHJlbmRlciBpbnRvXG4gICAqIEByZXR1cm4ge3N0cmluZ30gcmVhY3RSb290IElEIHByZWZpeFxuICAgKi9cbiAgX3JlZ2lzdGVyQ29tcG9uZW50OiBmdW5jdGlvbihuZXh0Q29tcG9uZW50LCBjb250YWluZXIpIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgY29udGFpbmVyICYmIChcbiAgICAgICAgKGNvbnRhaW5lci5ub2RlVHlwZSA9PT0gRUxFTUVOVF9OT0RFX1RZUEUgfHwgY29udGFpbmVyLm5vZGVUeXBlID09PSBET0NfTk9ERV9UWVBFKVxuICAgICAgKSxcbiAgICAgICdfcmVnaXN0ZXJDb21wb25lbnQoLi4uKTogVGFyZ2V0IGNvbnRhaW5lciBpcyBub3QgYSBET00gZWxlbWVudC4nXG4gICAgKSA6IGludmFyaWFudChjb250YWluZXIgJiYgKFxuICAgICAgKGNvbnRhaW5lci5ub2RlVHlwZSA9PT0gRUxFTUVOVF9OT0RFX1RZUEUgfHwgY29udGFpbmVyLm5vZGVUeXBlID09PSBET0NfTk9ERV9UWVBFKVxuICAgICkpKTtcblxuICAgIFJlYWN0QnJvd3NlckV2ZW50RW1pdHRlci5lbnN1cmVTY3JvbGxWYWx1ZU1vbml0b3JpbmcoKTtcblxuICAgIHZhciByZWFjdFJvb3RJRCA9IFJlYWN0TW91bnQucmVnaXN0ZXJDb250YWluZXIoY29udGFpbmVyKTtcbiAgICBpbnN0YW5jZXNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXSA9IG5leHRDb21wb25lbnQ7XG4gICAgcmV0dXJuIHJlYWN0Um9vdElEO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZW5kZXIgYSBuZXcgY29tcG9uZW50IGludG8gdGhlIERPTS5cbiAgICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IG5leHRFbGVtZW50IGVsZW1lbnQgdG8gcmVuZGVyXG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gY29udGFpbmVyIGNvbnRhaW5lciB0byByZW5kZXIgaW50b1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHNob3VsZFJldXNlTWFya3VwIGlmIHdlIHNob3VsZCBza2lwIHRoZSBtYXJrdXAgaW5zZXJ0aW9uXG4gICAqIEByZXR1cm4ge1JlYWN0Q29tcG9uZW50fSBuZXh0Q29tcG9uZW50XG4gICAqL1xuICBfcmVuZGVyTmV3Um9vdENvbXBvbmVudDogZnVuY3Rpb24oXG4gICAgbmV4dEVsZW1lbnQsXG4gICAgY29udGFpbmVyLFxuICAgIHNob3VsZFJldXNlTWFya3VwXG4gICkge1xuICAgIC8vIFZhcmlvdXMgcGFydHMgb2Ygb3VyIGNvZGUgKHN1Y2ggYXMgUmVhY3RDb21wb3NpdGVDb21wb25lbnQnc1xuICAgIC8vIF9yZW5kZXJWYWxpZGF0ZWRDb21wb25lbnQpIGFzc3VtZSB0aGF0IGNhbGxzIHRvIHJlbmRlciBhcmVuJ3QgbmVzdGVkO1xuICAgIC8vIHZlcmlmeSB0aGF0IHRoYXQncyB0aGUgY2FzZS5cbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gd2FybmluZyhcbiAgICAgIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQgPT0gbnVsbCxcbiAgICAgICdfcmVuZGVyTmV3Um9vdENvbXBvbmVudCgpOiBSZW5kZXIgbWV0aG9kcyBzaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uICcgK1xuICAgICAgJ29mIHByb3BzIGFuZCBzdGF0ZTsgdHJpZ2dlcmluZyBuZXN0ZWQgY29tcG9uZW50IHVwZGF0ZXMgZnJvbSAnICtcbiAgICAgICdyZW5kZXIgaXMgbm90IGFsbG93ZWQuIElmIG5lY2Vzc2FyeSwgdHJpZ2dlciBuZXN0ZWQgdXBkYXRlcyBpbiAnICtcbiAgICAgICdjb21wb25lbnREaWRVcGRhdGUuJ1xuICAgICkgOiBudWxsKTtcblxuICAgIHZhciBjb21wb25lbnRJbnN0YW5jZSA9IGluc3RhbnRpYXRlUmVhY3RDb21wb25lbnQobmV4dEVsZW1lbnQsIG51bGwpO1xuICAgIHZhciByZWFjdFJvb3RJRCA9IFJlYWN0TW91bnQuX3JlZ2lzdGVyQ29tcG9uZW50KFxuICAgICAgY29tcG9uZW50SW5zdGFuY2UsXG4gICAgICBjb250YWluZXJcbiAgICApO1xuXG4gICAgLy8gVGhlIGluaXRpYWwgcmVuZGVyIGlzIHN5bmNocm9ub3VzIGJ1dCBhbnkgdXBkYXRlcyB0aGF0IGhhcHBlbiBkdXJpbmdcbiAgICAvLyByZW5kZXJpbmcsIGluIGNvbXBvbmVudFdpbGxNb3VudCBvciBjb21wb25lbnREaWRNb3VudCwgd2lsbCBiZSBiYXRjaGVkXG4gICAgLy8gYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IGJhdGNoaW5nIHN0cmF0ZWd5LlxuXG4gICAgUmVhY3RVcGRhdGVzLmJhdGNoZWRVcGRhdGVzKFxuICAgICAgYmF0Y2hlZE1vdW50Q29tcG9uZW50SW50b05vZGUsXG4gICAgICBjb21wb25lbnRJbnN0YW5jZSxcbiAgICAgIHJlYWN0Um9vdElELFxuICAgICAgY29udGFpbmVyLFxuICAgICAgc2hvdWxkUmV1c2VNYXJrdXBcbiAgICApO1xuXG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgLy8gUmVjb3JkIHRoZSByb290IGVsZW1lbnQgaW4gY2FzZSBpdCBsYXRlciBnZXRzIHRyYW5zcGxhbnRlZC5cbiAgICAgIHJvb3RFbGVtZW50c0J5UmVhY3RSb290SURbcmVhY3RSb290SURdID1cbiAgICAgICAgZ2V0UmVhY3RSb290RWxlbWVudEluQ29udGFpbmVyKGNvbnRhaW5lcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbXBvbmVudEluc3RhbmNlO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZW5kZXJzIGEgUmVhY3QgY29tcG9uZW50IGludG8gdGhlIERPTSBpbiB0aGUgc3VwcGxpZWQgYGNvbnRhaW5lcmAuXG4gICAqXG4gICAqIElmIHRoZSBSZWFjdCBjb21wb25lbnQgd2FzIHByZXZpb3VzbHkgcmVuZGVyZWQgaW50byBgY29udGFpbmVyYCwgdGhpcyB3aWxsXG4gICAqIHBlcmZvcm0gYW4gdXBkYXRlIG9uIGl0IGFuZCBvbmx5IG11dGF0ZSB0aGUgRE9NIGFzIG5lY2Vzc2FyeSB0byByZWZsZWN0IHRoZVxuICAgKiBsYXRlc3QgUmVhY3QgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0RWxlbWVudH0gbmV4dEVsZW1lbnQgQ29tcG9uZW50IGVsZW1lbnQgdG8gcmVuZGVyLlxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGNvbnRhaW5lciBET00gZWxlbWVudCB0byByZW5kZXIgaW50by5cbiAgICogQHBhcmFtIHs/ZnVuY3Rpb259IGNhbGxiYWNrIGZ1bmN0aW9uIHRyaWdnZXJlZCBvbiBjb21wbGV0aW9uXG4gICAqIEByZXR1cm4ge1JlYWN0Q29tcG9uZW50fSBDb21wb25lbnQgaW5zdGFuY2UgcmVuZGVyZWQgaW4gYGNvbnRhaW5lcmAuXG4gICAqL1xuICByZW5kZXI6IGZ1bmN0aW9uKG5leHRFbGVtZW50LCBjb250YWluZXIsIGNhbGxiYWNrKSB7XG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgIFJlYWN0RWxlbWVudC5pc1ZhbGlkRWxlbWVudChuZXh0RWxlbWVudCksXG4gICAgICAnUmVhY3QucmVuZGVyKCk6IEludmFsaWQgY29tcG9uZW50IGVsZW1lbnQuJXMnLFxuICAgICAgKFxuICAgICAgICB0eXBlb2YgbmV4dEVsZW1lbnQgPT09ICdzdHJpbmcnID9cbiAgICAgICAgICAnIEluc3RlYWQgb2YgcGFzc2luZyBhbiBlbGVtZW50IHN0cmluZywgbWFrZSBzdXJlIHRvIGluc3RhbnRpYXRlICcgK1xuICAgICAgICAgICdpdCBieSBwYXNzaW5nIGl0IHRvIFJlYWN0LmNyZWF0ZUVsZW1lbnQuJyA6XG4gICAgICAgIHR5cGVvZiBuZXh0RWxlbWVudCA9PT0gJ2Z1bmN0aW9uJyA/XG4gICAgICAgICAgJyBJbnN0ZWFkIG9mIHBhc3NpbmcgYSBjb21wb25lbnQgY2xhc3MsIG1ha2Ugc3VyZSB0byBpbnN0YW50aWF0ZSAnICtcbiAgICAgICAgICAnaXQgYnkgcGFzc2luZyBpdCB0byBSZWFjdC5jcmVhdGVFbGVtZW50LicgOlxuICAgICAgICAvLyBDaGVjayBpZiBpdCBxdWFja3MgbGlrZSBhbiBlbGVtZW50XG4gICAgICAgIG5leHRFbGVtZW50ICE9IG51bGwgJiYgbmV4dEVsZW1lbnQucHJvcHMgIT09IHVuZGVmaW5lZCA/XG4gICAgICAgICAgJyBUaGlzIG1heSBiZSBjYXVzZWQgYnkgdW5pbnRlbnRpb25hbGx5IGxvYWRpbmcgdHdvIGluZGVwZW5kZW50ICcgK1xuICAgICAgICAgICdjb3BpZXMgb2YgUmVhY3QuJyA6XG4gICAgICAgICAgJydcbiAgICAgIClcbiAgICApIDogaW52YXJpYW50KFJlYWN0RWxlbWVudC5pc1ZhbGlkRWxlbWVudChuZXh0RWxlbWVudCkpKTtcblxuICAgIHZhciBwcmV2Q29tcG9uZW50ID0gaW5zdGFuY2VzQnlSZWFjdFJvb3RJRFtnZXRSZWFjdFJvb3RJRChjb250YWluZXIpXTtcblxuICAgIGlmIChwcmV2Q29tcG9uZW50KSB7XG4gICAgICB2YXIgcHJldkVsZW1lbnQgPSBwcmV2Q29tcG9uZW50Ll9jdXJyZW50RWxlbWVudDtcbiAgICAgIGlmIChzaG91bGRVcGRhdGVSZWFjdENvbXBvbmVudChwcmV2RWxlbWVudCwgbmV4dEVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybiBSZWFjdE1vdW50Ll91cGRhdGVSb290Q29tcG9uZW50KFxuICAgICAgICAgIHByZXZDb21wb25lbnQsXG4gICAgICAgICAgbmV4dEVsZW1lbnQsXG4gICAgICAgICAgY29udGFpbmVyLFxuICAgICAgICAgIGNhbGxiYWNrXG4gICAgICAgICkuZ2V0UHVibGljSW5zdGFuY2UoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIFJlYWN0TW91bnQudW5tb3VudENvbXBvbmVudEF0Tm9kZShjb250YWluZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciByZWFjdFJvb3RFbGVtZW50ID0gZ2V0UmVhY3RSb290RWxlbWVudEluQ29udGFpbmVyKGNvbnRhaW5lcik7XG4gICAgdmFyIGNvbnRhaW5lckhhc1JlYWN0TWFya3VwID1cbiAgICAgIHJlYWN0Um9vdEVsZW1lbnQgJiYgUmVhY3RNb3VudC5pc1JlbmRlcmVkQnlSZWFjdChyZWFjdFJvb3RFbGVtZW50KTtcblxuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIGlmICghY29udGFpbmVySGFzUmVhY3RNYXJrdXAgfHwgcmVhY3RSb290RWxlbWVudC5uZXh0U2libGluZykge1xuICAgICAgICB2YXIgcm9vdEVsZW1lbnRTaWJsaW5nID0gcmVhY3RSb290RWxlbWVudDtcbiAgICAgICAgd2hpbGUgKHJvb3RFbGVtZW50U2libGluZykge1xuICAgICAgICAgIGlmIChSZWFjdE1vdW50LmlzUmVuZGVyZWRCeVJlYWN0KHJvb3RFbGVtZW50U2libGluZykpIHtcbiAgICAgICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgJ3JlbmRlcigpOiBUYXJnZXQgbm9kZSBoYXMgbWFya3VwIHJlbmRlcmVkIGJ5IFJlYWN0LCBidXQgdGhlcmUgJyArXG4gICAgICAgICAgICAgICdhcmUgdW5yZWxhdGVkIG5vZGVzIGFzIHdlbGwuIFRoaXMgaXMgbW9zdCBjb21tb25seSBjYXVzZWQgYnkgJyArXG4gICAgICAgICAgICAgICd3aGl0ZS1zcGFjZSBpbnNlcnRlZCBhcm91bmQgc2VydmVyLXJlbmRlcmVkIG1hcmt1cC4nXG4gICAgICAgICAgICApIDogbnVsbCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByb290RWxlbWVudFNpYmxpbmcgPSByb290RWxlbWVudFNpYmxpbmcubmV4dFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgc2hvdWxkUmV1c2VNYXJrdXAgPSBjb250YWluZXJIYXNSZWFjdE1hcmt1cCAmJiAhcHJldkNvbXBvbmVudDtcblxuICAgIHZhciBjb21wb25lbnQgPSBSZWFjdE1vdW50Ll9yZW5kZXJOZXdSb290Q29tcG9uZW50KFxuICAgICAgbmV4dEVsZW1lbnQsXG4gICAgICBjb250YWluZXIsXG4gICAgICBzaG91bGRSZXVzZU1hcmt1cFxuICAgICkuZ2V0UHVibGljSW5zdGFuY2UoKTtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrLmNhbGwoY29tcG9uZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBvbmVudDtcbiAgfSxcblxuICAvKipcbiAgICogQ29uc3RydWN0cyBhIGNvbXBvbmVudCBpbnN0YW5jZSBvZiBgY29uc3RydWN0b3JgIHdpdGggYGluaXRpYWxQcm9wc2AgYW5kXG4gICAqIHJlbmRlcnMgaXQgaW50byB0aGUgc3VwcGxpZWQgYGNvbnRhaW5lcmAuXG4gICAqXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNvbnN0cnVjdG9yIFJlYWN0IGNvbXBvbmVudCBjb25zdHJ1Y3Rvci5cbiAgICogQHBhcmFtIHs/b2JqZWN0fSBwcm9wcyBJbml0aWFsIHByb3BzIG9mIHRoZSBjb21wb25lbnQgaW5zdGFuY2UuXG4gICAqIEBwYXJhbSB7RE9NRWxlbWVudH0gY29udGFpbmVyIERPTSBlbGVtZW50IHRvIHJlbmRlciBpbnRvLlxuICAgKiBAcmV0dXJuIHtSZWFjdENvbXBvbmVudH0gQ29tcG9uZW50IGluc3RhbmNlIHJlbmRlcmVkIGluIGBjb250YWluZXJgLlxuICAgKi9cbiAgY29uc3RydWN0QW5kUmVuZGVyQ29tcG9uZW50OiBmdW5jdGlvbihjb25zdHJ1Y3RvciwgcHJvcHMsIGNvbnRhaW5lcikge1xuICAgIHZhciBlbGVtZW50ID0gUmVhY3RFbGVtZW50LmNyZWF0ZUVsZW1lbnQoY29uc3RydWN0b3IsIHByb3BzKTtcbiAgICByZXR1cm4gUmVhY3RNb3VudC5yZW5kZXIoZWxlbWVudCwgY29udGFpbmVyKTtcbiAgfSxcblxuICAvKipcbiAgICogQ29uc3RydWN0cyBhIGNvbXBvbmVudCBpbnN0YW5jZSBvZiBgY29uc3RydWN0b3JgIHdpdGggYGluaXRpYWxQcm9wc2AgYW5kXG4gICAqIHJlbmRlcnMgaXQgaW50byBhIGNvbnRhaW5lciBub2RlIGlkZW50aWZpZWQgYnkgc3VwcGxpZWQgYGlkYC5cbiAgICpcbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY29tcG9uZW50Q29uc3RydWN0b3IgUmVhY3QgY29tcG9uZW50IGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7P29iamVjdH0gcHJvcHMgSW5pdGlhbCBwcm9wcyBvZiB0aGUgY29tcG9uZW50IGluc3RhbmNlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgSUQgb2YgdGhlIERPTSBlbGVtZW50IHRvIHJlbmRlciBpbnRvLlxuICAgKiBAcmV0dXJuIHtSZWFjdENvbXBvbmVudH0gQ29tcG9uZW50IGluc3RhbmNlIHJlbmRlcmVkIGluIHRoZSBjb250YWluZXIgbm9kZS5cbiAgICovXG4gIGNvbnN0cnVjdEFuZFJlbmRlckNvbXBvbmVudEJ5SUQ6IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBwcm9wcywgaWQpIHtcbiAgICB2YXIgZG9tTm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgZG9tTm9kZSxcbiAgICAgICdUcmllZCB0byBnZXQgZWxlbWVudCB3aXRoIGlkIG9mIFwiJXNcIiBidXQgaXQgaXMgbm90IHByZXNlbnQgb24gdGhlIHBhZ2UuJyxcbiAgICAgIGlkXG4gICAgKSA6IGludmFyaWFudChkb21Ob2RlKSk7XG4gICAgcmV0dXJuIFJlYWN0TW91bnQuY29uc3RydWN0QW5kUmVuZGVyQ29tcG9uZW50KGNvbnN0cnVjdG9yLCBwcm9wcywgZG9tTm9kZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhIGNvbnRhaW5lciBub2RlIGludG8gd2hpY2ggUmVhY3QgY29tcG9uZW50cyB3aWxsIGJlIHJlbmRlcmVkLlxuICAgKiBUaGlzIGFsc28gY3JlYXRlcyB0aGUgXCJyZWFjdFJvb3RcIiBJRCB0aGF0IHdpbGwgYmUgYXNzaWduZWQgdG8gdGhlIGVsZW1lbnRcbiAgICogcmVuZGVyZWQgd2l0aGluLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGNvbnRhaW5lciBET00gZWxlbWVudCB0byByZWdpc3RlciBhcyBhIGNvbnRhaW5lci5cbiAgICogQHJldHVybiB7c3RyaW5nfSBUaGUgXCJyZWFjdFJvb3RcIiBJRCBvZiBlbGVtZW50cyByZW5kZXJlZCB3aXRoaW4uXG4gICAqL1xuICByZWdpc3RlckNvbnRhaW5lcjogZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgdmFyIHJlYWN0Um9vdElEID0gZ2V0UmVhY3RSb290SUQoY29udGFpbmVyKTtcbiAgICBpZiAocmVhY3RSb290SUQpIHtcbiAgICAgIC8vIElmIG9uZSBleGlzdHMsIG1ha2Ugc3VyZSBpdCBpcyBhIHZhbGlkIFwicmVhY3RSb290XCIgSUQuXG4gICAgICByZWFjdFJvb3RJRCA9IFJlYWN0SW5zdGFuY2VIYW5kbGVzLmdldFJlYWN0Um9vdElERnJvbU5vZGVJRChyZWFjdFJvb3RJRCk7XG4gICAgfVxuICAgIGlmICghcmVhY3RSb290SUQpIHtcbiAgICAgIC8vIE5vIHZhbGlkIFwicmVhY3RSb290XCIgSUQgZm91bmQsIGNyZWF0ZSBvbmUuXG4gICAgICByZWFjdFJvb3RJRCA9IFJlYWN0SW5zdGFuY2VIYW5kbGVzLmNyZWF0ZVJlYWN0Um9vdElEKCk7XG4gICAgfVxuICAgIGNvbnRhaW5lcnNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXSA9IGNvbnRhaW5lcjtcbiAgICByZXR1cm4gcmVhY3RSb290SUQ7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVubW91bnRzIGFuZCBkZXN0cm95cyB0aGUgUmVhY3QgY29tcG9uZW50IHJlbmRlcmVkIGluIHRoZSBgY29udGFpbmVyYC5cbiAgICpcbiAgICogQHBhcmFtIHtET01FbGVtZW50fSBjb250YWluZXIgRE9NIGVsZW1lbnQgY29udGFpbmluZyBhIFJlYWN0IGNvbXBvbmVudC5cbiAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiBhIGNvbXBvbmVudCB3YXMgZm91bmQgaW4gYW5kIHVubW91bnRlZCBmcm9tXG4gICAqICAgICAgICAgICAgICAgICAgIGBjb250YWluZXJgXG4gICAqL1xuICB1bm1vdW50Q29tcG9uZW50QXROb2RlOiBmdW5jdGlvbihjb250YWluZXIpIHtcbiAgICAvLyBWYXJpb3VzIHBhcnRzIG9mIG91ciBjb2RlIChzdWNoIGFzIFJlYWN0Q29tcG9zaXRlQ29tcG9uZW50J3NcbiAgICAvLyBfcmVuZGVyVmFsaWRhdGVkQ29tcG9uZW50KSBhc3N1bWUgdGhhdCBjYWxscyB0byByZW5kZXIgYXJlbid0IG5lc3RlZDtcbiAgICAvLyB2ZXJpZnkgdGhhdCB0aGF0J3MgdGhlIGNhc2UuIChTdHJpY3RseSBzcGVha2luZywgdW5tb3VudGluZyB3b24ndCBjYXVzZSBhXG4gICAgLy8gcmVuZGVyIGJ1dCB3ZSBzdGlsbCBkb24ndCBleHBlY3QgdG8gYmUgaW4gYSByZW5kZXIgY2FsbCBoZXJlLilcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gd2FybmluZyhcbiAgICAgIFJlYWN0Q3VycmVudE93bmVyLmN1cnJlbnQgPT0gbnVsbCxcbiAgICAgICd1bm1vdW50Q29tcG9uZW50QXROb2RlKCk6IFJlbmRlciBtZXRob2RzIHNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24gb2YgJyArXG4gICAgICAncHJvcHMgYW5kIHN0YXRlOyB0cmlnZ2VyaW5nIG5lc3RlZCBjb21wb25lbnQgdXBkYXRlcyBmcm9tIHJlbmRlciBpcyAnICtcbiAgICAgICdub3QgYWxsb3dlZC4gSWYgbmVjZXNzYXJ5LCB0cmlnZ2VyIG5lc3RlZCB1cGRhdGVzIGluICcgK1xuICAgICAgJ2NvbXBvbmVudERpZFVwZGF0ZS4nXG4gICAgKSA6IG51bGwpO1xuXG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgIGNvbnRhaW5lciAmJiAoXG4gICAgICAgIChjb250YWluZXIubm9kZVR5cGUgPT09IEVMRU1FTlRfTk9ERV9UWVBFIHx8IGNvbnRhaW5lci5ub2RlVHlwZSA9PT0gRE9DX05PREVfVFlQRSlcbiAgICAgICksXG4gICAgICAndW5tb3VudENvbXBvbmVudEF0Tm9kZSguLi4pOiBUYXJnZXQgY29udGFpbmVyIGlzIG5vdCBhIERPTSBlbGVtZW50LidcbiAgICApIDogaW52YXJpYW50KGNvbnRhaW5lciAmJiAoXG4gICAgICAoY29udGFpbmVyLm5vZGVUeXBlID09PSBFTEVNRU5UX05PREVfVFlQRSB8fCBjb250YWluZXIubm9kZVR5cGUgPT09IERPQ19OT0RFX1RZUEUpXG4gICAgKSkpO1xuXG4gICAgdmFyIHJlYWN0Um9vdElEID0gZ2V0UmVhY3RSb290SUQoY29udGFpbmVyKTtcbiAgICB2YXIgY29tcG9uZW50ID0gaW5zdGFuY2VzQnlSZWFjdFJvb3RJRFtyZWFjdFJvb3RJRF07XG4gICAgaWYgKCFjb21wb25lbnQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgUmVhY3RNb3VudC51bm1vdW50Q29tcG9uZW50RnJvbU5vZGUoY29tcG9uZW50LCBjb250YWluZXIpO1xuICAgIGRlbGV0ZSBpbnN0YW5jZXNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXTtcbiAgICBkZWxldGUgY29udGFpbmVyc0J5UmVhY3RSb290SURbcmVhY3RSb290SURdO1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIGRlbGV0ZSByb290RWxlbWVudHNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVubW91bnRzIGEgY29tcG9uZW50IGFuZCByZW1vdmVzIGl0IGZyb20gdGhlIERPTS5cbiAgICpcbiAgICogQHBhcmFtIHtSZWFjdENvbXBvbmVudH0gaW5zdGFuY2UgUmVhY3QgY29tcG9uZW50IGluc3RhbmNlLlxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGNvbnRhaW5lciBET00gZWxlbWVudCB0byB1bm1vdW50IGZyb20uXG4gICAqIEBmaW5hbFxuICAgKiBAaW50ZXJuYWxcbiAgICogQHNlZSB7UmVhY3RNb3VudC51bm1vdW50Q29tcG9uZW50QXROb2RlfVxuICAgKi9cbiAgdW5tb3VudENvbXBvbmVudEZyb21Ob2RlOiBmdW5jdGlvbihpbnN0YW5jZSwgY29udGFpbmVyKSB7XG4gICAgUmVhY3RSZWNvbmNpbGVyLnVubW91bnRDb21wb25lbnQoaW5zdGFuY2UpO1xuXG4gICAgaWYgKGNvbnRhaW5lci5ub2RlVHlwZSA9PT0gRE9DX05PREVfVFlQRSkge1xuICAgICAgY29udGFpbmVyID0gY29udGFpbmVyLmRvY3VtZW50RWxlbWVudDtcbiAgICB9XG5cbiAgICAvLyBodHRwOi8vanNwZXJmLmNvbS9lbXB0eWluZy1hLW5vZGVcbiAgICB3aGlsZSAoY29udGFpbmVyLmxhc3RDaGlsZCkge1xuICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5sYXN0Q2hpbGQpO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogRmluZHMgdGhlIGNvbnRhaW5lciBET00gZWxlbWVudCB0aGF0IGNvbnRhaW5zIFJlYWN0IGNvbXBvbmVudCB0byB3aGljaCB0aGVcbiAgICogc3VwcGxpZWQgRE9NIGBpZGAgYmVsb25ncy5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlkIFRoZSBJRCBvZiBhbiBlbGVtZW50IHJlbmRlcmVkIGJ5IGEgUmVhY3QgY29tcG9uZW50LlxuICAgKiBAcmV0dXJuIHs/RE9NRWxlbWVudH0gRE9NIGVsZW1lbnQgdGhhdCBjb250YWlucyB0aGUgYGlkYC5cbiAgICovXG4gIGZpbmRSZWFjdENvbnRhaW5lckZvcklEOiBmdW5jdGlvbihpZCkge1xuICAgIHZhciByZWFjdFJvb3RJRCA9IFJlYWN0SW5zdGFuY2VIYW5kbGVzLmdldFJlYWN0Um9vdElERnJvbU5vZGVJRChpZCk7XG4gICAgdmFyIGNvbnRhaW5lciA9IGNvbnRhaW5lcnNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXTtcblxuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIHZhciByb290RWxlbWVudCA9IHJvb3RFbGVtZW50c0J5UmVhY3RSb290SURbcmVhY3RSb290SURdO1xuICAgICAgaWYgKHJvb3RFbGVtZW50ICYmIHJvb3RFbGVtZW50LnBhcmVudE5vZGUgIT09IGNvbnRhaW5lcikge1xuICAgICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgICAgIC8vIENhbGwgaW50ZXJuYWxHZXRJRCBoZXJlIGJlY2F1c2UgZ2V0SUQgY2FsbHMgaXNWYWxpZCB3aGljaCBjYWxsc1xuICAgICAgICAgIC8vIGZpbmRSZWFjdENvbnRhaW5lckZvcklEICh0aGlzIGZ1bmN0aW9uKS5cbiAgICAgICAgICBpbnRlcm5hbEdldElEKHJvb3RFbGVtZW50KSA9PT0gcmVhY3RSb290SUQsXG4gICAgICAgICAgJ1JlYWN0TW91bnQ6IFJvb3QgZWxlbWVudCBJRCBkaWZmZXJlZCBmcm9tIHJlYWN0Um9vdElELidcbiAgICAgICAgKSA6IGludmFyaWFudCgvLyBDYWxsIGludGVybmFsR2V0SUQgaGVyZSBiZWNhdXNlIGdldElEIGNhbGxzIGlzVmFsaWQgd2hpY2ggY2FsbHNcbiAgICAgICAgLy8gZmluZFJlYWN0Q29udGFpbmVyRm9ySUQgKHRoaXMgZnVuY3Rpb24pLlxuICAgICAgICBpbnRlcm5hbEdldElEKHJvb3RFbGVtZW50KSA9PT0gcmVhY3RSb290SUQpKTtcblxuICAgICAgICB2YXIgY29udGFpbmVyQ2hpbGQgPSBjb250YWluZXIuZmlyc3RDaGlsZDtcbiAgICAgICAgaWYgKGNvbnRhaW5lckNoaWxkICYmXG4gICAgICAgICAgICByZWFjdFJvb3RJRCA9PT0gaW50ZXJuYWxHZXRJRChjb250YWluZXJDaGlsZCkpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgY29udGFpbmVyIGhhcyBhIG5ldyBjaGlsZCB3aXRoIHRoZSBzYW1lIElEIGFzIHRoZSBvbGRcbiAgICAgICAgICAvLyByb290IGVsZW1lbnQsIHRoZW4gcm9vdEVsZW1lbnRzQnlSZWFjdFJvb3RJRFtyZWFjdFJvb3RJRF0gaXNcbiAgICAgICAgICAvLyBqdXN0IHN0YWxlIGFuZCBuZWVkcyB0byBiZSB1cGRhdGVkLiBUaGUgY2FzZSB0aGF0IGRlc2VydmVzIGFcbiAgICAgICAgICAvLyB3YXJuaW5nIGlzIHdoZW4gdGhlIGNvbnRhaW5lciBpcyBlbXB0eS5cbiAgICAgICAgICByb290RWxlbWVudHNCeVJlYWN0Um9vdElEW3JlYWN0Um9vdElEXSA9IGNvbnRhaW5lckNoaWxkO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgICAnUmVhY3RNb3VudDogUm9vdCBlbGVtZW50IGhhcyBiZWVuIHJlbW92ZWQgZnJvbSBpdHMgb3JpZ2luYWwgJyArXG4gICAgICAgICAgICAnY29udGFpbmVyLiBOZXcgY29udGFpbmVyOicsIHJvb3RFbGVtZW50LnBhcmVudE5vZGVcbiAgICAgICAgICApIDogbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29udGFpbmVyO1xuICB9LFxuXG4gIC8qKlxuICAgKiBGaW5kcyBhbiBlbGVtZW50IHJlbmRlcmVkIGJ5IFJlYWN0IHdpdGggdGhlIHN1cHBsaWVkIElELlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWQgSUQgb2YgYSBET00gbm9kZSBpbiB0aGUgUmVhY3QgY29tcG9uZW50LlxuICAgKiBAcmV0dXJuIHtET01FbGVtZW50fSBSb290IERPTSBub2RlIG9mIHRoZSBSZWFjdCBjb21wb25lbnQuXG4gICAqL1xuICBmaW5kUmVhY3ROb2RlQnlJRDogZnVuY3Rpb24oaWQpIHtcbiAgICB2YXIgcmVhY3RSb290ID0gUmVhY3RNb3VudC5maW5kUmVhY3RDb250YWluZXJGb3JJRChpZCk7XG4gICAgcmV0dXJuIFJlYWN0TW91bnQuZmluZENvbXBvbmVudFJvb3QocmVhY3RSb290LCBpZCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFRydWUgaWYgdGhlIHN1cHBsaWVkIGBub2RlYCBpcyByZW5kZXJlZCBieSBSZWFjdC5cbiAgICpcbiAgICogQHBhcmFtIHsqfSBub2RlIERPTSBFbGVtZW50IHRvIGNoZWNrLlxuICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBET00gRWxlbWVudCBhcHBlYXJzIHRvIGJlIHJlbmRlcmVkIGJ5IFJlYWN0LlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGlzUmVuZGVyZWRCeVJlYWN0OiBmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgIT09IDEpIHtcbiAgICAgIC8vIE5vdCBhIERPTUVsZW1lbnQsIHRoZXJlZm9yZSBub3QgYSBSZWFjdCBjb21wb25lbnRcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIGlkID0gUmVhY3RNb3VudC5nZXRJRChub2RlKTtcbiAgICByZXR1cm4gaWQgPyBpZC5jaGFyQXQoMCkgPT09IFNFUEFSQVRPUiA6IGZhbHNlO1xuICB9LFxuXG4gIC8qKlxuICAgKiBUcmF2ZXJzZXMgdXAgdGhlIGFuY2VzdG9ycyBvZiB0aGUgc3VwcGxpZWQgbm9kZSB0byBmaW5kIGEgbm9kZSB0aGF0IGlzIGFcbiAgICogRE9NIHJlcHJlc2VudGF0aW9uIG9mIGEgUmVhY3QgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0geyp9IG5vZGVcbiAgICogQHJldHVybiB7P0RPTUV2ZW50VGFyZ2V0fVxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGdldEZpcnN0UmVhY3RET006IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgY3VycmVudCA9IG5vZGU7XG4gICAgd2hpbGUgKGN1cnJlbnQgJiYgY3VycmVudC5wYXJlbnROb2RlICE9PSBjdXJyZW50KSB7XG4gICAgICBpZiAoUmVhY3RNb3VudC5pc1JlbmRlcmVkQnlSZWFjdChjdXJyZW50KSkge1xuICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgIH1cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBGaW5kcyBhIG5vZGUgd2l0aCB0aGUgc3VwcGxpZWQgYHRhcmdldElEYCBpbnNpZGUgb2YgdGhlIHN1cHBsaWVkXG4gICAqIGBhbmNlc3Rvck5vZGVgLiAgRXhwbG9pdHMgdGhlIElEIG5hbWluZyBzY2hlbWUgdG8gcGVyZm9ybSB0aGUgc2VhcmNoXG4gICAqIHF1aWNrbHkuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRXZlbnRUYXJnZXR9IGFuY2VzdG9yTm9kZSBTZWFyY2ggZnJvbSB0aGlzIHJvb3QuXG4gICAqIEBwYXJhcm0ge3N0cmluZ30gdGFyZ2V0SUQgSUQgb2YgdGhlIERPTSByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29tcG9uZW50LlxuICAgKiBAcmV0dXJuIHtET01FdmVudFRhcmdldH0gRE9NIG5vZGUgd2l0aCB0aGUgc3VwcGxpZWQgYHRhcmdldElEYC5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBmaW5kQ29tcG9uZW50Um9vdDogZnVuY3Rpb24oYW5jZXN0b3JOb2RlLCB0YXJnZXRJRCkge1xuICAgIHZhciBmaXJzdENoaWxkcmVuID0gZmluZENvbXBvbmVudFJvb3RSZXVzYWJsZUFycmF5O1xuICAgIHZhciBjaGlsZEluZGV4ID0gMDtcblxuICAgIHZhciBkZWVwZXN0QW5jZXN0b3IgPSBmaW5kRGVlcGVzdENhY2hlZEFuY2VzdG9yKHRhcmdldElEKSB8fCBhbmNlc3Rvck5vZGU7XG5cbiAgICBmaXJzdENoaWxkcmVuWzBdID0gZGVlcGVzdEFuY2VzdG9yLmZpcnN0Q2hpbGQ7XG4gICAgZmlyc3RDaGlsZHJlbi5sZW5ndGggPSAxO1xuXG4gICAgd2hpbGUgKGNoaWxkSW5kZXggPCBmaXJzdENoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgdmFyIGNoaWxkID0gZmlyc3RDaGlsZHJlbltjaGlsZEluZGV4KytdO1xuICAgICAgdmFyIHRhcmdldENoaWxkO1xuXG4gICAgICB3aGlsZSAoY2hpbGQpIHtcbiAgICAgICAgdmFyIGNoaWxkSUQgPSBSZWFjdE1vdW50LmdldElEKGNoaWxkKTtcbiAgICAgICAgaWYgKGNoaWxkSUQpIHtcbiAgICAgICAgICAvLyBFdmVuIGlmIHdlIGZpbmQgdGhlIG5vZGUgd2UncmUgbG9va2luZyBmb3IsIHdlIGZpbmlzaCBsb29waW5nXG4gICAgICAgICAgLy8gdGhyb3VnaCBpdHMgc2libGluZ3MgdG8gZW5zdXJlIHRoZXkncmUgY2FjaGVkIHNvIHRoYXQgd2UgZG9uJ3QgaGF2ZVxuICAgICAgICAgIC8vIHRvIHJldmlzaXQgdGhpcyBub2RlIGFnYWluLiBPdGhlcndpc2UsIHdlIG1ha2Ugbl4yIGNhbGxzIHRvIGdldElEXG4gICAgICAgICAgLy8gd2hlbiB2aXNpdGluZyB0aGUgbWFueSBjaGlsZHJlbiBvZiBhIHNpbmdsZSBub2RlIGluIG9yZGVyLlxuXG4gICAgICAgICAgaWYgKHRhcmdldElEID09PSBjaGlsZElEKSB7XG4gICAgICAgICAgICB0YXJnZXRDaGlsZCA9IGNoaWxkO1xuICAgICAgICAgIH0gZWxzZSBpZiAoUmVhY3RJbnN0YW5jZUhhbmRsZXMuaXNBbmNlc3RvcklET2YoY2hpbGRJRCwgdGFyZ2V0SUQpKSB7XG4gICAgICAgICAgICAvLyBJZiB3ZSBmaW5kIGEgY2hpbGQgd2hvc2UgSUQgaXMgYW4gYW5jZXN0b3Igb2YgdGhlIGdpdmVuIElELFxuICAgICAgICAgICAgLy8gdGhlbiB3ZSBjYW4gYmUgc3VyZSB0aGF0IHdlIG9ubHkgd2FudCB0byBzZWFyY2ggdGhlIHN1YnRyZWVcbiAgICAgICAgICAgIC8vIHJvb3RlZCBhdCB0aGlzIGNoaWxkLCBzbyB3ZSBjYW4gdGhyb3cgb3V0IHRoZSByZXN0IG9mIHRoZVxuICAgICAgICAgICAgLy8gc2VhcmNoIHN0YXRlLlxuICAgICAgICAgICAgZmlyc3RDaGlsZHJlbi5sZW5ndGggPSBjaGlsZEluZGV4ID0gMDtcbiAgICAgICAgICAgIGZpcnN0Q2hpbGRyZW4ucHVzaChjaGlsZC5maXJzdENoaWxkKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGNoaWxkIGhhZCBubyBJRCwgdGhlbiB0aGVyZSdzIGEgY2hhbmNlIHRoYXQgaXQgd2FzXG4gICAgICAgICAgLy8gaW5qZWN0ZWQgYXV0b21hdGljYWxseSBieSB0aGUgYnJvd3NlciwgYXMgd2hlbiBhIGA8dGFibGU+YFxuICAgICAgICAgIC8vIGVsZW1lbnQgc3Byb3V0cyBhbiBleHRyYSBgPHRib2R5PmAgY2hpbGQgYXMgYSBzaWRlIGVmZmVjdCBvZlxuICAgICAgICAgIC8vIGAuaW5uZXJIVE1MYCBwYXJzaW5nLiBPcHRpbWlzdGljYWxseSBjb250aW51ZSBkb3duIHRoaXNcbiAgICAgICAgICAvLyBicmFuY2gsIGJ1dCBub3QgYmVmb3JlIGV4YW1pbmluZyB0aGUgb3RoZXIgc2libGluZ3MuXG4gICAgICAgICAgZmlyc3RDaGlsZHJlbi5wdXNoKGNoaWxkLmZpcnN0Q2hpbGQpO1xuICAgICAgICB9XG5cbiAgICAgICAgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZztcbiAgICAgIH1cblxuICAgICAgaWYgKHRhcmdldENoaWxkKSB7XG4gICAgICAgIC8vIEVtcHR5aW5nIGZpcnN0Q2hpbGRyZW4vZmluZENvbXBvbmVudFJvb3RSZXVzYWJsZUFycmF5IGlzXG4gICAgICAgIC8vIG5vdCBuZWNlc3NhcnkgZm9yIGNvcnJlY3RuZXNzLCBidXQgaXQgaGVscHMgdGhlIEdDIHJlY2xhaW1cbiAgICAgICAgLy8gYW55IG5vZGVzIHRoYXQgd2VyZSBsZWZ0IGF0IHRoZSBlbmQgb2YgdGhlIHNlYXJjaC5cbiAgICAgICAgZmlyc3RDaGlsZHJlbi5sZW5ndGggPSAwO1xuXG4gICAgICAgIHJldHVybiB0YXJnZXRDaGlsZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmaXJzdENoaWxkcmVuLmxlbmd0aCA9IDA7XG5cbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnZmluZENvbXBvbmVudFJvb3QoLi4uLCAlcyk6IFVuYWJsZSB0byBmaW5kIGVsZW1lbnQuIFRoaXMgcHJvYmFibHkgJyArXG4gICAgICAnbWVhbnMgdGhlIERPTSB3YXMgdW5leHBlY3RlZGx5IG11dGF0ZWQgKGUuZy4sIGJ5IHRoZSBicm93c2VyKSwgJyArXG4gICAgICAndXN1YWxseSBkdWUgdG8gZm9yZ2V0dGluZyBhIDx0Ym9keT4gd2hlbiB1c2luZyB0YWJsZXMsIG5lc3RpbmcgdGFncyAnICtcbiAgICAgICdsaWtlIDxmb3JtPiwgPHA+LCBvciA8YT4sIG9yIHVzaW5nIG5vbi1TVkcgZWxlbWVudHMgaW4gYW4gPHN2Zz4gJyArXG4gICAgICAncGFyZW50LiAnICtcbiAgICAgICdUcnkgaW5zcGVjdGluZyB0aGUgY2hpbGQgbm9kZXMgb2YgdGhlIGVsZW1lbnQgd2l0aCBSZWFjdCBJRCBgJXNgLicsXG4gICAgICB0YXJnZXRJRCxcbiAgICAgIFJlYWN0TW91bnQuZ2V0SUQoYW5jZXN0b3JOb2RlKVxuICAgICkgOiBpbnZhcmlhbnQoZmFsc2UpKTtcbiAgfSxcblxuICBfbW91bnRJbWFnZUludG9Ob2RlOiBmdW5jdGlvbihtYXJrdXAsIGNvbnRhaW5lciwgc2hvdWxkUmV1c2VNYXJrdXApIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgY29udGFpbmVyICYmIChcbiAgICAgICAgKGNvbnRhaW5lci5ub2RlVHlwZSA9PT0gRUxFTUVOVF9OT0RFX1RZUEUgfHwgY29udGFpbmVyLm5vZGVUeXBlID09PSBET0NfTk9ERV9UWVBFKVxuICAgICAgKSxcbiAgICAgICdtb3VudENvbXBvbmVudEludG9Ob2RlKC4uLik6IFRhcmdldCBjb250YWluZXIgaXMgbm90IHZhbGlkLidcbiAgICApIDogaW52YXJpYW50KGNvbnRhaW5lciAmJiAoXG4gICAgICAoY29udGFpbmVyLm5vZGVUeXBlID09PSBFTEVNRU5UX05PREVfVFlQRSB8fCBjb250YWluZXIubm9kZVR5cGUgPT09IERPQ19OT0RFX1RZUEUpXG4gICAgKSkpO1xuXG4gICAgaWYgKHNob3VsZFJldXNlTWFya3VwKSB7XG4gICAgICB2YXIgcm9vdEVsZW1lbnQgPSBnZXRSZWFjdFJvb3RFbGVtZW50SW5Db250YWluZXIoY29udGFpbmVyKTtcbiAgICAgIGlmIChSZWFjdE1hcmt1cENoZWNrc3VtLmNhblJldXNlTWFya3VwKG1hcmt1cCwgcm9vdEVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBjaGVja3N1bSA9IHJvb3RFbGVtZW50LmdldEF0dHJpYnV0ZShcbiAgICAgICAgICBSZWFjdE1hcmt1cENoZWNrc3VtLkNIRUNLU1VNX0FUVFJfTkFNRVxuICAgICAgICApO1xuICAgICAgICByb290RWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoUmVhY3RNYXJrdXBDaGVja3N1bS5DSEVDS1NVTV9BVFRSX05BTUUpO1xuXG4gICAgICAgIHZhciByb290TWFya3VwID0gcm9vdEVsZW1lbnQub3V0ZXJIVE1MO1xuICAgICAgICByb290RWxlbWVudC5zZXRBdHRyaWJ1dGUoXG4gICAgICAgICAgUmVhY3RNYXJrdXBDaGVja3N1bS5DSEVDS1NVTV9BVFRSX05BTUUsXG4gICAgICAgICAgY2hlY2tzdW1cbiAgICAgICAgKTtcblxuICAgICAgICB2YXIgZGlmZkluZGV4ID0gZmlyc3REaWZmZXJlbmNlSW5kZXgobWFya3VwLCByb290TWFya3VwKTtcbiAgICAgICAgdmFyIGRpZmZlcmVuY2UgPSAnIChjbGllbnQpICcgK1xuICAgICAgICAgIG1hcmt1cC5zdWJzdHJpbmcoZGlmZkluZGV4IC0gMjAsIGRpZmZJbmRleCArIDIwKSArXG4gICAgICAgICAgJ1xcbiAoc2VydmVyKSAnICsgcm9vdE1hcmt1cC5zdWJzdHJpbmcoZGlmZkluZGV4IC0gMjAsIGRpZmZJbmRleCArIDIwKTtcblxuICAgICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgICAgIGNvbnRhaW5lci5ub2RlVHlwZSAhPT0gRE9DX05PREVfVFlQRSxcbiAgICAgICAgICAnWW91XFwncmUgdHJ5aW5nIHRvIHJlbmRlciBhIGNvbXBvbmVudCB0byB0aGUgZG9jdW1lbnQgdXNpbmcgJyArXG4gICAgICAgICAgJ3NlcnZlciByZW5kZXJpbmcgYnV0IHRoZSBjaGVja3N1bSB3YXMgaW52YWxpZC4gVGhpcyB1c3VhbGx5ICcgK1xuICAgICAgICAgICdtZWFucyB5b3UgcmVuZGVyZWQgYSBkaWZmZXJlbnQgY29tcG9uZW50IHR5cGUgb3IgcHJvcHMgb24gJyArXG4gICAgICAgICAgJ3RoZSBjbGllbnQgZnJvbSB0aGUgb25lIG9uIHRoZSBzZXJ2ZXIsIG9yIHlvdXIgcmVuZGVyKCkgJyArXG4gICAgICAgICAgJ21ldGhvZHMgYXJlIGltcHVyZS4gUmVhY3QgY2Fubm90IGhhbmRsZSB0aGlzIGNhc2UgZHVlIHRvICcgK1xuICAgICAgICAgICdjcm9zcy1icm93c2VyIHF1aXJrcyBieSByZW5kZXJpbmcgYXQgdGhlIGRvY3VtZW50IHJvb3QuIFlvdSAnICtcbiAgICAgICAgICAnc2hvdWxkIGxvb2sgZm9yIGVudmlyb25tZW50IGRlcGVuZGVudCBjb2RlIGluIHlvdXIgY29tcG9uZW50cyAnICtcbiAgICAgICAgICAnYW5kIGVuc3VyZSB0aGUgcHJvcHMgYXJlIHRoZSBzYW1lIGNsaWVudCBhbmQgc2VydmVyIHNpZGU6XFxuJXMnLFxuICAgICAgICAgIGRpZmZlcmVuY2VcbiAgICAgICAgKSA6IGludmFyaWFudChjb250YWluZXIubm9kZVR5cGUgIT09IERPQ19OT0RFX1RZUEUpKTtcblxuICAgICAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICdSZWFjdCBhdHRlbXB0ZWQgdG8gcmV1c2UgbWFya3VwIGluIGEgY29udGFpbmVyIGJ1dCB0aGUgJyArXG4gICAgICAgICAgICAnY2hlY2tzdW0gd2FzIGludmFsaWQuIFRoaXMgZ2VuZXJhbGx5IG1lYW5zIHRoYXQgeW91IGFyZSAnICtcbiAgICAgICAgICAgICd1c2luZyBzZXJ2ZXIgcmVuZGVyaW5nIGFuZCB0aGUgbWFya3VwIGdlbmVyYXRlZCBvbiB0aGUgJyArXG4gICAgICAgICAgICAnc2VydmVyIHdhcyBub3Qgd2hhdCB0aGUgY2xpZW50IHdhcyBleHBlY3RpbmcuIFJlYWN0IGluamVjdGVkICcgK1xuICAgICAgICAgICAgJ25ldyBtYXJrdXAgdG8gY29tcGVuc2F0ZSB3aGljaCB3b3JrcyBidXQgeW91IGhhdmUgbG9zdCBtYW55ICcgK1xuICAgICAgICAgICAgJ29mIHRoZSBiZW5lZml0cyBvZiBzZXJ2ZXIgcmVuZGVyaW5nLiBJbnN0ZWFkLCBmaWd1cmUgb3V0ICcgK1xuICAgICAgICAgICAgJ3doeSB0aGUgbWFya3VwIGJlaW5nIGdlbmVyYXRlZCBpcyBkaWZmZXJlbnQgb24gdGhlIGNsaWVudCAnICtcbiAgICAgICAgICAgICdvciBzZXJ2ZXI6XFxuJXMnLFxuICAgICAgICAgICAgZGlmZmVyZW5jZVxuICAgICAgICAgICkgOiBudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICBjb250YWluZXIubm9kZVR5cGUgIT09IERPQ19OT0RFX1RZUEUsXG4gICAgICAnWW91XFwncmUgdHJ5aW5nIHRvIHJlbmRlciBhIGNvbXBvbmVudCB0byB0aGUgZG9jdW1lbnQgYnV0ICcgK1xuICAgICAgICAneW91IGRpZG5cXCd0IHVzZSBzZXJ2ZXIgcmVuZGVyaW5nLiBXZSBjYW5cXCd0IGRvIHRoaXMgJyArXG4gICAgICAgICd3aXRob3V0IHVzaW5nIHNlcnZlciByZW5kZXJpbmcgZHVlIHRvIGNyb3NzLWJyb3dzZXIgcXVpcmtzLiAnICtcbiAgICAgICAgJ1NlZSBSZWFjdC5yZW5kZXJUb1N0cmluZygpIGZvciBzZXJ2ZXIgcmVuZGVyaW5nLidcbiAgICApIDogaW52YXJpYW50KGNvbnRhaW5lci5ub2RlVHlwZSAhPT0gRE9DX05PREVfVFlQRSkpO1xuXG4gICAgc2V0SW5uZXJIVE1MKGNvbnRhaW5lciwgbWFya3VwKTtcbiAgfSxcblxuICAvKipcbiAgICogUmVhY3QgSUQgdXRpbGl0aWVzLlxuICAgKi9cblxuICBnZXRSZWFjdFJvb3RJRDogZ2V0UmVhY3RSb290SUQsXG5cbiAgZ2V0SUQ6IGdldElELFxuXG4gIHNldElEOiBzZXRJRCxcblxuICBnZXROb2RlOiBnZXROb2RlLFxuXG4gIGdldE5vZGVGcm9tSW5zdGFuY2U6IGdldE5vZGVGcm9tSW5zdGFuY2UsXG5cbiAgcHVyZ2VJRDogcHVyZ2VJRFxufTtcblxuUmVhY3RQZXJmLm1lYXN1cmVNZXRob2RzKFJlYWN0TW91bnQsICdSZWFjdE1vdW50Jywge1xuICBfcmVuZGVyTmV3Um9vdENvbXBvbmVudDogJ19yZW5kZXJOZXdSb290Q29tcG9uZW50JyxcbiAgX21vdW50SW1hZ2VJbnRvTm9kZTogJ19tb3VudEltYWdlSW50b05vZGUnXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE1vdW50O1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactElementValidator":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactUpdateQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js","./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./emptyObject":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./getReactRootElementInContainer":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getReactRootElementInContainer.js","./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js","./ReactEmptyComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./setInnerHTML":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js","./shouldUpdateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js","./ReactMarkupChecksum":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./containsNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js","./instantiateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactMount.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChild.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChild.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require(\"./ReactComponentEnvironment\");\nvar ReactMultiChildUpdateTypes = require(\"./ReactMultiChildUpdateTypes\");\n\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar ReactChildReconciler = require(\"./ReactChildReconciler\");\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    textContent: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    textContent: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    textContent: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(\n      updateQueue,\n      markupQueue\n    );\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function(nestedChildren, transaction, context) {\n      var children = ReactChildReconciler.instantiateChildren(\n        nestedChildren, transaction, context\n      );\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(\n            child,\n            rootID,\n            transaction,\n            context\n          );\n          child._mountIndex = index;\n          mountImages.push(mountImage);\n          index++;\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function(nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function(nextNestedChildren, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildren, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildren Nested child maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function(nextNestedChildren, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = ReactChildReconciler.updateChildren(\n        prevChildren, nextNestedChildren, transaction, context\n      );\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChildByName(prevChild, name);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(\n            nextChild, name, nextIndex, transaction, context\n          );\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) &&\n            !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChildByName(prevChildren[name], name);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function() {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function(child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function(child, mountImage) {\n      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function(child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function(textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function(\n      child,\n      name,\n      index,\n      transaction,\n      context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(\n        child,\n        rootID,\n        transaction,\n        context\n      );\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child by name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @param {string} name Name of the child in `this._renderedChildren`.\n     * @private\n     */\n    _unmountChildByName: function(child, name) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n","deps":{"./ReactComponentEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js","./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./ReactMultiChildUpdateTypes":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js","./ReactChildReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildReconciler.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChild.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactMultiChild.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n","deps":{"./keyMirror":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactMultiChildUpdateTypes.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function(componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function(componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function(componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  },\n  // Temporary hack since we expect DOM refs to behave like composites,\n  // for this release.\n  injectAutoWrapper: function(wrapperFactory) {\n    autoGenerateWrapperClass = wrapperFactory;\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    genericComponentClass,\n    'There is no registered component for the tag %s',\n    element.type\n  ) : invariant(genericComponentClass));\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3ROYXRpdmVDb21wb25lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdE5hdGl2ZUNvbXBvbmVudFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGFzc2lnbiA9IHJlcXVpcmUoXCIuL09iamVjdC5hc3NpZ25cIik7XG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG52YXIgYXV0b0dlbmVyYXRlV3JhcHBlckNsYXNzID0gbnVsbDtcbnZhciBnZW5lcmljQ29tcG9uZW50Q2xhc3MgPSBudWxsO1xuLy8gVGhpcyByZWdpc3RyeSBrZWVwcyB0cmFjayBvZiB3cmFwcGVyIGNsYXNzZXMgYXJvdW5kIG5hdGl2ZSB0YWdzXG52YXIgdGFnVG9Db21wb25lbnRDbGFzcyA9IHt9O1xudmFyIHRleHRDb21wb25lbnRDbGFzcyA9IG51bGw7XG5cbnZhciBSZWFjdE5hdGl2ZUNvbXBvbmVudEluamVjdGlvbiA9IHtcbiAgLy8gVGhpcyBhY2NlcHRzIGEgY2xhc3MgdGhhdCByZWNlaXZlcyB0aGUgdGFnIHN0cmluZy4gVGhpcyBpcyBhIGNhdGNoIGFsbFxuICAvLyB0aGF0IGNhbiByZW5kZXIgYW55IGtpbmQgb2YgdGFnLlxuICBpbmplY3RHZW5lcmljQ29tcG9uZW50Q2xhc3M6IGZ1bmN0aW9uKGNvbXBvbmVudENsYXNzKSB7XG4gICAgZ2VuZXJpY0NvbXBvbmVudENsYXNzID0gY29tcG9uZW50Q2xhc3M7XG4gIH0sXG4gIC8vIFRoaXMgYWNjZXB0cyBhIHRleHQgY29tcG9uZW50IGNsYXNzIHRoYXQgdGFrZXMgdGhlIHRleHQgc3RyaW5nIHRvIGJlXG4gIC8vIHJlbmRlcmVkIGFzIHByb3BzLlxuICBpbmplY3RUZXh0Q29tcG9uZW50Q2xhc3M6IGZ1bmN0aW9uKGNvbXBvbmVudENsYXNzKSB7XG4gICAgdGV4dENvbXBvbmVudENsYXNzID0gY29tcG9uZW50Q2xhc3M7XG4gIH0sXG4gIC8vIFRoaXMgYWNjZXB0cyBhIGtleWVkIG9iamVjdCB3aXRoIGNsYXNzZXMgYXMgdmFsdWVzLiBFYWNoIGtleSByZXByZXNlbnRzIGFcbiAgLy8gdGFnLiBUaGF0IHBhcnRpY3VsYXIgdGFnIHdpbGwgdXNlIHRoaXMgY2xhc3MgaW5zdGVhZCBvZiB0aGUgZ2VuZXJpYyBvbmUuXG4gIGluamVjdENvbXBvbmVudENsYXNzZXM6IGZ1bmN0aW9uKGNvbXBvbmVudENsYXNzZXMpIHtcbiAgICBhc3NpZ24odGFnVG9Db21wb25lbnRDbGFzcywgY29tcG9uZW50Q2xhc3Nlcyk7XG4gIH0sXG4gIC8vIFRlbXBvcmFyeSBoYWNrIHNpbmNlIHdlIGV4cGVjdCBET00gcmVmcyB0byBiZWhhdmUgbGlrZSBjb21wb3NpdGVzLFxuICAvLyBmb3IgdGhpcyByZWxlYXNlLlxuICBpbmplY3RBdXRvV3JhcHBlcjogZnVuY3Rpb24od3JhcHBlckZhY3RvcnkpIHtcbiAgICBhdXRvR2VuZXJhdGVXcmFwcGVyQ2xhc3MgPSB3cmFwcGVyRmFjdG9yeTtcbiAgfVxufTtcblxuLyoqXG4gKiBHZXQgYSBjb21wb3NpdGUgY29tcG9uZW50IHdyYXBwZXIgY2xhc3MgZm9yIGEgc3BlY2lmaWMgdGFnLlxuICpcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50IFRoZSB0YWcgZm9yIHdoaWNoIHRvIGdldCB0aGUgY2xhc3MuXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn0gVGhlIFJlYWN0IGNsYXNzIGNvbnN0cnVjdG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBnZXRDb21wb25lbnRDbGFzc0ZvckVsZW1lbnQoZWxlbWVudCkge1xuICBpZiAodHlwZW9mIGVsZW1lbnQudHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBlbGVtZW50LnR5cGU7XG4gIH1cbiAgdmFyIHRhZyA9IGVsZW1lbnQudHlwZTtcbiAgdmFyIGNvbXBvbmVudENsYXNzID0gdGFnVG9Db21wb25lbnRDbGFzc1t0YWddO1xuICBpZiAoY29tcG9uZW50Q2xhc3MgPT0gbnVsbCkge1xuICAgIHRhZ1RvQ29tcG9uZW50Q2xhc3NbdGFnXSA9IGNvbXBvbmVudENsYXNzID0gYXV0b0dlbmVyYXRlV3JhcHBlckNsYXNzKHRhZyk7XG4gIH1cbiAgcmV0dXJuIGNvbXBvbmVudENsYXNzO1xufVxuXG4vKipcbiAqIEdldCBhIG5hdGl2ZSBpbnRlcm5hbCBjb21wb25lbnQgY2xhc3MgZm9yIGEgc3BlY2lmaWMgdGFnLlxuICpcbiAqIEBwYXJhbSB7UmVhY3RFbGVtZW50fSBlbGVtZW50IFRoZSBlbGVtZW50IHRvIGNyZWF0ZS5cbiAqIEByZXR1cm4ge2Z1bmN0aW9ufSBUaGUgaW50ZXJuYWwgY2xhc3MgY29uc3RydWN0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUludGVybmFsQ29tcG9uZW50KGVsZW1lbnQpIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBnZW5lcmljQ29tcG9uZW50Q2xhc3MsXG4gICAgJ1RoZXJlIGlzIG5vIHJlZ2lzdGVyZWQgY29tcG9uZW50IGZvciB0aGUgdGFnICVzJyxcbiAgICBlbGVtZW50LnR5cGVcbiAgKSA6IGludmFyaWFudChnZW5lcmljQ29tcG9uZW50Q2xhc3MpKTtcbiAgcmV0dXJuIG5ldyBnZW5lcmljQ29tcG9uZW50Q2xhc3MoZWxlbWVudC50eXBlLCBlbGVtZW50LnByb3BzKTtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1JlYWN0VGV4dH0gdGV4dFxuICogQHJldHVybiB7UmVhY3RDb21wb25lbnR9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlRm9yVGV4dCh0ZXh0KSB7XG4gIHJldHVybiBuZXcgdGV4dENvbXBvbmVudENsYXNzKHRleHQpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7UmVhY3RDb21wb25lbnR9IGNvbXBvbmVudFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNUZXh0Q29tcG9uZW50KGNvbXBvbmVudCkge1xuICByZXR1cm4gY29tcG9uZW50IGluc3RhbmNlb2YgdGV4dENvbXBvbmVudENsYXNzO1xufVxuXG52YXIgUmVhY3ROYXRpdmVDb21wb25lbnQgPSB7XG4gIGdldENvbXBvbmVudENsYXNzRm9yRWxlbWVudDogZ2V0Q29tcG9uZW50Q2xhc3NGb3JFbGVtZW50LFxuICBjcmVhdGVJbnRlcm5hbENvbXBvbmVudDogY3JlYXRlSW50ZXJuYWxDb21wb25lbnQsXG4gIGNyZWF0ZUluc3RhbmNlRm9yVGV4dDogY3JlYXRlSW5zdGFuY2VGb3JUZXh0LFxuICBpc1RleHRDb21wb25lbnQ6IGlzVGV4dENvbXBvbmVudCxcbiAgaW5qZWN0aW9uOiBSZWFjdE5hdGl2ZUNvbXBvbmVudEluamVjdGlvblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE5hdGl2ZUNvbXBvbmVudDtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactNativeComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactOwner.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactOwner.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function(object) {\n    return !!(\n      (object &&\n      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')\n    );\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to add a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function(component, ref, owner) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReactOwner.isValidOwner(owner),\n      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n      'usually means that you\\'re trying to remove a ref to a component that ' +\n      'doesn\\'t have an owner (that is, was not created inside of another ' +\n      'component\\'s `render` method). Try rendering this component inside of ' +\n      'a new top-level component which will hold the ref.'\n    ) : invariant(ReactOwner.isValidOwner(owner)));\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RPd25lci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBSZWFjdE93bmVyXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG4vKipcbiAqIFJlYWN0T3duZXJzIGFyZSBjYXBhYmxlIG9mIHN0b3JpbmcgcmVmZXJlbmNlcyB0byBvd25lZCBjb21wb25lbnRzLlxuICpcbiAqIEFsbCBjb21wb25lbnRzIGFyZSBjYXBhYmxlIG9mIC8vYmVpbmcvLyByZWZlcmVuY2VkIGJ5IG93bmVyIGNvbXBvbmVudHMsIGJ1dFxuICogb25seSBSZWFjdE93bmVyIGNvbXBvbmVudHMgYXJlIGNhcGFibGUgb2YgLy9yZWZlcmVuY2luZy8vIG93bmVkIGNvbXBvbmVudHMuXG4gKiBUaGUgbmFtZWQgcmVmZXJlbmNlIGlzIGtub3duIGFzIGEgXCJyZWZcIi5cbiAqXG4gKiBSZWZzIGFyZSBhdmFpbGFibGUgd2hlbiBtb3VudGVkIGFuZCB1cGRhdGVkIGR1cmluZyByZWNvbmNpbGlhdGlvbi5cbiAqXG4gKiAgIHZhciBNeUNvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAqICAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICogICAgICAgcmV0dXJuIChcbiAqICAgICAgICAgPGRpdiBvbkNsaWNrPXt0aGlzLmhhbmRsZUNsaWNrfT5cbiAqICAgICAgICAgICA8Q3VzdG9tQ29tcG9uZW50IHJlZj1cImN1c3RvbVwiIC8+XG4gKiAgICAgICAgIDwvZGl2PlxuICogICAgICAgKTtcbiAqICAgICB9LFxuICogICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbigpIHtcbiAqICAgICAgIHRoaXMucmVmcy5jdXN0b20uaGFuZGxlQ2xpY2soKTtcbiAqICAgICB9LFxuICogICAgIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAqICAgICAgIHRoaXMucmVmcy5jdXN0b20uaW5pdGlhbGl6ZSgpO1xuICogICAgIH1cbiAqICAgfSk7XG4gKlxuICogUmVmcyBzaG91bGQgcmFyZWx5IGJlIHVzZWQuIFdoZW4gcmVmcyBhcmUgdXNlZCwgdGhleSBzaG91bGQgb25seSBiZSBkb25lIHRvXG4gKiBjb250cm9sIGRhdGEgdGhhdCBpcyBub3QgaGFuZGxlZCBieSBSZWFjdCdzIGRhdGEgZmxvdy5cbiAqXG4gKiBAY2xhc3MgUmVhY3RPd25lclxuICovXG52YXIgUmVhY3RPd25lciA9IHtcblxuICAvKipcbiAgICogQHBhcmFtIHs/b2JqZWN0fSBvYmplY3RcbiAgICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiBgb2JqZWN0YCBpcyBhIHZhbGlkIG93bmVyLlxuICAgKiBAZmluYWxcbiAgICovXG4gIGlzVmFsaWRPd25lcjogZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuICEhKFxuICAgICAgKG9iamVjdCAmJlxuICAgICAgdHlwZW9mIG9iamVjdC5hdHRhY2hSZWYgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iamVjdC5kZXRhY2hSZWYgPT09ICdmdW5jdGlvbicpXG4gICAgKTtcbiAgfSxcblxuICAvKipcbiAgICogQWRkcyBhIGNvbXBvbmVudCBieSByZWYgdG8gYW4gb3duZXIgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBjb21wb25lbnQgQ29tcG9uZW50IHRvIHJlZmVyZW5jZS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHJlZiBOYW1lIGJ5IHdoaWNoIHRvIHJlZmVyIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIEBwYXJhbSB7UmVhY3RPd25lcn0gb3duZXIgQ29tcG9uZW50IG9uIHdoaWNoIHRvIHJlY29yZCB0aGUgcmVmLlxuICAgKiBAZmluYWxcbiAgICogQGludGVybmFsXG4gICAqL1xuICBhZGRDb21wb25lbnRBc1JlZlRvOiBmdW5jdGlvbihjb21wb25lbnQsIHJlZiwgb3duZXIpIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgUmVhY3RPd25lci5pc1ZhbGlkT3duZXIob3duZXIpLFxuICAgICAgJ2FkZENvbXBvbmVudEFzUmVmVG8oLi4uKTogT25seSBhIFJlYWN0T3duZXIgY2FuIGhhdmUgcmVmcy4gVGhpcyAnICtcbiAgICAgICd1c3VhbGx5IG1lYW5zIHRoYXQgeW91XFwncmUgdHJ5aW5nIHRvIGFkZCBhIHJlZiB0byBhIGNvbXBvbmVudCB0aGF0ICcgK1xuICAgICAgJ2RvZXNuXFwndCBoYXZlIGFuIG93bmVyICh0aGF0IGlzLCB3YXMgbm90IGNyZWF0ZWQgaW5zaWRlIG9mIGFub3RoZXIgJyArXG4gICAgICAnY29tcG9uZW50XFwncyBgcmVuZGVyYCBtZXRob2QpLiBUcnkgcmVuZGVyaW5nIHRoaXMgY29tcG9uZW50IGluc2lkZSBvZiAnICtcbiAgICAgICdhIG5ldyB0b3AtbGV2ZWwgY29tcG9uZW50IHdoaWNoIHdpbGwgaG9sZCB0aGUgcmVmLidcbiAgICApIDogaW52YXJpYW50KFJlYWN0T3duZXIuaXNWYWxpZE93bmVyKG93bmVyKSkpO1xuICAgIG93bmVyLmF0dGFjaFJlZihyZWYsIGNvbXBvbmVudCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYSBjb21wb25lbnQgYnkgcmVmIGZyb20gYW4gb3duZXIgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBjb21wb25lbnQgQ29tcG9uZW50IHRvIGRlcmVmZXJlbmNlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVmIE5hbWUgb2YgdGhlIHJlZiB0byByZW1vdmUuXG4gICAqIEBwYXJhbSB7UmVhY3RPd25lcn0gb3duZXIgQ29tcG9uZW50IG9uIHdoaWNoIHRoZSByZWYgaXMgcmVjb3JkZWQuXG4gICAqIEBmaW5hbFxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHJlbW92ZUNvbXBvbmVudEFzUmVmRnJvbTogZnVuY3Rpb24oY29tcG9uZW50LCByZWYsIG93bmVyKSB7XG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgIFJlYWN0T3duZXIuaXNWYWxpZE93bmVyKG93bmVyKSxcbiAgICAgICdyZW1vdmVDb21wb25lbnRBc1JlZkZyb20oLi4uKTogT25seSBhIFJlYWN0T3duZXIgY2FuIGhhdmUgcmVmcy4gVGhpcyAnICtcbiAgICAgICd1c3VhbGx5IG1lYW5zIHRoYXQgeW91XFwncmUgdHJ5aW5nIHRvIHJlbW92ZSBhIHJlZiB0byBhIGNvbXBvbmVudCB0aGF0ICcgK1xuICAgICAgJ2RvZXNuXFwndCBoYXZlIGFuIG93bmVyICh0aGF0IGlzLCB3YXMgbm90IGNyZWF0ZWQgaW5zaWRlIG9mIGFub3RoZXIgJyArXG4gICAgICAnY29tcG9uZW50XFwncyBgcmVuZGVyYCBtZXRob2QpLiBUcnkgcmVuZGVyaW5nIHRoaXMgY29tcG9uZW50IGluc2lkZSBvZiAnICtcbiAgICAgICdhIG5ldyB0b3AtbGV2ZWwgY29tcG9uZW50IHdoaWNoIHdpbGwgaG9sZCB0aGUgcmVmLidcbiAgICApIDogaW52YXJpYW50KFJlYWN0T3duZXIuaXNWYWxpZE93bmVyKG93bmVyKSkpO1xuICAgIC8vIENoZWNrIHRoYXQgYGNvbXBvbmVudGAgaXMgc3RpbGwgdGhlIGN1cnJlbnQgcmVmIGJlY2F1c2Ugd2UgZG8gbm90IHdhbnQgdG9cbiAgICAvLyBkZXRhY2ggdGhlIHJlZiBpZiBhbm90aGVyIGNvbXBvbmVudCBzdG9sZSBpdC5cbiAgICBpZiAob3duZXIuZ2V0UHVibGljSW5zdGFuY2UoKS5yZWZzW3JlZl0gPT09IGNvbXBvbmVudC5nZXRQdWJsaWNJbnN0YW5jZSgpKSB7XG4gICAgICBvd25lci5kZXRhY2hSZWYocmVmKTtcbiAgICB9XG4gIH1cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdE93bmVyO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactOwner.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactOwner.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function(object, objectName, methodNames) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(\n          objectName,\n          methodNames[key],\n          object[key]\n        );\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      var measuredFunc = null;\n      var wrapper = function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RQZXJmLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RQZXJmXG4gKiBAdHlwZWNoZWNrcyBzdGF0aWMtb25seVxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBSZWFjdFBlcmYgaXMgYSBnZW5lcmFsIEFPUCBzeXN0ZW0gZGVzaWduZWQgdG8gbWVhc3VyZSBwZXJmb3JtYW5jZS4gVGhpc1xuICogbW9kdWxlIG9ubHkgaGFzIHRoZSBob29rczogc2VlIFJlYWN0RGVmYXVsdFBlcmYgZm9yIHRoZSBhbmFseXNpcyB0b29sLlxuICovXG52YXIgUmVhY3RQZXJmID0ge1xuICAvKipcbiAgICogQm9vbGVhbiB0byBlbmFibGUvZGlzYWJsZSBtZWFzdXJlbWVudC4gU2V0IHRvIGZhbHNlIGJ5IGRlZmF1bHQgdG8gcHJldmVudFxuICAgKiBhY2NpZGVudGFsIGxvZ2dpbmcgYW5kIHBlcmYgbG9zcy5cbiAgICovXG4gIGVuYWJsZU1lYXN1cmU6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiBIb2xkcyBvbnRvIHRoZSBtZWFzdXJlIGZ1bmN0aW9uIGluIHVzZS4gQnkgZGVmYXVsdCwgZG9uJ3QgbWVhc3VyZVxuICAgKiBhbnl0aGluZywgYnV0IHdlJ2xsIG92ZXJyaWRlIHRoaXMgaWYgd2UgaW5qZWN0IGEgbWVhc3VyZSBmdW5jdGlvbi5cbiAgICovXG4gIHN0b3JlZE1lYXN1cmU6IF9ub01lYXN1cmUsXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvYmplY3RcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9iamVjdE5hbWVcbiAgICogQHBhcmFtIHtvYmplY3Q8c3RyaW5nPn0gbWV0aG9kTmFtZXNcbiAgICovXG4gIG1lYXN1cmVNZXRob2RzOiBmdW5jdGlvbihvYmplY3QsIG9iamVjdE5hbWUsIG1ldGhvZE5hbWVzKSB7XG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgZm9yICh2YXIga2V5IGluIG1ldGhvZE5hbWVzKSB7XG4gICAgICAgIGlmICghbWV0aG9kTmFtZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIG9iamVjdFtrZXldID0gUmVhY3RQZXJmLm1lYXN1cmUoXG4gICAgICAgICAgb2JqZWN0TmFtZSxcbiAgICAgICAgICBtZXRob2ROYW1lc1trZXldLFxuICAgICAgICAgIG9iamVjdFtrZXldXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBVc2UgdGhpcyB0byB3cmFwIG1ldGhvZHMgeW91IHdhbnQgdG8gbWVhc3VyZS4gWmVybyBvdmVyaGVhZCBpbiBwcm9kdWN0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb2JqTmFtZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZm5OYW1lXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGZ1bmNcbiAgICogQHJldHVybiB7ZnVuY3Rpb259XG4gICAqL1xuICBtZWFzdXJlOiBmdW5jdGlvbihvYmpOYW1lLCBmbk5hbWUsIGZ1bmMpIHtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICB2YXIgbWVhc3VyZWRGdW5jID0gbnVsbDtcbiAgICAgIHZhciB3cmFwcGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChSZWFjdFBlcmYuZW5hYmxlTWVhc3VyZSkge1xuICAgICAgICAgIGlmICghbWVhc3VyZWRGdW5jKSB7XG4gICAgICAgICAgICBtZWFzdXJlZEZ1bmMgPSBSZWFjdFBlcmYuc3RvcmVkTWVhc3VyZShvYmpOYW1lLCBmbk5hbWUsIGZ1bmMpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbWVhc3VyZWRGdW5jLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgICB3cmFwcGVyLmRpc3BsYXlOYW1lID0gb2JqTmFtZSArICdfJyArIGZuTmFtZTtcbiAgICAgIHJldHVybiB3cmFwcGVyO1xuICAgIH1cbiAgICByZXR1cm4gZnVuYztcbiAgfSxcblxuICBpbmplY3Rpb246IHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBtZWFzdXJlXG4gICAgICovXG4gICAgaW5qZWN0TWVhc3VyZTogZnVuY3Rpb24obWVhc3VyZSkge1xuICAgICAgUmVhY3RQZXJmLnN0b3JlZE1lYXN1cmUgPSBtZWFzdXJlO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBTaW1wbHkgcGFzc2VzIHRocm91Z2ggdGhlIG1lYXN1cmVkIGZ1bmN0aW9uLCB3aXRob3V0IG1lYXN1cmluZyBpdC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gb2JqTmFtZVxuICogQHBhcmFtIHtzdHJpbmd9IGZuTmFtZVxuICogQHBhcmFtIHtmdW5jdGlvbn0gZnVuY1xuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIF9ub01lYXN1cmUob2JqTmFtZSwgZm5OYW1lLCBmdW5jKSB7XG4gIHJldHVybiBmdW5jO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UGVyZjtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactPerf.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RQcm9wVHlwZUxvY2F0aW9uTmFtZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgUmVhY3RQcm9wVHlwZUxvY2F0aW9uTmFtZXNcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lcyA9IHt9O1xuXG5pZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gIFJlYWN0UHJvcFR5cGVMb2NhdGlvbk5hbWVzID0ge1xuICAgIHByb3A6ICdwcm9wJyxcbiAgICBjb250ZXh0OiAnY29udGV4dCcsXG4gICAgY2hpbGRDb250ZXh0OiAnY2hpbGQgY29udGV4dCdcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlTG9jYXRpb25OYW1lcztcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactPropTypeLocationNames.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require(\"./keyMirror\");\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n","deps":{"./keyMirror":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactPropTypeLocations.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactPropTypeLocationNames = require(\"./ReactPropTypeLocationNames\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar elementTypeChecker = createElementTypeChecker();\nvar nodeTypeChecker = createNodeChecker();\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: elementTypeChecker,\n  instanceOf: createInstanceTypeChecker,\n  node: nodeTypeChecker,\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location) {\n    componentName = componentName || ANONYMOUS;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          (\"Required \" + locationName + \" `\" + propName + \"` was not specified in \") +\n          (\"`\" + componentName + \"`.\")\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + preciseType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `\" + expectedType + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\")\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactElement.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected instance of `\" + expectedClassName + \"`.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` of value `\" + propValue + \"` \") +\n      (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type \") +\n        (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\")\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  function validate(props, propName, componentName, location) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n      (\"`\" + componentName + \"`.\")\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` supplied to \") +\n        (\"`\" + componentName + \"`, expected a ReactNode.\")\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        (\"Invalid \" + locationName + \" `\" + propName + \"` of type `\" + propType + \"` \") +\n        (\"supplied to `\" + componentName + \"`, expected `object`.\")\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n      propValue = ReactFragment.extractIfFragment(propValue);\n      for (var k in propValue) {\n        if (!isNode(propValue[k])) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\nmodule.exports = ReactPropTypes;\n","deps":{"./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactFragment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","./ReactPropTypeLocationNames":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactPropTypes.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPutListenerQueue\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\n\nvar assign = require(\"./Object.assign\");\n\nfunction ReactPutListenerQueue() {\n  this.listenersToPut = [];\n}\n\nassign(ReactPutListenerQueue.prototype, {\n  enqueuePutListener: function(rootNodeID, propKey, propValue) {\n    this.listenersToPut.push({\n      rootNodeID: rootNodeID,\n      propKey: propKey,\n      propValue: propValue\n    });\n  },\n\n  putListeners: function() {\n    for (var i = 0; i < this.listenersToPut.length; i++) {\n      var listenerToPut = this.listenersToPut[i];\n      ReactBrowserEventEmitter.putListener(\n        listenerToPut.rootNodeID,\n        listenerToPut.propKey,\n        listenerToPut.propValue\n      );\n    }\n  },\n\n  reset: function() {\n    this.listenersToPut.length = 0;\n  },\n\n  destructor: function() {\n    this.reset();\n  }\n});\n\nPooledClass.addPoolingTo(ReactPutListenerQueue);\n\nmodule.exports = ReactPutListenerQueue;\n","deps":{"./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactPutListenerQueue.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconcileTransaction.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconcileTransaction.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactBrowserEventEmitter = require(\"./ReactBrowserEventEmitter\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function() {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`\n   *   restores the previous value.\n   */\n  close: function(previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function() {\n    this.reactMountReady.notifyAll();\n  }\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: function() {\n    this.putListenerQueue.putListeners();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  SELECTION_RESTORATION,\n  EVENT_SUPPRESSION,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction() {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap proceedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n","deps":{"./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./ReactBrowserEventEmitter":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js","./Transaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./CallbackQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js","./ReactPutListenerQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js","./ReactInputSelection":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconcileTransaction.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactReconcileTransaction.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require(\"./ReactRef\");\nvar ReactElementValidator = require(\"./ReactElementValidator\");\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function(internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(\n        internalInstance._currentElement\n      );\n    }\n    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function(internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function(\n    internalInstance, nextElement, transaction, context\n  ) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && nextElement._owner != null) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n      return;\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(\n      prevElement,\n      nextElement\n    );\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function(\n    internalInstance,\n    transaction\n  ) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RSZWNvbmNpbGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0UmVjb25jaWxlclxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UmVmID0gcmVxdWlyZShcIi4vUmVhY3RSZWZcIik7XG52YXIgUmVhY3RFbGVtZW50VmFsaWRhdG9yID0gcmVxdWlyZShcIi4vUmVhY3RFbGVtZW50VmFsaWRhdG9yXCIpO1xuXG4vKipcbiAqIEhlbHBlciB0byBjYWxsIFJlYWN0UmVmLmF0dGFjaFJlZnMgd2l0aCB0aGlzIGNvbXBvc2l0ZSBjb21wb25lbnQsIHNwbGl0IG91dFxuICogdG8gYXZvaWQgYWxsb2NhdGlvbnMgaW4gdGhlIHRyYW5zYWN0aW9uIG1vdW50LXJlYWR5IHF1ZXVlLlxuICovXG5mdW5jdGlvbiBhdHRhY2hSZWZzKCkge1xuICBSZWFjdFJlZi5hdHRhY2hSZWZzKHRoaXMsIHRoaXMuX2N1cnJlbnRFbGVtZW50KTtcbn1cblxudmFyIFJlYWN0UmVjb25jaWxlciA9IHtcblxuICAvKipcbiAgICogSW5pdGlhbGl6ZXMgdGhlIGNvbXBvbmVudCwgcmVuZGVycyBtYXJrdXAsIGFuZCByZWdpc3RlcnMgZXZlbnQgbGlzdGVuZXJzLlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBpbnRlcm5hbEluc3RhbmNlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByb290SUQgRE9NIElEIG9mIHRoZSByb290IG5vZGUuXG4gICAqIEBwYXJhbSB7UmVhY3RSZWNvbmNpbGVUcmFuc2FjdGlvbnxSZWFjdFNlcnZlclJlbmRlcmluZ1RyYW5zYWN0aW9ufSB0cmFuc2FjdGlvblxuICAgKiBAcmV0dXJuIHs/c3RyaW5nfSBSZW5kZXJlZCBtYXJrdXAgdG8gYmUgaW5zZXJ0ZWQgaW50byB0aGUgRE9NLlxuICAgKiBAZmluYWxcbiAgICogQGludGVybmFsXG4gICAqL1xuICBtb3VudENvbXBvbmVudDogZnVuY3Rpb24oaW50ZXJuYWxJbnN0YW5jZSwgcm9vdElELCB0cmFuc2FjdGlvbiwgY29udGV4dCkge1xuICAgIHZhciBtYXJrdXAgPSBpbnRlcm5hbEluc3RhbmNlLm1vdW50Q29tcG9uZW50KHJvb3RJRCwgdHJhbnNhY3Rpb24sIGNvbnRleHQpO1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgIFJlYWN0RWxlbWVudFZhbGlkYXRvci5jaGVja0FuZFdhcm5Gb3JNdXRhdGVkUHJvcHMoXG4gICAgICAgIGludGVybmFsSW5zdGFuY2UuX2N1cnJlbnRFbGVtZW50XG4gICAgICApO1xuICAgIH1cbiAgICB0cmFuc2FjdGlvbi5nZXRSZWFjdE1vdW50UmVhZHkoKS5lbnF1ZXVlKGF0dGFjaFJlZnMsIGludGVybmFsSW5zdGFuY2UpO1xuICAgIHJldHVybiBtYXJrdXA7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlbGVhc2VzIGFueSByZXNvdXJjZXMgYWxsb2NhdGVkIGJ5IGBtb3VudENvbXBvbmVudGAuXG4gICAqXG4gICAqIEBmaW5hbFxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHVubW91bnRDb21wb25lbnQ6IGZ1bmN0aW9uKGludGVybmFsSW5zdGFuY2UpIHtcbiAgICBSZWFjdFJlZi5kZXRhY2hSZWZzKGludGVybmFsSW5zdGFuY2UsIGludGVybmFsSW5zdGFuY2UuX2N1cnJlbnRFbGVtZW50KTtcbiAgICBpbnRlcm5hbEluc3RhbmNlLnVubW91bnRDb21wb25lbnQoKTtcbiAgfSxcblxuICAvKipcbiAgICogVXBkYXRlIGEgY29tcG9uZW50IHVzaW5nIGEgbmV3IGVsZW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7UmVhY3RDb21wb25lbnR9IGludGVybmFsSW5zdGFuY2VcbiAgICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IG5leHRFbGVtZW50XG4gICAqIEBwYXJhbSB7UmVhY3RSZWNvbmNpbGVUcmFuc2FjdGlvbn0gdHJhbnNhY3Rpb25cbiAgICogQHBhcmFtIHtvYmplY3R9IGNvbnRleHRcbiAgICogQGludGVybmFsXG4gICAqL1xuICByZWNlaXZlQ29tcG9uZW50OiBmdW5jdGlvbihcbiAgICBpbnRlcm5hbEluc3RhbmNlLCBuZXh0RWxlbWVudCwgdHJhbnNhY3Rpb24sIGNvbnRleHRcbiAgKSB7XG4gICAgdmFyIHByZXZFbGVtZW50ID0gaW50ZXJuYWxJbnN0YW5jZS5fY3VycmVudEVsZW1lbnQ7XG5cbiAgICBpZiAobmV4dEVsZW1lbnQgPT09IHByZXZFbGVtZW50ICYmIG5leHRFbGVtZW50Ll9vd25lciAhPSBudWxsKSB7XG4gICAgICAvLyBTaW5jZSBlbGVtZW50cyBhcmUgaW1tdXRhYmxlIGFmdGVyIHRoZSBvd25lciBpcyByZW5kZXJlZCxcbiAgICAgIC8vIHdlIGNhbiBkbyBhIGNoZWFwIGlkZW50aXR5IGNvbXBhcmUgaGVyZSB0byBkZXRlcm1pbmUgaWYgdGhpcyBpcyBhXG4gICAgICAvLyBzdXBlcmZsdW91cyByZWNvbmNpbGUuIEl0J3MgcG9zc2libGUgZm9yIHN0YXRlIHRvIGJlIG11dGFibGUgYnV0IHN1Y2hcbiAgICAgIC8vIGNoYW5nZSBzaG91bGQgdHJpZ2dlciBhbiB1cGRhdGUgb2YgdGhlIG93bmVyIHdoaWNoIHdvdWxkIHJlY3JlYXRlXG4gICAgICAvLyB0aGUgZWxlbWVudC4gV2UgZXhwbGljaXRseSBjaGVjayBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBhbiBvd25lciBzaW5jZVxuICAgICAgLy8gaXQncyBwb3NzaWJsZSBmb3IgYW4gZWxlbWVudCBjcmVhdGVkIG91dHNpZGUgYSBjb21wb3NpdGUgdG8gYmVcbiAgICAgIC8vIGRlZXBseSBtdXRhdGVkIGFuZCByZXVzZWQuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgICAgUmVhY3RFbGVtZW50VmFsaWRhdG9yLmNoZWNrQW5kV2FybkZvck11dGF0ZWRQcm9wcyhuZXh0RWxlbWVudCk7XG4gICAgfVxuXG4gICAgdmFyIHJlZnNDaGFuZ2VkID0gUmVhY3RSZWYuc2hvdWxkVXBkYXRlUmVmcyhcbiAgICAgIHByZXZFbGVtZW50LFxuICAgICAgbmV4dEVsZW1lbnRcbiAgICApO1xuXG4gICAgaWYgKHJlZnNDaGFuZ2VkKSB7XG4gICAgICBSZWFjdFJlZi5kZXRhY2hSZWZzKGludGVybmFsSW5zdGFuY2UsIHByZXZFbGVtZW50KTtcbiAgICB9XG5cbiAgICBpbnRlcm5hbEluc3RhbmNlLnJlY2VpdmVDb21wb25lbnQobmV4dEVsZW1lbnQsIHRyYW5zYWN0aW9uLCBjb250ZXh0KTtcblxuICAgIGlmIChyZWZzQ2hhbmdlZCkge1xuICAgICAgdHJhbnNhY3Rpb24uZ2V0UmVhY3RNb3VudFJlYWR5KCkuZW5xdWV1ZShhdHRhY2hSZWZzLCBpbnRlcm5hbEluc3RhbmNlKTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIEZsdXNoIGFueSBkaXJ0eSBjaGFuZ2VzIGluIGEgY29tcG9uZW50LlxuICAgKlxuICAgKiBAcGFyYW0ge1JlYWN0Q29tcG9uZW50fSBpbnRlcm5hbEluc3RhbmNlXG4gICAqIEBwYXJhbSB7UmVhY3RSZWNvbmNpbGVUcmFuc2FjdGlvbn0gdHJhbnNhY3Rpb25cbiAgICogQGludGVybmFsXG4gICAqL1xuICBwZXJmb3JtVXBkYXRlSWZOZWNlc3Nhcnk6IGZ1bmN0aW9uKFxuICAgIGludGVybmFsSW5zdGFuY2UsXG4gICAgdHJhbnNhY3Rpb25cbiAgKSB7XG4gICAgaW50ZXJuYWxJbnN0YW5jZS5wZXJmb3JtVXBkYXRlSWZOZWNlc3NhcnkodHJhbnNhY3Rpb24pO1xuICB9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RSZWNvbmNpbGVyO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElementValidator":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js","./ReactRef":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRef.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactReconciler.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRef.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRef.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require(\"./ReactOwner\");\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function(prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  return (\n    nextElement._owner !== prevElement._owner ||\n    nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function(instance, element) {\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n","deps":{"./ReactOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactOwner.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRef.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactRef.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function(_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactRootIndex.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRendering.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRendering.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\nvar ReactServerRenderingTransaction =\n  require(\"./ReactServerRenderingTransaction\");\n\nvar emptyObject = require(\"./emptyObject\");\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\nvar invariant = require(\"./invariant\");\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToString(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup =\n        componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(element),\n    'renderToStaticMarkup(): You must pass a valid ReactElement.'\n  ) : invariant(ReactElement.isValidElement(element)));\n\n  var transaction;\n  try {\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function() {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvUmVhY3RTZXJ2ZXJSZW5kZXJpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAdHlwZWNoZWNrcyBzdGF0aWMtb25seVxuICogQHByb3ZpZGVzTW9kdWxlIFJlYWN0U2VydmVyUmVuZGVyaW5nXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0RWxlbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFwiKTtcbnZhciBSZWFjdEluc3RhbmNlSGFuZGxlcyA9IHJlcXVpcmUoXCIuL1JlYWN0SW5zdGFuY2VIYW5kbGVzXCIpO1xudmFyIFJlYWN0TWFya3VwQ2hlY2tzdW0gPSByZXF1aXJlKFwiLi9SZWFjdE1hcmt1cENoZWNrc3VtXCIpO1xudmFyIFJlYWN0U2VydmVyUmVuZGVyaW5nVHJhbnNhY3Rpb24gPVxuICByZXF1aXJlKFwiLi9SZWFjdFNlcnZlclJlbmRlcmluZ1RyYW5zYWN0aW9uXCIpO1xuXG52YXIgZW1wdHlPYmplY3QgPSByZXF1aXJlKFwiLi9lbXB0eU9iamVjdFwiKTtcbnZhciBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50ID0gcmVxdWlyZShcIi4vaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudFwiKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbi8qKlxuICogQHBhcmFtIHtSZWFjdEVsZW1lbnR9IGVsZW1lbnRcbiAqIEByZXR1cm4ge3N0cmluZ30gdGhlIEhUTUwgbWFya3VwXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRvU3RyaW5nKGVsZW1lbnQpIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBSZWFjdEVsZW1lbnQuaXNWYWxpZEVsZW1lbnQoZWxlbWVudCksXG4gICAgJ3JlbmRlclRvU3RyaW5nKCk6IFlvdSBtdXN0IHBhc3MgYSB2YWxpZCBSZWFjdEVsZW1lbnQuJ1xuICApIDogaW52YXJpYW50KFJlYWN0RWxlbWVudC5pc1ZhbGlkRWxlbWVudChlbGVtZW50KSkpO1xuXG4gIHZhciB0cmFuc2FjdGlvbjtcbiAgdHJ5IHtcbiAgICB2YXIgaWQgPSBSZWFjdEluc3RhbmNlSGFuZGxlcy5jcmVhdGVSZWFjdFJvb3RJRCgpO1xuICAgIHRyYW5zYWN0aW9uID0gUmVhY3RTZXJ2ZXJSZW5kZXJpbmdUcmFuc2FjdGlvbi5nZXRQb29sZWQoZmFsc2UpO1xuXG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uLnBlcmZvcm0oZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY29tcG9uZW50SW5zdGFuY2UgPSBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50KGVsZW1lbnQsIG51bGwpO1xuICAgICAgdmFyIG1hcmt1cCA9XG4gICAgICAgIGNvbXBvbmVudEluc3RhbmNlLm1vdW50Q29tcG9uZW50KGlkLCB0cmFuc2FjdGlvbiwgZW1wdHlPYmplY3QpO1xuICAgICAgcmV0dXJuIFJlYWN0TWFya3VwQ2hlY2tzdW0uYWRkQ2hlY2tzdW1Ub01hcmt1cChtYXJrdXApO1xuICAgIH0sIG51bGwpO1xuICB9IGZpbmFsbHkge1xuICAgIFJlYWN0U2VydmVyUmVuZGVyaW5nVHJhbnNhY3Rpb24ucmVsZWFzZSh0cmFuc2FjdGlvbik7XG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0ge1JlYWN0RWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybiB7c3RyaW5nfSB0aGUgSFRNTCBtYXJrdXAsIHdpdGhvdXQgdGhlIGV4dHJhIFJlYWN0IElEIGFuZCBjaGVja3N1bVxuICogKGZvciBnZW5lcmF0aW5nIHN0YXRpYyBwYWdlcylcbiAqL1xuZnVuY3Rpb24gcmVuZGVyVG9TdGF0aWNNYXJrdXAoZWxlbWVudCkge1xuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIFJlYWN0RWxlbWVudC5pc1ZhbGlkRWxlbWVudChlbGVtZW50KSxcbiAgICAncmVuZGVyVG9TdGF0aWNNYXJrdXAoKTogWW91IG11c3QgcGFzcyBhIHZhbGlkIFJlYWN0RWxlbWVudC4nXG4gICkgOiBpbnZhcmlhbnQoUmVhY3RFbGVtZW50LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSk7XG5cbiAgdmFyIHRyYW5zYWN0aW9uO1xuICB0cnkge1xuICAgIHZhciBpZCA9IFJlYWN0SW5zdGFuY2VIYW5kbGVzLmNyZWF0ZVJlYWN0Um9vdElEKCk7XG4gICAgdHJhbnNhY3Rpb24gPSBSZWFjdFNlcnZlclJlbmRlcmluZ1RyYW5zYWN0aW9uLmdldFBvb2xlZCh0cnVlKTtcblxuICAgIHJldHVybiB0cmFuc2FjdGlvbi5wZXJmb3JtKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNvbXBvbmVudEluc3RhbmNlID0gaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudChlbGVtZW50LCBudWxsKTtcbiAgICAgIHJldHVybiBjb21wb25lbnRJbnN0YW5jZS5tb3VudENvbXBvbmVudChpZCwgdHJhbnNhY3Rpb24sIGVtcHR5T2JqZWN0KTtcbiAgICB9LCBudWxsKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBSZWFjdFNlcnZlclJlbmRlcmluZ1RyYW5zYWN0aW9uLnJlbGVhc2UodHJhbnNhY3Rpb24pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByZW5kZXJUb1N0cmluZzogcmVuZGVyVG9TdHJpbmcsXG4gIHJlbmRlclRvU3RhdGljTWFya3VwOiByZW5kZXJUb1N0YXRpY01hcmt1cFxufTtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./ReactMarkupChecksum":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js","./emptyObject":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./instantiateReactComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js","./ReactServerRenderingTransaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRenderingTransaction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRendering.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactServerRendering.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRenderingTransaction.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRenderingTransaction.js","source":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nassign(\n  ReactServerRenderingTransaction.prototype,\n  Transaction.Mixin,\n  Mixin\n);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n","deps":{"./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./CallbackQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js","./ReactPutListenerQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js","./Transaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRenderingTransaction.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactServerRenderingTransaction.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js","source":"(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactLifeCycle = require(\"./ReactLifeCycle\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nfunction enqueueUpdate(internalInstance) {\n  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {\n    // If we're in a componentWillMount handler, don't enqueue a rerender\n    // because ReactUpdates assumes we're in a browser context (which is\n    // wrong for server rendering) and we're about to do a render anyway.\n    // See bug in #1740.\n    ReactUpdates.enqueueUpdate(internalInstance);\n  }\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactCurrentOwner.current == null,\n    '%s(...): Cannot update during an existing state transition ' +\n    '(such as within `render`). Render methods should be a pure function ' +\n    'of props and state.',\n    callerName\n  ) : invariant(ReactCurrentOwner.current == null));\n\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        !callerName,\n        '%s(...): Can only update a mounted or mounting component. ' +\n        'This usually means you called %s() on an unmounted ' +\n        'component. This is a no-op.',\n        callerName,\n        callerName\n      ) : null);\n    }\n    return null;\n  }\n\n  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {\n    return null;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function(publicInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance ||\n        internalInstance === ReactLifeCycle.currentlyMountingInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function(internalInstance, callback) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof callback === 'function',\n      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n      'isn\\'t callable.'\n    ) : invariant(typeof callback === 'function'));\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldUpdateComponent`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function(publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'forceUpdate'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function(publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function(publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setState'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue =\n      internalInstance._pendingStateQueue ||\n      (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function(publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'setProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'setProps(...): You called `setProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    var props = assign({}, element.props, partialProps);\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function(publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(\n      publicInstance,\n      'replaceProps'\n    );\n\n    if (!internalInstance) {\n      return;\n    }\n\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      internalInstance._isTopLevel,\n      'replaceProps(...): You called `replaceProps` on a ' +\n      'component with a parent. This is an anti-pattern since props will ' +\n      'get reactively updated when rendered. Instead, change the owner\\'s ' +\n      '`render` method to pass the correct value as props to the component ' +\n      'where it is created.'\n    ) : invariant(internalInstance._isTopLevel));\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var element = internalInstance._pendingElement ||\n                  internalInstance._currentElement;\n    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(\n      element,\n      props\n    );\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function(internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactLifeCycle":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./ReactUpdates":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactUpdateQueue.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require(\"./CallbackQueue\");\nvar PooledClass = require(\"./PooledClass\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactPerf = require(\"./ReactPerf\");\nvar ReactReconciler = require(\"./ReactReconciler\");\nvar Transaction = require(\"./Transaction\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactUpdates.ReactReconcileTransaction && batchingStrategy,\n    'ReactUpdates: must inject a reconcile transaction class and batching ' +\n    'strategy'\n  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));\n}\n\nvar NESTED_UPDATES = {\n  initialize: function() {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function() {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function() {\n    this.callbackQueue.reset();\n  },\n  close: function() {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction =\n    ReactUpdates.ReactReconcileTransaction.getPooled();\n}\n\nassign(\n  ReactUpdatesFlushTransaction.prototype,\n  Transaction.Mixin, {\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function() {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function(method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(\n      this,\n      this.reconcileTransaction.perform,\n      this.reconcileTransaction,\n      method,\n      scope,\n      a\n    );\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    len === dirtyComponents.length,\n    'Expected flush transaction\\'s stored dirty-components length (%s) to ' +\n    'match dirty-components array length (%s).',\n    len,\n    dirtyComponents.length\n  ) : invariant(len === dirtyComponents.length));\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(\n      component,\n      transaction.reconcileTransaction\n    );\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(\n          callbacks[j],\n          component.getPublicInstance()\n        );\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function() {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure(\n  'ReactUpdates',\n  'flushBatchedUpdates',\n  flushBatchedUpdates\n);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    ReactCurrentOwner.current == null,\n    'enqueueUpdate(): Render methods should be a pure function of props ' +\n    'and state; triggering nested component updates from render is not ' +\n    'allowed. If necessary, trigger nested updates in ' +\n    'componentDidUpdate.'\n  ) : null);\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    batchingStrategy.isBatchingUpdates,\n    'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' +\n    'updates are not being batched.'\n  ) : invariant(batchingStrategy.isBatchingUpdates));\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function(ReconcileTransaction) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      ReconcileTransaction,\n      'ReactUpdates: must provide a reconcile transaction class'\n    ) : invariant(ReconcileTransaction));\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function(_batchingStrategy) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      _batchingStrategy,\n      'ReactUpdates: must provide a batching strategy'\n    ) : invariant(_batchingStrategy));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.batchedUpdates === 'function',\n      'ReactUpdates: must provide a batchedUpdates() function'\n    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      typeof _batchingStrategy.isBatchingUpdates === 'boolean',\n      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'\n    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./CallbackQueue":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js","./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactPerf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js","./ReactReconciler":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js","./Transaction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ReactUpdates.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SVGDOMPropertyConfig.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SVGDOMPropertyConfig.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n/*jslint bitwise: true*/\n\n'use strict';\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    clipPath: MUST_USE_ATTRIBUTE,\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    clipPath: 'clip-path',\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n","deps":{"./DOMProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SVGDOMPropertyConfig.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SVGDOMPropertyConfig.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SelectEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SelectEventPlugin.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar ReactInputSelection = require(\"./ReactInputSelection\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getActiveElement = require(\"./getActiveElement\");\nvar isTextInputElement = require(\"./isTextInputElement\");\nvar keyOf = require(\"./keyOf\");\nvar shallowEqual = require(\"./shallowEqual\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSelect: null}),\n      captured: keyOf({onSelectCapture: null})\n    },\n    dependencies: [\n      topLevelTypes.topBlur,\n      topLevelTypes.topContextMenu,\n      topLevelTypes.topFocus,\n      topLevelTypes.topKeyDown,\n      topLevelTypes.topMouseDown,\n      topLevelTypes.topMouseUp,\n      topLevelTypes.topSelectionChange\n    ]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @param {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node &&\n      ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown ||\n      activeElement == null ||\n      activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(\n      eventTypes.select,\n      activeElementID,\n      nativeEvent\n    );\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) ||\n            topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't).\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      case topLevelTypes.topSelectionChange:\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent);\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n","deps":{"./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPropagators":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","./ReactInputSelection":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js","./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js","./isTextInputElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./getActiveElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js","./shallowEqual":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shallowEqual.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SelectEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SelectEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ServerReactRootIndex.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ServerReactRootIndex.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function() {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ServerReactRootIndex.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ServerReactRootIndex.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SimpleEventPlugin.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SimpleEventPlugin.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventPluginUtils = require(\"./EventPluginUtils\");\nvar EventPropagators = require(\"./EventPropagators\");\nvar SyntheticClipboardEvent = require(\"./SyntheticClipboardEvent\");\nvar SyntheticEvent = require(\"./SyntheticEvent\");\nvar SyntheticFocusEvent = require(\"./SyntheticFocusEvent\");\nvar SyntheticKeyboardEvent = require(\"./SyntheticKeyboardEvent\");\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\nvar SyntheticDragEvent = require(\"./SyntheticDragEvent\");\nvar SyntheticTouchEvent = require(\"./SyntheticTouchEvent\");\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar SyntheticWheelEvent = require(\"./SyntheticWheelEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\nvar invariant = require(\"./invariant\");\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onBlur: true}),\n      captured: keyOf({onBlurCapture: true})\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onClick: true}),\n      captured: keyOf({onClickCapture: true})\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onContextMenu: true}),\n      captured: keyOf({onContextMenuCapture: true})\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCopy: true}),\n      captured: keyOf({onCopyCapture: true})\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onCut: true}),\n      captured: keyOf({onCutCapture: true})\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDoubleClick: true}),\n      captured: keyOf({onDoubleClickCapture: true})\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrag: true}),\n      captured: keyOf({onDragCapture: true})\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnd: true}),\n      captured: keyOf({onDragEndCapture: true})\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragEnter: true}),\n      captured: keyOf({onDragEnterCapture: true})\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragExit: true}),\n      captured: keyOf({onDragExitCapture: true})\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragLeave: true}),\n      captured: keyOf({onDragLeaveCapture: true})\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragOver: true}),\n      captured: keyOf({onDragOverCapture: true})\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDragStart: true}),\n      captured: keyOf({onDragStartCapture: true})\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onDrop: true}),\n      captured: keyOf({onDropCapture: true})\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onFocus: true}),\n      captured: keyOf({onFocusCapture: true})\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onInput: true}),\n      captured: keyOf({onInputCapture: true})\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyDown: true}),\n      captured: keyOf({onKeyDownCapture: true})\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyPress: true}),\n      captured: keyOf({onKeyPressCapture: true})\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onKeyUp: true}),\n      captured: keyOf({onKeyUpCapture: true})\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onLoad: true}),\n      captured: keyOf({onLoadCapture: true})\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onError: true}),\n      captured: keyOf({onErrorCapture: true})\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseDown: true}),\n      captured: keyOf({onMouseDownCapture: true})\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseMove: true}),\n      captured: keyOf({onMouseMoveCapture: true})\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOut: true}),\n      captured: keyOf({onMouseOutCapture: true})\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseOver: true}),\n      captured: keyOf({onMouseOverCapture: true})\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onMouseUp: true}),\n      captured: keyOf({onMouseUpCapture: true})\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onPaste: true}),\n      captured: keyOf({onPasteCapture: true})\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onReset: true}),\n      captured: keyOf({onResetCapture: true})\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onScroll: true}),\n      captured: keyOf({onScrollCapture: true})\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onSubmit: true}),\n      captured: keyOf({onSubmitCapture: true})\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchCancel: true}),\n      captured: keyOf({onTouchCancelCapture: true})\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchEnd: true}),\n      captured: keyOf({onTouchEndCapture: true})\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchMove: true}),\n      captured: keyOf({onTouchMoveCapture: true})\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onTouchStart: true}),\n      captured: keyOf({onTouchStartCapture: true})\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({onWheel: true}),\n      captured: keyOf({onWheelCapture: true})\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topBlur:        eventTypes.blur,\n  topClick:       eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy:        eventTypes.copy,\n  topCut:         eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag:        eventTypes.drag,\n  topDragEnd:     eventTypes.dragEnd,\n  topDragEnter:   eventTypes.dragEnter,\n  topDragExit:    eventTypes.dragExit,\n  topDragLeave:   eventTypes.dragLeave,\n  topDragOver:    eventTypes.dragOver,\n  topDragStart:   eventTypes.dragStart,\n  topDrop:        eventTypes.drop,\n  topError:       eventTypes.error,\n  topFocus:       eventTypes.focus,\n  topInput:       eventTypes.input,\n  topKeyDown:     eventTypes.keyDown,\n  topKeyPress:    eventTypes.keyPress,\n  topKeyUp:       eventTypes.keyUp,\n  topLoad:        eventTypes.load,\n  topMouseDown:   eventTypes.mouseDown,\n  topMouseMove:   eventTypes.mouseMove,\n  topMouseOut:    eventTypes.mouseOut,\n  topMouseOver:   eventTypes.mouseOver,\n  topMouseUp:     eventTypes.mouseUp,\n  topPaste:       eventTypes.paste,\n  topReset:       eventTypes.reset,\n  topScroll:      eventTypes.scroll,\n  topSubmit:      eventTypes.submit,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd:    eventTypes.touchEnd,\n  topTouchMove:   eventTypes.touchMove,\n  topTouchStart:  eventTypes.touchStart,\n  topWheel:       eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * Same as the default implementation, except cancels the event when return\n   * value is false. This behavior will be disabled in a future release.\n   *\n   * @param {object} Event to be dispatched.\n   * @param {function} Application-level callback.\n   * @param {string} domID DOM ID to pass to the callback.\n   */\n  executeDispatch: function(event, listener, domID) {\n    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);\n\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof returnValue !== 'boolean',\n      'Returning `false` from an event handler is deprecated and will be ' +\n      'ignored in a future release. Instead, manually call ' +\n      'e.stopPropagation() or e.preventDefault(), as appropriate.'\n    ) : null);\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  },\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topError:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSubmit:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n        /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      EventConstructor,\n      'SimpleEventPlugin: Unhandled event type, `%s`.',\n      topLevelType\n    ) : invariant(EventConstructor));\n    var event = EventConstructor.getPooled(\n      dispatchConfig,\n      topLevelTargetID,\n      nativeEvent\n    );\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./EventConstants":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js","./EventPluginUtils":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js","./EventPropagators":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js","./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js","./SyntheticMouseEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./keyOf":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./getEventCharCode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js","./SyntheticClipboardEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticClipboardEvent.js","./SyntheticFocusEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticFocusEvent.js","./SyntheticDragEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticDragEvent.js","./SyntheticTouchEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticTouchEvent.js","./SyntheticUIEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","./SyntheticWheelEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticWheelEvent.js","./SyntheticKeyboardEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticKeyboardEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SimpleEventPlugin.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SimpleEventPlugin.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticClipboardEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticClipboardEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function(event) {\n    return (\n      'clipboardData' in event ?\n        event.clipboardData :\n        window.clipboardData\n    );\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n","deps":{"./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticClipboardEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticClipboardEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticCompositionEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticCompositionEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticCompositionEvent,\n  CompositionEventInterface\n);\n\nmodule.exports = SyntheticCompositionEvent;\n","deps":{"./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticCompositionEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticCompositionEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticDragEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticDragEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n","deps":{"./SyntheticMouseEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticDragEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticDragEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: getEventTarget,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ?\n    nativeEvent.defaultPrevented :\n    nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    var event = this.nativeEvent;\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function(Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n","deps":{"./PooledClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js","./getEventTarget":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticFocusEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticFocusEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n","deps":{"./SyntheticUIEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticFocusEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticFocusEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticInputEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticInputEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(\n  dispatchConfig,\n  dispatchMarker,\n  nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(\n  SyntheticInputEvent,\n  InputEventInterface\n);\n\nmodule.exports = SyntheticInputEvent;\n","deps":{"./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticInputEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticInputEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticKeyboardEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticKeyboardEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventCharCode = require(\"./getEventCharCode\");\nvar getEventKey = require(\"./getEventKey\");\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function(event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function(event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function(event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n","deps":{"./SyntheticUIEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","./getEventCharCode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js","./getEventModifierState":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js","./getEventKey":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventKey.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticKeyboardEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticKeyboardEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function(event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function(event) {\n    return event.relatedTarget || (\n      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))\n    );\n  },\n  // \"Proprietary\" Interface.\n  pageX: function(event) {\n    return 'pageX' in event ?\n      event.pageX :\n      event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function(event) {\n    return 'pageY' in event ?\n      event.pageY :\n      event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n","deps":{"./SyntheticUIEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","./ViewportMetrics":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js","./getEventModifierState":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticMouseEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticTouchEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticTouchEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventModifierState = require(\"./getEventModifierState\");\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n","deps":{"./SyntheticUIEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","./getEventModifierState":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticTouchEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticTouchEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require(\"./SyntheticEvent\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function(event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function(event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n","deps":{"./SyntheticEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js","./getEventTarget":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticUIEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticWheelEvent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticWheelEvent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require(\"./SyntheticMouseEvent\");\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function(event) {\n    return (\n      'deltaX' in event ? event.deltaX :\n      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n      'wheelDeltaX' in event ? -event.wheelDeltaX : 0\n    );\n  },\n  deltaY: function(event) {\n    return (\n      'deltaY' in event ? event.deltaY :\n      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n      'wheelDeltaY' in event ? -event.wheelDeltaY :\n      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n      'wheelDelta' in event ? -event.wheelDelta : 0\n    );\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n","deps":{"./SyntheticMouseEvent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticWheelEvent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/SyntheticWheelEvent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function() {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (!this.wrapperInitData) {\n      this.wrapperInitData = [];\n    } else {\n      this.wrapperInitData.length = 0;\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function() {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} args... Arguments to pass to the method (optional).\n   *                           Helps prevent need to bind in many cases.\n   * @return Return value from `method`.\n   */\n  perform: function(method, scope, a, b, c, d, e, f) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      !this.isInTransaction(),\n      'Transaction.perform(...): Cannot initialize a transaction when there ' +\n      'is already an outstanding transaction.'\n    ) : invariant(!this.isInTransaction()));\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {\n          }\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function(startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ?\n          wrapper.initialize.call(this) :\n          null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function(startIndex) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      this.isInTransaction(),\n      'Transaction.closeAll(): Cannot close transaction when none are open.'\n    ) : invariant(this.isInTransaction()));\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {\n          }\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occured.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvVHJhbnNhY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgVHJhbnNhY3Rpb25cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbi8qKlxuICogYFRyYW5zYWN0aW9uYCBjcmVhdGVzIGEgYmxhY2sgYm94IHRoYXQgaXMgYWJsZSB0byB3cmFwIGFueSBtZXRob2Qgc3VjaCB0aGF0XG4gKiBjZXJ0YWluIGludmFyaWFudHMgYXJlIG1haW50YWluZWQgYmVmb3JlIGFuZCBhZnRlciB0aGUgbWV0aG9kIGlzIGludm9rZWRcbiAqIChFdmVuIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gd2hpbGUgaW52b2tpbmcgdGhlIHdyYXBwZWQgbWV0aG9kKS4gV2hvZXZlclxuICogaW5zdGFudGlhdGVzIGEgdHJhbnNhY3Rpb24gY2FuIHByb3ZpZGUgZW5mb3JjZXJzIG9mIHRoZSBpbnZhcmlhbnRzIGF0XG4gKiBjcmVhdGlvbiB0aW1lLiBUaGUgYFRyYW5zYWN0aW9uYCBjbGFzcyBpdHNlbGYgd2lsbCBzdXBwbHkgb25lIGFkZGl0aW9uYWxcbiAqIGF1dG9tYXRpYyBpbnZhcmlhbnQgZm9yIHlvdSAtIHRoZSBpbnZhcmlhbnQgdGhhdCBhbnkgdHJhbnNhY3Rpb24gaW5zdGFuY2VcbiAqIHNob3VsZCBub3QgYmUgcnVuIHdoaWxlIGl0IGlzIGFscmVhZHkgYmVpbmcgcnVuLiBZb3Ugd291bGQgdHlwaWNhbGx5IGNyZWF0ZSBhXG4gKiBzaW5nbGUgaW5zdGFuY2Ugb2YgYSBgVHJhbnNhY3Rpb25gIGZvciByZXVzZSBtdWx0aXBsZSB0aW1lcywgdGhhdCBwb3RlbnRpYWxseVxuICogaXMgdXNlZCB0byB3cmFwIHNldmVyYWwgZGlmZmVyZW50IG1ldGhvZHMuIFdyYXBwZXJzIGFyZSBleHRyZW1lbHkgc2ltcGxlIC1cbiAqIHRoZXkgb25seSByZXF1aXJlIGltcGxlbWVudGluZyB0d28gbWV0aG9kcy5cbiAqXG4gKiA8cHJlPlxuICogICAgICAgICAgICAgICAgICAgICAgIHdyYXBwZXJzIChpbmplY3RlZCBhdCBjcmVhdGlvbiB0aW1lKVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICsgICAgICAgICtcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tK1xuICogICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgIHYgICAgICAgIHwgICAgICAgICAgICAgIHxcbiAqICAgICAgICAgICAgICAgICAgICB8ICAgICAgKy0tLS0tLS0tLS0tLS0tLSsgICB8ICAgICAgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgfCAgICstLXwgICAgd3JhcHBlcjEgICB8LS0tfC0tLS0rICAgICAgICAgfFxuICogICAgICAgICAgICAgICAgICAgIHwgICB8ICArLS0tLS0tLS0tLS0tLS0tKyAgIHYgICAgfCAgICAgICAgIHxcbiAqICAgICAgICAgICAgICAgICAgICB8ICAgfCAgICAgICAgICArLS0tLS0tLS0tLS0tLSsgIHwgICAgICAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgfCAgIHwgICAgICstLS0tfCAgIHdyYXBwZXIyICB8LS0tLS0tLS0rICAgfFxuICogICAgICAgICAgICAgICAgICAgIHwgICB8ICAgICB8ICAgICstLS0tLS0tLS0tLS0tKyAgfCAgICAgfCAgIHxcbiAqICAgICAgICAgICAgICAgICAgICB8ICAgfCAgICAgfCAgICAgICAgICAgICAgICAgICAgIHwgICAgIHwgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgfCAgIHYgICAgIHYgICAgICAgICAgICAgICAgICAgICB2ICAgICB2ICAgfCB3cmFwcGVyXG4gKiAgICAgICAgICAgICAgICAgICAgfCArLS0tKyArLS0tKyAgICstLS0tLS0tLS0rICAgKy0tLSsgKy0tLSsgfCBpbnZhcmlhbnRzXG4gKiBwZXJmb3JtKGFueU1ldGhvZCkgfCB8ICAgfCB8ICAgfCAgIHwgICAgICAgICB8ICAgfCAgIHwgfCAgIHwgfCBtYWludGFpbmVkXG4gKiArLS0tLS0tLS0tLS0tLS0tLS0+fC18LS0tfC18LS0tfC0tPnxhbnlNZXRob2R8LS0tfC0tLXwtfC0tLXwtfC0tLS0tLS0tPlxuICogICAgICAgICAgICAgICAgICAgIHwgfCAgIHwgfCAgIHwgICB8ICAgICAgICAgfCAgIHwgICB8IHwgICB8IHxcbiAqICAgICAgICAgICAgICAgICAgICB8IHwgICB8IHwgICB8ICAgfCAgICAgICAgIHwgICB8ICAgfCB8ICAgfCB8XG4gKiAgICAgICAgICAgICAgICAgICAgfCB8ICAgfCB8ICAgfCAgIHwgICAgICAgICB8ICAgfCAgIHwgfCAgIHwgfFxuICogICAgICAgICAgICAgICAgICAgIHwgKy0tLSsgKy0tLSsgICArLS0tLS0tLS0tKyAgICstLS0rICstLS0rIHxcbiAqICAgICAgICAgICAgICAgICAgICB8ICBpbml0aWFsaXplICAgICAgICAgICAgICAgICAgICBjbG9zZSAgICB8XG4gKiAgICAgICAgICAgICAgICAgICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xuICogPC9wcmU+XG4gKlxuICogVXNlIGNhc2VzOlxuICogLSBQcmVzZXJ2aW5nIHRoZSBpbnB1dCBzZWxlY3Rpb24gcmFuZ2VzIGJlZm9yZS9hZnRlciByZWNvbmNpbGlhdGlvbi5cbiAqICAgUmVzdG9yaW5nIHNlbGVjdGlvbiBldmVuIGluIHRoZSBldmVudCBvZiBhbiB1bmV4cGVjdGVkIGVycm9yLlxuICogLSBEZWFjdGl2YXRpbmcgZXZlbnRzIHdoaWxlIHJlYXJyYW5naW5nIHRoZSBET00sIHByZXZlbnRpbmcgYmx1cnMvZm9jdXNlcyxcbiAqICAgd2hpbGUgZ3VhcmFudGVlaW5nIHRoYXQgYWZ0ZXJ3YXJkcywgdGhlIGV2ZW50IHN5c3RlbSBpcyByZWFjdGl2YXRlZC5cbiAqIC0gRmx1c2hpbmcgYSBxdWV1ZSBvZiBjb2xsZWN0ZWQgRE9NIG11dGF0aW9ucyB0byB0aGUgbWFpbiBVSSB0aHJlYWQgYWZ0ZXIgYVxuICogICByZWNvbmNpbGlhdGlvbiB0YWtlcyBwbGFjZSBpbiBhIHdvcmtlciB0aHJlYWQuXG4gKiAtIEludm9raW5nIGFueSBjb2xsZWN0ZWQgYGNvbXBvbmVudERpZFVwZGF0ZWAgY2FsbGJhY2tzIGFmdGVyIHJlbmRlcmluZyBuZXdcbiAqICAgY29udGVudC5cbiAqIC0gKEZ1dHVyZSB1c2UgY2FzZSk6IFdyYXBwaW5nIHBhcnRpY3VsYXIgZmx1c2hlcyBvZiB0aGUgYFJlYWN0V29ya2VyYCBxdWV1ZVxuICogICB0byBwcmVzZXJ2ZSB0aGUgYHNjcm9sbFRvcGAgKGFuIGF1dG9tYXRpYyBzY3JvbGwgYXdhcmUgRE9NKS5cbiAqIC0gKEZ1dHVyZSB1c2UgY2FzZSk6IExheW91dCBjYWxjdWxhdGlvbnMgYmVmb3JlIGFuZCBhZnRlciBET00gdXBkYXRlcy5cbiAqXG4gKiBUcmFuc2FjdGlvbmFsIHBsdWdpbiBBUEk6XG4gKiAtIEEgbW9kdWxlIHRoYXQgaGFzIGFuIGBpbml0aWFsaXplYCBtZXRob2QgdGhhdCByZXR1cm5zIGFueSBwcmVjb21wdXRhdGlvbi5cbiAqIC0gYW5kIGEgYGNsb3NlYCBtZXRob2QgdGhhdCBhY2NlcHRzIHRoZSBwcmVjb21wdXRhdGlvbi4gYGNsb3NlYCBpcyBpbnZva2VkXG4gKiAgIHdoZW4gdGhlIHdyYXBwZWQgcHJvY2VzcyBpcyBjb21wbGV0ZWQsIG9yIGhhcyBmYWlsZWQuXG4gKlxuICogQHBhcmFtIHtBcnJheTxUcmFuc2FjdGlvbmFsV3JhcHBlcj59IHRyYW5zYWN0aW9uV3JhcHBlciBXcmFwcGVyIG1vZHVsZXNcbiAqIHRoYXQgaW1wbGVtZW50IGBpbml0aWFsaXplYCBhbmQgYGNsb3NlYC5cbiAqIEByZXR1cm4ge1RyYW5zYWN0aW9ufSBTaW5nbGUgdHJhbnNhY3Rpb24gZm9yIHJldXNlIGluIHRocmVhZC5cbiAqXG4gKiBAY2xhc3MgVHJhbnNhY3Rpb25cbiAqL1xudmFyIE1peGluID0ge1xuICAvKipcbiAgICogU2V0cyB1cCB0aGlzIGluc3RhbmNlIHNvIHRoYXQgaXQgaXMgcHJlcGFyZWQgZm9yIGNvbGxlY3RpbmcgbWV0cmljcy4gRG9lc1xuICAgKiBzbyBzdWNoIHRoYXQgdGhpcyBzZXR1cCBtZXRob2QgbWF5IGJlIHVzZWQgb24gYW4gaW5zdGFuY2UgdGhhdCBpcyBhbHJlYWR5XG4gICAqIGluaXRpYWxpemVkLCBpbiBhIHdheSB0aGF0IGRvZXMgbm90IGNvbnN1bWUgYWRkaXRpb25hbCBtZW1vcnkgdXBvbiByZXVzZS5cbiAgICogVGhhdCBjYW4gYmUgdXNlZnVsIGlmIHlvdSBkZWNpZGUgdG8gbWFrZSB5b3VyIHN1YmNsYXNzIG9mIHRoaXMgbWl4aW4gYVxuICAgKiBcIlBvb2xlZENsYXNzXCIuXG4gICAqL1xuICByZWluaXRpYWxpemVUcmFuc2FjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50cmFuc2FjdGlvbldyYXBwZXJzID0gdGhpcy5nZXRUcmFuc2FjdGlvbldyYXBwZXJzKCk7XG4gICAgaWYgKCF0aGlzLndyYXBwZXJJbml0RGF0YSkge1xuICAgICAgdGhpcy53cmFwcGVySW5pdERhdGEgPSBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy53cmFwcGVySW5pdERhdGEubGVuZ3RoID0gMDtcbiAgICB9XG4gICAgdGhpcy5faXNJblRyYW5zYWN0aW9uID0gZmFsc2U7XG4gIH0sXG5cbiAgX2lzSW5UcmFuc2FjdGlvbjogZmFsc2UsXG5cbiAgLyoqXG4gICAqIEBhYnN0cmFjdFxuICAgKiBAcmV0dXJuIHtBcnJheTxUcmFuc2FjdGlvbldyYXBwZXI+fSBBcnJheSBvZiB0cmFuc2FjdGlvbiB3cmFwcGVycy5cbiAgICovXG4gIGdldFRyYW5zYWN0aW9uV3JhcHBlcnM6IG51bGwsXG5cbiAgaXNJblRyYW5zYWN0aW9uOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gISF0aGlzLl9pc0luVHJhbnNhY3Rpb247XG4gIH0sXG5cbiAgLyoqXG4gICAqIEV4ZWN1dGVzIHRoZSBmdW5jdGlvbiB3aXRoaW4gYSBzYWZldHkgd2luZG93LiBVc2UgdGhpcyBmb3IgdGhlIHRvcCBsZXZlbFxuICAgKiBtZXRob2RzIHRoYXQgcmVzdWx0IGluIGxhcmdlIGFtb3VudHMgb2YgY29tcHV0YXRpb24vbXV0YXRpb25zIHRoYXQgd291bGRcbiAgICogbmVlZCB0byBiZSBzYWZldHkgY2hlY2tlZC5cbiAgICpcbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gbWV0aG9kIE1lbWJlciBvZiBzY29wZSB0byBjYWxsLlxuICAgKiBAcGFyYW0ge09iamVjdH0gc2NvcGUgU2NvcGUgdG8gaW52b2tlIGZyb20uXG4gICAqIEBwYXJhbSB7T2JqZWN0Pz19IGFyZ3MuLi4gQXJndW1lbnRzIHRvIHBhc3MgdG8gdGhlIG1ldGhvZCAob3B0aW9uYWwpLlxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlbHBzIHByZXZlbnQgbmVlZCB0byBiaW5kIGluIG1hbnkgY2FzZXMuXG4gICAqIEByZXR1cm4gUmV0dXJuIHZhbHVlIGZyb20gYG1ldGhvZGAuXG4gICAqL1xuICBwZXJmb3JtOiBmdW5jdGlvbihtZXRob2QsIHNjb3BlLCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgICF0aGlzLmlzSW5UcmFuc2FjdGlvbigpLFxuICAgICAgJ1RyYW5zYWN0aW9uLnBlcmZvcm0oLi4uKTogQ2Fubm90IGluaXRpYWxpemUgYSB0cmFuc2FjdGlvbiB3aGVuIHRoZXJlICcgK1xuICAgICAgJ2lzIGFscmVhZHkgYW4gb3V0c3RhbmRpbmcgdHJhbnNhY3Rpb24uJ1xuICAgICkgOiBpbnZhcmlhbnQoIXRoaXMuaXNJblRyYW5zYWN0aW9uKCkpKTtcbiAgICB2YXIgZXJyb3JUaHJvd247XG4gICAgdmFyIHJldDtcbiAgICB0cnkge1xuICAgICAgdGhpcy5faXNJblRyYW5zYWN0aW9uID0gdHJ1ZTtcbiAgICAgIC8vIENhdGNoaW5nIGVycm9ycyBtYWtlcyBkZWJ1Z2dpbmcgbW9yZSBkaWZmaWN1bHQsIHNvIHdlIHN0YXJ0IHdpdGhcbiAgICAgIC8vIGVycm9yVGhyb3duIHNldCB0byB0cnVlIGJlZm9yZSBzZXR0aW5nIGl0IHRvIGZhbHNlIGFmdGVyIGNhbGxpbmdcbiAgICAgIC8vIGNsb3NlIC0tIGlmIGl0J3Mgc3RpbGwgc2V0IHRvIHRydWUgaW4gdGhlIGZpbmFsbHkgYmxvY2ssIGl0IG1lYW5zXG4gICAgICAvLyBvbmUgb2YgdGhlc2UgY2FsbHMgdGhyZXcuXG4gICAgICBlcnJvclRocm93biA9IHRydWU7XG4gICAgICB0aGlzLmluaXRpYWxpemVBbGwoMCk7XG4gICAgICByZXQgPSBtZXRob2QuY2FsbChzY29wZSwgYSwgYiwgYywgZCwgZSwgZik7XG4gICAgICBlcnJvclRocm93biA9IGZhbHNlO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoZXJyb3JUaHJvd24pIHtcbiAgICAgICAgICAvLyBJZiBgbWV0aG9kYCB0aHJvd3MsIHByZWZlciB0byBzaG93IHRoYXQgc3RhY2sgdHJhY2Ugb3ZlciBhbnkgdGhyb3duXG4gICAgICAgICAgLy8gYnkgaW52b2tpbmcgYGNsb3NlQWxsYC5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZUFsbCgwKTtcbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gU2luY2UgYG1ldGhvZGAgZGlkbid0IHRocm93LCB3ZSBkb24ndCB3YW50IHRvIHNpbGVuY2UgdGhlIGV4Y2VwdGlvblxuICAgICAgICAgIC8vIGhlcmUuXG4gICAgICAgICAgdGhpcy5jbG9zZUFsbCgwKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgdGhpcy5faXNJblRyYW5zYWN0aW9uID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH0sXG5cbiAgaW5pdGlhbGl6ZUFsbDogZnVuY3Rpb24oc3RhcnRJbmRleCkge1xuICAgIHZhciB0cmFuc2FjdGlvbldyYXBwZXJzID0gdGhpcy50cmFuc2FjdGlvbldyYXBwZXJzO1xuICAgIGZvciAodmFyIGkgPSBzdGFydEluZGV4OyBpIDwgdHJhbnNhY3Rpb25XcmFwcGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHdyYXBwZXIgPSB0cmFuc2FjdGlvbldyYXBwZXJzW2ldO1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gQ2F0Y2hpbmcgZXJyb3JzIG1ha2VzIGRlYnVnZ2luZyBtb3JlIGRpZmZpY3VsdCwgc28gd2Ugc3RhcnQgd2l0aCB0aGVcbiAgICAgICAgLy8gT0JTRVJWRURfRVJST1Igc3RhdGUgYmVmb3JlIG92ZXJ3cml0aW5nIGl0IHdpdGggdGhlIHJlYWwgcmV0dXJuIHZhbHVlXG4gICAgICAgIC8vIG9mIGluaXRpYWxpemUgLS0gaWYgaXQncyBzdGlsbCBzZXQgdG8gT0JTRVJWRURfRVJST1IgaW4gdGhlIGZpbmFsbHlcbiAgICAgICAgLy8gYmxvY2ssIGl0IG1lYW5zIHdyYXBwZXIuaW5pdGlhbGl6ZSB0aHJldy5cbiAgICAgICAgdGhpcy53cmFwcGVySW5pdERhdGFbaV0gPSBUcmFuc2FjdGlvbi5PQlNFUlZFRF9FUlJPUjtcbiAgICAgICAgdGhpcy53cmFwcGVySW5pdERhdGFbaV0gPSB3cmFwcGVyLmluaXRpYWxpemUgP1xuICAgICAgICAgIHdyYXBwZXIuaW5pdGlhbGl6ZS5jYWxsKHRoaXMpIDpcbiAgICAgICAgICBudWxsO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKHRoaXMud3JhcHBlckluaXREYXRhW2ldID09PSBUcmFuc2FjdGlvbi5PQlNFUlZFRF9FUlJPUikge1xuICAgICAgICAgIC8vIFRoZSBpbml0aWFsaXplciBmb3Igd3JhcHBlciBpIHRocmV3IGFuIGVycm9yOyBpbml0aWFsaXplIHRoZVxuICAgICAgICAgIC8vIHJlbWFpbmluZyB3cmFwcGVycyBidXQgc2lsZW5jZSBhbnkgZXhjZXB0aW9ucyBmcm9tIHRoZW0gdG8gZW5zdXJlXG4gICAgICAgICAgLy8gdGhhdCB0aGUgZmlyc3QgZXJyb3IgaXMgdGhlIG9uZSB0byBidWJibGUgdXAuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZUFsbChpICsgMSk7XG4gICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBJbnZva2VzIGVhY2ggb2YgYHRoaXMudHJhbnNhY3Rpb25XcmFwcGVycy5jbG9zZVtpXWAgZnVuY3Rpb25zLCBwYXNzaW5nIGludG9cbiAgICogdGhlbSB0aGUgcmVzcGVjdGl2ZSByZXR1cm4gdmFsdWVzIG9mIGB0aGlzLnRyYW5zYWN0aW9uV3JhcHBlcnMuaW5pdFtpXWBcbiAgICogKGBjbG9zZWBycyB0aGF0IGNvcnJlc3BvbmQgdG8gaW5pdGlhbGl6ZXJzIHRoYXQgZmFpbGVkIHdpbGwgbm90IGJlXG4gICAqIGludm9rZWQpLlxuICAgKi9cbiAgY2xvc2VBbGw6IGZ1bmN0aW9uKHN0YXJ0SW5kZXgpIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgdGhpcy5pc0luVHJhbnNhY3Rpb24oKSxcbiAgICAgICdUcmFuc2FjdGlvbi5jbG9zZUFsbCgpOiBDYW5ub3QgY2xvc2UgdHJhbnNhY3Rpb24gd2hlbiBub25lIGFyZSBvcGVuLidcbiAgICApIDogaW52YXJpYW50KHRoaXMuaXNJblRyYW5zYWN0aW9uKCkpKTtcbiAgICB2YXIgdHJhbnNhY3Rpb25XcmFwcGVycyA9IHRoaXMudHJhbnNhY3Rpb25XcmFwcGVycztcbiAgICBmb3IgKHZhciBpID0gc3RhcnRJbmRleDsgaSA8IHRyYW5zYWN0aW9uV3JhcHBlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB3cmFwcGVyID0gdHJhbnNhY3Rpb25XcmFwcGVyc1tpXTtcbiAgICAgIHZhciBpbml0RGF0YSA9IHRoaXMud3JhcHBlckluaXREYXRhW2ldO1xuICAgICAgdmFyIGVycm9yVGhyb3duO1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gQ2F0Y2hpbmcgZXJyb3JzIG1ha2VzIGRlYnVnZ2luZyBtb3JlIGRpZmZpY3VsdCwgc28gd2Ugc3RhcnQgd2l0aFxuICAgICAgICAvLyBlcnJvclRocm93biBzZXQgdG8gdHJ1ZSBiZWZvcmUgc2V0dGluZyBpdCB0byBmYWxzZSBhZnRlciBjYWxsaW5nXG4gICAgICAgIC8vIGNsb3NlIC0tIGlmIGl0J3Mgc3RpbGwgc2V0IHRvIHRydWUgaW4gdGhlIGZpbmFsbHkgYmxvY2ssIGl0IG1lYW5zXG4gICAgICAgIC8vIHdyYXBwZXIuY2xvc2UgdGhyZXcuXG4gICAgICAgIGVycm9yVGhyb3duID0gdHJ1ZTtcbiAgICAgICAgaWYgKGluaXREYXRhICE9PSBUcmFuc2FjdGlvbi5PQlNFUlZFRF9FUlJPUiAmJiB3cmFwcGVyLmNsb3NlKSB7XG4gICAgICAgICAgd3JhcHBlci5jbG9zZS5jYWxsKHRoaXMsIGluaXREYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlcnJvclRocm93biA9IGZhbHNlO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKGVycm9yVGhyb3duKSB7XG4gICAgICAgICAgLy8gVGhlIGNsb3NlciBmb3Igd3JhcHBlciBpIHRocmV3IGFuIGVycm9yOyBjbG9zZSB0aGUgcmVtYWluaW5nXG4gICAgICAgICAgLy8gd3JhcHBlcnMgYnV0IHNpbGVuY2UgYW55IGV4Y2VwdGlvbnMgZnJvbSB0aGVtIHRvIGVuc3VyZSB0aGF0IHRoZVxuICAgICAgICAgIC8vIGZpcnN0IGVycm9yIGlzIHRoZSBvbmUgdG8gYnViYmxlIHVwLlxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlQWxsKGkgKyAxKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMud3JhcHBlckluaXREYXRhLmxlbmd0aCA9IDA7XG4gIH1cbn07XG5cbnZhciBUcmFuc2FjdGlvbiA9IHtcblxuICBNaXhpbjogTWl4aW4sXG5cbiAgLyoqXG4gICAqIFRva2VuIHRvIGxvb2sgZm9yIHRvIGRldGVybWluZSBpZiBhbiBlcnJvciBvY2N1cmVkLlxuICAgKi9cbiAgT0JTRVJWRURfRVJST1I6IHt9XG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNhY3Rpb247XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/Transaction.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function(scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/ViewportMetrics.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.'\n  ) : invariant(next != null));\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvYWNjdW11bGF0ZUludG8uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNC0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGFjY3VtdWxhdGVJbnRvXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG4vKipcbiAqXG4gKiBBY2N1bXVsYXRlcyBpdGVtcyB0aGF0IG11c3Qgbm90IGJlIG51bGwgb3IgdW5kZWZpbmVkIGludG8gdGhlIGZpcnN0IG9uZS4gVGhpc1xuICogaXMgdXNlZCB0byBjb25zZXJ2ZSBtZW1vcnkgYnkgYXZvaWRpbmcgYXJyYXkgYWxsb2NhdGlvbnMsIGFuZCB0aHVzIHNhY3JpZmljZXNcbiAqIEFQSSBjbGVhbm5lc3MuIFNpbmNlIGBjdXJyZW50YCBjYW4gYmUgbnVsbCBiZWZvcmUgYmVpbmcgcGFzc2VkIGluIGFuZCBub3RcbiAqIG51bGwgYWZ0ZXIgdGhpcyBmdW5jdGlvbiwgbWFrZSBzdXJlIHRvIGFzc2lnbiBpdCBiYWNrIHRvIGBjdXJyZW50YDpcbiAqXG4gKiBgYSA9IGFjY3VtdWxhdGVJbnRvKGEsIGIpO2BcbiAqXG4gKiBUaGlzIEFQSSBzaG91bGQgYmUgc3BhcmluZ2x5IHVzZWQuIFRyeSBgYWNjdW11bGF0ZWAgZm9yIHNvbWV0aGluZyBjbGVhbmVyLlxuICpcbiAqIEByZXR1cm4geyp8YXJyYXk8Kj59IEFuIGFjY3VtdWxhdGlvbiBvZiBpdGVtcy5cbiAqL1xuXG5mdW5jdGlvbiBhY2N1bXVsYXRlSW50byhjdXJyZW50LCBuZXh0KSB7XG4gIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgbmV4dCAhPSBudWxsLFxuICAgICdhY2N1bXVsYXRlSW50byguLi4pOiBBY2N1bXVsYXRlZCBpdGVtcyBtdXN0IG5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZC4nXG4gICkgOiBpbnZhcmlhbnQobmV4dCAhPSBudWxsKSk7XG4gIGlmIChjdXJyZW50ID09IG51bGwpIHtcbiAgICByZXR1cm4gbmV4dDtcbiAgfVxuXG4gIC8vIEJvdGggYXJlIG5vdCBlbXB0eS4gV2FybmluZzogTmV2ZXIgY2FsbCB4LmNvbmNhdCh5KSB3aGVuIHlvdSBhcmUgbm90XG4gIC8vIGNlcnRhaW4gdGhhdCB4IGlzIGFuIEFycmF5ICh4IGNvdWxkIGJlIGEgc3RyaW5nIHdpdGggY29uY2F0IG1ldGhvZCkuXG4gIHZhciBjdXJyZW50SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoY3VycmVudCk7XG4gIHZhciBuZXh0SXNBcnJheSA9IEFycmF5LmlzQXJyYXkobmV4dCk7XG5cbiAgaWYgKGN1cnJlbnRJc0FycmF5ICYmIG5leHRJc0FycmF5KSB7XG4gICAgY3VycmVudC5wdXNoLmFwcGx5KGN1cnJlbnQsIG5leHQpO1xuICAgIHJldHVybiBjdXJyZW50O1xuICB9XG5cbiAgaWYgKGN1cnJlbnRJc0FycmF5KSB7XG4gICAgY3VycmVudC5wdXNoKG5leHQpO1xuICAgIHJldHVybiBjdXJyZW50O1xuICB9XG5cbiAgaWYgKG5leHRJc0FycmF5KSB7XG4gICAgLy8gQSBiaXQgdG9vIGRhbmdlcm91cyB0byBtdXRhdGUgYG5leHRgLlxuICAgIHJldHVybiBbY3VycmVudF0uY29uY2F0KG5leHQpO1xuICB9XG5cbiAgcmV0dXJuIFtjdXJyZW50LCBuZXh0XTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhY2N1bXVsYXRlSW50bztcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/accumulateInto.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/adler32.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/adler32.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n/* jslint bitwise:true */\n\n'use strict';\n\nvar MOD = 65521;\n\n// This is a clean-room implementation of adler32 designed for detecting\n// if markup is not what we expect it to be. It does not need to be\n// cryptographically strong, only reasonably good at detecting if markup\n// generated on the server is different than that on the client.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  for (var i = 0; i < data.length; i++) {\n    a = (a + data.charCodeAt(i)) % MOD;\n    b = (b + a) % MOD;\n  }\n  return a | (b << 16);\n}\n\nmodule.exports = adler32;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/adler32.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/adler32.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelize.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelize.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function(_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelize.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/camelize.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelizeStyleName.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelizeStyleName.js","source":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar camelize = require(\"./camelize\");\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n","deps":{"./camelize":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelize.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelizeStyleName.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/camelizeStyleName.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\nvar isTextNode = require(\"./isTextNode\");\n\n/*jslint bitwise:true */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if (outerNode.contains) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n","deps":{"./isTextNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextNode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/containsNode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createArrayFromMixed.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createArrayFromMixed.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\nvar toArray = require(\"./toArray\");\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj &&\n    // arrays are objects, NodeLists are functions in Safari\n    (typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    ('length' in obj) &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    (typeof obj.nodeType != 'number') &&\n    (\n      // a real array\n      (// HTMLCollection/NodeList\n      (Array.isArray(obj) ||\n      // arguments\n      ('callee' in obj) || 'item' in obj))\n    )\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n","deps":{"./toArray":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/toArray.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createArrayFromMixed.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/createArrayFromMixed.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createFullPageComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createFullPageComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createFullPageComponent\n * @typechecks\n */\n\n'use strict';\n\n// Defeat circular references by requiring this directly.\nvar ReactClass = require(\"./ReactClass\");\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Create a component that will throw an exception when unmounted.\n *\n * Components like <html> <head> and <body> can't be removed or added\n * easily in a cross-browser way, however it's valuable to be able to\n * take advantage of React's reconciliation for styling and <title>\n * management. So we just document it and throw in dangerous cases.\n *\n * @param {string} tag The tag to wrap\n * @return {function} convenience constructor of new component\n */\nfunction createFullPageComponent(tag) {\n  var elementFactory = ReactElement.createFactory(tag);\n\n  var FullPageComponent = ReactClass.createClass({\n    tagName: tag.toUpperCase(),\n    displayName: 'ReactFullPageComponent' + tag,\n\n    componentWillUnmount: function() {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        false,\n        '%s tried to unmount. Because of cross-browser quirks it is ' +\n        'impossible to unmount some top-level components (eg <html>, <head>, ' +\n        'and <body>) reliably and efficiently. To fix this, have a single ' +\n        'top-level component that never unmounts render these elements.',\n        this.constructor.displayName\n      ) : invariant(false));\n    },\n\n    render: function() {\n      return elementFactory(this.props);\n    }\n  });\n\n  return FullPageComponent;\n}\n\nmodule.exports = createFullPageComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvY3JlYXRlRnVsbFBhZ2VDb21wb25lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBjcmVhdGVGdWxsUGFnZUNvbXBvbmVudFxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8vIERlZmVhdCBjaXJjdWxhciByZWZlcmVuY2VzIGJ5IHJlcXVpcmluZyB0aGlzIGRpcmVjdGx5LlxudmFyIFJlYWN0Q2xhc3MgPSByZXF1aXJlKFwiLi9SZWFjdENsYXNzXCIpO1xudmFyIFJlYWN0RWxlbWVudCA9IHJlcXVpcmUoXCIuL1JlYWN0RWxlbWVudFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBjb21wb25lbnQgdGhhdCB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiB3aGVuIHVubW91bnRlZC5cbiAqXG4gKiBDb21wb25lbnRzIGxpa2UgPGh0bWw+IDxoZWFkPiBhbmQgPGJvZHk+IGNhbid0IGJlIHJlbW92ZWQgb3IgYWRkZWRcbiAqIGVhc2lseSBpbiBhIGNyb3NzLWJyb3dzZXIgd2F5LCBob3dldmVyIGl0J3MgdmFsdWFibGUgdG8gYmUgYWJsZSB0b1xuICogdGFrZSBhZHZhbnRhZ2Ugb2YgUmVhY3QncyByZWNvbmNpbGlhdGlvbiBmb3Igc3R5bGluZyBhbmQgPHRpdGxlPlxuICogbWFuYWdlbWVudC4gU28gd2UganVzdCBkb2N1bWVudCBpdCBhbmQgdGhyb3cgaW4gZGFuZ2Vyb3VzIGNhc2VzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIHRhZyB0byB3cmFwXG4gKiBAcmV0dXJuIHtmdW5jdGlvbn0gY29udmVuaWVuY2UgY29uc3RydWN0b3Igb2YgbmV3IGNvbXBvbmVudFxuICovXG5mdW5jdGlvbiBjcmVhdGVGdWxsUGFnZUNvbXBvbmVudCh0YWcpIHtcbiAgdmFyIGVsZW1lbnRGYWN0b3J5ID0gUmVhY3RFbGVtZW50LmNyZWF0ZUZhY3RvcnkodGFnKTtcblxuICB2YXIgRnVsbFBhZ2VDb21wb25lbnQgPSBSZWFjdENsYXNzLmNyZWF0ZUNsYXNzKHtcbiAgICB0YWdOYW1lOiB0YWcudG9VcHBlckNhc2UoKSxcbiAgICBkaXNwbGF5TmFtZTogJ1JlYWN0RnVsbFBhZ2VDb21wb25lbnQnICsgdGFnLFxuXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICAgICAgZmFsc2UsXG4gICAgICAgICclcyB0cmllZCB0byB1bm1vdW50LiBCZWNhdXNlIG9mIGNyb3NzLWJyb3dzZXIgcXVpcmtzIGl0IGlzICcgK1xuICAgICAgICAnaW1wb3NzaWJsZSB0byB1bm1vdW50IHNvbWUgdG9wLWxldmVsIGNvbXBvbmVudHMgKGVnIDxodG1sPiwgPGhlYWQ+LCAnICtcbiAgICAgICAgJ2FuZCA8Ym9keT4pIHJlbGlhYmx5IGFuZCBlZmZpY2llbnRseS4gVG8gZml4IHRoaXMsIGhhdmUgYSBzaW5nbGUgJyArXG4gICAgICAgICd0b3AtbGV2ZWwgY29tcG9uZW50IHRoYXQgbmV2ZXIgdW5tb3VudHMgcmVuZGVyIHRoZXNlIGVsZW1lbnRzLicsXG4gICAgICAgIHRoaXMuY29uc3RydWN0b3IuZGlzcGxheU5hbWVcbiAgICAgICkgOiBpbnZhcmlhbnQoZmFsc2UpKTtcbiAgICB9LFxuXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBlbGVtZW50RmFjdG9yeSh0aGlzLnByb3BzKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBGdWxsUGFnZUNvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVGdWxsUGFnZUNvbXBvbmVudDtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactClass":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createFullPageComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/createFullPageComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createNodesFromMarkup.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createNodesFromMarkup.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*jslint evil: true, sub: true */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar createArrayFromMixed = require(\"./createArrayFromMixed\");\nvar getMarkupWrap = require(\"./getMarkupWrap\");\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      handleScript,\n      'createNodesFromMarkup(...): Unexpected <script> element rendered.'\n    ) : invariant(handleScript));\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvY3JlYXRlTm9kZXNGcm9tTWFya3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBjcmVhdGVOb2Rlc0Zyb21NYXJrdXBcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLypqc2xpbnQgZXZpbDogdHJ1ZSwgc3ViOiB0cnVlICovXG5cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHJlcXVpcmUoXCIuL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpO1xuXG52YXIgY3JlYXRlQXJyYXlGcm9tTWl4ZWQgPSByZXF1aXJlKFwiLi9jcmVhdGVBcnJheUZyb21NaXhlZFwiKTtcbnZhciBnZXRNYXJrdXBXcmFwID0gcmVxdWlyZShcIi4vZ2V0TWFya3VwV3JhcFwiKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbi8qKlxuICogRHVtbXkgY29udGFpbmVyIHVzZWQgdG8gcmVuZGVyIGFsbCBtYXJrdXAuXG4gKi9cbnZhciBkdW1teU5vZGUgPVxuICBFeGVjdXRpb25FbnZpcm9ubWVudC5jYW5Vc2VET00gPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSA6IG51bGw7XG5cbi8qKlxuICogUGF0dGVybiB1c2VkIGJ5IGBnZXROb2RlTmFtZWAuXG4gKi9cbnZhciBub2RlTmFtZVBhdHRlcm4gPSAvXlxccyo8KFxcdyspLztcblxuLyoqXG4gKiBFeHRyYWN0cyB0aGUgYG5vZGVOYW1lYCBvZiB0aGUgZmlyc3QgZWxlbWVudCBpbiBhIHN0cmluZyBvZiBtYXJrdXAuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1hcmt1cCBTdHJpbmcgb2YgbWFya3VwLlxuICogQHJldHVybiB7P3N0cmluZ30gTm9kZSBuYW1lIG9mIHRoZSBzdXBwbGllZCBtYXJrdXAuXG4gKi9cbmZ1bmN0aW9uIGdldE5vZGVOYW1lKG1hcmt1cCkge1xuICB2YXIgbm9kZU5hbWVNYXRjaCA9IG1hcmt1cC5tYXRjaChub2RlTmFtZVBhdHRlcm4pO1xuICByZXR1cm4gbm9kZU5hbWVNYXRjaCAmJiBub2RlTmFtZU1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBjb250YWluaW5nIHRoZSBub2RlcyByZW5kZXJlZCBmcm9tIHRoZSBzdXBwbGllZCBtYXJrdXAuIFRoZVxuICogb3B0aW9uYWxseSBzdXBwbGllZCBgaGFuZGxlU2NyaXB0YCBmdW5jdGlvbiB3aWxsIGJlIGludm9rZWQgb25jZSBmb3IgZWFjaFxuICogPHNjcmlwdD4gZWxlbWVudCB0aGF0IGlzIHJlbmRlcmVkLiBJZiBubyBgaGFuZGxlU2NyaXB0YCBmdW5jdGlvbiBpcyBzdXBwbGllZCxcbiAqIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gaWYgYW55IDxzY3JpcHQ+IGVsZW1lbnRzIGFyZSByZW5kZXJlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWFya3VwIEEgc3RyaW5nIG9mIHZhbGlkIEhUTUwgbWFya3VwLlxuICogQHBhcmFtIHs/ZnVuY3Rpb259IGhhbmRsZVNjcmlwdCBJbnZva2VkIG9uY2UgZm9yIGVhY2ggcmVuZGVyZWQgPHNjcmlwdD4uXG4gKiBAcmV0dXJuIHthcnJheTxET01FbGVtZW50fERPTVRleHROb2RlPn0gQW4gYXJyYXkgb2YgcmVuZGVyZWQgbm9kZXMuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZU5vZGVzRnJvbU1hcmt1cChtYXJrdXAsIGhhbmRsZVNjcmlwdCkge1xuICB2YXIgbm9kZSA9IGR1bW15Tm9kZTtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudCghIWR1bW15Tm9kZSwgJ2NyZWF0ZU5vZGVzRnJvbU1hcmt1cCBkdW1teSBub3QgaW5pdGlhbGl6ZWQnKSA6IGludmFyaWFudCghIWR1bW15Tm9kZSkpO1xuICB2YXIgbm9kZU5hbWUgPSBnZXROb2RlTmFtZShtYXJrdXApO1xuXG4gIHZhciB3cmFwID0gbm9kZU5hbWUgJiYgZ2V0TWFya3VwV3JhcChub2RlTmFtZSk7XG4gIGlmICh3cmFwKSB7XG4gICAgbm9kZS5pbm5lckhUTUwgPSB3cmFwWzFdICsgbWFya3VwICsgd3JhcFsyXTtcblxuICAgIHZhciB3cmFwRGVwdGggPSB3cmFwWzBdO1xuICAgIHdoaWxlICh3cmFwRGVwdGgtLSkge1xuICAgICAgbm9kZSA9IG5vZGUubGFzdENoaWxkO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBub2RlLmlubmVySFRNTCA9IG1hcmt1cDtcbiAgfVxuXG4gIHZhciBzY3JpcHRzID0gbm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0Jyk7XG4gIGlmIChzY3JpcHRzLmxlbmd0aCkge1xuICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgICBoYW5kbGVTY3JpcHQsXG4gICAgICAnY3JlYXRlTm9kZXNGcm9tTWFya3VwKC4uLik6IFVuZXhwZWN0ZWQgPHNjcmlwdD4gZWxlbWVudCByZW5kZXJlZC4nXG4gICAgKSA6IGludmFyaWFudChoYW5kbGVTY3JpcHQpKTtcbiAgICBjcmVhdGVBcnJheUZyb21NaXhlZChzY3JpcHRzKS5mb3JFYWNoKGhhbmRsZVNjcmlwdCk7XG4gIH1cblxuICB2YXIgbm9kZXMgPSBjcmVhdGVBcnJheUZyb21NaXhlZChub2RlLmNoaWxkTm9kZXMpO1xuICB3aGlsZSAobm9kZS5sYXN0Q2hpbGQpIHtcbiAgICBub2RlLnJlbW92ZUNoaWxkKG5vZGUubGFzdENoaWxkKTtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlTm9kZXNGcm9tTWFya3VwO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./getMarkupWrap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./createArrayFromMixed":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createArrayFromMixed.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createNodesFromMarkup.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/createNodesFromMarkup.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/dangerousStyleValue.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/dangerousStyleValue.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require(\"./CSSProperty\");\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 ||\n      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n","deps":{"./CSSProperty":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/dangerousStyleValue.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/dangerousStyleValue.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/emptyFunction.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvZW1wdHlPYmplY3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGVtcHR5T2JqZWN0XG4gKi9cblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gIE9iamVjdC5mcmVlemUoZW1wdHlPYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5T2JqZWN0O1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/emptyObject.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/escapeTextContentForBrowser.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\nvar ReactInstanceMap = require(\"./ReactInstanceMap\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar invariant = require(\"./invariant\");\nvar isNode = require(\"./isNode\");\nvar warning = require(\"./warning\");\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        owner._warnedAboutRefsInRender,\n        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +\n        'render() should be a pure function of props and state. It should ' +\n        'never access something that requires stale data from the previous ' +\n        'render, such as refs. Move this logic to componentDidMount and ' +\n        'componentDidUpdate instead.',\n        owner.getName() || 'A component'\n      ) : null);\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (isNode(componentOrElement)) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    componentOrElement.render == null ||\n    typeof componentOrElement.render !== 'function',\n    'Component (with keys: %s) contains `render` method ' +\n    'but is not mounted in the DOM',\n    Object.keys(componentOrElement)\n  ) : invariant(componentOrElement.render == null ||\n  typeof componentOrElement.render !== 'function'));\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    false,\n    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',\n    Object.keys(componentOrElement)\n  ) : invariant(false));\n}\n\nmodule.exports = findDOMNode;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvZmluZERPTU5vZGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgZmluZERPTU5vZGVcbiAqIEB0eXBlY2hlY2tzIHN0YXRpYy1vbmx5XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RDdXJyZW50T3duZXIgPSByZXF1aXJlKFwiLi9SZWFjdEN1cnJlbnRPd25lclwiKTtcbnZhciBSZWFjdEluc3RhbmNlTWFwID0gcmVxdWlyZShcIi4vUmVhY3RJbnN0YW5jZU1hcFwiKTtcbnZhciBSZWFjdE1vdW50ID0gcmVxdWlyZShcIi4vUmVhY3RNb3VudFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcbnZhciBpc05vZGUgPSByZXF1aXJlKFwiLi9pc05vZGVcIik7XG52YXIgd2FybmluZyA9IHJlcXVpcmUoXCIuL3dhcm5pbmdcIik7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgRE9NIG5vZGUgcmVuZGVyZWQgYnkgdGhpcyBlbGVtZW50LlxuICpcbiAqIEBwYXJhbSB7UmVhY3RDb21wb25lbnR8RE9NRWxlbWVudH0gY29tcG9uZW50T3JFbGVtZW50XG4gKiBAcmV0dXJuIHtET01FbGVtZW50fSBUaGUgcm9vdCBub2RlIG9mIHRoaXMgZWxlbWVudC5cbiAqL1xuZnVuY3Rpb24gZmluZERPTU5vZGUoY29tcG9uZW50T3JFbGVtZW50KSB7XG4gIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICB2YXIgb3duZXIgPSBSZWFjdEN1cnJlbnRPd25lci5jdXJyZW50O1xuICAgIGlmIChvd25lciAhPT0gbnVsbCkge1xuICAgICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICAgIG93bmVyLl93YXJuZWRBYm91dFJlZnNJblJlbmRlcixcbiAgICAgICAgJyVzIGlzIGFjY2Vzc2luZyBnZXRET01Ob2RlIG9yIGZpbmRET01Ob2RlIGluc2lkZSBpdHMgcmVuZGVyKCkuICcgK1xuICAgICAgICAncmVuZGVyKCkgc2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbiBvZiBwcm9wcyBhbmQgc3RhdGUuIEl0IHNob3VsZCAnICtcbiAgICAgICAgJ25ldmVyIGFjY2VzcyBzb21ldGhpbmcgdGhhdCByZXF1aXJlcyBzdGFsZSBkYXRhIGZyb20gdGhlIHByZXZpb3VzICcgK1xuICAgICAgICAncmVuZGVyLCBzdWNoIGFzIHJlZnMuIE1vdmUgdGhpcyBsb2dpYyB0byBjb21wb25lbnREaWRNb3VudCBhbmQgJyArXG4gICAgICAgICdjb21wb25lbnREaWRVcGRhdGUgaW5zdGVhZC4nLFxuICAgICAgICBvd25lci5nZXROYW1lKCkgfHwgJ0EgY29tcG9uZW50J1xuICAgICAgKSA6IG51bGwpO1xuICAgICAgb3duZXIuX3dhcm5lZEFib3V0UmVmc0luUmVuZGVyID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgaWYgKGNvbXBvbmVudE9yRWxlbWVudCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgaWYgKGlzTm9kZShjb21wb25lbnRPckVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIGNvbXBvbmVudE9yRWxlbWVudDtcbiAgfVxuICBpZiAoUmVhY3RJbnN0YW5jZU1hcC5oYXMoY29tcG9uZW50T3JFbGVtZW50KSkge1xuICAgIHJldHVybiBSZWFjdE1vdW50LmdldE5vZGVGcm9tSW5zdGFuY2UoY29tcG9uZW50T3JFbGVtZW50KTtcbiAgfVxuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIGNvbXBvbmVudE9yRWxlbWVudC5yZW5kZXIgPT0gbnVsbCB8fFxuICAgIHR5cGVvZiBjb21wb25lbnRPckVsZW1lbnQucmVuZGVyICE9PSAnZnVuY3Rpb24nLFxuICAgICdDb21wb25lbnQgKHdpdGgga2V5czogJXMpIGNvbnRhaW5zIGByZW5kZXJgIG1ldGhvZCAnICtcbiAgICAnYnV0IGlzIG5vdCBtb3VudGVkIGluIHRoZSBET00nLFxuICAgIE9iamVjdC5rZXlzKGNvbXBvbmVudE9yRWxlbWVudClcbiAgKSA6IGludmFyaWFudChjb21wb25lbnRPckVsZW1lbnQucmVuZGVyID09IG51bGwgfHxcbiAgdHlwZW9mIGNvbXBvbmVudE9yRWxlbWVudC5yZW5kZXIgIT09ICdmdW5jdGlvbicpKTtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBmYWxzZSxcbiAgICAnRWxlbWVudCBhcHBlYXJzIHRvIGJlIG5laXRoZXIgUmVhY3RDb21wb25lbnQgbm9yIERPTU5vZGUgKGtleXM6ICVzKScsXG4gICAgT2JqZWN0LmtleXMoY29tcG9uZW50T3JFbGVtZW50KVxuICApIDogaW52YXJpYW50KGZhbHNlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZERPTU5vZGU7XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactCurrentOwner":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js","./ReactInstanceMap":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js","./ReactMount":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./isNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/findDOMNode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/flattenChildren.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/flattenChildren.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require(\"./traverseAllChildren\");\nvar warning = require(\"./warning\");\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = !result.hasOwnProperty(name);\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      keyUnique,\n      'flattenChildren(...): Encountered two children with the same key, ' +\n      '`%s`. Child keys must be unique; when two children share a key, only ' +\n      'the first child will be used.',\n      name\n    ) : null);\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvZmxhdHRlbkNoaWxkcmVuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGZsYXR0ZW5DaGlsZHJlblxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHRyYXZlcnNlQWxsQ2hpbGRyZW4gPSByZXF1aXJlKFwiLi90cmF2ZXJzZUFsbENoaWxkcmVuXCIpO1xudmFyIHdhcm5pbmcgPSByZXF1aXJlKFwiLi93YXJuaW5nXCIpO1xuXG4vKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHRyYXZlcnNlQ29udGV4dCBDb250ZXh0IHBhc3NlZCB0aHJvdWdoIHRyYXZlcnNhbC5cbiAqIEBwYXJhbSB7P1JlYWN0Q29tcG9uZW50fSBjaGlsZCBSZWFjdCBjaGlsZCBjb21wb25lbnQuXG4gKiBAcGFyYW0geyFzdHJpbmd9IG5hbWUgU3RyaW5nIG5hbWUgb2Yga2V5IHBhdGggdG8gY2hpbGQuXG4gKi9cbmZ1bmN0aW9uIGZsYXR0ZW5TaW5nbGVDaGlsZEludG9Db250ZXh0KHRyYXZlcnNlQ29udGV4dCwgY2hpbGQsIG5hbWUpIHtcbiAgLy8gV2UgZm91bmQgYSBjb21wb25lbnQgaW5zdGFuY2UuXG4gIHZhciByZXN1bHQgPSB0cmF2ZXJzZUNvbnRleHQ7XG4gIHZhciBrZXlVbmlxdWUgPSAhcmVzdWx0Lmhhc093blByb3BlcnR5KG5hbWUpO1xuICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICBrZXlVbmlxdWUsXG4gICAgICAnZmxhdHRlbkNoaWxkcmVuKC4uLik6IEVuY291bnRlcmVkIHR3byBjaGlsZHJlbiB3aXRoIHRoZSBzYW1lIGtleSwgJyArXG4gICAgICAnYCVzYC4gQ2hpbGQga2V5cyBtdXN0IGJlIHVuaXF1ZTsgd2hlbiB0d28gY2hpbGRyZW4gc2hhcmUgYSBrZXksIG9ubHkgJyArXG4gICAgICAndGhlIGZpcnN0IGNoaWxkIHdpbGwgYmUgdXNlZC4nLFxuICAgICAgbmFtZVxuICAgICkgOiBudWxsKTtcbiAgfVxuICBpZiAoa2V5VW5pcXVlICYmIGNoaWxkICE9IG51bGwpIHtcbiAgICByZXN1bHRbbmFtZV0gPSBjaGlsZDtcbiAgfVxufVxuXG4vKipcbiAqIEZsYXR0ZW5zIGNoaWxkcmVuIHRoYXQgYXJlIHR5cGljYWxseSBzcGVjaWZpZWQgYXMgYHByb3BzLmNoaWxkcmVuYC4gQW55IG51bGxcbiAqIGNoaWxkcmVuIHdpbGwgbm90IGJlIGluY2x1ZGVkIGluIHRoZSByZXN1bHRpbmcgb2JqZWN0LlxuICogQHJldHVybiB7IW9iamVjdH0gZmxhdHRlbmVkIGNoaWxkcmVuIGtleWVkIGJ5IG5hbWUuXG4gKi9cbmZ1bmN0aW9uIGZsYXR0ZW5DaGlsZHJlbihjaGlsZHJlbikge1xuICBpZiAoY2hpbGRyZW4gPT0gbnVsbCkge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuICB2YXIgcmVzdWx0ID0ge307XG4gIHRyYXZlcnNlQWxsQ2hpbGRyZW4oY2hpbGRyZW4sIGZsYXR0ZW5TaW5nbGVDaGlsZEludG9Db250ZXh0LCByZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZsYXR0ZW5DaGlsZHJlbjtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./traverseAllChildren":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/flattenChildren.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/flattenChildren.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js","source":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n\"use strict\";\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch(e) {\n  }\n}\n\nmodule.exports = focusNode;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/focusNode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/forEachAccumulated.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document body is not yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/ {\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getActiveElement.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getEventCharCode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventKey.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventKey.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require(\"./getEventCharCode\");\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n","deps":{"./getEventCharCode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventKey.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getEventKey.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  /*jshint validthis:true */\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getEventModifierState.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getEventTarget.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getIteratorFn.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\nvar shouldWrap = {\n  // Force wrapping for SVG elements because if they get created inside a <div>,\n  // they will be initialized in the wrong namespace (and will not display).\n  'circle': true,\n  'clipPath': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'path': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'text': true\n};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg>', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap,\n\n  'circle': svgWrap,\n  'clipPath': svgWrap,\n  'defs': svgWrap,\n  'ellipse': svgWrap,\n  'g': svgWrap,\n  'line': svgWrap,\n  'linearGradient': svgWrap,\n  'path': svgWrap,\n  'polygon': svgWrap,\n  'polyline': svgWrap,\n  'radialGradient': svgWrap,\n  'rect': svgWrap,\n  'stop': svgWrap,\n  'text': svgWrap\n};\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\n\nmodule.exports = getMarkupWrap;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvZ2V0TWFya3VwV3JhcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGdldE1hcmt1cFdyYXBcbiAqL1xuXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSByZXF1aXJlKFwiLi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKTtcblxudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcblxuLyoqXG4gKiBEdW1teSBjb250YWluZXIgdXNlZCB0byBkZXRlY3Qgd2hpY2ggd3JhcHMgYXJlIG5lY2Vzc2FyeS5cbiAqL1xudmFyIGR1bW15Tm9kZSA9XG4gIEV4ZWN1dGlvbkVudmlyb25tZW50LmNhblVzZURPTSA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpIDogbnVsbDtcblxuLyoqXG4gKiBTb21lIGJyb3dzZXJzIGNhbm5vdCB1c2UgYGlubmVySFRNTGAgdG8gcmVuZGVyIGNlcnRhaW4gZWxlbWVudHMgc3RhbmRhbG9uZSxcbiAqIHNvIHdlIHdyYXAgdGhlbSwgcmVuZGVyIHRoZSB3cmFwcGVkIG5vZGVzLCB0aGVuIGV4dHJhY3QgdGhlIGRlc2lyZWQgbm9kZS5cbiAqXG4gKiBJbiBJRTgsIGNlcnRhaW4gZWxlbWVudHMgY2Fubm90IHJlbmRlciBhbG9uZSwgc28gd3JhcCBhbGwgZWxlbWVudHMgKCcqJykuXG4gKi9cbnZhciBzaG91bGRXcmFwID0ge1xuICAvLyBGb3JjZSB3cmFwcGluZyBmb3IgU1ZHIGVsZW1lbnRzIGJlY2F1c2UgaWYgdGhleSBnZXQgY3JlYXRlZCBpbnNpZGUgYSA8ZGl2PixcbiAgLy8gdGhleSB3aWxsIGJlIGluaXRpYWxpemVkIGluIHRoZSB3cm9uZyBuYW1lc3BhY2UgKGFuZCB3aWxsIG5vdCBkaXNwbGF5KS5cbiAgJ2NpcmNsZSc6IHRydWUsXG4gICdjbGlwUGF0aCc6IHRydWUsXG4gICdkZWZzJzogdHJ1ZSxcbiAgJ2VsbGlwc2UnOiB0cnVlLFxuICAnZyc6IHRydWUsXG4gICdsaW5lJzogdHJ1ZSxcbiAgJ2xpbmVhckdyYWRpZW50JzogdHJ1ZSxcbiAgJ3BhdGgnOiB0cnVlLFxuICAncG9seWdvbic6IHRydWUsXG4gICdwb2x5bGluZSc6IHRydWUsXG4gICdyYWRpYWxHcmFkaWVudCc6IHRydWUsXG4gICdyZWN0JzogdHJ1ZSxcbiAgJ3N0b3AnOiB0cnVlLFxuICAndGV4dCc6IHRydWVcbn07XG5cbnZhciBzZWxlY3RXcmFwID0gWzEsICc8c2VsZWN0IG11bHRpcGxlPVwidHJ1ZVwiPicsICc8L3NlbGVjdD4nXTtcbnZhciB0YWJsZVdyYXAgPSBbMSwgJzx0YWJsZT4nLCAnPC90YWJsZT4nXTtcbnZhciB0cldyYXAgPSBbMywgJzx0YWJsZT48dGJvZHk+PHRyPicsICc8L3RyPjwvdGJvZHk+PC90YWJsZT4nXTtcblxudmFyIHN2Z1dyYXAgPSBbMSwgJzxzdmc+JywgJzwvc3ZnPiddO1xuXG52YXIgbWFya3VwV3JhcCA9IHtcbiAgJyonOiBbMSwgJz88ZGl2PicsICc8L2Rpdj4nXSxcblxuICAnYXJlYSc6IFsxLCAnPG1hcD4nLCAnPC9tYXA+J10sXG4gICdjb2wnOiBbMiwgJzx0YWJsZT48dGJvZHk+PC90Ym9keT48Y29sZ3JvdXA+JywgJzwvY29sZ3JvdXA+PC90YWJsZT4nXSxcbiAgJ2xlZ2VuZCc6IFsxLCAnPGZpZWxkc2V0PicsICc8L2ZpZWxkc2V0PiddLFxuICAncGFyYW0nOiBbMSwgJzxvYmplY3Q+JywgJzwvb2JqZWN0PiddLFxuICAndHInOiBbMiwgJzx0YWJsZT48dGJvZHk+JywgJzwvdGJvZHk+PC90YWJsZT4nXSxcblxuICAnb3B0Z3JvdXAnOiBzZWxlY3RXcmFwLFxuICAnb3B0aW9uJzogc2VsZWN0V3JhcCxcblxuICAnY2FwdGlvbic6IHRhYmxlV3JhcCxcbiAgJ2NvbGdyb3VwJzogdGFibGVXcmFwLFxuICAndGJvZHknOiB0YWJsZVdyYXAsXG4gICd0Zm9vdCc6IHRhYmxlV3JhcCxcbiAgJ3RoZWFkJzogdGFibGVXcmFwLFxuXG4gICd0ZCc6IHRyV3JhcCxcbiAgJ3RoJzogdHJXcmFwLFxuXG4gICdjaXJjbGUnOiBzdmdXcmFwLFxuICAnY2xpcFBhdGgnOiBzdmdXcmFwLFxuICAnZGVmcyc6IHN2Z1dyYXAsXG4gICdlbGxpcHNlJzogc3ZnV3JhcCxcbiAgJ2cnOiBzdmdXcmFwLFxuICAnbGluZSc6IHN2Z1dyYXAsXG4gICdsaW5lYXJHcmFkaWVudCc6IHN2Z1dyYXAsXG4gICdwYXRoJzogc3ZnV3JhcCxcbiAgJ3BvbHlnb24nOiBzdmdXcmFwLFxuICAncG9seWxpbmUnOiBzdmdXcmFwLFxuICAncmFkaWFsR3JhZGllbnQnOiBzdmdXcmFwLFxuICAncmVjdCc6IHN2Z1dyYXAsXG4gICdzdG9wJzogc3ZnV3JhcCxcbiAgJ3RleHQnOiBzdmdXcmFwXG59O1xuXG4vKipcbiAqIEdldHMgdGhlIG1hcmt1cCB3cmFwIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBzdXBwbGllZCBgbm9kZU5hbWVgLlxuICpcbiAqIE5PVEU6IFRoaXMgbGF6aWx5IGRldGVjdHMgd2hpY2ggd3JhcHMgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGN1cnJlbnQgYnJvd3Nlci5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbm9kZU5hbWUgTG93ZXJjYXNlIGBub2RlTmFtZWAuXG4gKiBAcmV0dXJuIHs/YXJyYXl9IE1hcmt1cCB3cmFwIGNvbmZpZ3VyYXRpb24sIGlmIGFwcGxpY2FibGUuXG4gKi9cbmZ1bmN0aW9uIGdldE1hcmt1cFdyYXAobm9kZU5hbWUpIHtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudCghIWR1bW15Tm9kZSwgJ01hcmt1cCB3cmFwcGluZyBub2RlIG5vdCBpbml0aWFsaXplZCcpIDogaW52YXJpYW50KCEhZHVtbXlOb2RlKSk7XG4gIGlmICghbWFya3VwV3JhcC5oYXNPd25Qcm9wZXJ0eShub2RlTmFtZSkpIHtcbiAgICBub2RlTmFtZSA9ICcqJztcbiAgfVxuICBpZiAoIXNob3VsZFdyYXAuaGFzT3duUHJvcGVydHkobm9kZU5hbWUpKSB7XG4gICAgaWYgKG5vZGVOYW1lID09PSAnKicpIHtcbiAgICAgIGR1bW15Tm9kZS5pbm5lckhUTUwgPSAnPGxpbmsgLz4nO1xuICAgIH0gZWxzZSB7XG4gICAgICBkdW1teU5vZGUuaW5uZXJIVE1MID0gJzwnICsgbm9kZU5hbWUgKyAnPjwvJyArIG5vZGVOYW1lICsgJz4nO1xuICAgIH1cbiAgICBzaG91bGRXcmFwW25vZGVOYW1lXSA9ICFkdW1teU5vZGUuZmlyc3RDaGlsZDtcbiAgfVxuICByZXR1cm4gc2hvdWxkV3JhcFtub2RlTmFtZV0gPyBtYXJrdXBXcmFwW25vZGVOYW1lXSA6IG51bGw7XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRNYXJrdXBXcmFwO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getMarkupWrap.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getNodeForCharacterOffset.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getNodeForCharacterOffset.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getNodeForCharacterOffset.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getNodeForCharacterOffset.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getReactRootElementInContainer.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getReactRootElementInContainer.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getReactRootElementInContainer\n */\n\n'use strict';\n\nvar DOC_NODE_TYPE = 9;\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n *                                           a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nmodule.exports = getReactRootElementInContainer;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getReactRootElementInContainer.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getReactRootElementInContainer.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ?\n      'textContent' :\n      'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getTextContentAccessor.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getUnboundedScrollPosition.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getUnboundedScrollPosition.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n\"use strict\";\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getUnboundedScrollPosition.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/getUnboundedScrollPosition.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenate.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenate.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenate.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/hyphenate.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenateStyleName.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenateStyleName.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n\"use strict\";\n\nvar hyphenate = require(\"./hyphenate\");\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n","deps":{"./hyphenate":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenate.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenateStyleName.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/hyphenateStyleName.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactEmptyComponent = require(\"./ReactEmptyComponent\");\nvar ReactNativeComponent = require(\"./ReactNativeComponent\");\n\nvar assign = require(\"./Object.assign\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function() { };\nassign(\n  ReactCompositeComponentWrapper.prototype,\n  ReactCompositeComponent.Mixin,\n  {\n    _instantiateReactComponent: instantiateReactComponent\n  }\n);\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return (\n    typeof type === 'function' &&\n    typeof type.prototype !== 'undefined' &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function'\n  );\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {*} parentCompositeType The composite type that resolved this.\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, parentCompositeType) {\n  var instance;\n\n  if (node === null || node === false) {\n    node = ReactEmptyComponent.emptyElement;\n  }\n\n  if (typeof node === 'object') {\n    var element = node;\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        element && (typeof element.type === 'function' ||\n                    typeof element.type === 'string'),\n        'Only functions or strings can be mounted as React components.'\n      ) : null);\n    }\n\n    // Special case string values\n    if (parentCompositeType === element.type &&\n        typeof element.type === 'string') {\n      // Avoid recursion if the wrapper renders itself.\n      instance = ReactNativeComponent.createInternalComponent(element);\n      // All native components are currently wrapped in a composite so we're\n      // safe to assume that this is what we should instantiate.\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // represenations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    (\"production\" !== process.env.NODE_ENV ? invariant(\n      false,\n      'Encountered invalid React node of type %s',\n      typeof node\n    ) : invariant(false));\n  }\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      typeof instance.construct === 'function' &&\n      typeof instance.mountComponent === 'function' &&\n      typeof instance.receiveComponent === 'function' &&\n      typeof instance.unmountComponent === 'function',\n      'Only React Components can be mounted.'\n    ) : null);\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgaW5zdGFudGlhdGVSZWFjdENvbXBvbmVudFxuICogQHR5cGVjaGVja3Mgc3RhdGljLW9ubHlcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdENvbXBvc2l0ZUNvbXBvbmVudCA9IHJlcXVpcmUoXCIuL1JlYWN0Q29tcG9zaXRlQ29tcG9uZW50XCIpO1xudmFyIFJlYWN0RW1wdHlDb21wb25lbnQgPSByZXF1aXJlKFwiLi9SZWFjdEVtcHR5Q29tcG9uZW50XCIpO1xudmFyIFJlYWN0TmF0aXZlQ29tcG9uZW50ID0gcmVxdWlyZShcIi4vUmVhY3ROYXRpdmVDb21wb25lbnRcIik7XG5cbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi9PYmplY3QuYXNzaWduXCIpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoXCIuL2ludmFyaWFudFwiKTtcbnZhciB3YXJuaW5nID0gcmVxdWlyZShcIi4vd2FybmluZ1wiKTtcblxuLy8gVG8gYXZvaWQgYSBjeWNsaWMgZGVwZW5kZW5jeSwgd2UgY3JlYXRlIHRoZSBmaW5hbCBjbGFzcyBpbiB0aGlzIG1vZHVsZVxudmFyIFJlYWN0Q29tcG9zaXRlQ29tcG9uZW50V3JhcHBlciA9IGZ1bmN0aW9uKCkgeyB9O1xuYXNzaWduKFxuICBSZWFjdENvbXBvc2l0ZUNvbXBvbmVudFdyYXBwZXIucHJvdG90eXBlLFxuICBSZWFjdENvbXBvc2l0ZUNvbXBvbmVudC5NaXhpbixcbiAge1xuICAgIF9pbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50OiBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50XG4gIH1cbik7XG5cbi8qKlxuICogQ2hlY2sgaWYgdGhlIHR5cGUgcmVmZXJlbmNlIGlzIGEga25vd24gaW50ZXJuYWwgdHlwZS4gSS5lLiBub3QgYSB1c2VyXG4gKiBwcm92aWRlZCBjb21wb3NpdGUgdHlwZS5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSB0eXBlXG4gKiBAcmV0dXJuIHtib29sZWFufSBSZXR1cm5zIHRydWUgaWYgdGhpcyBpcyBhIHZhbGlkIGludGVybmFsIHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGlzSW50ZXJuYWxDb21wb25lbnRUeXBlKHR5cGUpIHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIHR5cGVvZiB0eXBlLnByb3RvdHlwZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgdHlwZS5wcm90b3R5cGUubW91bnRDb21wb25lbnQgPT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgdHlwZS5wcm90b3R5cGUucmVjZWl2ZUNvbXBvbmVudCA9PT0gJ2Z1bmN0aW9uJ1xuICApO1xufVxuXG4vKipcbiAqIEdpdmVuIGEgUmVhY3ROb2RlLCBjcmVhdGUgYW4gaW5zdGFuY2UgdGhhdCB3aWxsIGFjdHVhbGx5IGJlIG1vdW50ZWQuXG4gKlxuICogQHBhcmFtIHtSZWFjdE5vZGV9IG5vZGVcbiAqIEBwYXJhbSB7Kn0gcGFyZW50Q29tcG9zaXRlVHlwZSBUaGUgY29tcG9zaXRlIHR5cGUgdGhhdCByZXNvbHZlZCB0aGlzLlxuICogQHJldHVybiB7b2JqZWN0fSBBIG5ldyBpbnN0YW5jZSBvZiB0aGUgZWxlbWVudCdzIGNvbnN0cnVjdG9yLlxuICogQHByb3RlY3RlZFxuICovXG5mdW5jdGlvbiBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50KG5vZGUsIHBhcmVudENvbXBvc2l0ZVR5cGUpIHtcbiAgdmFyIGluc3RhbmNlO1xuXG4gIGlmIChub2RlID09PSBudWxsIHx8IG5vZGUgPT09IGZhbHNlKSB7XG4gICAgbm9kZSA9IFJlYWN0RW1wdHlDb21wb25lbnQuZW1wdHlFbGVtZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBub2RlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBlbGVtZW50ID0gbm9kZTtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gd2FybmluZyhcbiAgICAgICAgZWxlbWVudCAmJiAodHlwZW9mIGVsZW1lbnQudHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgZWxlbWVudC50eXBlID09PSAnc3RyaW5nJyksXG4gICAgICAgICdPbmx5IGZ1bmN0aW9ucyBvciBzdHJpbmdzIGNhbiBiZSBtb3VudGVkIGFzIFJlYWN0IGNvbXBvbmVudHMuJ1xuICAgICAgKSA6IG51bGwpO1xuICAgIH1cblxuICAgIC8vIFNwZWNpYWwgY2FzZSBzdHJpbmcgdmFsdWVzXG4gICAgaWYgKHBhcmVudENvbXBvc2l0ZVR5cGUgPT09IGVsZW1lbnQudHlwZSAmJlxuICAgICAgICB0eXBlb2YgZWxlbWVudC50eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gQXZvaWQgcmVjdXJzaW9uIGlmIHRoZSB3cmFwcGVyIHJlbmRlcnMgaXRzZWxmLlxuICAgICAgaW5zdGFuY2UgPSBSZWFjdE5hdGl2ZUNvbXBvbmVudC5jcmVhdGVJbnRlcm5hbENvbXBvbmVudChlbGVtZW50KTtcbiAgICAgIC8vIEFsbCBuYXRpdmUgY29tcG9uZW50cyBhcmUgY3VycmVudGx5IHdyYXBwZWQgaW4gYSBjb21wb3NpdGUgc28gd2UncmVcbiAgICAgIC8vIHNhZmUgdG8gYXNzdW1lIHRoYXQgdGhpcyBpcyB3aGF0IHdlIHNob3VsZCBpbnN0YW50aWF0ZS5cbiAgICB9IGVsc2UgaWYgKGlzSW50ZXJuYWxDb21wb25lbnRUeXBlKGVsZW1lbnQudHlwZSkpIHtcbiAgICAgIC8vIFRoaXMgaXMgdGVtcG9yYXJpbHkgYXZhaWxhYmxlIGZvciBjdXN0b20gY29tcG9uZW50cyB0aGF0IGFyZSBub3Qgc3RyaW5nXG4gICAgICAvLyByZXByZXNlbmF0aW9ucy4gSS5lLiBBUlQuIE9uY2UgdGhvc2UgYXJlIHVwZGF0ZWQgdG8gdXNlIHRoZSBzdHJpbmdcbiAgICAgIC8vIHJlcHJlc2VudGF0aW9uLCB3ZSBjYW4gZHJvcCB0aGlzIGNvZGUgcGF0aC5cbiAgICAgIGluc3RhbmNlID0gbmV3IGVsZW1lbnQudHlwZShlbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5zdGFuY2UgPSBuZXcgUmVhY3RDb21wb3NpdGVDb21wb25lbnRXcmFwcGVyKCk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygbm9kZSA9PT0gJ251bWJlcicpIHtcbiAgICBpbnN0YW5jZSA9IFJlYWN0TmF0aXZlQ29tcG9uZW50LmNyZWF0ZUluc3RhbmNlRm9yVGV4dChub2RlKTtcbiAgfSBlbHNlIHtcbiAgICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgICAgZmFsc2UsXG4gICAgICAnRW5jb3VudGVyZWQgaW52YWxpZCBSZWFjdCBub2RlIG9mIHR5cGUgJXMnLFxuICAgICAgdHlwZW9mIG5vZGVcbiAgICApIDogaW52YXJpYW50KGZhbHNlKSk7XG4gIH1cblxuICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHdhcm5pbmcoXG4gICAgICB0eXBlb2YgaW5zdGFuY2UuY29uc3RydWN0ID09PSAnZnVuY3Rpb24nICYmXG4gICAgICB0eXBlb2YgaW5zdGFuY2UubW91bnRDb21wb25lbnQgPT09ICdmdW5jdGlvbicgJiZcbiAgICAgIHR5cGVvZiBpbnN0YW5jZS5yZWNlaXZlQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nICYmXG4gICAgICB0eXBlb2YgaW5zdGFuY2UudW5tb3VudENvbXBvbmVudCA9PT0gJ2Z1bmN0aW9uJyxcbiAgICAgICdPbmx5IFJlYWN0IENvbXBvbmVudHMgY2FuIGJlIG1vdW50ZWQuJ1xuICAgICkgOiBudWxsKTtcbiAgfVxuXG4gIC8vIFNldHMgdXAgdGhlIGluc3RhbmNlLiBUaGlzIGNhbiBwcm9iYWJseSBqdXN0IG1vdmUgaW50byB0aGUgY29uc3RydWN0b3Igbm93LlxuICBpbnN0YW5jZS5jb25zdHJ1Y3Qobm9kZSk7XG5cbiAgLy8gVGhlc2UgdHdvIGZpZWxkcyBhcmUgdXNlZCBieSB0aGUgRE9NIGFuZCBBUlQgZGlmZmluZyBhbGdvcml0aG1zXG4gIC8vIHJlc3BlY3RpdmVseS4gSW5zdGVhZCBvZiB1c2luZyBleHBhbmRvcyBvbiBjb21wb25lbnRzLCB3ZSBzaG91bGQgYmVcbiAgLy8gc3RvcmluZyB0aGUgc3RhdGUgbmVlZGVkIGJ5IHRoZSBkaWZmaW5nIGFsZ29yaXRobXMgZWxzZXdoZXJlLlxuICBpbnN0YW5jZS5fbW91bnRJbmRleCA9IDA7XG4gIGluc3RhbmNlLl9tb3VudEltYWdlID0gbnVsbDtcblxuICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgaW5zdGFuY2UuX2lzT3duZXJOZWNlc3NhcnkgPSBmYWxzZTtcbiAgICBpbnN0YW5jZS5fd2FybmVkQWJvdXRSZWZzSW5SZW5kZXIgPSBmYWxzZTtcbiAgfVxuXG4gIC8vIEludGVybmFsIGluc3RhbmNlcyBzaG91bGQgZnVsbHkgY29uc3RydWN0ZWQgYXQgdGhpcyBwb2ludCwgc28gdGhleSBzaG91bGRcbiAgLy8gbm90IGdldCBhbnkgbmV3IGZpZWxkcyBhZGRlZCB0byB0aGVtIGF0IHRoaXMgcG9pbnQuXG4gIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICBpZiAoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKSB7XG4gICAgICBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnN0YW50aWF0ZVJlYWN0Q29tcG9uZW50O1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactNativeComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js","./ReactEmptyComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js","./Object.assign":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","./ReactCompositeComponent":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCompositeComponent.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/instantiateReactComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        'Invariant Violation: ' +\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvaW52YXJpYW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBpbnZhcmlhbnRcbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnSW52YXJpYW50IFZpb2xhdGlvbjogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXX0=","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/invariant.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM ||\n      capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/isEventSupported.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (\n    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&\n    typeof object.nodeType === 'number' &&\n    typeof object.nodeName === 'string'))\n  ));\n}\n\nmodule.exports = isNode;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/isNode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  return elem && (\n    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')\n  );\n}\n\nmodule.exports = isTextInputElement;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/isTextInputElement.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextNode.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextNode.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\nvar isNode = require(\"./isNode\");\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n","deps":{"./isNode":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextNode.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/isTextNode.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    obj instanceof Object && !Array.isArray(obj),\n    'keyMirror(...): Argument must be an object.'\n  ) : invariant(obj instanceof Object && !Array.isArray(obj)));\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIva2V5TWlycm9yLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIGtleU1pcnJvclxuICogQHR5cGVjaGVja3Mgc3RhdGljLW9ubHlcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbi8qKlxuICogQ29uc3RydWN0cyBhbiBlbnVtZXJhdGlvbiB3aXRoIGtleXMgZXF1YWwgdG8gdGhlaXIgdmFsdWUuXG4gKlxuICogRm9yIGV4YW1wbGU6XG4gKlxuICogICB2YXIgQ09MT1JTID0ga2V5TWlycm9yKHtibHVlOiBudWxsLCByZWQ6IG51bGx9KTtcbiAqICAgdmFyIG15Q29sb3IgPSBDT0xPUlMuYmx1ZTtcbiAqICAgdmFyIGlzQ29sb3JWYWxpZCA9ICEhQ09MT1JTW215Q29sb3JdO1xuICpcbiAqIFRoZSBsYXN0IGxpbmUgY291bGQgbm90IGJlIHBlcmZvcm1lZCBpZiB0aGUgdmFsdWVzIG9mIHRoZSBnZW5lcmF0ZWQgZW51bSB3ZXJlXG4gKiBub3QgZXF1YWwgdG8gdGhlaXIga2V5cy5cbiAqXG4gKiAgIElucHV0OiAge2tleTE6IHZhbDEsIGtleTI6IHZhbDJ9XG4gKiAgIE91dHB1dDoge2tleTE6IGtleTEsIGtleTI6IGtleTJ9XG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9ialxuICogQHJldHVybiB7b2JqZWN0fVxuICovXG52YXIga2V5TWlycm9yID0gZnVuY3Rpb24ob2JqKSB7XG4gIHZhciByZXQgPSB7fTtcbiAgdmFyIGtleTtcbiAgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IGludmFyaWFudChcbiAgICBvYmogaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkob2JqKSxcbiAgICAna2V5TWlycm9yKC4uLik6IEFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0LidcbiAgKSA6IGludmFyaWFudChvYmogaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkob2JqKSkpO1xuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgcmV0W2tleV0gPSBrZXk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5TWlycm9yO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/keyMirror.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/keyOf.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/mapObject.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/mapObject.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/mapObject.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/mapObject.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/memoizeStringOnly.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/memoizeStringOnly.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function(string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/memoizeStringOnly.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/memoizeStringOnly.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/onlyChild.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/onlyChild.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    ReactElement.isValidElement(children),\n    'onlyChild must be passed a children with exactly one child.'\n  ) : invariant(ReactElement.isValidElement(children)));\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvb25seUNoaWxkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE1LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIG9ubHlDaGlsZFxuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdEVsZW1lbnQgPSByZXF1aXJlKFwiLi9SZWFjdEVsZW1lbnRcIik7XG5cbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKFwiLi9pbnZhcmlhbnRcIik7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZmlyc3QgY2hpbGQgaW4gYSBjb2xsZWN0aW9uIG9mIGNoaWxkcmVuIGFuZCB2ZXJpZmllcyB0aGF0IHRoZXJlXG4gKiBpcyBvbmx5IG9uZSBjaGlsZCBpbiB0aGUgY29sbGVjdGlvbi4gVGhlIGN1cnJlbnQgaW1wbGVtZW50YXRpb24gb2YgdGhpc1xuICogZnVuY3Rpb24gYXNzdW1lcyB0aGF0IGEgc2luZ2xlIGNoaWxkIGdldHMgcGFzc2VkIHdpdGhvdXQgYSB3cmFwcGVyLCBidXQgdGhlXG4gKiBwdXJwb3NlIG9mIHRoaXMgaGVscGVyIGZ1bmN0aW9uIGlzIHRvIGFic3RyYWN0IGF3YXkgdGhlIHBhcnRpY3VsYXIgc3RydWN0dXJlXG4gKiBvZiBjaGlsZHJlbi5cbiAqXG4gKiBAcGFyYW0gez9vYmplY3R9IGNoaWxkcmVuIENoaWxkIGNvbGxlY3Rpb24gc3RydWN0dXJlLlxuICogQHJldHVybiB7UmVhY3RDb21wb25lbnR9IFRoZSBmaXJzdCBhbmQgb25seSBgUmVhY3RDb21wb25lbnRgIGNvbnRhaW5lZCBpbiB0aGVcbiAqIHN0cnVjdHVyZS5cbiAqL1xuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgUmVhY3RFbGVtZW50LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSxcbiAgICAnb25seUNoaWxkIG11c3QgYmUgcGFzc2VkIGEgY2hpbGRyZW4gd2l0aCBleGFjdGx5IG9uZSBjaGlsZC4nXG4gICkgOiBpbnZhcmlhbnQoUmVhY3RFbGVtZW50LmlzVmFsaWRFbGVtZW50KGNoaWxkcmVuKSkpO1xuICByZXR1cm4gY2hpbGRyZW47XG59XG5cbm1vZHVsZS5leHBvcnRzID0gb25seUNoaWxkO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/onlyChild.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/onlyChild.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performance.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performance.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n\"use strict\";\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance =\n    window.performance ||\n    window.msPerformance ||\n    window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performance.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/performance.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performanceNow.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performanceNow.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\nvar performance = require(\"./performance\");\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!performance || !performance.now) {\n  performance = Date;\n}\n\nvar performanceNow = performance.now.bind(performance);\n\nmodule.exports = performanceNow;\n","deps":{"./performance":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performance.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performanceNow.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/performanceNow.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/quoteAttributeValueForBrowser.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/quoteAttributeValueForBrowser.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n","deps":{"./escapeTextContentForBrowser":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/quoteAttributeValueForBrowser.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/quoteAttributeValueForBrowser.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function(node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function(node, html) {\n    MSApp.execUnsafeLocalFunction(function() {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function(node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) ||\n          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        node.innerHTML = '\\uFEFF' + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/setInnerHTML.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setTextContent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setTextContent.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar escapeTextContentForBrowser = require(\"./escapeTextContentForBrowser\");\nvar setInnerHTML = require(\"./setInnerHTML\");\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function(node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function(node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n","deps":{"./ExecutionEnvironment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js","./escapeTextContentForBrowser":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js","./setInnerHTML":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setTextContent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/setTextContent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shallowEqual.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shallowEqual.js","source":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n","deps":{},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shallowEqual.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/shallowEqual.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar warning = require(\"./warning\");\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement != null && nextElement != null) {\n    var prevType = typeof prevElement;\n    var nextType = typeof nextElement;\n    if (prevType === 'string' || prevType === 'number') {\n      return (nextType === 'string' || nextType === 'number');\n    } else {\n      if (nextType === 'object' &&\n          prevElement.type === nextElement.type &&\n          prevElement.key === nextElement.key) {\n        var ownersMatch = prevElement._owner === nextElement._owner;\n        var prevName = null;\n        var nextName = null;\n        var nextDisplayName = null;\n        if (\"production\" !== process.env.NODE_ENV) {\n          if (!ownersMatch) {\n            if (prevElement._owner != null &&\n                prevElement._owner.getPublicInstance() != null &&\n                prevElement._owner.getPublicInstance().constructor != null) {\n              prevName =\n                prevElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement._owner != null &&\n                nextElement._owner.getPublicInstance() != null &&\n                nextElement._owner.getPublicInstance().constructor != null) {\n              nextName =\n                nextElement._owner.getPublicInstance().constructor.displayName;\n            }\n            if (nextElement.type != null &&\n                nextElement.type.displayName != null) {\n              nextDisplayName = nextElement.type.displayName;\n            }\n            if (nextElement.type != null && typeof nextElement.type === 'string') {\n              nextDisplayName = nextElement.type;\n            }\n            if (typeof nextElement.type !== 'string' ||\n                nextElement.type === 'input' ||\n                nextElement.type === 'textarea') {\n              if ((prevElement._owner != null &&\n                  prevElement._owner._isOwnerNecessary === false) ||\n                  (nextElement._owner != null &&\n                  nextElement._owner._isOwnerNecessary === false)) {\n                if (prevElement._owner != null) {\n                  prevElement._owner._isOwnerNecessary = true;\n                }\n                if (nextElement._owner != null) {\n                  nextElement._owner._isOwnerNecessary = true;\n                }\n                (\"production\" !== process.env.NODE_ENV ? warning(\n                  false,\n                  '<%s /> is being rendered by both %s and %s using the same ' +\n                  'key (%s) in the same place. Currently, this means that ' +\n                  'they don\\'t preserve state. This behavior should be very ' +\n                  'rare so we\\'re considering deprecating it. Please contact ' +\n                  'the React team and explain your use case so that we can ' +\n                  'take that into consideration.',\n                  nextDisplayName || 'Unknown Component',\n                  prevName || '[Unknown]',\n                  nextName || '[Unknown]',\n                  prevElement.key\n                ) : null);\n              }\n            }\n          }\n        }\n        return ownersMatch;\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvc2hvdWxkVXBkYXRlUmVhY3RDb21wb25lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBzaG91bGRVcGRhdGVSZWFjdENvbXBvbmVudFxuICogQHR5cGVjaGVja3Mgc3RhdGljLW9ubHlcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciB3YXJuaW5nID0gcmVxdWlyZShcIi4vd2FybmluZ1wiKTtcblxuLyoqXG4gKiBHaXZlbiBhIGBwcmV2RWxlbWVudGAgYW5kIGBuZXh0RWxlbWVudGAsIGRldGVybWluZXMgaWYgdGhlIGV4aXN0aW5nXG4gKiBpbnN0YW5jZSBzaG91bGQgYmUgdXBkYXRlZCBhcyBvcHBvc2VkIHRvIGJlaW5nIGRlc3Ryb3llZCBvciByZXBsYWNlZCBieSBhIG5ld1xuICogaW5zdGFuY2UuIEJvdGggYXJndW1lbnRzIGFyZSBlbGVtZW50cy4gVGhpcyBlbnN1cmVzIHRoYXQgdGhpcyBsb2dpYyBjYW5cbiAqIG9wZXJhdGUgb24gc3RhdGVsZXNzIHRyZWVzIHdpdGhvdXQgYW55IGJhY2tpbmcgaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHs/b2JqZWN0fSBwcmV2RWxlbWVudFxuICogQHBhcmFtIHs/b2JqZWN0fSBuZXh0RWxlbWVudFxuICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgZXhpc3RpbmcgaW5zdGFuY2Ugc2hvdWxkIGJlIHVwZGF0ZWQuXG4gKiBAcHJvdGVjdGVkXG4gKi9cbmZ1bmN0aW9uIHNob3VsZFVwZGF0ZVJlYWN0Q29tcG9uZW50KHByZXZFbGVtZW50LCBuZXh0RWxlbWVudCkge1xuICBpZiAocHJldkVsZW1lbnQgIT0gbnVsbCAmJiBuZXh0RWxlbWVudCAhPSBudWxsKSB7XG4gICAgdmFyIHByZXZUeXBlID0gdHlwZW9mIHByZXZFbGVtZW50O1xuICAgIHZhciBuZXh0VHlwZSA9IHR5cGVvZiBuZXh0RWxlbWVudDtcbiAgICBpZiAocHJldlR5cGUgPT09ICdzdHJpbmcnIHx8IHByZXZUeXBlID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuIChuZXh0VHlwZSA9PT0gJ3N0cmluZycgfHwgbmV4dFR5cGUgPT09ICdudW1iZXInKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKG5leHRUeXBlID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgIHByZXZFbGVtZW50LnR5cGUgPT09IG5leHRFbGVtZW50LnR5cGUgJiZcbiAgICAgICAgICBwcmV2RWxlbWVudC5rZXkgPT09IG5leHRFbGVtZW50LmtleSkge1xuICAgICAgICB2YXIgb3duZXJzTWF0Y2ggPSBwcmV2RWxlbWVudC5fb3duZXIgPT09IG5leHRFbGVtZW50Ll9vd25lcjtcbiAgICAgICAgdmFyIHByZXZOYW1lID0gbnVsbDtcbiAgICAgICAgdmFyIG5leHROYW1lID0gbnVsbDtcbiAgICAgICAgdmFyIG5leHREaXNwbGF5TmFtZSA9IG51bGw7XG4gICAgICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgICBpZiAoIW93bmVyc01hdGNoKSB7XG4gICAgICAgICAgICBpZiAocHJldkVsZW1lbnQuX293bmVyICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBwcmV2RWxlbWVudC5fb3duZXIuZ2V0UHVibGljSW5zdGFuY2UoKSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgcHJldkVsZW1lbnQuX293bmVyLmdldFB1YmxpY0luc3RhbmNlKCkuY29uc3RydWN0b3IgIT0gbnVsbCkge1xuICAgICAgICAgICAgICBwcmV2TmFtZSA9XG4gICAgICAgICAgICAgICAgcHJldkVsZW1lbnQuX293bmVyLmdldFB1YmxpY0luc3RhbmNlKCkuY29uc3RydWN0b3IuZGlzcGxheU5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV4dEVsZW1lbnQuX293bmVyICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICBuZXh0RWxlbWVudC5fb3duZXIuZ2V0UHVibGljSW5zdGFuY2UoKSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgbmV4dEVsZW1lbnQuX293bmVyLmdldFB1YmxpY0luc3RhbmNlKCkuY29uc3RydWN0b3IgIT0gbnVsbCkge1xuICAgICAgICAgICAgICBuZXh0TmFtZSA9XG4gICAgICAgICAgICAgICAgbmV4dEVsZW1lbnQuX293bmVyLmdldFB1YmxpY0luc3RhbmNlKCkuY29uc3RydWN0b3IuZGlzcGxheU5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV4dEVsZW1lbnQudHlwZSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgbmV4dEVsZW1lbnQudHlwZS5kaXNwbGF5TmFtZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgIG5leHREaXNwbGF5TmFtZSA9IG5leHRFbGVtZW50LnR5cGUuZGlzcGxheU5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV4dEVsZW1lbnQudHlwZSAhPSBudWxsICYmIHR5cGVvZiBuZXh0RWxlbWVudC50eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBuZXh0RGlzcGxheU5hbWUgPSBuZXh0RWxlbWVudC50eXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBuZXh0RWxlbWVudC50eXBlICE9PSAnc3RyaW5nJyB8fFxuICAgICAgICAgICAgICAgIG5leHRFbGVtZW50LnR5cGUgPT09ICdpbnB1dCcgfHxcbiAgICAgICAgICAgICAgICBuZXh0RWxlbWVudC50eXBlID09PSAndGV4dGFyZWEnKSB7XG4gICAgICAgICAgICAgIGlmICgocHJldkVsZW1lbnQuX293bmVyICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgIHByZXZFbGVtZW50Ll9vd25lci5faXNPd25lck5lY2Vzc2FyeSA9PT0gZmFsc2UpIHx8XG4gICAgICAgICAgICAgICAgICAobmV4dEVsZW1lbnQuX293bmVyICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgIG5leHRFbGVtZW50Ll9vd25lci5faXNPd25lck5lY2Vzc2FyeSA9PT0gZmFsc2UpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByZXZFbGVtZW50Ll9vd25lciAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICBwcmV2RWxlbWVudC5fb3duZXIuX2lzT3duZXJOZWNlc3NhcnkgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobmV4dEVsZW1lbnQuX293bmVyICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgIG5leHRFbGVtZW50Ll9vd25lci5faXNPd25lck5lY2Vzc2FyeSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyB3YXJuaW5nKFxuICAgICAgICAgICAgICAgICAgZmFsc2UsXG4gICAgICAgICAgICAgICAgICAnPCVzIC8+IGlzIGJlaW5nIHJlbmRlcmVkIGJ5IGJvdGggJXMgYW5kICVzIHVzaW5nIHRoZSBzYW1lICcgK1xuICAgICAgICAgICAgICAgICAgJ2tleSAoJXMpIGluIHRoZSBzYW1lIHBsYWNlLiBDdXJyZW50bHksIHRoaXMgbWVhbnMgdGhhdCAnICtcbiAgICAgICAgICAgICAgICAgICd0aGV5IGRvblxcJ3QgcHJlc2VydmUgc3RhdGUuIFRoaXMgYmVoYXZpb3Igc2hvdWxkIGJlIHZlcnkgJyArXG4gICAgICAgICAgICAgICAgICAncmFyZSBzbyB3ZVxcJ3JlIGNvbnNpZGVyaW5nIGRlcHJlY2F0aW5nIGl0LiBQbGVhc2UgY29udGFjdCAnICtcbiAgICAgICAgICAgICAgICAgICd0aGUgUmVhY3QgdGVhbSBhbmQgZXhwbGFpbiB5b3VyIHVzZSBjYXNlIHNvIHRoYXQgd2UgY2FuICcgK1xuICAgICAgICAgICAgICAgICAgJ3Rha2UgdGhhdCBpbnRvIGNvbnNpZGVyYXRpb24uJyxcbiAgICAgICAgICAgICAgICAgIG5leHREaXNwbGF5TmFtZSB8fCAnVW5rbm93biBDb21wb25lbnQnLFxuICAgICAgICAgICAgICAgICAgcHJldk5hbWUgfHwgJ1tVbmtub3duXScsXG4gICAgICAgICAgICAgICAgICBuZXh0TmFtZSB8fCAnW1Vua25vd25dJyxcbiAgICAgICAgICAgICAgICAgIHByZXZFbGVtZW50LmtleVxuICAgICAgICAgICAgICAgICkgOiBudWxsKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3duZXJzTWF0Y2g7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVcGRhdGVSZWFjdENvbXBvbmVudDtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/shouldUpdateReactComponent.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/toArray.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/toArray.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    !Array.isArray(obj) &&\n    (typeof obj === 'object' || typeof obj === 'function'),\n    'toArray: Array-like object expected'\n  ) : invariant(!Array.isArray(obj) &&\n  (typeof obj === 'object' || typeof obj === 'function')));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof length === 'number',\n    'toArray: Object needs a length property'\n  ) : invariant(typeof length === 'number'));\n\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    length === 0 ||\n    (length - 1) in obj,\n    'toArray: Object should have keys for indices'\n  ) : invariant(length === 0 ||\n  (length - 1) in obj));\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvdG9BcnJheS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgdG9BcnJheVxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaW52YXJpYW50ID0gcmVxdWlyZShcIi4vaW52YXJpYW50XCIpO1xuXG4vKipcbiAqIENvbnZlcnQgYXJyYXktbGlrZSBvYmplY3RzIHRvIGFycmF5cy5cbiAqXG4gKiBUaGlzIEFQSSBhc3N1bWVzIHRoZSBjYWxsZXIga25vd3MgdGhlIGNvbnRlbnRzIG9mIHRoZSBkYXRhIHR5cGUuIEZvciBsZXNzXG4gKiB3ZWxsIGRlZmluZWQgaW5wdXRzIHVzZSBjcmVhdGVBcnJheUZyb21NaXhlZC5cbiAqXG4gKiBAcGFyYW0ge29iamVjdHxmdW5jdGlvbnxmaWxlbGlzdH0gb2JqXG4gKiBAcmV0dXJuIHthcnJheX1cbiAqL1xuZnVuY3Rpb24gdG9BcnJheShvYmopIHtcbiAgdmFyIGxlbmd0aCA9IG9iai5sZW5ndGg7XG5cbiAgLy8gU29tZSBicm93c2UgYnVpbHRpbiBvYmplY3RzIGNhbiByZXBvcnQgdHlwZW9mICdmdW5jdGlvbicgKGUuZy4gTm9kZUxpc3QgaW5cbiAgLy8gb2xkIHZlcnNpb25zIG9mIFNhZmFyaSkuXG4gIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPyBpbnZhcmlhbnQoXG4gICAgIUFycmF5LmlzQXJyYXkob2JqKSAmJlxuICAgICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nKSxcbiAgICAndG9BcnJheTogQXJyYXktbGlrZSBvYmplY3QgZXhwZWN0ZWQnXG4gICkgOiBpbnZhcmlhbnQoIUFycmF5LmlzQXJyYXkob2JqKSAmJlxuICAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIG9iaiA9PT0gJ2Z1bmN0aW9uJykpKTtcblxuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIHR5cGVvZiBsZW5ndGggPT09ICdudW1iZXInLFxuICAgICd0b0FycmF5OiBPYmplY3QgbmVlZHMgYSBsZW5ndGggcHJvcGVydHknXG4gICkgOiBpbnZhcmlhbnQodHlwZW9mIGxlbmd0aCA9PT0gJ251bWJlcicpKTtcblxuICAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WID8gaW52YXJpYW50KFxuICAgIGxlbmd0aCA9PT0gMCB8fFxuICAgIChsZW5ndGggLSAxKSBpbiBvYmosXG4gICAgJ3RvQXJyYXk6IE9iamVjdCBzaG91bGQgaGF2ZSBrZXlzIGZvciBpbmRpY2VzJ1xuICApIDogaW52YXJpYW50KGxlbmd0aCA9PT0gMCB8fFxuICAobGVuZ3RoIC0gMSkgaW4gb2JqKSk7XG5cbiAgLy8gT2xkIElFIGRvZXNuJ3QgZ2l2ZSBjb2xsZWN0aW9ucyBhY2Nlc3MgdG8gaGFzT3duUHJvcGVydHkuIEFzc3VtZSBpbnB1dHNcbiAgLy8gd2l0aG91dCBtZXRob2Qgd2lsbCB0aHJvdyBkdXJpbmcgdGhlIHNsaWNlIGNhbGwgYW5kIHNraXAgc3RyYWlnaHQgdG8gdGhlXG4gIC8vIGZhbGxiYWNrLlxuICBpZiAob2JqLmhhc093blByb3BlcnR5KSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChvYmopO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIElFIDwgOSBkb2VzIG5vdCBzdXBwb3J0IEFycmF5I3NsaWNlIG9uIGNvbGxlY3Rpb25zIG9iamVjdHNcbiAgICB9XG4gIH1cblxuICAvLyBGYWxsIGJhY2sgdG8gY29weWluZyBrZXkgYnkga2V5LiBUaGlzIGFzc3VtZXMgYWxsIGtleXMgaGF2ZSBhIHZhbHVlLFxuICAvLyBzbyB3aWxsIG5vdCBwcmVzZXJ2ZSBzcGFyc2VseSBwb3B1bGF0ZWQgaW5wdXRzLlxuICB2YXIgcmV0ID0gQXJyYXkobGVuZ3RoKTtcbiAgZm9yICh2YXIgaWkgPSAwOyBpaSA8IGxlbmd0aDsgaWkrKykge1xuICAgIHJldFtpaV0gPSBvYmpbaWldO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9BcnJheTtcbiJdfQ==","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/toArray.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/toArray.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js","source":"(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactFragment = require(\"./ReactFragment\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\n\nvar getIteratorFn = require(\"./getIteratorFn\");\nvar invariant = require(\"./invariant\");\nvar warning = require(\"./warning\");\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} key Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(\n    userProvidedKeyEscapeRegex,\n    userProvidedKeyEscaper\n  );\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!number} indexSoFar Number of children encountered until this point.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(\n  children,\n  nameSoFar,\n  indexSoFar,\n  callback,\n  traverseContext\n) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null ||\n      type === 'string' ||\n      type === 'number' ||\n      ReactElement.isValidElement(children)) {\n    callback(\n      traverseContext,\n      children,\n      // If it's the only child, treat the name as if it was wrapped in an array\n      // so that it's consistent if the number of children grows.\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,\n      indexSoFar\n    );\n    return 1;\n  }\n\n  var child, nextName, nextIndex;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = (\n        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n        getComponentKey(child, i)\n      );\n      nextIndex = indexSoFar + subtreeCount;\n      subtreeCount += traverseAllChildrenImpl(\n        child,\n        nextName,\n        nextIndex,\n        callback,\n        traverseContext\n      );\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            getComponentKey(child, ii++)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      } else {\n        if (\"production\" !== process.env.NODE_ENV) {\n          (\"production\" !== process.env.NODE_ENV ? warning(\n            didWarnAboutMaps,\n            'Using Maps as children is not yet fully supported. It is an ' +\n            'experimental feature that might be removed. Convert it to a ' +\n            'sequence / iterable of keyed ReactElements instead.'\n          ) : null);\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = (\n              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +\n              getComponentKey(child, 0)\n            );\n            nextIndex = indexSoFar + subtreeCount;\n            subtreeCount += traverseAllChildrenImpl(\n              child,\n              nextName,\n              nextIndex,\n              callback,\n              traverseContext\n            );\n          }\n        }\n      }\n    } else if (type === 'object') {\n      (\"production\" !== process.env.NODE_ENV ? invariant(\n        children.nodeType !== 1,\n        'traverseAllChildren(...): Encountered an invalid child; DOM ' +\n        'elements are not valid children of React components.'\n      ) : invariant(children.nodeType !== 1));\n      var fragment = ReactFragment.extract(children);\n      for (var key in fragment) {\n        if (fragment.hasOwnProperty(key)) {\n          child = fragment[key];\n          nextName = (\n            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +\n            wrapUserProvidedKey(key) + SUBSEPARATOR +\n            getComponentKey(child, 0)\n          );\n          nextIndex = indexSoFar + subtreeCount;\n          subtreeCount += traverseAllChildrenImpl(\n            child,\n            nextName,\n            nextIndex,\n            callback,\n            traverseContext\n          );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./ReactFragment":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js","./ReactElement":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js","./getIteratorFn":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js","./ReactInstanceHandles":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js","./invariant":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js","./warning":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/traverseAllChildren.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","source":"(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n}).call(this,require('_process'))\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9yZWFjdC9saWIvd2FybmluZy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgd2FybmluZ1xuICovXG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoXCIuL2VtcHR5RnVuY3Rpb25cIik7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZW1wdHlGdW5jdGlvbjtcblxuaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQgKSB7Zm9yICh2YXIgYXJncz1bXSwkX18wPTIsJF9fMT1hcmd1bWVudHMubGVuZ3RoOyRfXzA8JF9fMTskX18wKyspIGFyZ3MucHVzaChhcmd1bWVudHNbJF9fMF0pO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0Lmxlbmd0aCA8IDEwIHx8IC9eW3NcXFddKiQvLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5pbmRleE9mKCdGYWlsZWQgQ29tcG9zaXRlIHByb3BUeXBlOiAnKSA9PT0gMCkge1xuICAgICAgcmV0dXJuOyAvLyBJZ25vcmUgQ29tcG9zaXRlQ29tcG9uZW50IHByb3B0eXBlIGNoZWNrLlxuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpICB7cmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107fSk7XG4gICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gICAgICB0cnkge1xuICAgICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIl19","deps":{"_process":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js","./emptyFunction":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/lib/warning.js"},"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/react.js":{"id":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/react.js","source":"module.exports = require('./lib/React');\n","deps":{"./lib/React":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/React.js"},"file":"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/react.js","sourceRoot":"file://localhost","sourceFile":"node_modules/react/react.js"}},"packages":{},"mtimes":{"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/MusicController.js":1447432964000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/ResizeSensor.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/StudioApp.js":1447358595000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/annotationList.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/errorMapper.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/acemode/mode-javascript_codeorg.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/appMain.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompleteParameterTooltipManager.js":1447358595000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletAutocompletePopupTooltipManager.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletBlockTooltipManager.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletFunctionTooltip.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletParameterTooltip.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/DropletTooltipManager.js":1447358595000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blockTooltips/tooltipUtils.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/block_utils.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/blocksCommon.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/clientApi.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/codegen.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/constants.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/api.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/blocks.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/controls.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/craft.js":1447433392000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/houseSelection.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/dialogs/playerSelection.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/API/CodeOrgAPI.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/BaseCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CheckSolutionCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandQueue.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/CommandState.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/DestroyBlockCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/IfBlockAheadCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/MoveForwardCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceBlockCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/PlaceInFrontCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/TurnCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/CommandQueue/WhileCommand.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/GameController.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/AssetLoader.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/FacingDirection.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelBlock.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelModel.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/game/LevelMVC/LevelView.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/houseLevels.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levelbuilderOverrides.js":1447433861000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/levels.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/locale.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/main.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/skins.js":1447351419000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/craft/visualization.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dom.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/dropletUtils.js":1447358595000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedback.js":1447358595000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/feedbackBlocks.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/hammer.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/locale.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/lodash.js":1447222078000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/required_block_utils.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/skins.js":1447222079000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionHistory.jsx":1447222079000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/VersionRow.jsx":1447222079000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/alert.jsx":1447222079000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/builder.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/buttons.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/code.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/instructions.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/learn.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/makeYourOwn.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/page.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/puzzleRating.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/readonly.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/shareFailure.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/sharing.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/showCode.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/templates/trophy.html.ejs":1447434027000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/utils.js":1447222079000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/build/js/xml.js":1447212509000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/lib/_empty.js":1447212487000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/path-browserify/index.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/process/browser.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/punycode/punycode.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/decode.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/encode.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/querystring-es3/index.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/browserify/node_modules/url/url.js":1447212489000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/ejs.js":1447212491000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/filters.js":1447212491000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/ejs/lib/utils.js":1447212491000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/AutoFocusMixin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/BeforeInputEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSProperty.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CSSPropertyOperations.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/CallbackQueue.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ChangeEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ClientReactRootIndex.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMChildrenOperations.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMProperty.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DOMPropertyOperations.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Danger.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/DefaultEventPluginOrder.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EnterLeaveEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventConstants.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventListener.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginHub.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginRegistry.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPluginUtils.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/EventPropagators.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ExecutionEnvironment.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/FallbackCompositionState.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/HTMLDOMPropertyConfig.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LinkedValueUtils.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/LocalEventTrapMixin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/MobileSafariClickEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Object.assign.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/PooledClass.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/React.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserComponentMixin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactBrowserEventEmitter.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildReconciler.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactChildren.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactClass.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentBrowserEnvironment.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactComponentEnvironment.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCompositeComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactContext.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactCurrentOwner.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOM.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMButton.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMForm.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIDOperations.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMIframe.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMImg.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMInput.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMOption.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelect.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMSelection.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDOMTextarea.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultBatchingStrategy.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultInjection.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerf.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactDefaultPerfAnalysis.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElement.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactElementValidator.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEmptyComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactErrorUtils.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventEmitterMixin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactEventListener.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactFragment.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInjection.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInputSelection.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceMap.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactInstanceHandles.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactLifeCycle.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMarkupChecksum.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMount.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChild.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactMultiChildUpdateTypes.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactNativeComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactOwner.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPerf.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocationNames.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypeLocations.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPropTypes.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactPutListenerQueue.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconcileTransaction.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactReconciler.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRef.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactRootIndex.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRendering.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactServerRenderingTransaction.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdateQueue.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ReactUpdates.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SVGDOMPropertyConfig.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SelectEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SimpleEventPlugin.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ServerReactRootIndex.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticClipboardEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticCompositionEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticDragEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticFocusEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticInputEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticKeyboardEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticMouseEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticTouchEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticUIEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/SyntheticWheelEvent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/Transaction.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/ViewportMetrics.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/accumulateInto.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/adler32.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelize.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/camelizeStyleName.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/containsNode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createArrayFromMixed.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createFullPageComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/createNodesFromMarkup.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/dangerousStyleValue.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyFunction.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/emptyObject.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/escapeTextContentForBrowser.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/findDOMNode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/flattenChildren.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/focusNode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/forEachAccumulated.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getActiveElement.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventCharCode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventKey.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventModifierState.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getEventTarget.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getIteratorFn.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getMarkupWrap.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getNodeForCharacterOffset.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getReactRootElementInContainer.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getTextContentAccessor.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/getUnboundedScrollPosition.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenate.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/hyphenateStyleName.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/instantiateReactComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/invariant.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isEventSupported.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isNode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextInputElement.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/isTextNode.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyMirror.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/keyOf.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/mapObject.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/memoizeStringOnly.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/onlyChild.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performance.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/performanceNow.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/quoteAttributeValueForBrowser.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setInnerHTML.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/setTextContent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shallowEqual.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/shouldUpdateReactComponent.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/toArray.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/traverseAllChildren.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/lib/warning.js":1447212507000,"/Users/brian/code/backupcdomcp/code-dot-org/apps/node_modules/react/react.js":1447212507000},"filesPackagePaths":{},"dependentFiles":{}}